cset: moving following pidspec: 27618
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.200424795 seconds)
loading group "string"... done (took 0.590595835 seconds)
loading group "linalg"... done (took 7.995940127 seconds)
loading group "parallel"... done (took 0.166174255 seconds)
loading group "find"... done (took 1.195774203 seconds)
loading group "tuple"... done (took 2.040033646 seconds)
loading group "dates"... done (took 1.311065619 seconds)
loading group "micro"... done (took 0.234733455 seconds)
loading group "io"... done (took 0.988746579 seconds)
loading group "scalar"... done (took 39.633867363 seconds)
loading group "sparse"... done (took 12.254107857 seconds)
loading group "broadcast"... done (took 0.960194279 seconds)
loading group "union"... done (took 13.810265671 seconds)
loading group "simd"... done (took 4.801004782 seconds)
loading group "random"... done (took 9.217765122 seconds)
loading group "problem"... done (took 1.69444035 seconds)
loading group "array"... done (took 21.526845489 seconds)
loading group "misc"... done (took 1.627825854 seconds)
loading group "sort"... done (took 3.361276728 seconds)
loading group "collection"... done (took 18.126808123 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540056854 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123787313 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137243375 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120212935 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150189545 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117350566 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124892884 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084516642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.844170828 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148306689 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114717415 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41772517 seconds)
done (took 5.311327317 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172899183 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088587937 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080442103 seconds)
  done (took 1.228157614 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065653358 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128398015 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068294142 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068012469 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067645195 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067068144 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067036747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067558512 seconds)
  done (took 1.593901025 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073503434 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069444785 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066696288 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067880578 seconds)
  done (took 1.338911097 seconds)
done (took 5.468568974 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.798150774 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20989796 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188305293 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410006299 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135017542 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.17780297 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643586903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320269478 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193730225 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094091867 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112484932 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391415157 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124410676 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649104212 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077932774 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095869962 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141647189 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453067619 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071495017 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085633925 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09307773 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131594329 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08235885 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077259272 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152293907 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070167012 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143257741 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086352767 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06942025 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255243681 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17548134 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651002187 seconds)
  done (took 10.461058011 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101981048 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100928205 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06867815 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125515797 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098187427 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070525403 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075718675 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0680253 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090052033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129456594 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091491992 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108919272 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066253539 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069779812 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087804852 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19774441 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080310949 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081701579 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0686478 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078988794 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107611055 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078142333 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079941889 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080023215 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129372251 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170112963 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09676276 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.0978691 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067175206 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084740553 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114901037 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127775531 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066597837 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066737687 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125488412 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095366585 seconds)
  done (took 4.548473342 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.007619566 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152787101 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090648575 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135235184 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065424437 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109846263 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065953498 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083033379 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237653132 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.457667385 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.624832948 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147833771 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117567141 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105126917 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071275574 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069436832 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068262007 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.263266804 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098090549 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107373728 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087758191 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070824619 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069184879 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064703307 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071546219 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066624936 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068918889 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088261267 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075862151 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064788199 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.331875558 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12507213 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068722179 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.95194374 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167094065 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068732386 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106209489 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161373847 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091821776 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094002571 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140691041 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067813591 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067268434 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.295758884 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066007598 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072247137 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06515941 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067739382 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085889681 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109521393 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120489551 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065701492 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066368851 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168594341 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065580874 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082236383 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.20928685 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153108762 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066136552 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295993246 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092918387 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072106216 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065818581 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181337984 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120197045 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069260111 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068212036 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072144248 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069300306 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377363427 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06886513 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.890702032 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071388921 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077837703 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071392483 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071996373 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079380294 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079330783 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092145636 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067700545 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074164929 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067844702 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067195479 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067750703 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093430577 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392980793 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067599378 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072590503 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065117682 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092447832 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098890296 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067286519 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066237369 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102117935 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070585785 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066653073 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06849184 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064698975 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118988386 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070743 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112902449 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069803975 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17296461 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098835268 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07055861 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101564956 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079042521 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070950882 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.464839103 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066143336 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073068048 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066405382 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068438242 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067424223 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079239947 seconds)
  done (took 21.818506644 seconds)
done (took 38.896357133 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242767048 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083226491 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08369709 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083495707 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083472361 seconds)
  done (took 1.730324323 seconds)
done (took 2.864653669 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126565916 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099430272 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065299413 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097669713 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065140389 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103599291 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100807783 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083459958 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100176953 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064974081 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097739097 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06497254 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064796949 seconds)
  done (took 2.288489539 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083272807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082619127 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069508972 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085158038 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063242451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081440506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081109425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088490553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081200649 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07248249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062963609 seconds)
  done (took 1.980300698 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081800118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08340373 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07010352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081411672 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062906244 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081145971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080787219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084401786 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081110861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073639659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063043982 seconds)
  done (took 1.969218632 seconds)
done (took 7.361100737 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076013158 seconds)
  done (took 1.191013269 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.531816428 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.621002493 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078321635 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100860236 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192384676 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108724595 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236461341 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083553771 seconds)
  done (took 8.242187219 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106925717 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070212665 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070534703 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070311337 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068970629 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069635281 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069567333 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069505175 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070415996 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070597811 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069128181 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069300478 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070382401 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070079074 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070459083 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070599527 seconds)
  done (took 2.355452206 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097588029 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095917389 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07384771 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07519353 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072866444 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072090992 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074300753 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073894184 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071325652 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072992388 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075882321 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07344562 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073352724 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064405233 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074951835 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076393258 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071615761 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074273091 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075167549 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076156057 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075388023 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064846504 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073841582 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074458098 seconds)
  done (took 3.031087388 seconds)
done (took 15.945073217 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106325263 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067961518 seconds)
  done (took 1.297086395 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078577546 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079865325 seconds)
  done (took 1.292100528 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07765999 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062904715 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084320142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073945224 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063736234 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063080722 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082466039 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063692407 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063340996 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063700121 seconds)
  done (took 1.834513103 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065555028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073034998 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069494448 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079073417 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070695681 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064749242 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068928495 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065612778 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073782006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063959559 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068611066 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083906342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068483761 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085290382 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068930264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068618401 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070396792 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067091831 seconds)
  done (took 2.409542568 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063146029 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064817067 seconds)
  done (took 1.267097209 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066595542 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063890214 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066228306 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066206487 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063751774 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063119999 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063540555 seconds)
  done (took 1.587640602 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399606363 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121572727 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328463159 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070345698 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079224564 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2554488 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06478893 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069752559 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06981303 seconds)
  done (took 2.637122142 seconds)
done (took 13.463561362 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081122032 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086563498 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097880658 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416487974 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092354183 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068348974 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114339596 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178958277 seconds)
done (took 2.284704888 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21112897 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.811398107 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.483352432 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206383146 seconds)
  done (took 2.642973942 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344588515 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081589799 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077291426 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067425322 seconds)
  done (took 1.722413039 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.18177832 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0711194 seconds)
  done (took 1.399612273 seconds)
done (took 7.124476685 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065516816 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064756984 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065559625 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089832872 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064382421 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064757628 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064935741 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064568122 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065095458 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064609862 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.064477608 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064625909 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064566391 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064850863 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065449857 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064990218 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065047492 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064771561 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065173882 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065128068 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06549773 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064924849 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064683243 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065250836 seconds)
  done (took 2.763124375 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082398323 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066967101 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068959479 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068658644 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069187732 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068445403 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068735224 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067017746 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068637945 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066571924 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069235725 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069136724 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066962391 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069372619 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067196489 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069214444 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068678064 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06721064 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066985048 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069570112 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068788621 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066991303 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069055639 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068783385 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069285665 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069221762 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066695349 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067240074 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068655062 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069007915 seconds)
  done (took 3.217430467 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067934464 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061231922 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061916811 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07003537 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061801436 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062244824 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061260879 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061901007 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062246955 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061249924 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062316825 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060970433 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061405073 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061914761 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062276569 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065738667 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078669513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06159015 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061671161 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061675864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06562882 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06125918 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061811022 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063865407 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061427505 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060987823 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061641391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061263811 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06182031 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061328081 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065351022 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065630009 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061313507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070020921 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065788949 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.060871626 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065944771 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061082918 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06207481 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061097401 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061208656 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061133945 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061448933 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070194171 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06152348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062563652 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061289632 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062384959 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061599455 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063864333 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061302363 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06156184 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063420651 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062608327 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066443514 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061081166 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061997811 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061048478 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062174415 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061630944 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061476006 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060996471 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065454447 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062157849 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078971992 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070441371 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061269296 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06305014 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062090521 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064587517 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063098834 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077024823 seconds)
  done (took 5.727979413 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086866847 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089152512 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067015028 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066378669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062054231 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062317228 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070453575 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062148871 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067128443 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081211656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062386863 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066863022 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066916464 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066370184 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062414468 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067009542 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070754289 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06235998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062246426 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065966299 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06230583 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06982058 seconds)
  done (took 2.668828559 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146867823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068595494 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105705859 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07301743 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070986146 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072753621 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067931305 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068165291 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068413912 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068781775 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068725395 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068081324 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070530338 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068638779 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068560686 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068801737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067873864 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068409671 seconds)
  done (took 2.521360592 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079021693 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06767523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0867825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067707758 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067558974 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066969822 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071293086 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072398297 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067288185 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067624343 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072578435 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067206494 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067695672 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068158838 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067189113 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06767099 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067545948 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068105895 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072362819 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071445892 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071529078 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081137278 seconds)
  done (took 2.718257119 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079405259 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06758552 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082327318 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068589091 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06276083 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062036848 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06821131 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06681384 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0680435 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066984398 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067358168 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062351158 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069266171 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066751973 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069452565 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067254067 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066222352 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066979021 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066687968 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062342106 seconds)
  done (took 2.52062904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08393837 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065253851 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065467997 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071252727 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065109415 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065501389 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071387219 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065113653 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064925864 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086377972 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065314429 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065773773 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071681555 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069547081 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06518566 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072040842 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07481167 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071782455 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065248046 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06521041 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085847015 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065661939 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071646144 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065816191 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065149745 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065338857 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065557736 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06916964 seconds)
  done (took 3.109031854 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065663946 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06519963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06539381 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065438697 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065719947 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065411384 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065077182 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065280649 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065397517 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06542468 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06500655 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065296886 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065089907 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064733047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065210179 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064788635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065053513 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065357854 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06513988 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065886399 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064703522 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065178256 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065394266 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065341298 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065211874 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0648245 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065441032 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0653769 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064858446 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06521215 seconds)
  done (took 3.126316056 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076627969 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073683442 seconds)
  done (took 1.318668056 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064049769 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079327809 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061355463 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073068277 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070477834 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065417276 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071482183 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070617234 seconds)
  done (took 1.720377207 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085193301 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07549216 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065095136 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075823033 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075102591 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08525916 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126468465 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064599916 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074593055 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064935609 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082428204 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066448954 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074495903 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069569284 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074452436 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078105802 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061959385 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068846239 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065760807 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062477301 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064583064 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077783624 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073705814 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062482147 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069308924 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091478726 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080053547 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063401395 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071491504 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076150452 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074073557 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060867609 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063535811 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064016588 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061958724 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074530307 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08238448 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070662187 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07710472 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06437356 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072076085 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061603993 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072460764 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074335776 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079346001 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064013472 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063876646 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061784631 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064617504 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069907124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06171271 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068487517 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061408465 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075881431 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071443958 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078804459 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062631512 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069743773 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070490658 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070573943 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074945645 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069869928 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073032299 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062992441 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078965996 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073232098 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07536208 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061429344 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061007569 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061660914 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077529246 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09228301 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073391238 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064125956 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06447115 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061866656 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070673983 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064071481 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072692272 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0753126 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063283232 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068007109 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075628559 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068345375 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069952171 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069937328 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062514549 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067244647 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064712156 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083300647 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062757218 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061538711 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064452254 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078253224 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073083814 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06302823 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065443345 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074809487 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060502692 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063675884 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063952332 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069214373 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076668942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068425131 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067697962 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077165494 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073015449 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068875179 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07007183 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060671818 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063985629 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06527282 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074418979 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060242527 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069356241 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066776752 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062712432 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074083003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061424091 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062185162 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074998392 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073668175 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06100876 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059478404 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06923664 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062259375 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064231771 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075312032 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060837065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060390018 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060471735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070100766 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062125948 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069806344 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066715961 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069706234 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060290401 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061010536 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.065774182 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.20114671 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068185028 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071078439 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075119903 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070434505 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063610235 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077047347 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071794256 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067507806 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075109454 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068178442 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061772511 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066244247 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071433421 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062772361 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071640953 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066743587 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070533411 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065026335 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063011599 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070271474 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064997256 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06638076 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069006839 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063118183 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079580296 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070781321 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062033137 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061550702 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071192421 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064768695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063570615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06632946 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070357374 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06458756 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06258854 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063811776 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070607441 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071965684 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067594139 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065133313 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074123493 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08133677 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063178248 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071080875 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063548977 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064807871 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064849646 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07840402 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074120128 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068350174 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070347375 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06138906 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073562565 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075892256 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066424595 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062199716 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066431935 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06730181 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075852401 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06754584 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064293242 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062423838 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070061906 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066057695 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070452092 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06335875 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066757689 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0687086 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062328351 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069352328 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064742183 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077998403 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071003238 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062201961 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065996604 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062463527 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074800703 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062339783 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065079218 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066576612 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064419909 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063589409 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070388664 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060852457 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075917127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076254251 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068969611 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065955385 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063137574 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075520531 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069148561 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071839684 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071310598 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073338509 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078604138 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066296831 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070415967 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078300943 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063932922 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060801336 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075885781 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062255767 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06269258 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062757746 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062276348 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070542326 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070509765 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073685567 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060851791 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069844341 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062700401 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066179662 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061677071 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071859117 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070126667 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067694277 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075573725 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064375592 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063492806 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070438835 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062304437 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063393451 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063843573 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069928955 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062909336 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068434242 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064786558 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068589824 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064911517 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060528465 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067782379 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06201982 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067326273 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071049706 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061561953 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06803582 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069342732 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062697337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06922071 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066385712 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065174046 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069685427 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068213362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067330556 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.199099215 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063756666 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076312186 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064125361 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078019834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069774854 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062271561 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070331087 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071300362 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068683705 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064914201 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064337698 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069397407 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06388214 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070585939 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076192797 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065187956 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079632759 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074977872 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070243143 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070423441 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069881594 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069784848 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066435316 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0685989 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064389441 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069869344 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063717544 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072857066 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071032909 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069029207 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070063396 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064964932 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069704781 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064609264 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061916498 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066972751 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067141402 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064023701 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076702241 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064906101 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066768844 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062896173 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064851488 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063199233 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060935842 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070702294 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070774925 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064429429 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074326957 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066465011 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070047511 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079276093 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061510927 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062830679 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062318285 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065624302 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076482756 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064359881 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07771821 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068984237 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066433634 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061932015 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064545846 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062599611 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061611654 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062270321 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072099646 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066417482 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06302103 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063973263 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070453277 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064646916 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076361803 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063158334 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068363147 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064297342 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061648296 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066332235 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066259155 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070966057 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064254813 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065089122 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062009777 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06342611 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068305601 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069741753 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063587071 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069579546 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075948673 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063947098 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070507602 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065954832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061364598 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070272445 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063343655 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06389494 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066213316 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070999437 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070827342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064126161 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077661689 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066283555 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069552722 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063710744 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061864962 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06322791 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063794116 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063413246 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066769197 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064961903 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076717172 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061946233 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069554414 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068845475 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067378047 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07346189 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063950617 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069722576 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068624317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065011102 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069872802 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076063171 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066639884 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070228108 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063769498 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068944434 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072539801 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065206347 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074011673 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06768272 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063232983 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068347234 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063754325 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062337291 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061898796 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061964794 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072025962 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062757497 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06455671 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064845657 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060395735 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066745923 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064655953 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074647993 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068911488 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069004071 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.193923467 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062599039 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065247679 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065985894 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070315929 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071120771 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074147222 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070326008 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068325173 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063230296 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078596918 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073818122 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07179272 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065723143 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072077562 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064733575 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070783697 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068432326 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069193237 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06473003 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07193468 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069871051 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066716592 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074249104 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071601824 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065775294 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06956681 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069483074 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069100611 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06311287 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065104234 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070999949 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07296227 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070537989 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063809289 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079214711 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065196876 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068320256 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066850565 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063163218 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07325937 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062013837 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070115464 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064950039 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064915507 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062631644 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066230539 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065453196 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070897393 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066609132 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062606679 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079397325 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078458436 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069920695 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063309232 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063193612 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062922279 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062311215 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066704353 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065104657 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070327715 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079099607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06637741 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066142721 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062100313 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064454623 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071132929 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07155152 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061683782 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062043297 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06660008 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069879702 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075655623 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062751555 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063487032 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071110968 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070435917 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061965205 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066242721 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061011239 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071552357 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080484617 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064348939 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070190098 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073510264 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076670727 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064384202 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06229147 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064288061 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069831203 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069327063 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064635862 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064669244 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082942444 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070911195 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06606884 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062708028 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070929225 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067072186 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077075732 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0644553 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064508012 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074812394 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069667298 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070536963 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074107685 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074798144 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069874877 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069496983 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063087177 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068800627 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062415535 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066535127 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064234968 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064448544 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069756748 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069843179 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066620912 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07895092 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077321582 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066045326 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061125748 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066177925 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066116145 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061415221 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064248333 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061801519 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061907435 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062421485 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062159152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069123083 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072116023 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06793839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063480542 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063012506 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060452016 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07250189 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070146267 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068809535 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06009016 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.062667245 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06358526 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070520033 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065554238 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064371876 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069068947 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068524594 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.200926831 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064153603 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077623052 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064679632 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071200763 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067595906 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065115932 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064981091 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072079854 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069060827 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065741321 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070771413 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071589906 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065845874 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062105511 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062268082 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074285028 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062509881 seconds)
  done (took 42.335753071 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09969989 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063822038 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062972574 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062113372 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071538548 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063557944 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063656535 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064015998 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063606806 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065523234 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062624236 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062365503 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069882115 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077464422 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072916644 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066546887 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062857347 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063605119 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062352218 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063861637 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070534561 seconds)
  done (took 2.668769257 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070715239 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078103631 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075085153 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079477378 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071131159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067651577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074824999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067428225 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075749761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072782192 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075719626 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068021199 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072843277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072864136 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072658259 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067646503 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075574437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072274108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067577492 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075134325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068199693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075292297 seconds)
  done (took 2.840286483 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064889158 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063650358 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070703364 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061737732 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063803797 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062728705 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066483664 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062643574 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066761376 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066236401 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066079457 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066082265 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070131313 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062258736 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067054784 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061789012 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107600115 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066127939 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063733103 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064992835 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062242377 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070981921 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062245318 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062716714 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066211749 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066554837 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064071715 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062091409 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063389102 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065885709 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063408475 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061902204 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069877459 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069417357 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065914336 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066159695 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063381356 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063254777 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061891288 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061720421 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072554087 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062442758 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063723447 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.085884999 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061736399 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06139936 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069938776 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062821029 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061644682 seconds)
  done (took 4.487859458 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075171344 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111449042 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068214004 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090946698 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076145619 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068925026 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068041384 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092032709 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063465008 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064281355 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077561131 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077804842 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065409945 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067121065 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069545195 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065212955 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066303583 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064496224 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068355567 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064795623 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0684845 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069772803 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076352543 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077203114 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06612734 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064383485 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064948013 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067011141 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076266497 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069390235 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066812549 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067658348 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076872499 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070059875 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064661919 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064815821 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077648587 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065924523 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065175675 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06341197 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064958804 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066799157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069587305 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077897478 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06565735 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070133618 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065623512 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063121404 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076659895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064800553 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069843481 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077819958 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066917618 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065403417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067256198 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076351916 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065296788 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063760119 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065255264 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076245352 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063106116 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066061777 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077571952 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064478674 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069075582 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077508474 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070146138 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066320149 seconds)
  done (took 6.184430614 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072632588 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094774208 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079274061 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079410029 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072778589 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073324033 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073236772 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07320123 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073017615 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077002928 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073477078 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114113104 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069131161 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074803721 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073133335 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073241412 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073424881 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073055132 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073447198 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072915886 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072990397 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079383869 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073090295 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079868167 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07605377 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069060208 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07329764 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073097696 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079607253 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072807162 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076173397 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072907603 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073720119 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079309411 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076244119 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0739261 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063062727 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073280436 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073121141 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073398645 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068946633 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079378195 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07347992 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068939369 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073118514 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073427126 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079338989 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076064412 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074749468 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077038007 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07289263 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078970946 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072766488 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072884073 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079334323 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081703815 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07919047 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079573471 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072898292 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07897957 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079132514 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081676413 seconds)
  done (took 5.987554315 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078168996 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070578798 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081517213 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062133358 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061790842 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072012482 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061687591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064209973 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070019066 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070175778 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071997183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071971219 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074330892 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07216678 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072024475 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074808636 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071914853 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072442604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070464239 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072226818 seconds)
  done (took 2.706208346 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076668632 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081644007 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068393483 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07202164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067174597 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072325209 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066544015 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067317997 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06820467 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067617757 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073267732 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073736389 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068429946 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072207757 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073745603 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071853415 seconds)
  done (took 2.418543408 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083339687 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071245897 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077854445 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063524173 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067080523 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062458731 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063171373 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062138887 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062513656 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076651983 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063056185 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074621555 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063282233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062888635 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062933364 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068874307 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062483635 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063481727 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063619301 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076186269 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07063669 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064425926 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067456158 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063616261 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068965139 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070999526 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065093061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067170908 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063887288 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064285389 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069827219 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07038063 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062938677 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063902629 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062354847 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06378571 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063235326 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063693219 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.086397145 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063622038 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061834883 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068353364 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063330492 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06421149 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062536169 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063422739 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062476968 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069315943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063441937 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069033505 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063136048 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065671293 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06381129 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070996418 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066284432 seconds)
  done (took 4.943780983 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079562348 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068167038 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062613529 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062280487 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066678311 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068109302 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067167298 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06757997 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068505704 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061772603 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068128795 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066893438 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067947577 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067677182 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068076507 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067615518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061653354 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06766709 seconds)
  done (took 2.498873513 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073223149 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067175999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071734174 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067284151 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066673819 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066373761 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062134088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062125419 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062159664 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067050703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067513617 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066428834 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062510211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066211756 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067116012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066787989 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066495928 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062382751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067030986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06221752 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066568053 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062017673 seconds)
  done (took 2.73205065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095973877 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084076366 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14043645 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079326677 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086203605 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072059176 seconds)
  done (took 1.842151824 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091704144 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098246406 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06671884 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067198729 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072656211 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070064811 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070351007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070497708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074948606 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0758433 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070439013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07529275 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075074565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07707445 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072684702 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075661198 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070397149 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070333054 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067454956 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079964534 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07037382 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075436355 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070934704 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070680513 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070955229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076990181 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074753424 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075456927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070150601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075365102 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072860555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070927907 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075615927 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07576124 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067151692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07512276 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070699822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079873424 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072889931 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076839191 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067424323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07325371 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07540055 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074239028 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075574495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071033835 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07439939 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07073421 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070749305 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081452221 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072814821 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076668447 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072597218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074970341 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074719039 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081166006 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0752108 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076575951 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072485061 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074879348 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076506935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072795631 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076969156 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07510391 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072743284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076581875 seconds)
  done (took 6.185614641 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105075135 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067682697 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071654594 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075851889 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076675563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071039745 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070627673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070619944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070654135 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067755286 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106308457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071265071 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077673471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077783014 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07093455 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070885359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071376041 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077049889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067990865 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082211812 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070767311 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076826752 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077112824 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077200067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075381482 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073134557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070951594 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070401046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070576655 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070572149 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074402747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070433062 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076779564 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067398235 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076812138 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071286002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070769669 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074523672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070267351 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072971978 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07720561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080113026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070288863 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07050136 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075179018 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070286913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070637472 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067671745 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070187001 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067644733 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075350691 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075158776 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074891652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076281905 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070335229 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070317045 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070041379 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070316491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070423364 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07457672 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076328715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070501939 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081846492 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070311567 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070395136 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077567527 seconds)
  done (took 6.182104954 seconds)
done (took 126.572208401 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207953189 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184499401 seconds)
  done (took 1.667625438 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074235594 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104134357 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082211917 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133872263 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071115458 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105323123 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103965658 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083700233 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071270535 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07126852 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071253952 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073551896 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136463233 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071402395 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071492322 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074053899 seconds)
  done (took 2.693292323 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104636707 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166416876 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107731553 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069861614 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103519849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076601519 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06895915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081700204 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075665806 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071236448 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077243052 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077739782 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071396916 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075527349 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075889671 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077370039 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07094732 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07664354 seconds)
  done (took 2.826346353 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103713737 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094451716 seconds)
  done (took 1.496482968 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174310277 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133321574 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201379223 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344522415 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153532093 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.418848229 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138439945 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138696717 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112479302 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134963716 seconds)
  done (took 3.243861464 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104257077 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169398607 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293094941 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119977715 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075583081 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090514074 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121928849 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081591315 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083832513 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083511546 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083314448 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078134059 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102600728 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077044592 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075886636 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077961715 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105973537 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074738435 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07612102 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078396744 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105553079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070367256 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07627872 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074759689 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080633462 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080566908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071089352 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070047037 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078401639 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075649867 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079452521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087307131 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080619361 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105565349 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07405428 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106900461 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078396549 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076952041 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075831327 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076296698 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080118229 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080012395 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078077061 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078070163 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070782612 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078742556 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070749912 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069577219 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080323612 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071214364 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07983084 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079251645 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105080724 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070953345 seconds)
  done (took 6.091475138 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108156697 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107673067 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070639897 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112299328 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103798791 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070141798 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105463275 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098825033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107558475 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068902794 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070498408 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07984652 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081087181 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116123118 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107956133 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073019258 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07016301 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108034628 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107753143 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069572443 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102001246 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097876756 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10720832 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068971204 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071098392 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069429143 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07057366 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076356551 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07782991 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069880367 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078779664 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083188215 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077272498 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068239575 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068715864 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068949772 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078222113 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078568898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078138563 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076364358 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068146613 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068741812 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070516998 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06972043 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067984848 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076761237 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07871919 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077192714 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069054381 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070091309 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068719799 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069829962 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077863125 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076045197 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078941398 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07862067 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069108983 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069164151 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071558901 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079175066 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078410705 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077540234 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06970225 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07799336 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068789887 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079153836 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083979378 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069089089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070009284 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069017092 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069196039 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069829612 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076092151 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075970097 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070321833 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068974539 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068765457 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078374196 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076379046 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068503186 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075445459 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068143871 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06828478 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07036906 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069924656 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076177238 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077753089 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070204851 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068675394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068766002 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068661812 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067346558 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07533463 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077933768 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077484193 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076895181 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07009595 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077143702 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076313047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070084985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077095221 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068284497 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069732948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069390195 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076147906 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075217923 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07724617 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069086279 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068200035 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074997005 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077173687 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067574751 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074338175 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076356054 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075124168 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067240185 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077994594 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067990598 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076025332 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067923439 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076390438 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067676157 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.207367651 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070640313 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069673881 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070022722 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078462562 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07177139 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069446088 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070399136 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069372106 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077687775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.0812612 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071149526 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077399543 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076725862 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070722821 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077297692 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069414116 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078829531 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070167277 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070951871 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069120271 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080192766 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069829261 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069403051 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06919077 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0797188 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06979322 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079950506 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076816965 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068588747 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080815189 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079539426 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07629847 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079306313 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070657003 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069317189 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069327028 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069138468 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076412657 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077630864 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071174564 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069061589 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076841651 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078571788 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068560039 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07686459 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077514332 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077287218 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069556483 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069504698 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080062375 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080102258 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077239737 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077646709 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07715892 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069583398 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07721072 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077453181 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069543381 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083240168 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06951359 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081445419 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077228867 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076111282 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077745278 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078971789 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078885879 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078957585 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081097709 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068559561 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068955424 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077774498 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069428445 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069080493 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076412519 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070310672 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070729918 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081065745 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069414916 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078977064 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068357109 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077796507 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068492277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070232415 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082441984 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069339539 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070342834 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077039329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068850904 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0765265 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078871695 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079401527 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068928723 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069955015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077688977 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07738868 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06894032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068925701 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070467139 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076601175 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076221489 seconds)
  done (took 18.398583747 seconds)
done (took 37.726329277 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204662638 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152257025 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181748458 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114799849 seconds)
  done (took 2.051062022 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106795474 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097949906 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087693974 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065458584 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093329737 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065380955 seconds)
  done (took 1.848219936 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284008276 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19445081 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176842083 seconds)
  done (took 1.985145907 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208717375 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188905585 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456563593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280879489 seconds)
  done (took 2.560015545 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138980438 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082144871 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064186543 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082425427 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122861262 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149134865 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092173126 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11713726 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075438462 seconds)
  done (took 2.307701691 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145511049 seconds)
done (took 12.245808387 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109804372 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070526702 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128341158 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196661112 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072491977 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.242581023 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098936358 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068710523 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181826299 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075901761 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102177716 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087848829 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075541073 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.259711146 seconds)
    (15/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11989606 seconds)
    (16/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.190531912 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112253894 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076080945 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.289131702 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144930867 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074754525 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17521026 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074285821 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074411589 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.24341368 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066873879 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074201451 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133268211 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090007052 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.212595384 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072568604 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116597129 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065511224 seconds)
    (34/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074113816 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.179599485 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177144727 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167070769 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081865304 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074718712 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101473628 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074811227 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098912903 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064709342 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076075895 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075304437 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07007206 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087182625 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.155315147 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201052794 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074268479 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.067048039 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074608196 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073492054 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066034009 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065660518 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074221411 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.143980429 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138239981 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064721919 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172228552 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.082685843 seconds)
    (62/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070865536 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065877467 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.197526143 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126247377 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090722452 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074432866 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064968661 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072342321 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075707432 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122691291 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093467972 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168709224 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07210394 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168895249 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.23772361 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076574756 seconds)
    (78/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07813413 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.175804078 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116242881 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175294205 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075418105 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065493163 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06491967 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.171815002 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097786162 seconds)
    (87/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.122995861 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066412876 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087909081 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065009742 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191641678 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090010471 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073856623 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.208198378 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070212321 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123691089 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.224492068 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119168017 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.208595334 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064395944 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079026759 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173316927 seconds)
    (103/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.136018657 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066404105 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064516026 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.064512856 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.20487452 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.064834258 seconds)
    (109/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.125291331 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072027808 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126121087 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175520634 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064746781 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11378392 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071111446 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.188942426 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06485627 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064868355 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063644294 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07598973 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073045726 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065784122 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.22300578 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187491065 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.068062134 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138763782 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072373867 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072647648 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066611804 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100665852 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074572023 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.064647451 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085772948 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064055344 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071459859 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073467067 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070705262 seconds)
    (138/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076873289 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07172739 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087762201 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.126872388 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128772079 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073422879 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076079497 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06400653 seconds)
    (146/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064962074 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064270547 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071753119 seconds)
    (149/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133863681 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.129585037 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068678252 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085576636 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109511382 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173348486 seconds)
    (155/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182948836 seconds)
    (156/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.134117874 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071993431 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.159296554 seconds)
    (159/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073036209 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189072071 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.064621056 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066990212 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062987242 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138069437 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086982335 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13355071 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064805005 seconds)
    (168/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132489761 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090167509 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081153417 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136527649 seconds)
    (172/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127762784 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.065071033 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065395153 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070641157 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.128187509 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064673672 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134449436 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 0.128126753 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073044038 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07046857 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076438179 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065177173 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068575392 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.213255382 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106048398 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064490195 seconds)
    (188/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064906518 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064429122 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163389884 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160570541 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065121417 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.064107783 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085691209 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073993091 seconds)
    (196/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065220326 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 0.128709001 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076379131 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090174295 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083621161 seconds)
    (201/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065363294 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073086403 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065969159 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.211740103 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077106335 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064320613 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076186103 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072076866 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065453112 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067403 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064216915 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089881019 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 0.139539004 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065078321 seconds)
    (215/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.42110183 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069978631 seconds)
    (217/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072068463 seconds)
    (218/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068438864 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075545807 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077042495 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069615873 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069441839 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093339274 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068610111 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069322843 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.0717112 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187517277 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076528127 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078134361 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092735176 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070109599 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139288218 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068352721 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068242438 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089158495 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067443189 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075646562 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067066099 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083261686 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175240116 seconds)
    (241/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.138712253 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071454477 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145922327 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066965618 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074576757 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067627454 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074234616 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067519085 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127939572 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068687156 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06652487 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091834965 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067637633 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065511837 seconds)
    (255/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067354236 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073378522 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072702329 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129614214 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067271426 seconds)
    (260/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092093846 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07201789 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067046279 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229381513 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07578625 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067092891 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09018807 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066770669 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067262375 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070151909 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073149099 seconds)
    (271/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067288932 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072988011 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07698086 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067355999 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066465302 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067140791 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07539524 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065710307 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067472868 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174772864 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068272121 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066609562 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065959254 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067247968 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065968702 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066220328 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068182344 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094507251 seconds)
    (289/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.138895017 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087711595 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074935053 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075297478 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120210345 seconds)
    (294/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06947924 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067275534 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067761929 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087797238 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074189397 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067901453 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074424945 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070182302 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06718689 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119898055 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066822767 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067227417 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066297235 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066575467 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066900786 seconds)
    (309/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067481209 seconds)
  done (took 32.539077403 seconds)
done (took 33.880738783 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088206361 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101572907 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075719793 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095071563 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083806373 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098956329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076994105 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081794931 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084476703 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08344027 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082274862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075508138 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078491284 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078258402 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075938689 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099756743 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082205634 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076520836 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075924517 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067128531 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075800608 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067368422 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066953514 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07339689 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078776703 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074685518 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076502139 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076275364 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067551753 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067051401 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071724182 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075837995 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066762836 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079655985 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076175202 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075317112 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076723622 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079395245 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067181443 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068330384 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077219266 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067108628 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075309655 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07393475 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072135959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073481565 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075341371 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079556966 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098304843 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071553248 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07767983 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077605943 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078745713 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072528434 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072334632 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075310599 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073090099 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098085876 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075172721 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071445278 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076551358 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076302984 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073292797 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07510711 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075063316 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077678394 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079062581 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073448609 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077133611 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074338648 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066977299 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075519306 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071981148 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067692869 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078637022 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080399547 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066625253 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071330013 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078020948 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07625967 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066892112 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071242341 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066464831 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071624927 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071486849 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072868593 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07211185 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074245181 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066440765 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075439064 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073686525 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074806417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066322519 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080004445 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066849599 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072885546 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066711035 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066615769 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065864116 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072058253 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066172603 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071621031 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075290576 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065676591 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071354674 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07965493 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066305285 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073588904 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065892388 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066525396 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077833072 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076952821 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066497511 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070879531 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066064115 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072380657 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066109654 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066149534 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066235211 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066326057 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070699028 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06682942 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070609527 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071781267 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078965495 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066853269 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071558434 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07071 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066917332 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07353594 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066957174 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066405725 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06612504 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08001989 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071044544 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066544201 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071746183 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071051202 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074338607 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066168195 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07481139 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072199434 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070684628 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072870818 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066391348 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077027908 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070734564 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070362038 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065889436 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066404862 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065671394 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066126613 seconds)
done (took 12.738220191 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070806317 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118726433 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094114468 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093374673 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083176406 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067525752 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074275756 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092011337 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069188256 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097109701 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089192748 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089219716 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110411552 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067192962 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067453958 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068779399 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069499167 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078863863 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094634878 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089328319 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106489734 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06722863 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086576986 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087576625 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084535162 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089176329 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068389658 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069199327 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070504809 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090479732 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092061465 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070339622 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068256408 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090677409 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085181926 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080547563 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068280917 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075785204 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068627901 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067147182 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068724685 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087796287 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075499462 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075869129 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068369905 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075794214 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068571682 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083212722 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087770701 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075485161 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082833823 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091653892 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071138997 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083357863 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066389849 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083411081 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076798807 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068104702 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067902576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072479852 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067828186 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069989551 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078541096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076356872 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071645564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082563729 seconds)
  done (took 6.708605672 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084876857 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095280416 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084398498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08449698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066758913 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068116377 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070443741 seconds)
  done (took 2.055640239 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067742647 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087242294 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09154569 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091599235 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081511161 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091973135 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07546628 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067718603 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096266753 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066849997 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0874735 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097976023 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071194742 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079214495 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09243296 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068050363 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092041115 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067830366 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06904448 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092079792 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072207703 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094477501 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079130536 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067865518 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080324572 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068385153 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099955015 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075702727 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06911937 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069279251 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068834312 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094224305 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080143581 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081620587 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069169638 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083196437 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082248646 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071643535 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07873161 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076913862 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081520384 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069096966 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067086717 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06931207 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070571338 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079490123 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067094622 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069095261 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069411545 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08713197 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066861354 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07996472 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071654336 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073914803 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073410591 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072953741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07670916 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069562828 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086983144 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069342082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084931408 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084238101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081452421 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084346767 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067975162 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080511704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081135064 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069193942 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069714675 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069390202 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084245266 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071215772 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06952971 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07935198 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06786248 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092051585 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091386601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067380724 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081106725 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068766287 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06927852 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079429169 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091996912 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073737748 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068921499 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072261043 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07002365 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071131984 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066793874 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071784783 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069052198 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073626658 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069146844 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071639951 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070613925 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084846959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067162013 seconds)
  done (took 8.943806075 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070592119 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069154307 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070514164 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068787188 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069244949 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0687475 seconds)
  done (took 1.946089402 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091514355 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069375212 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081851437 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069064781 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104730672 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083848965 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084503008 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078596861 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082852852 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081124005 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084337679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08704854 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088643694 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071133262 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084134877 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069688816 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083988983 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072674154 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08032931 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071011192 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081492039 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071124483 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071232221 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087370907 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07243933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069734058 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077953845 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080082831 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080062092 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078392777 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07091041 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072477235 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075901119 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077779817 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084472855 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076086279 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068238729 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07500285 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071283944 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072086265 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086135952 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070936941 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074048041 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074642513 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078193649 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075378855 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075322209 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077090541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084060735 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075039368 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074951334 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069337112 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071870971 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074983921 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075320175 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077829245 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074922656 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084041184 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071061477 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075342038 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068594309 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071910543 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077500657 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072153881 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076065508 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074682169 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075385357 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070325167 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071233351 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068813155 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076013656 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068545316 seconds)
  done (took 7.025641282 seconds)
done (took 28.193071167 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.520806727 seconds)
  done (took 2.005661125 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619858363 seconds)
  done (took 2.134224048 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.292409203 seconds)
  done (took 8.804064096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.384380023 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.454646197 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.739888446 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134383848 seconds)
  done (took 3.264979243 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.696672692 seconds)
  done (took 2.222133359 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236389228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226191484 seconds)
  done (took 1.994188077 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348585966 seconds)
  done (took 1.859923415 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076893672 seconds)
  done (took 2.589327905 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235833375 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161301699 seconds)
  done (took 1.918820898 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446668348 seconds)
  done (took 1.962966384 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.216502998 seconds)
  done (took 5.735712993 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220427153 seconds)
  done (took 1.776977067 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236244375 seconds)
  done (took 1.755942545 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.816812263 seconds)
  done (took 3.334465687 seconds)
done (took 42.883829064 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083063973 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086086397 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086072228 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081370237 seconds)
  done (took 1.834685379 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075333629 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071114475 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075202441 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070961808 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075024036 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071285072 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072385298 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073513965 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070842429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071043385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070751488 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07072871 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074303124 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072378833 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0698028 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074236741 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074600579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070987977 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073688419 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071086998 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069162328 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073417623 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073692745 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070615859 seconds)
  done (took 3.254863681 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078309478 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074375827 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075875213 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072370115 seconds)
  done (took 1.826332963 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077202838 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088290991 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086264047 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077545384 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088689504 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083829278 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06764615 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067828924 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068661604 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077103557 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066285825 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093323285 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085709432 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077116306 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079308248 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064057477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065637256 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08485107 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077656882 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077871874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068544266 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077751215 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06668813 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086981888 seconds)
  done (took 3.3817599 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081761011 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066854435 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080643085 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092489407 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093250392 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06609547 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079860453 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093672537 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135925094 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066853818 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072325496 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066614233 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.110351833 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066768476 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081181747 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109830713 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113111798 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070290238 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101756815 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066690688 seconds)
  done (took 3.248219991 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083671714 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069837356 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07125038 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065795121 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077160882 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073281441 seconds)
  done (took 1.977395593 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068641598 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068164647 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068285612 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067880294 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072966001 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067865573 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066658359 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068289859 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068507568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067553988 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067377249 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066961312 seconds)
  done (took 2.351089529 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.190911212 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069138838 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06887095 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067029471 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070959201 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066829164 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082241606 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068418546 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094050808 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067655596 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067657855 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069328895 seconds)
  done (took 2.516856599 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192299837 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074159641 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221314286 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143706401 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102004563 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108773011 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110229882 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106999232 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132445521 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097558132 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152096332 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159226554 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103926672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128561461 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087452746 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119257749 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1433121 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155124025 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099227861 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153657043 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134366617 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12178468 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141116678 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0967502 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100495715 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112033969 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071777818 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076993411 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157987835 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122387109 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134809478 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104154307 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089920277 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169127499 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156727034 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131379914 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140877239 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081760889 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117554495 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128580856 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192079742 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086695877 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151498974 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103426927 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077785359 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124947848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110174091 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114722025 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100119141 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086385693 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132395951 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315835935 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129770593 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084026079 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117058904 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106111614 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109698885 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113728803 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169935898 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149606133 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120959791 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069976235 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107247145 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143324328 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125997319 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104633113 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118294205 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089991437 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1238578 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151655911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117794659 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132831512 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111334667 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084582391 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113915446 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129465991 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120138669 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161305514 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117758598 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071396646 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115065987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095090894 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077734937 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141368021 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073795757 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163574059 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09541314 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120556316 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124995724 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104505493 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104347952 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148852967 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133835922 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101034073 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084151411 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09901909 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113732185 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136265488 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084520128 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103514141 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109539286 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077127127 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127036253 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073206875 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115336959 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09321357 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113347703 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119857949 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077018135 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1160892 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097242789 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097075581 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267444025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150682668 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085108495 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079079564 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156940157 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116997546 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100905462 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135641207 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148669443 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117954083 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094716895 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137904813 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16281291 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08714402 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151652264 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099184514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081247675 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102265484 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117378926 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105891451 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118423831 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078760173 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114839975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153471273 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072350128 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093280274 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125993912 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079050812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078287161 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100835007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099779195 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093642694 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097425928 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100472794 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129459403 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11671783 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101094689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117712757 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096907732 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154986947 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085300497 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098663938 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100439829 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070583078 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125839977 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14597956 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076337667 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149633165 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116964945 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110603036 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113358378 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081084672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12933242 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076790151 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071087677 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132548354 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107986558 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103250199 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140966191 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107824501 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116438593 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.261797279 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126195148 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124941299 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122932328 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104246461 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087098979 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110275505 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123760896 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072103429 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089010626 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080214936 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099546186 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091594327 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080901078 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13302238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116177293 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1062969 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110019119 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093540544 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140984669 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076965293 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118156948 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115968005 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091936378 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145082084 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142579834 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125532137 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096940842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128996714 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071449181 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072437086 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086015137 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117035049 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081973405 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081793649 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108521605 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140690851 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118935764 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128548885 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117756509 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111539247 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147894529 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071035441 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115375417 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135463986 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114984121 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101363341 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087565346 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094132558 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134215136 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099134123 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169235367 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10869214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117563254 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147646673 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098403491 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076621271 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099942377 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123332599 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096597969 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133011789 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093782289 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0833707 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251559539 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076869532 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10022951 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121783834 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112133031 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130002752 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108477751 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125892394 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07570616 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107090364 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11722918 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116138784 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081441778 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110846827 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155300557 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093484981 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111421318 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141757567 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076649222 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133758698 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16167206 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135685616 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081949011 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100399082 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115592948 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11956441 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112646504 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130552358 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10026972 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130129735 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10657898 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082214925 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083739051 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09247751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099440418 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108849452 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100124762 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110001172 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092516925 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122871129 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098627171 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106624245 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112500584 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097271563 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092630329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092685604 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162606353 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112413384 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157758527 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096222589 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134463827 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150113378 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072768271 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07644407 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078108332 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129758432 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081888598 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122371458 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106522958 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10983024 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115780721 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127888646 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091679 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068864959 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103549874 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123431419 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115641714 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091867755 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.098629864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145341712 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11165833 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075030062 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104942699 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108639878 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097679651 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157375263 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.077931473 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10262508 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07356203 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076128001 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116303169 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137183853 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078870746 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.098082531 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11059669 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10257797 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11510582 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090919544 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103565562 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121124336 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132209082 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115229583 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.084518674 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102149797 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116892121 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137647099 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09621045 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094033643 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155657976 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139177351 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.14292747 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08261907 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105770749 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104963368 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101852577 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123909305 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079250544 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144363504 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076662328 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120820339 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093154634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083027438 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116321765 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.103999228 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08216878 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130172613 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107206728 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0783966 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075545615 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102927334 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10901823 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095137111 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071132398 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383821098 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.0743816 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132455051 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165193741 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081103989 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103454223 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09538908 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082497675 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102037196 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100502197 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085415266 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096103726 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162674151 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086706776 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140984776 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127741967 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108137495 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13150911 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101703172 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639626581 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078754114 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144119417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112216341 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167205465 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09600173 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115007424 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107930146 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116301043 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134544767 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098713157 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175851424 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123321318 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113284486 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077269637 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098105771 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099816014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086732065 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103457486 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109292528 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108788343 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092010557 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112851188 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116424629 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08070177 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09329607 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145719794 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110612476 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134020414 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130505938 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082248795 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112920199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129177084 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077477568 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113008489 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141914512 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101749373 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096568572 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080691052 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096852478 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162646029 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070634449 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303040913 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116047162 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10931333 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109179693 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105546202 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124642316 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099246569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115800491 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090077395 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141984152 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109359601 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081205465 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077097667 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101632338 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105901906 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095029693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094656383 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094024066 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142317583 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071062558 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094493134 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109754914 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135567902 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160149979 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102943696 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081468763 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113453257 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113620851 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109508201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116221868 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079549342 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079337702 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079568777 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098748009 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121074182 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10986714 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113877416 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104698898 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151116489 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081320053 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221634582 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092948979 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10105226 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086769151 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078280154 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093215308 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093017181 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099946006 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106457511 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16300427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092158044 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086785841 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089142301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072998337 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080883244 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119616865 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105413231 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112984599 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100156736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080388393 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099995057 seconds)
  done (took 56.304047799 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105218049 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077561441 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097734565 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143758386 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121068156 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198828292 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150766886 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188631715 seconds)
  done (took 2.761888903 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068318465 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094279196 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103788595 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08371174 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067450838 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068200215 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223749099 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081793747 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066761389 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091040667 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076995009 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068895441 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.441979641 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066617319 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067554645 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075942323 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067388883 seconds)
  done (took 3.457099237 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37927627 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610563334 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345702526 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075623127 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.962605717 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08985682 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.191725135 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138534817 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081244267 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536817902 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367754303 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132534316 seconds)
  done (took 18.570360234 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080756642 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075481239 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090083422 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089522261 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077565996 seconds)
  done (took 2.069426386 seconds)
done (took 105.092501028 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080528289 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.428846509 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068749672 seconds)
  done (took 2.179873178 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090947732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089035502 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08902264 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086264226 seconds)
  done (took 2.019279927 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075004957 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076920095 seconds)
  done (took 1.808135603 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226336385 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173124239 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095204653 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083038227 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079912697 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080760182 seconds)
  done (took 1.904233281 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073253095 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073197082 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073433645 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074081444 seconds)
  done (took 1.949630422 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068823313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06645762 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069209796 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071253703 seconds)
  done (took 1.931759278 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08516467 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084923533 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079369505 seconds)
  done (took 1.905194079 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101637787 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090542399 seconds)
  done (took 1.84817241 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081377853 seconds)
  done (took 1.742464928 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089021819 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099696501 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131763489 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113938374 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138119551 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114610469 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08409492 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085059262 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078872194 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085839376 seconds)
  done (took 2.682456131 seconds)
done (took 22.198811605 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079226849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372046863 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359874691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090301911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669339498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357505201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99281495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092266479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13984384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068501609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084859579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650157421 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983284745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323846952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967998608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330665133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650744652 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068774647 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068435978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068303066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976203517 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068276962 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067839582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069038231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649717699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372979972 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069347446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330579656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069177562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070987369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356075374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069949461 seconds)
  done (took 16.231665504 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07085338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120753455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073330627 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085154932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070918236 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070034626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071808884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069533534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120326896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068449642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085676028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068244221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072744642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069300205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087917178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068682456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069241366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070182977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069611249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069795566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088001035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069294208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072216887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070162444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06963896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081397741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069955353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069446526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069713638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071429889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072436326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070187975 seconds)
  done (took 4.099203877 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116404948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124539418 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07409304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105866216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11179293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070846902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146244341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093147973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127275065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06922127 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085432797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069230088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103048925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069037119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089211149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069707004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070417837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069964207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069430973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069354468 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088792369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069530311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069419636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070379679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069826343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08320662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069801174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069986145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069721451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071535679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072879829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070082126 seconds)
  done (took 4.353707797 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07106194 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074078006 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080429601 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081872438 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067539876 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070364017 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071332921 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067480168 seconds)
  done (took 2.261678926 seconds)
done (took 28.612934594 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078791623 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068104681 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071318708 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087779474 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074176647 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078945633 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065487602 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074842047 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071743884 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072261876 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073723524 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067733438 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07067632 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065216517 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072781182 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067234009 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081323769 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070908342 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080118054 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08068659 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070121598 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072757369 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075255633 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080664337 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081010107 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080908136 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076737358 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072996397 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068466947 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070790676 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070845679 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079036796 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080954058 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080838955 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067462988 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067453522 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072209245 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068820208 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082082221 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076273409 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069759095 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076644418 seconds)
  done (took 4.765436965 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084742121 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089537451 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083053947 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079761507 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090218556 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082251024 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08650196 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077798902 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077436575 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086136266 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074111703 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081082994 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078427636 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072512857 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076856312 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074831835 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079582414 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073888243 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07756914 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07812437 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08771256 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073503799 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087581936 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079278855 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074931288 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080727498 seconds)
  done (took 3.773689005 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074236165 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085331327 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092843993 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143198872 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110769484 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079898193 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081285004 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091644049 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09674667 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06847582 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072921023 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092749668 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093195039 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074342418 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068792626 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084578366 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084158125 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070287399 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075002191 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097311065 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08937872 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085491497 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094142309 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084499237 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068011609 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071207061 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073338488 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086666027 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070828071 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079398454 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071171527 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071780235 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069260829 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078189965 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070457708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067906515 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092601763 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079166578 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080698376 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068649678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077944617 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0692936 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093289771 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127950181 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067160595 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072873865 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071946576 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07940603 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06772308 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095841494 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079938543 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067774963 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06901354 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067532311 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067656435 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070721107 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06998339 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070464274 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078416995 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07482208 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089444061 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073224176 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08575132 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067670166 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078337613 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067357489 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069547046 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067088422 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096457623 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06948834 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111390618 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06973539 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06677547 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07952484 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078347128 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073998836 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06790844 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085476787 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079929066 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072308038 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076521863 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071455006 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071699157 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09807124 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068791718 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067944141 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066724252 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071852433 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071807862 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068476958 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080085491 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067431054 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071313755 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085717781 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06803233 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069021818 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071727601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070810287 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067361069 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078638495 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072428605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069738136 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078575934 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068647869 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071980058 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081612541 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075263684 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067273878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070163867 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071876687 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069589946 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069372096 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071607463 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069984845 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074773911 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074726784 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073932636 seconds)
  done (took 10.762936497 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163897229 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155349229 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070648876 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14828766 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076748073 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080106131 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150406773 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094500254 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068275686 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069890319 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068520581 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10941885 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10528849 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115718069 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081064195 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068915593 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091002306 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114726841 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15247114 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146470887 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090664087 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076230862 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070885262 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070097275 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070143532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078227083 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085105527 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077376789 seconds)
  done (took 4.467181753 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078039137 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103082376 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073190121 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090622004 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087705584 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068705115 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070099259 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070264354 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084926175 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078191431 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068569189 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073733531 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072876735 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072346039 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069629632 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075336718 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07558596 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067899166 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072317865 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074153788 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078798765 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092722978 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071929272 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068938311 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071209594 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068356641 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076346566 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083451817 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06883088 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10277913 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066122715 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073510331 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08277208 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068819459 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068779168 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069303442 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068735604 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068560339 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0700274 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067222403 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067295538 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072687508 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067969666 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077050232 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081677363 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071052123 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070790257 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071639422 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072055855 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066009728 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071411482 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071241968 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071770267 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075890266 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072970657 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071699335 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069369449 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095459589 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074501352 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068072393 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067729873 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067435102 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07113066 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07839159 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083696199 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070794253 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067174491 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069239776 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081249842 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081117199 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068192094 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073505653 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066380862 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070862771 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071109795 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071174774 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069391943 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067334972 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06809827 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068719761 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072277313 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068766134 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067864115 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071749328 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066942852 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067387356 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069051497 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070405028 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077569278 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067946062 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072298111 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069566242 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067755624 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071315832 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074344942 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072248972 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07958753 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079645521 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069208241 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067292398 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081944332 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071535509 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068371646 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073950607 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073745051 seconds)
  done (took 9.412103591 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091514581 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069044282 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084480686 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092221104 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078748282 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074257991 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078863725 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068545512 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084626393 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073174594 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07618649 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067449468 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079216623 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077780172 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068893328 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078628466 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071577765 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085838615 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083091279 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067050829 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077090519 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080764914 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080253482 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082641501 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081557177 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083416845 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080715472 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078307094 seconds)
  done (took 3.924658127 seconds)
done (took 38.775955199 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.755655199 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.001438876 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.75044989 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.044254278 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.806156812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.961230575 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.839425948 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.742602801 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.975623272 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.786968058 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.032347154 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.98458526 seconds)
done (took 65.499930476 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.787707309 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.902604988 seconds)
    (2/2) benchmarking "String"...
    done (took 2.00136696 seconds)
  done (took 5.591306863 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.959997418 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.417134791 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.979334559 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.746618328 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.755146894 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.143484246 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.524625116 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.222473482 seconds)
  done (took 30.478080039 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.950941951 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.970815736 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.458530518 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.492094825 seconds)
  done (took 15.603414597 seconds)
done (took 63.193507347 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.768953702 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.7711389 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.795455125 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.747687758 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.836534502 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.755363149 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.864366934 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.748249225 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.748297974 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.759326692 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74982325 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.233776346 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.760769794 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.897648022 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.759748752 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.748654108 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.780906661 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.263316134 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.901901099 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.764100816 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.765231804 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.791153519 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.75009482 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.749280066 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.798791427 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.751687431 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.137587136 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760249884 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.576107138 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.75171955 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.794205629 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.090123632 seconds)
  done (took 203.058377232 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.748802473 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.727786146 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.769692016 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.780471004 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.209348967 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.924627419 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.860490841 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.254053001 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.754005096 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.755078054 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.964959307 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.753564887 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.996164099 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.747807485 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.785098832 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.848642897 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.016657841 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.988798522 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.789936767 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.899270677 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.751177239 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.941879698 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.880827716 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.93178578 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.753636242 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.825682567 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.754099009 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.770689728 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.942844939 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.991081443 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.754120004 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.79111047 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.953847587 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.618223734 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757651007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.757234723 seconds)
  done (took 169.442522277 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.930275541 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.751864468 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.751735902 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750300729 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.758086558 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.750526715 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.876887062 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.87516193 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.417181401 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.321010355 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.809111496 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.75206623 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525031018 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752983481 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816010436 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.763582457 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.75361592 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.766609624 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.77896161 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750447567 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752710798 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875011836 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.76763273 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.751864499 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.76278477 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.75167075 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757844161 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.138266109 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.751702482 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.750348233 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.762514031 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755014523 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756728565 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.993347965 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.751676866 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75212701 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.584763794 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.27281474 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.75029872 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831697812 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.753621533 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.758418665 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.753170775 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.971199036 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.755438583 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752446406 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.753128116 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.753529339 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.752612849 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867394149 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.751982874 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.878418272 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757598329 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.234305746 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.754179891 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755476619 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.147051814 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.335046633 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.753075754 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.755779218 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.753931128 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75358747 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.759251239 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.038316948 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.82559809 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754453101 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.754652608 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759875171 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.752531093 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.908022932 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757496944 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.167262157 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.769805687 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.982907011 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875634839 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756128552 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818209654 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845275173 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.755005192 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.75360294 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752834517 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.753414466 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.833512577 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.754806975 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.839335921 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.765181026 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755407291 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.809996533 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.823342019 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.755268106 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570153193 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.757854922 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.756328062 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995435432 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820646956 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.755978013 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755594035 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.755355032 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.842262246 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.879241257 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491528417 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.754939001 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.090824571 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.830114622 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.755847127 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.863100361 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.757520892 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834153219 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.76428644 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758064919 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790535369 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.756603595 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.766699807 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.756211975 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.127286243 seconds)
  done (took 398.066379738 seconds)
done (took 774.243871972 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.368045857 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.338084464 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.427945854 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.351446677 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.327202726 seconds)
  done (took 13.507251881 seconds)
done (took 15.201341973 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.834238258 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.836616394 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772812793 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.835648721 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.771935458 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.836182432 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.820491788 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.778873165 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803466441 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780424658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.806650391 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.778135076 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765097381 seconds)
  done (took 25.117882185 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984209504 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982757396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.819293336 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.989952333 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798399022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989290261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907303552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.900101887 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907587634 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769094379 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.765842062 seconds)
  done (took 22.511585117 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985959612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991843523 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.826694013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.990904915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799682653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.987620229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912705409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.905041368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.894809735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768055625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767289482 seconds)
  done (took 22.526196323 seconds)
done (took 71.850071761 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.76056183 seconds)
  done (took 3.458589848 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.780777432 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.937600217 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.760613817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761296964 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.762960501 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.76110836 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.761142669 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.762010264 seconds)
  done (took 15.98706353 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.761459701 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.760548875 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.759835511 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.761184296 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.761154841 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.759104555 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.759708445 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.762089658 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.760291498 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.760312803 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.76115536 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.761740269 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.761624627 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.762027793 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.761129898 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.761495142 seconds)
  done (took 29.874414728 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765871885 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.760235088 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.759764056 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.762258181 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.762030719 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.761790068 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.764890032 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.7622596 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.761647547 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.761293089 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.76254198 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.762326413 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.761289101 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.761865371 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.761699637 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.762290933 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.760368528 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.761254422 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.765960199 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.761368009 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.761915058 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.761509129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.761723084 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.762454928 seconds)
  done (took 43.993076774 seconds)
done (took 95.012045735 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.464448691 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.601021314 seconds)
  done (took 9.765655755 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.766543804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.764084561 seconds)
  done (took 5.309195142 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.761308441 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.764189367 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.763116152 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760975276 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.760044691 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.764108687 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.763926365 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.761995249 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.764637934 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.762521281 seconds)
  done (took 19.325246665 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.76334201 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.763238571 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.76205967 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.76261601 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.765306105 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.76407734 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.763387335 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.762826527 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.764623913 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764237164 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.763890059 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.764868483 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.762952632 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.764170355 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.765350853 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.76258439 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.763304496 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.763058697 seconds)
  done (took 33.448824261 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.763231383 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.763719157 seconds)
  done (took 5.226913144 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.763190606 seconds)
    (2/7) benchmarking "second"...
    done (took 1.763302935 seconds)
    (3/7) benchmarking "month"...
    done (took 1.762536627 seconds)
    (4/7) benchmarking "year"...
    done (took 1.762466058 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.76237442 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.763059204 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.763077023 seconds)
  done (took 14.041505294 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.763511577 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.912897658 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.974372935 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.388432658 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.764865551 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.766351119 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.650676817 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.766573379 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.767936785 seconds)
  done (took 19.456144487 seconds)
done (took 108.273770006 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.636218746 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766311024 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.985146353 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.894996345 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.784532162 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.057735067 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.78829508 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.047086004 seconds)
done (took 42.661205157 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.81949637 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.421559931 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.47483586 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.795270778 seconds)
  done (took 15.393888645 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.763949658 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.068708041 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.787534483 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.586326131 seconds)
  done (took 21.913274796 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.126013011 seconds)
    (2/2) benchmarking "read"...
    done (took 2.109517655 seconds)
  done (took 5.940963626 seconds)
done (took 51.771239153 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763989189 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.764062803 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.765513756 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.764558558 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.763296534 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.764839524 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.764673407 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.76635787 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.76510729 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.764495089 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.7662298 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.764275146 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765330088 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.766022318 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765143278 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76411153 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.764505875 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764947653 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.765525372 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766075192 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764912378 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764913974 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.765699253 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.765784998 seconds)
  done (took 44.063703264 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.765439272 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.766234499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.765563285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.765861374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.766030407 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.765208252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.76640014 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.766542376 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.767101215 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.76661581 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766964601 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.767898157 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.767207563 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.767049578 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766907024 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.767189083 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.766365336 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766958394 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768467652 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.768004022 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.766635956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765977118 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.7673457 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766384049 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.767939158 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766255014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.767670318 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.766370731 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767031308 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.767901246 seconds)
  done (took 54.707165849 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.769886964 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.774382932 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.767327133 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.767694097 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.76811884 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.767011268 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.767863873 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.767849313 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.767499165 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.766788746 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.767719586 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.767109286 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.769050803 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.766934875 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.767742848 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.767408973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.767340103 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.770575873 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766939331 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.76901796 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.768558995 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.768983865 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.767592528 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.768020744 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.768330435 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.766764823 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.768598607 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.769160464 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.769235869 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.767337579 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.768993803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.769848061 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.768565389 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.768088669 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.768546536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.769487656 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.772359083 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.777582506 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.769790733 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.76859622 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.768574721 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.769321773 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.768751991 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.76907433 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.768927573 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.768220512 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76870842 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.768720797 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.769209166 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.768540598 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.769060833 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.769819801 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.770254217 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770010816 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.770272358 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.770061347 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.770716073 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.769843888 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.76909601 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769589817 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.768843013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.769450829 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.77028278 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.768511167 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.770912066 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.770358069 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.770173617 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.770306807 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.771062933 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.771512577 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.768105431 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767628074 seconds)
  done (took 129.078880108 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.766686539 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767723881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766910328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767027391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767209943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.766919485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767762525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76710341 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76738656 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767737798 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768339803 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767484278 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76763528 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767050061 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767476845 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.768136827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.76769855 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767718356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.7688421 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768325964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768649336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.768537328 seconds)
  done (took 40.593309886 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769442585 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767855799 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.768686195 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768680909 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76880653 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76840919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.769739301 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769350866 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768351001 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769352819 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768673766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770105502 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768995855 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769478285 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768234477 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769264944 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769289563 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.768862109 seconds)
  done (took 33.547753799 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.768082533 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.769377301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.769922559 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769426691 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.769254235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.770094639 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769722241 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.769703463 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.770501954 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.771696283 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.772243601 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77057551 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.77176721 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771907326 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771539467 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.769818783 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.769671399 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769120937 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769700703 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76937252 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770807275 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769562647 seconds)
  done (took 40.650528778 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769722287 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.770268171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.770320483 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.77044146 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.769694371 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770877355 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.770482093 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.770397138 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.771000315 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.770734486 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770223737 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.769847366 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.77211221 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.77149961 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.772483386 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771428681 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771069149 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.771436421 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771899537 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771512839 seconds)
  done (took 37.125475641 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771138557 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772082846 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771135267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771138041 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770819863 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.772310185 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771202563 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.771264304 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771035772 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772468546 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771679461 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771259918 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770885011 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772344589 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772390035 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771964163 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771531755 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772200338 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772032423 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772012073 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771853252 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772147352 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772108594 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772509409 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772495522 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.773073251 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773302799 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772487745 seconds)
  done (took 51.322015223 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773051018 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774726104 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.773296524 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.772429488 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.773471676 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.772416488 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.772743423 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.77335055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773663476 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772084529 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.773954495 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772586307 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772522323 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.773872271 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773132064 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.773366475 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773836891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.774104329 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773816363 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774982374 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.773895706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774168544 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773118813 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774386443 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774021406 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.774830324 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775258336 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775005975 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775699268 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774368135 seconds)
  done (took 54.923365055 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.795850862 seconds)
    (2/2) benchmarking "in"...
    done (took 1.79222498 seconds)
  done (took 5.298160893 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.774050568 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774479118 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.775031813 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774567388 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774361779 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775427917 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.775292001 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774909343 seconds)
  done (took 15.909268416 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.775061038 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.775377925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774326651 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.774576067 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.774884125 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.775808922 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781164746 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.775577606 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.777051539 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.776734627 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.78261478 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.78459457 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.779071645 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777602871 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.77629687 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778781111 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.775404353 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.775183522 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.775411849 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.776963979 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776188684 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779456292 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778520842 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.775084558 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.777793932 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.788146016 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.780961397 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.776292704 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778720155 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.781980549 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.778014233 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.77509797 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.778040152 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.777941689 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.775949938 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.777668775 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785497096 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778998505 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.783270649 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777138416 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777552783 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.776240227 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.779587826 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.779878446 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778809908 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.777059518 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.776899686 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.777166088 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.778327826 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.780723813 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.785520836 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777521893 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.777732261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782069681 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.77987569 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785580635 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.778221394 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.781164539 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.78779353 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.789149166 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.79099745 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.787760565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780804986 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.77796344 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787829962 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.805097401 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785652866 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778791645 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.778591108 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776602308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.784992856 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791978855 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.787919064 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.778397734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778613407 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.77935853 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781305276 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.782584122 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788301088 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.782297779 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.78003746 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779817487 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788298802 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802783789 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.779475346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.778792554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.78078787 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.779058994 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.780350628 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791302714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.77951728 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.780064061 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.780023743 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.781720978 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.782614514 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.780793035 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.78050499 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782093346 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.781385982 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.779386387 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781057447 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783396946 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.790651316 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779848426 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779940096 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.786651084 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780364352 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780710874 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.788018439 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780182796 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780666664 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.787097946 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.788707151 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.780112065 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785414137 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.791328932 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.780483808 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.78300338 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.780693723 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.781909488 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790674587 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.809427191 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.782071463 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.781178553 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.787798741 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794620825 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782699758 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.786179148 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782260884 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.781335404 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.780742818 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.784131427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.780834978 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.784124554 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782523051 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784215776 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.782557318 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.78199959 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.782614475 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.784895695 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.786264498 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.783927186 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.785382672 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785379611 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783504453 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786625327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.791406062 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784295596 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784999515 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.785594852 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.783793919 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782612412 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.785091461 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.783888402 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.785101283 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784121267 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.78346285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.782802963 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782476998 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.783731172 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782583479 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784330418 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790244395 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.783170135 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.788131139 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.784951999 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.783250947 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783261327 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.784353695 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.78591947 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782432415 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.783676043 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.787239794 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.79158666 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.783824767 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.784284222 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78814763 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783369424 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783679318 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784369155 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.787550212 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.79393668 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.785287926 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.79153806 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784790426 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783035647 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.785502291 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.785812934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.785910418 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783961617 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.788066033 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.793164507 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797947846 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796040957 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.785665636 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.79034328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788094357 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.789150503 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.79043835 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.785617412 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.785823556 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784423241 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788082056 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785305122 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.787101465 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.785296435 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.786390635 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.786097892 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.784180896 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.785290267 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785954161 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.788749832 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787766813 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.786489369 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786803759 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785858866 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.786347199 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.785650001 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.784992818 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.787023647 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785134562 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.785736261 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.794294717 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.785815881 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788290939 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787304533 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.787372427 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.787176727 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.788012867 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78870678 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.787315555 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793726302 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.787821907 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.788957712 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79464456 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.788451183 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.787092798 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.792176795 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.787105185 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.787803176 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.790257739 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.79553895 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.786658688 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.788189159 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.786974822 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788262504 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787504144 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.793766274 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.789167232 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.789923659 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.787297282 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.789360416 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.787050071 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.789738318 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.79119914 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.790212616 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791166133 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78869789 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.788723139 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790313634 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.787650814 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788551675 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.789179708 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792738785 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.796367221 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.792796652 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.792008409 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.790194392 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.79162885 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792401706 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.790302884 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.789600039 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.790167533 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802601013 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.797824488 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795429647 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791016733 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.788797647 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794157584 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791878469 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.794779629 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790498136 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791090328 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.790029455 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.78904257 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.790010786 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791281412 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.790188031 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791907087 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791020798 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.794502932 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.789390252 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.791245338 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.789345831 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.788418137 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.789595175 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.789881835 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.789592586 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.79192187 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792600583 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.790449346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.791500441 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797054931 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791004051 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.791639844 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790350615 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.792232367 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.792193449 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.792671004 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.791587096 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.79383123 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.799182293 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.79427107 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.803211317 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792377824 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801767288 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.791511769 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.795358735 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.799261417 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.789412444 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.790939739 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.791887501 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.790955292 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797825027 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.790986552 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.79221572 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.794703891 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790776969 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.791010953 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.79092781 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.791527718 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791711471 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.791502996 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79890379 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.793417154 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.797136686 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794386232 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.790859532 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.790508827 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.790875827 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.790895133 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795042143 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.791472364 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79320999 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.792456831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79231374 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.792047991 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.792443895 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.793199612 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.792772916 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.792297155 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800357943 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794257366 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797422558 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.791935097 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.801022243 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792210868 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800955726 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.793185272 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794335656 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.793167934 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.791498685 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.794598583 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.793434044 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.795430026 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.792569797 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.79573994 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.796985297 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.792909482 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.797044922 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794251795 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.793203864 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.795040037 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80268761 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817788728 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.795747775 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798626695 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.792589006 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.795566615 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.798381082 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.793836258 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.792965267 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.79731436 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805097625 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.801227013 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.794623053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.793643198 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794722277 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793749839 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.794118452 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.793003166 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.793482167 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.793070719 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.796157685 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.793276569 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800386553 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.794698097 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.796054758 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796999964 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.795966905 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.805780127 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.794496879 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.796596046 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794670643 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.793536212 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.796134221 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79500953 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.794289087 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796568927 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793501632 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.796989567 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801874882 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.802748657 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.797971929 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.795153638 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.794892109 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796169287 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.796204528 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.7953509 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.79530297 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795290449 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.797680135 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.795643773 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.796961233 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.795047897 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.794132206 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.796439028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796448513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798984484 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.806125826 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796875936 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.795911854 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.795978911 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796759402 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.796772562 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.798125555 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.804605799 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801007604 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.80836812 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.806171205 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.799530847 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.797409716 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800405314 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.8064551 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.7960026 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.797216459 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.796720773 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.799273855 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.798795465 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.802404244 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796164779 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.803854447 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.797892592 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.797469513 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804523569 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79904562 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797478486 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.7990316 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.802780535 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.796660725 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.796775621 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.796401741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.79719805 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804794806 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.799592421 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797691163 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800121992 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.797434936 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.799305179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80176095 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79833275 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.798908708 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.797281886 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.79926039 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798280976 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797904313 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798784071 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.799609902 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.799447982 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.801343138 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.807257527 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.798975934 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800624781 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.799378055 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.799872335 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798158442 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797952018 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.798462667 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798003215 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.799157651 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799090792 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.800536506 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.803093944 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.799060636 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.799929959 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802991485 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798828292 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806566452 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.810858957 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.806734603 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.799991629 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.801230878 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.800089178 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.803929263 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800338377 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.7985686 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802105275 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.801681132 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.80042003 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801099041 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.799335974 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803965017 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816455311 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.800974127 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80278405 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.802551294 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805733377 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.800982568 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.800353758 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.8014773 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.803866519 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80472049 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.808069131 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.801845585 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80784413 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80217126 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.803170096 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.804856717 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.804829506 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.81134445 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.804253111 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800498517 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.801025176 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.806353528 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.82022551 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80150198 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81203799 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834003206 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.803055441 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.804303751 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.801209684 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802476779 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.802317557 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.80516383 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.802182828 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.802471679 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802140945 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.802907272 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.804667763 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809544404 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.806672939 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.802754587 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.801818912 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.802778081 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805368396 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.803283507 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.802892451 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.80402693 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.803561434 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80270758 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.802141726 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.80526548 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815367946 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.815190356 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.802790413 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.803874062 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.801629495 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.806911583 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.80719871 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814550332 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.810168806 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.802941677 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.802866246 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.804696422 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801799943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.802383804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.802695188 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.803910016 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80574586 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.804364938 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.815971375 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813718851 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.807515687 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80354227 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804729081 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.803491646 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805693848 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80423523 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.80284674 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.80697085 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.804491651 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809444011 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.80280318 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803234075 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.80905969 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.812765886 seconds)
  done (took 1069.936360519 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805283092 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803621487 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804255018 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805565682 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803515054 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804713497 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803216578 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804925884 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.80413937 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80403456 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803185178 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804196501 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805916211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.806136947 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805193181 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.803222474 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804146065 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.806234697 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805073838 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804181311 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804390493 seconds)
  done (took 39.636013111 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.805656886 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.804177522 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805008586 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803894951 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806759629 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805645506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805191408 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806249329 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807176915 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805464963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.806531334 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805234638 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.804434566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.805439503 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805649941 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805255263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.805931254 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80508848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.805775811 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806987333 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805337509 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807131631 seconds)
  done (took 41.465769507 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.806722738 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806213366 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.807739904 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.807459009 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.807526684 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.806816627 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.805600609 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.805808213 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.805808172 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.80741621 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.806475606 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.803171907 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.808930293 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.808031399 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.805058978 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.801492849 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.949194353 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.802560611 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.801909069 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.801580429 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.801341102 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.808507974 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.795305264 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.796419827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.797078756 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.795948634 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.795782597 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.799317006 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.794515384 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.795270601 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.798775969 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.793416455 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.798356408 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.794419578 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.792791286 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.7945314 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.797029999 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.794163303 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.792800004 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.792517736 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.804140941 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.8194813 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.792962647 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.800515494 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.793573616 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.792716411 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.797313945 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.80352682 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.792332192 seconds)
  done (took 90.12691353 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.793890461 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.792652915 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.792533338 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.792446866 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.794249972 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.794319378 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.795201838 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793122014 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.792952544 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.793099365 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.796338506 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.794865797 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.792805438 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.79317 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.79394619 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.79415622 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.794501074 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.795167901 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.793970585 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.794345253 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.794992501 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.794354397 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.794661486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.795102112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794120407 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.794297613 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.795633136 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.795526768 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.79428453 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.791993979 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.792550079 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794716283 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.793805774 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.795619228 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.794938771 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.794282252 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.792597584 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.7935141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.797486277 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.795287116 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.793953535 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793541558 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.793988407 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.793375401 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.794402467 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.794412535 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.794900847 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.794448161 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.79543943 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.796669508 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.793423629 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.797555318 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.79671828 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.794310437 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795559306 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.797644763 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.794438153 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.794323352 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.79429838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.795351173 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.797716283 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.793200359 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.795904039 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.794189816 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.795747296 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.79475678 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.796073559 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795319052 seconds)
  done (took 123.756174581 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792939294 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.796106163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794823789 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79834377 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794083849 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.795272298 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795574919 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.794454937 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.795988718 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787662699 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788057231 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.788999488 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.788333099 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.78789795 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.789431826 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788054034 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.788055202 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786729189 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788025363 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787795571 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.786776672 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.787356901 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787448408 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.787132054 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787519945 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788548727 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.786773877 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.788267564 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788427969 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.787220069 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.786315377 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.788573996 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786994823 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.785981137 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.786148249 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.785915844 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788404795 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787047457 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.786862104 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786271879 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.786774735 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786623072 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.790075214 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.786630904 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786499326 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.78687392 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.786834589 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.788284829 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.786131263 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787146583 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.78880358 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785935093 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787254551 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787472482 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786806207 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.786285983 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786768922 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786631563 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786346798 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.787913985 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787753012 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.78683476 seconds)
  done (took 112.61552786 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786152803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787917038 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.786105291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.785168728 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786588615 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.787426146 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786982483 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.787095211 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787244164 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.78610445 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785787166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787490538 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790599403 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786460378 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786131188 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786819575 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785899161 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787084969 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789433003 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786196302 seconds)
  done (took 37.457011445 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.784949537 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.784790136 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.78524383 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788367855 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.784898804 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.784997968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.784179679 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783436017 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784587627 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785692731 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786848617 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78628138 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785340393 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784814032 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.784175792 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782763605 seconds)
  done (took 30.278090261 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.782279559 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.783205848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.781942867 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.784172894 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.785333514 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.783121689 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.780008458 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.781184945 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.784147428 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.782547682 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.782399017 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.781503871 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.778817383 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.780988794 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.786582922 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.781020858 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.781284467 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.78115023 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.780679559 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.782464326 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.779459405 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.777907256 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.779331904 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.776533726 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.779096255 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.780795416 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.776091299 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.77673342 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.776061987 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.776831293 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.778723261 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.781227314 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.779134692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.777176914 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.778262873 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.779700023 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.780242634 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.777863856 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.774795588 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.777338641 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.778254306 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.778778176 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.778869048 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.775614346 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.775540456 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.776488471 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.776460445 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.780283479 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.775122742 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.775996384 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.77648471 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.774734388 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.776059789 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.778141537 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.775676607 seconds)
  done (took 99.576393597 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775507364 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77575133 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.776265513 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.776197333 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.775385716 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.775093629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.777542105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.774820172 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776720818 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.773837168 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776694052 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.776844952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775193969 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.776231308 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775111646 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778113864 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.77516949 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.777144293 seconds)
  done (took 33.673626551 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.77632631 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777302349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.776364096 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.776083707 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.776601782 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775509684 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776487023 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.779048262 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774265962 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775516758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775819429 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.774784426 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778843258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.77376919 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.776115666 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773574699 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.773937544 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774257022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773889146 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774856682 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.77426787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774946429 seconds)
  done (took 40.771277138 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.776109956 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.772404656 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.790102502 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.79892077 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.794742431 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.812006592 seconds)
  done (took 12.448466623 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775918035 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773677573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774104847 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775604556 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775270342 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775291996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774425576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773012434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775104092 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775360449 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776882013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774126288 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771934858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773728527 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773472464 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773756531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774652541 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772620509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773759251 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774145539 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773966964 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778279577 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772446616 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774789137 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774633602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774668009 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772970808 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77611738 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773224427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774147383 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772918973 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771917524 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774223227 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776851293 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77197189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772790529 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774726763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77512191 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775592611 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771582295 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.773341345 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773487038 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772560351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773563887 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774677337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772616993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771514792 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769257617 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772973366 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769456296 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7749507 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771537609 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772123171 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771349515 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769605149 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772170109 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769692173 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769446629 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770630581 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770753493 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769067888 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775338067 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773310756 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772639887 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771719475 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770242739 seconds)
  done (took 118.747237373 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769386774 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769362741 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769778401 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770209824 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768388346 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771300805 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771274659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770057183 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769583145 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772794026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770559209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774140665 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768319354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77234774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770577496 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76882246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769955943 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771770218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768226577 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770619832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769133241 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769098652 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771593626 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769096063 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768651729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77009858 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767868179 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7693067 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769568266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768745895 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770806895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768137674 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768632401 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770006853 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770533346 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768870725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769537177 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770221247 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771833423 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774073854 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771637402 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770723823 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772972943 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770330462 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769813781 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769037643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769706866 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770411746 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769703402 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768748801 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769976619 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767524917 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769174879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768413834 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768467415 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76848945 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771691516 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770124949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770223189 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771066721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769863682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772988738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770967068 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767937093 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772668352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769289214 seconds)
  done (took 118.530156665 seconds)
done (took 2477.94449367 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.844266947 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.773925422 seconds)
  done (took 15.320129252 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.934346753 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.884781671 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.773717144 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.819679381 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.771098562 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.800033224 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.788665991 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.771461237 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.774525189 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.773864772 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.776115991 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.956482148 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.831316948 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.773056323 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.773624081 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.868504913 seconds)
  done (took 50.779891462 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.777790713 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.77801712 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.788825377 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.779831278 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.775705673 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.788065831 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.806383042 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.780027051 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.811473785 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.785122262 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.845319746 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.784876588 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.77682586 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.82425506 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.789746126 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.790333295 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.868661847 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.848940205 seconds)
  done (took 34.103877045 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.848992259 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.780762315 seconds)
  done (took 10.344754283 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.779261795 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.801809331 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.804825073 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.793450611 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.79658427 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.783518252 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.769183343 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.809234827 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.81046894 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.799628531 seconds)
  done (took 69.657564621 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.778738257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.780915037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.778664583 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.7754736 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.775127471 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.777963105 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.77651548 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.779825731 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.433147257 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.808774543 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.781773851 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.781848779 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.777324447 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.779733858 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.774448518 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.798461409 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.885842345 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.773391403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.773894922 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.78189434 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.777395347 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.831271752 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.789153624 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.775416219 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.809079968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.43244853 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.781322158 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.782972875 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.910757351 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.776645358 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.77450615 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.962146698 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.777721314 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.241655575 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.04115488 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.780378633 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.786460146 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.78567947 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.774681131 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.903083687 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.779101591 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.782657789 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.709820397 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.018746099 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.867661654 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.818440126 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.083803362 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.791243617 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.77840078 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.807693399 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.77911134 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.778982616 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.791516118 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.290461659 seconds)
  done (took 127.653576195 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.772328335 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.118298559 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940288346 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.778284498 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05426434 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979184511 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.77365224 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.818821469 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.775607525 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00009646 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.027435365 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876745071 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773227145 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.776603583 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.773757719 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.769829456 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.928353756 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.841800503 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.77450678 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.774106068 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799284856 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013514067 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.896161195 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.776186656 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.800622927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982172502 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.892713542 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.874165067 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.511059227 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.773520068 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.836102744 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.777125651 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.774139039 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.771894736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.932403177 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.865915411 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85486689 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.774750226 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774433304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.775193533 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.432832407 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.972588322 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.866466319 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.902013221 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023055274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.975075381 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.549551817 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.775667232 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.509021327 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943263637 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.001009961 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.000639609 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.892228708 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.776600289 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.109063548 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.775037552 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.775296333 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.021481494 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992985434 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.867363978 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.778431766 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775777337 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773331877 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010700119 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777418664 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.868921701 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776171557 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.775427592 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.872287506 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.870251838 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.002263691 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984041036 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.802752645 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.126142579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.275421304 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020979264 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.838022843 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0223006 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.776346111 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773814017 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853410422 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.623955196 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.027177838 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019309457 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017697814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80762689 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.488661373 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.774879425 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999908926 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995413153 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.037378038 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.018010529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.008159205 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.089992494 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.777718733 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.77710224 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.076153874 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.896909725 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777886405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.119811874 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006642902 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.308529879 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.804380793 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.078465317 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.904374754 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.780859272 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.405052645 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.78468548 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.005102873 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.815347058 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.783586959 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776459344 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.993494071 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.765911144 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777966211 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.416991771 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.835445662 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781045454 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011010921 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780672747 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044314115 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.78210588 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008527364 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.192339375 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.806976654 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.949049035 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.022605847 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.781230251 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.016301431 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024069781 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.890126571 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.995675908 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.481411545 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.779766481 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061780283 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.783925872 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.77827789 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.946236317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.779448808 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.919987509 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.779267543 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069335759 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800344274 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007150635 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781567773 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031548887 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.810078166 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827774338 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.790321996 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.901443371 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780300778 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.607149369 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.935175471 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78387627 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.777943798 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.325673602 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.781602096 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927212049 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.003265616 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.218015333 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84978157 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.440673552 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.781002764 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858181259 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.80028174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.1698074 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.780762183 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.032202189 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.782270359 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.779690779 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.780548633 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.013862882 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.967929317 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.782636069 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.782544718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.682212555 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.781260652 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.781639185 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.961012026 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.105830859 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.780925315 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981472018 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.782966821 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.90607192 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.783682664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.848850891 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.113320455 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.783023202 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.779668359 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.781869348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.781595512 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.781307167 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986465491 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.803511114 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.285904288 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.916320443 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050695512 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.087241577 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.020662765 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.823907485 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.785839082 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034522352 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.783299501 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.842833418 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.781381192 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.800832176 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005233955 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788495456 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039068392 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046688121 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.629742408 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827570245 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.78176932 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782319597 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.780224652 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.923035493 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864803417 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.781997944 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.781716776 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.895288887 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.901597862 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990159797 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.7845105 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.88879648 seconds)
  done (took 882.066101959 seconds)
done (took 1191.627287326 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.783229945 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.786072284 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.783632778 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.784767562 seconds)
  done (took 28.853545912 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.786731376 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.785653514 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.784845322 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.783783921 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.78518412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.784577449 seconds)
  done (took 12.425822004 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.774575338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.783759971 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.784431822 seconds)
  done (took 21.057344464 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.854364239 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.164354213 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.918845401 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.2213496 seconds)
  done (took 9.874551429 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.787555943 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.787179999 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.783601868 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.790009332 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784522298 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.787526383 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.785325658 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.785378091 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.785591035 seconds)
  done (took 17.793253868 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.983224927 seconds)
done (took 95.701727248 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.01512677 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.843172848 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.09934818 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.885951622 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.85385995 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.086234662 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.084539914 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.885268599 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.781885678 seconds)
    (10/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.80675177 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.782126601 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.415337626 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.935148862 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.112040893 seconds)
    (15/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.811809507 seconds)
    (16/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.786172049 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.012010911 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.805053613 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.09674299 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.787963998 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.948389069 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.89739781 seconds)
    (23/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.786495124 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.426020215 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.57252712 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.785925854 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.107944945 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.784904762 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.790656876 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.016878472 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.875180732 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.276070152 seconds)
    (33/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.000501406 seconds)
    (34/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.925761488 seconds)
    (35/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.977876655 seconds)
    (36/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.030974622 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.026408612 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.789804885 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.021510323 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.459589479 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.811726876 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.166296245 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.892636796 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.789807995 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.891584871 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.4950206 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.73155881 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.012347684 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.528387965 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.867127083 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.43209443 seconds)
    (52/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.800974509 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.036293058 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.787985986 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.000205822 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.805472565 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.79231102 seconds)
    (58/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.13064686 seconds)
    (59/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.883384381 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.900647151 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.8040102 seconds)
    (62/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.867628558 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.224504666 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.154104762 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.896407086 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.553464895 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.938835441 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.866391195 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.160206203 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.921083149 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.913487936 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.789476659 seconds)
    (73/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.146347885 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.035868266 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.698474834 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.792092826 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.911752488 seconds)
    (78/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.273275085 seconds)
    (79/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.973227818 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.795480569 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.559891171 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.79245826 seconds)
    (83/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.018147807 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.406579029 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.972530098 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.13959477 seconds)
    (87/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.073868235 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.791631941 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.908196122 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.461856439 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.161002428 seconds)
    (92/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.794165935 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.456068952 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.810783075 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.156066045 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.086827224 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.083363556 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.931682063 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.791962967 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.638366017 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.595275035 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.961483622 seconds)
    (103/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.035431006 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.793618113 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.887995488 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.795262459 seconds)
    (107/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.028544433 seconds)
    (108/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.269635719 seconds)
    (109/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.909757505 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.924174138 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.890265013 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.794625772 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.791040453 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.683015074 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826459733 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.121199923 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.795212702 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.668984421 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.797916736 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.454635795 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.793987838 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.257050307 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.244181546 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.094829394 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.884992981 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.790834595 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.983202828 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.813699374 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.889078095 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.791338232 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.889605586 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.983176877 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.748191774 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.132242043 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.816651287 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.820396144 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.970456348 seconds)
    (138/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.03266523 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.046066583 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.566438218 seconds)
    (141/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.711218243 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.924534664 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.809524617 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.475247846 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.877108573 seconds)
    (146/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.902476251 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.932940517 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.046050587 seconds)
    (149/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.922822695 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.798930864 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.872258325 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.174124304 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.930602254 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.796036461 seconds)
    (155/309) benchmarking ("sort", BigInt, false)...
    done (took 6.793804417 seconds)
    (156/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.046877218 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.822856066 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.792332847 seconds)
    (159/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.967423473 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.121927914 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.580830689 seconds)
    (162/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.854779722 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.809085432 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.290634258 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.804955671 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.924146763 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.791455941 seconds)
    (168/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.015872615 seconds)
    (169/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.834758288 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.792240113 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.451000557 seconds)
    (172/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.796962132 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.728643842 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.80175048 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.903042382 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.814414836 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.533868423 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.792399721 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 5.524595885 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.819750538 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.794216601 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.92330071 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98108096 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.012855419 seconds)
    (185/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.144988415 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.922502109 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.124812421 seconds)
    (188/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.171156602 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.179104533 seconds)
    (190/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.984238053 seconds)
    (191/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.908378396 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102447643 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.994285863 seconds)
    (194/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.187743986 seconds)
    (195/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.799054373 seconds)
    (196/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.219469211 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 5.527446101 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.256979129 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.471414299 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.92195997 seconds)
    (201/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.12382571 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.960146006 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.799968304 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.941116478 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.945488733 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.502072855 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.354607352 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.877220152 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.911653925 seconds)
    (210/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.802875695 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.734946792 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.44060998 seconds)
    (213/309) benchmarking ("sort", Int8, false)...
    done (took 4.703778863 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.182261911 seconds)
    (215/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.969484009 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.097297127 seconds)
    (217/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.799097036 seconds)
    (218/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.459653439 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.118827842 seconds)
    (220/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.823523733 seconds)
    (221/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.990283277 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.90743274 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.690881739 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.094842149 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.970610883 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.113113089 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.802781941 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.006360409 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.447902226 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.107953018 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.803519315 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.90173096 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.9032785 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.983309073 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.719682805 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.892620873 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.819842592 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.933091662 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.630594194 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.801921074 seconds)
    (241/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.939679381 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.094158089 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.805034329 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.107906391 seconds)
    (245/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.812739156 seconds)
    (246/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.902547846 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.807332777 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.963881072 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.938350731 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.800317958 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.218014683 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.436559569 seconds)
    (253/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.13538177 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.90511054 seconds)
    (255/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.187418691 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138344758 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.891791666 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.841270716 seconds)
    (259/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.887780932 seconds)
    (260/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.673700948 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.883980927 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.06495579 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.806426321 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.235279367 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.878166631 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.698271764 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.04121352 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.173966883 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.023072101 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.817154464 seconds)
    (271/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.90299508 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.816326516 seconds)
    (273/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.258111718 seconds)
    (274/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.813992466 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.174866308 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.148843205 seconds)
    (277/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.828262209 seconds)
    (278/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.876008372 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.798695944 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.23487134 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.998590396 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.803640341 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.281021742 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.051593325 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.005585272 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.230197211 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.816656619 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.40352669 seconds)
    (289/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.035409813 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.998784146 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.595262749 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.834883 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.812147013 seconds)
    (294/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.258957057 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.159414909 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.025016025 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.856963664 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.868172532 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.812882181 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.439187596 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871067754 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.812955717 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.895184832 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.990696118 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.905639034 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.038555699 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.993669866 seconds)
    (308/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.075612206 seconds)
    (309/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.900031328 seconds)
  done (took 985.226326537 seconds)
done (took 987.013096448 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.842708953 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833786772 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.817051267 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.839671855 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.928240719 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.863814158 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.831133957 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.822307149 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.869926656 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.87205848 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.815775517 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.863097269 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.820872024 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.817499859 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.81899202 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835827242 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.153932254 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.849925661 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.83653269 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.830202506 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.838696462 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.817178437 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.868148968 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.862580158 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.824128185 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.823390372 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.821738461 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.83882348 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.931217562 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.821914875 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.827836154 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.833489046 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.155028531 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.846205471 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.817741605 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.837253875 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.834188857 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.83295986 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.824452879 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.852045845 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.24509237 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.86302029 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.82065715 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.818992637 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.821506782 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.828059783 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.822653999 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.828990911 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.835228097 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.83412773 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.240691576 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.872894592 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.823065517 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.821213448 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.833817932 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.820683189 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.823272596 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839813596 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.841992665 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836985149 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.141891231 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.85600116 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.826945206 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.838076578 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.827448639 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.275643007 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.860032475 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.827244638 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.247388012 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.869257167 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.277023226 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.871736228 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.824843216 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.836727949 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.853580264 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.153872984 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.849654775 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.820027411 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.829564477 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.820511179 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.835005005 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.836710601 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.825822861 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.822027927 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837454323 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.866887898 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.836825275 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.822805972 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.833144843 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.843048728 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.830603543 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.832256588 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.824491883 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.818948725 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.834229278 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.825480511 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.824485881 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.825394502 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.826195141 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.834534418 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.2443488 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877598165 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.81808214 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.819264157 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.82067556 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.841624724 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.243802221 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.862541279 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.846417928 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.872175608 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.82514161 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.14507287 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.857538863 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838991493 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.834587142 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.826313503 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.820302952 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.143688708 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.269515347 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.878040484 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.823815221 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.817760128 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840253736 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.824756316 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.821464051 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.158587742 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.858267593 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839707518 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.946454757 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.83539156 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.856265892 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.821116789 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.829045618 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874398466 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842598185 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.859165454 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.830708168 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.83664073 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.840456066 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.820041412 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.838711078 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.837872647 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.825792898 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.83259106 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.820391192 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.875282432 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.837285199 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842366724 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.844864978 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.94909756 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.823148058 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.14883811 seconds)
done (took 287.180751664 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.896143552 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.824118465 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.912009118 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.820348785 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.908559342 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.894813302 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.820106544 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.822762819 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.820969214 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.301290941 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.821451166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.829370187 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.821639476 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.819533528 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.890377942 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.820891513 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.820138562 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.250828951 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.82172219 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.901890354 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.821797631 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.823493086 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.820718253 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.311973764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.822604653 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.819398177 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.901709386 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.823737231 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.257215152 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.819309652 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.821796125 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.260887163 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899375002 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.8511779 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.826841612 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.827653479 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.908994047 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.829627141 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.893434725 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.888605021 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.913534025 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.854481768 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.819632503 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.823863873 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.823279729 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.823591123 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.822838278 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.854998052 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.823121635 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.826216032 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.25087528 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.833509625 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.829147496 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.82477616 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.8245037 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.851524572 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.82447773 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.82803997 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.901965339 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.824180783 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.890799511 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.312937123 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.303069173 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.823826422 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.819625023 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.823667465 seconds)
  done (took 181.957829051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.889382414 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.899812972 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.891121061 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.829810773 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.871934891 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.88987247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.829564419 seconds)
  done (took 14.852937686 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.833359933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.822506501 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.871294437 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.873280052 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.824440159 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.97831914 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826128417 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.835921111 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.830822146 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.851271425 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.824508185 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828332894 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.827222828 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.823895821 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.879020291 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.835710583 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.93919672 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.8260672 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.824915512 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.972822287 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829837665 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.832671795 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.848553461 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.836054963 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.825033403 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.835378111 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.40348048 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.82561392 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.824836254 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.824167244 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82589196 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.867354116 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.825762223 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.823291863 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826546579 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93809413 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.826715076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825236862 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.830351462 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.825604902 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.825771466 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.826819641 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.825692827 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.825292507 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.824872359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.850370837 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.828746104 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.825730352 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.824765863 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.825400774 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.850309376 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.826127223 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.828488721 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.829757919 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.868317635 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835301419 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.827743936 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.829519733 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.826782745 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826950475 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.975693291 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883206349 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.832049324 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.876322473 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.825728082 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.828832071 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.828123217 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.829164425 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918400466 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.828984231 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877424664 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.827342056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.987764263 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.85745689 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.827156228 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.832564947 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.831469339 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.829737123 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.82921503 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.83598609 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.828686038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.831960692 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.835534518 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834119564 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.827203997 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.941753808 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.966233055 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.83291228 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.830632099 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.836659637 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.829024885 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.871781782 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.831964082 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.830402062 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.884959163 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.943412239 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.858727689 seconds)
  done (took 201.596301386 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.837065641 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.83761 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.829843495 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.845668749 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.828155338 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.834278847 seconds)
  done (took 12.770099629 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.833834938 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.831100195 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.830206381 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.830683032 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.82813798 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.830908526 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.831569249 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83158794 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.83307045 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.833021963 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.830089791 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.829910849 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.83036289 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.83191737 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.830655704 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.826100467 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.829228349 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829492286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.827919689 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83027938 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.086431766 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.831283224 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828392279 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.835139399 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.83245726 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.833268128 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.845595349 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.830751092 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.82876764 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.838004178 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.835655151 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.831256891 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.834608451 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.838349096 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.835928358 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.832457439 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836133838 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.83112153 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830610849 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.829268072 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.831230782 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835438259 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.829277456 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.830639039 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.832803524 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.839682165 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.839130088 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.843405517 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.827758935 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.831160217 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.831661367 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.831399007 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.83590385 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.83032386 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.835657344 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838454935 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.837069342 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.835453465 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.831315276 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.83408102 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.834750694 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.831690808 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.834030724 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.837131134 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838186329 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.833219596 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.835291915 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.835016392 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.8357743 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.831996324 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.832925524 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.832240689 seconds)
  done (took 134.990178051 seconds)
done (took 547.938194083 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.080971478 seconds)
  done (took 8.84236742 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.013298654 seconds)
  done (took 8.833503895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.961260276 seconds)
  done (took 10.723957714 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.846167386 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.873815027 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.845775687 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.835782267 seconds)
  done (took 29.187947846 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.020977525 seconds)
  done (took 8.781817025 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.855214736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.831199144 seconds)
  done (took 15.513706798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.995702969 seconds)
  done (took 8.76284167 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.896040859 seconds)
  done (took 8.671762042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.854776834 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.853648845 seconds)
  done (took 15.49841633 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.836112031 seconds)
  done (took 8.599160703 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.04809157 seconds)
  done (took 9.913663145 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.848804891 seconds)
  done (took 8.682456023 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.832131083 seconds)
  done (took 8.597862049 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.202924877 seconds)
  done (took 8.969679946 seconds)
done (took 161.340704954 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.835996014 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.829827704 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.831292534 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.831142769 seconds)
  done (took 29.090686004 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.867358065 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.866710534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.86677154 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.878214675 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867870538 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.871616722 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.857197605 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.857417557 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.877252253 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.868009049 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.869900901 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.87064865 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.867533904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.860174303 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.86838963 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.869076446 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.879691644 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.869010249 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.859339429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.870870843 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.832741076 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88318733 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.870577333 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.833065982 seconds)
  done (took 46.545382933 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.025389165 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.903650515 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.990157548 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.885258049 seconds)
  done (took 9.566595794 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.886097292 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.885214081 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.899885439 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.936033263 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.95898027 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.896909736 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.861077254 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.858044439 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.841275821 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.886570175 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.960793039 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.883548258 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.977787409 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.834828702 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.022104643 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.832892058 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.835639736 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.8880417 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.937957873 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.952171929 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.835806664 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.886720602 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.891745816 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.887534269 seconds)
  done (took 47.299261532 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.836531247 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.843970375 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.842449841 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.842081777 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.83844111 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.837193783 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.843326295 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.838569228 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.857889536 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.839529874 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.834260811 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.836801002 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.842329818 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.834652536 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.842117763 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.849247329 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.850997426 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.836090899 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.841734382 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.847856391 seconds)
  done (took 38.600400153 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.83553303 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.68928642 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.179382529 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.086875763 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.83357349 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.837860522 seconds)
  done (took 31.226318522 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.849053498 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.841961204 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.833607989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.900279451 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.975313192 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.84474853 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.836102218 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.848206834 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.882022197 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.902528367 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.854955662 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.865619742 seconds)
  done (took 24.199399171 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.837775082 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.837042628 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.835714722 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.84734975 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.853405562 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.845192122 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.844282857 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.832838535 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.848308897 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.853967396 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.845540887 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.848579378 seconds)
  done (took 43.900350576 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915498988 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713494556 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276159042 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292770637 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361538766 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039735368 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.840845172 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92288059 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.838770128 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10982985 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.247399281 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045015492 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080679988 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.574887542 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.840642542 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.325523071 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134893759 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047779208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863346795 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481248944 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948312683 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34882418 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.5443959 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956324925 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042344867 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.959678561 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.094148174 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.789748105 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888498138 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841856917 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842845159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838723892 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110365795 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957263301 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91028616 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842401887 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258626229 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.542351456 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.976967424 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.544016767 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.427478281 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.959762442 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842572749 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840336079 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.76581682 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349393871 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929243651 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.841391525 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.540191827 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.840046162 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844433012 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915258609 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.840404477 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.648267934 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521648791 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1077381 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.841657248 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840579784 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398392059 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884499775 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46641054 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.770489437 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.935985842 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555304051 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303206031 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.998663926 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.846187308 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83964795 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766968702 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.551735895 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959678608 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973639487 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.854210491 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.480615142 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131840955 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.311907652 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894199722 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103669581 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.627738436 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.771950686 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05504443 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782506509 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767962971 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.670151257 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765443409 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04443514 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871080721 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.438382831 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871099074 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920380152 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845489736 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854086383 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838956685 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055577615 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.735108757 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842119993 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.186017362 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09866782 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857521219 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927180175 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767220191 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.843546917 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090648994 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.044539797 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.082607657 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.333767677 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9319587 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789951305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.856076701 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.758656442 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.853556289 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.116251549 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902404878 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888556606 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965646013 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.789655767 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078462587 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820168413 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.940125751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.260130426 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085928601 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.177473939 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082170633 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909189079 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843533052 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847448423 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.558376588 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460585676 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.05823898 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.860186007 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331766787 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849118656 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.846488989 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774944921 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.502024354 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.262020599 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.939913175 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055332458 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.80136684 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116160761 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767368662 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981983615 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.844090772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.05641206 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.497870607 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.93294428 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09062287 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081080883 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.081416519 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84955009 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853661341 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932594088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86057082 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.26801545 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086456703 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.841944282 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.842647524 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.567693022 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.899863578 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845706434 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.847503456 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.367228333 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122151834 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.874092188 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848963299 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.72118712 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.853098887 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903742205 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845035937 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847531539 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.363857319 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.352047516 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.849721407 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.508426315 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057806669 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846151172 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.512074033 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026435447 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.856090976 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119529584 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91572404 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.773395257 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.545123255 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.548589158 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845448149 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775522581 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.844599604 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853790825 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853069198 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.038251145 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129638771 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898289982 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.558611953 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.9599398 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849183965 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.850544578 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847984501 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.337108206 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90421913 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350981071 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.978622272 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976175697 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.859140289 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775044279 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850696113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849044129 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848869031 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.797405393 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893077361 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.564791894 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056830038 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095291137 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.253395308 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854587022 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.572745629 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.969656321 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.866358151 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.210195935 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37794902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.950814526 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91207403 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.853762469 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.562109722 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.585456517 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410058996 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145014246 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17369122 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207036786 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.223590044 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.167012888 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933780457 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074384269 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.36646046 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90391074 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936240465 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787385842 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866749011 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.504235721 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207951631 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856603625 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064846842 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148184578 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.281647437 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987002183 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051743437 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876536675 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.6548557 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878188383 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.384733723 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867825854 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.357052634 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058117923 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930059739 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.214062458 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.941978503 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.849113224 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183940115 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886560639 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.551677747 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203385348 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.25413803 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.392109223 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087920469 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856123364 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.29250055 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204440909 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.025531309 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.966739606 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778185022 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8553716 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857569989 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.867392933 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.825257278 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.700399567 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.098882286 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858737168 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077334439 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.964579532 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219266019 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.760664199 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.853537539 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852206382 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088661713 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509536265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999938157 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.149261818 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.42263067 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858046409 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780112231 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778450655 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.551537057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856739632 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.819401937 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050557518 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.952187168 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.533739367 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216437821 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158775634 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093664321 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.86338928 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127847424 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129188727 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.340131959 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874551148 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.950336393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221294716 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.562584332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.066038155 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079266261 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383555347 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067755131 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297253674 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.820401409 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.851505239 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05810557 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.066945324 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.29408347 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032412902 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.560174576 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.867698281 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204995567 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915458837 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.287943529 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044863696 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.938500295 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860788255 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932220021 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855608053 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.860935227 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859996244 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868440065 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.286909858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.978049967 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.86696782 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931986155 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922738691 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.436251149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.863985145 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13373593 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217122491 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197143633 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922935007 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854817295 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866615343 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782077209 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985304049 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295704068 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126485356 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.972423445 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.990780832 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881175022 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.229564767 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.106484211 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158982568 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124744829 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.736911383 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474445766 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971353198 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.070781211 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863836996 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.057157917 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063407367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149201449 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41921911 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.975322576 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.040431336 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129033741 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.21219277 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856164425 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437205091 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.868306919 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23787864 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.886188422 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.292999072 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117745326 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857214626 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975036051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.858918169 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.062057742 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.308371344 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.58303463 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207981622 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.70672757 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860139517 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140623982 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193840789 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166269891 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933177784 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862341145 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.557594756 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988825757 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74620506 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.090591527 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857253068 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061687033 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.564664179 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859625068 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141029159 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164311626 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.856383455 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.784350046 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893203255 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.858506912 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071098932 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062239488 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10129927 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861344035 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862837059 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.662412759 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140085686 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923275224 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782452216 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.860838268 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900765312 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083761705 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876909619 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.371636391 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.559431868 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130694914 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.759378372 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874951995 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.24462765 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239139011 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196701366 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.388090836 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066836261 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.403686505 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.698197958 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228379421 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.860480306 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.252361392 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23405194 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.858832955 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349605525 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964692672 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.135799906 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190258828 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.873322137 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.638558803 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.894300191 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071411017 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213607751 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792836245 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859196612 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.907074429 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860413412 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.840075272 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869930548 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.819265324 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300605395 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.698747722 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417239707 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.863151643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.867590971 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.432120764 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388266057 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963957498 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876258415 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861663619 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.562657448 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.148652933 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.103749204 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.357328764 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.954102536 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.860542516 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861338548 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781240625 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044957812 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.04769727 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133172787 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.188996787 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.96727839 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860511196 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.069686743 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064001286 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.294887173 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99909647 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975732728 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972527618 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.801624265 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.567989797 seconds)
  done (took 1653.312023758 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889513771 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.873462843 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.870591888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.865200556 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893843376 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.884413043 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.923016947 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.869256571 seconds)
  done (took 56.858835929 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.863148067 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.022312131 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.868230959 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.863016159 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.864869039 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.861900505 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.062587169 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.874124671 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.869857811 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.868905943 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.863917596 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.865424499 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.183325399 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.888222437 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.866565636 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.86740271 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.869816123 seconds)
  done (took 74.223317972 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.866360997 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.107549117 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.904244047 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.872493997 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.829177107 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.881803069 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.864254471 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.883792495 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.875990227 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.115686324 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.164966898 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.875536652 seconds)
  done (took 90.042454213 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.881555175 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.872775553 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.871359779 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.8711175 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.870835449 seconds)
  done (took 11.174780245 seconds)
done (took 2157.82106162 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.101289295 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.060874702 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.119046226 seconds)
  done (took 5.978867647 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.014565969 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.066490104 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.178860271 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.184826795 seconds)
  done (took 10.256009206 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.157678986 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.239049622 seconds)
  done (took 6.202066092 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.189114314 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.904295654 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.286292371 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.875659556 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.874947601 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.878809331 seconds)
  done (took 22.440789215 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.874220485 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.873903575 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.87235416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.874433399 seconds)
  done (took 9.300939462 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.872764933 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.606058427 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.874161141 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.883341228 seconds)
  done (took 21.041164054 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.021256715 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.992134523 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.016151272 seconds)
  done (took 7.834574214 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.085932106 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.668290727 seconds)
  done (took 6.559691702 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.03536061 seconds)
  done (took 3.840443891 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.900969699 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.142918078 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.359138622 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.38960573 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.469780029 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.686147599 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.158210318 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.091677056 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.300862051 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.308668641 seconds)
  done (took 24.614887475 seconds)
done (took 133.352402359 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.207253429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.900146199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.077639283 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.219107871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.104238107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.077111306 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.092429987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.20891764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.895086086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.886333641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.224142458 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.100582865 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.042136339 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.891350402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.045109732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893461023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09770711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.2202363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.909463697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.143288706 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.1058743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.870720043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.064529782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.882391534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.101764303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.029693266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.412781455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.897943468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.052075934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.423631083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.033504715 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.285798071 seconds)
  done (took 168.205531864 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.87918597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.877318124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.87875852 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.880176806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.403798216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.879437333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.877746685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877907204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.273796748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.266328328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878939466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.397456645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.879305166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.876774714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.878717258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.877468694 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.427189139 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.879167805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.878831695 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.879006395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.881344159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.230300806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.878989903 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.239125016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.418614402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.879972411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.878298864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.880672107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.876843684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.877826697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.878377903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879817466 seconds)
  done (took 209.558674846 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.878217542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.881411534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.88181673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.879651131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.880724178 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.879623338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88267497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.878091974 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.498869501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.491387796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.880474258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.87879255 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.881205415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.879003173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880985384 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.878245856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.880130215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.878628145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.881019368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.880616889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.88127354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.578266625 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.879004983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.580276443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.880406195 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880946345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.879713439 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.880036141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.880651266 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881863036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.882682447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.881411053 seconds)
  done (took 220.61082183 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.120267163 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.879831964 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.883932434 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.788526868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.882977537 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.881992244 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.874953571 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.127801193 seconds)
  done (took 19.254042397 seconds)
done (took 619.443094044 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.265949008 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.104292258 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.05750295 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.905534756 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.147659026 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.948956177 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.899806726 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.96430107 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.706429624 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.976005982 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.529134233 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.920146636 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.623099194 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.92522448 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.02646494 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.958885712 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.489381437 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.590188804 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.077878789 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.983161556 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.07996215 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.794626089 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.98324395 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.745608118 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.653610887 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.852846512 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.900949742 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.48794997 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.912938567 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.060263218 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.559825188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.14593903 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.914366382 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.900402722 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.957739958 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.934241567 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.077080202 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.912087343 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.026710558 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.593689283 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963500674 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.608094781 seconds)
  done (took 102.977542045 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.893419939 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.889197265 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.888863794 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.889747111 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.89634041 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.88824154 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.889877288 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.888126753 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.888304043 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.891206637 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.8893909 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.897492163 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.890276546 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.897687115 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890142489 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.889510616 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.891266994 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.897555431 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.888289857 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.889298586 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.888164432 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.89026095 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.883227418 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.889720001 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.889113449 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.888423141 seconds)
  done (took 50.981321274 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.884551514 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.05972322 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.12466742 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.90384462 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.885114997 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.886922072 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.900943338 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.888647428 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.88779845 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.886228976 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.988515597 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.890858334 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.90189779 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.123461211 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.900102761 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.886184452 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.882187604 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.886334256 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.064503427 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899530102 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.902552928 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.890132989 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.904611431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.900085414 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.887271812 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88571561 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.888776072 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.38593935 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.893696149 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.989034018 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.929521929 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.910366506 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.332223328 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.132783093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.938777907 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.895557906 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.886939993 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.994060884 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.890945839 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.886010781 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.901567454 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.890553007 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.123735244 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.40217818 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.899598786 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.887215671 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.395294509 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.003720468 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.927274067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.898425778 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.129668257 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.903238014 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.886573284 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.888298404 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.922345114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.893616042 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.886424597 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.243802155 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.898783441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.906574477 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.890414748 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.887835639 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072438027 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.894653866 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.058789812 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.894784934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.89405241 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.889653563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.128207426 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903960357 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.416883999 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.901761057 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.886504004 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.991815849 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.066667508 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.419374802 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.900418679 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077191915 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.345242321 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.910891483 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.89548587 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.373622541 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.913764283 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.892672563 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.888242197 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.888630887 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.88538239 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.930865776 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.904181096 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.334581732 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.414120765 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.262158678 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.913371491 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.902026729 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.889786283 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.244697583 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.898150517 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.890526564 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.120541877 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.42236842 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.902235755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.894776738 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.396310212 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.904928812 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.908979851 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.896618339 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.134081402 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.90370972 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.931028921 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.890196507 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.897640403 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.893732401 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.907929782 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.897562988 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.890264285 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.386927344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.009103152 seconds)
  done (took 234.706782485 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.890617694 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.893080577 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.88671307 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.890427317 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.888993472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.890121678 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.887420675 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.888256458 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.890619864 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.887515008 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.886173259 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.888211874 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.887952674 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.894653995 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.504281362 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.890162309 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.493141932 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.889637744 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.889191516 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.893610491 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.572744998 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.896031494 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.891984789 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.890536289 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.890291147 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.885673308 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.897816611 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.897225203 seconds)
  done (took 168.654484087 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.895650311 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078772321 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.908848206 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.91844123 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.899557431 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.890787448 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.028926116 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.913088656 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.896557528 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.892153986 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.891490817 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.949406003 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.903664912 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.989849278 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.924574956 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.997870083 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.997364421 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.898428723 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.892152177 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.893151372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.919027913 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.90076536 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.952055045 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.014717064 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.909550376 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.003543875 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.907299677 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.891662421 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.891617425 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003689718 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.909817429 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.951388437 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.919747207 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.91176649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.009395184 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.008626181 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.998118125 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.997500829 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.899831295 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.894304849 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.892803427 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.893839802 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.004749173 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.910664667 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.895741244 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.009971686 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.909662632 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.891973879 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.892351994 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.893180225 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.907749093 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.912571593 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.955039688 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.022587785 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.927206934 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.917400925 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.99173741 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.019057936 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.895113223 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.991220211 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.901686595 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.008216861 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.913156905 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.896870352 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.896478181 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.895995372 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.923031513 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.000727709 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.99901192 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.902467438 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.992199655 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.929922184 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.90233947 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.895854942 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.895609747 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.007802413 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.009890801 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.929072832 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.931040204 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.925230918 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.904743251 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.893766594 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.896168267 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.912126752 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.901285132 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.007440187 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.011329168 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.900962744 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.896752196 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.894283924 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.893476744 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.919044901 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01757367 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.928671697 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.001663512 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.960046222 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.966855857 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.906870031 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.90746345 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.901685501 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.956936382 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.907782253 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.908232921 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.186827172 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.956292953 seconds)
  done (took 205.411687557 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.288110267 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.945677652 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.952237371 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.212284061 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.243305799 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.835402323 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.941021706 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.943333598 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.967588384 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.12676071 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.020048806 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.962011166 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.929856403 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.918081154 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.942990581 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.963644906 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.95586217 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.278022721 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.151399849 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.093724215 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931011405 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.214958906 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.255772584 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.520270652 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.990705358 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.337342283 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.506392799 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.075876419 seconds)
  done (took 62.337251601 seconds)
done (took 826.88089149 seconds)
SAVING RESULT...
DONE!
