cset: moving following pidspec: 5508
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.422082637 seconds)
loading group "string"... done (took 0.592210755 seconds)
loading group "linalg"... done (took 7.309067498 seconds)
loading group "parallel"... done (took 0.162276432 seconds)
loading group "find"... done (took 1.153172532 seconds)
loading group "tuple"... done (took 1.893884365 seconds)
loading group "dates"... done (took 1.278236645 seconds)
loading group "micro"... done (took 0.245300605 seconds)
loading group "io"... done (took 0.960454415 seconds)
loading group "scalar"... done (took 39.104332944 seconds)
loading group "sparse"... done (took 12.497640287 seconds)
loading group "broadcast"... done (took 1.009319118 seconds)
loading group "union"... done (took 13.015517797 seconds)
loading group "simd"... done (took 4.91178545 seconds)
loading group "random"... done (took 9.812077145 seconds)
loading group "problem"... done (took 1.866221707 seconds)
loading group "array"... done (took 22.234783389 seconds)
loading group "misc"... done (took 1.799920297 seconds)
loading group "sort"... done (took 3.676074832 seconds)
loading group "collection"... done (took 18.823270096 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529935756 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129262567 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122537073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12388357 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152587781 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115312689 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126664288 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087029107 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.801087399 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149157444 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119346729 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436507139 seconds)
done (took 5.201386052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174219152 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084387086 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08544847 seconds)
  done (took 1.295620087 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067826921 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123445322 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068229915 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070967444 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071142678 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069305101 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069128012 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069095194 seconds)
  done (took 1.668849467 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073848548 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069319406 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068778469 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071939401 seconds)
  done (took 1.411163343 seconds)
done (took 5.753714112 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801497702 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220571972 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189080916 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415067842 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137030873 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164149277 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640530179 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342025371 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197224826 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084839146 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113875281 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.335219002 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112605658 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633626925 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077479191 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092037667 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136992039 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431834731 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068469314 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083383757 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090638423 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130274747 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089823297 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075872482 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147977734 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068376453 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137821561 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081434806 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06745865 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214044122 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175297552 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663986425 seconds)
  done (took 10.385168325 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096880625 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098883835 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069918526 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123016711 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101389895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072973114 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074677826 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070641668 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091083429 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131493146 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091395111 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105603366 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069197974 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071563289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088720907 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208550696 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084112478 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085163389 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073966159 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078883747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109174239 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081792326 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08142383 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080156962 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132400492 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184160869 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1000543 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101034133 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070230596 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082948571 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118267835 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129201904 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069328948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068826479 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127781519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098160199 seconds)
  done (took 4.685312201 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.006776886 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149149997 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09490141 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140502781 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067924378 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114182121 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069189322 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084914391 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21711921 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.472016661 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.603318621 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111945435 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105222337 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06917253 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071596605 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068454493 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.505057368 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097053558 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108518544 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083143215 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071278127 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070640386 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354161108 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072078211 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067190502 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072276419 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060423477 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115022035 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129324607 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071199262 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.954750147 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128823764 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068278267 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101526036 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167479032 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.22455162 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150555248 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072706954 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067963317 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159754383 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075362228 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069717386 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088799507 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106026986 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115847508 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069314903 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070719861 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169202297 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066667654 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082469364 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.675025693 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154812217 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080777907 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067959971 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.262147991 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09278373 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072496334 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068407423 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067984248 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185901107 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134904873 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070051309 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069230527 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071846536 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07328885 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365939895 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069076224 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.921057716 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072614155 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081239048 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072983388 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073200069 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076943033 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076607072 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090172139 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06988471 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080045736 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069504318 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069105377 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070238025 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067422548 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.0882212 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392569754 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070200688 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071573455 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068346092 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093192937 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099366746 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067456858 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066806973 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101075415 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069587653 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067401814 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108142315 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067855419 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084507958 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172605928 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115877735 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070958799 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067362758 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093260629 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069335565 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101706007 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076766852 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101931594 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085094814 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07183769 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.429473467 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066507872 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067025088 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070092038 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068077909 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071911238 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070220672 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083478083 seconds)
  done (took 21.579028508 seconds)
done (took 38.781962413 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262608534 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083736385 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079483481 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079760008 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082223891 seconds)
  done (took 1.804804822 seconds)
done (took 3.001545018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123411326 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101946231 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066558308 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101648904 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067758834 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106723919 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104963657 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083589153 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104529274 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067374722 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101437088 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065193497 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065146628 seconds)
  done (took 2.378780277 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085231902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086537807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073336739 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087064796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067301251 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087080901 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084838799 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092566755 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084637725 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076448755 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067120529 seconds)
  done (took 2.084924163 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083888194 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084996823 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073484263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086295883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066662567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085512829 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085356767 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089947677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085319516 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077240806 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066544083 seconds)
  done (took 2.072412664 seconds)
done (took 7.723274561 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078613969 seconds)
  done (took 1.257377626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.603038468 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.096457797 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083364804 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11272664 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196638937 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122752266 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277675185 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.09211822 seconds)
  done (took 8.9470837 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090366572 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08314212 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069389962 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070077382 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072929219 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070356023 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071146177 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068990183 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073131536 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069720079 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071817691 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070288762 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072137147 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072758401 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073370055 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071981323 seconds)
  done (took 2.427529107 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092443792 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092046233 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075785554 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076334046 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074785595 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075015146 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077250286 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075938354 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073610234 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075122866 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07736538 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077000279 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074880453 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066344018 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075799325 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076384988 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071572215 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075021131 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07566267 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07601515 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075936582 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065289814 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073206448 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075017305 seconds)
  done (took 3.113724277 seconds)
done (took 16.931869218 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115529637 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072516784 seconds)
  done (took 1.377701881 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08174033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082922254 seconds)
  done (took 1.360829171 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083714252 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066306854 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091057308 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079834153 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066869697 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066299512 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090592833 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067466669 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066270571 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066857737 seconds)
  done (took 1.942555068 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069043714 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078622201 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072115487 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083321657 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077416717 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066956188 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075802581 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071293212 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081530525 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065761221 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074073151 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086345847 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07504799 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086611235 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074282956 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069907877 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072009184 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068706752 seconds)
  done (took 2.548696244 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067104758 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067168315 seconds)
  done (took 1.338395853 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067249535 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063851719 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067122357 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067184103 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065625129 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065179281 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066207581 seconds)
  done (took 1.662875243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387127629 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116177511 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322029749 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074052126 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0856362 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262268937 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068714157 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074267331 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074488131 seconds)
  done (took 2.714542835 seconds)
done (took 14.147909671 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081418668 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087725479 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097383373 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37647036 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093075187 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067452254 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114385618 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193024446 seconds)
done (took 2.323792059 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212831436 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635289813 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409173536 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210036168 seconds)
  done (took 2.460951874 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343768332 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091388975 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061566271 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070600468 seconds)
  done (took 1.781912733 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067696125 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069715219 seconds)
  done (took 1.34865739 seconds)
done (took 7.014607913 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068431534 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067060516 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088402923 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064591467 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064926274 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066695631 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064260495 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064199634 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067051973 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067193194 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069743946 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067062392 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066973451 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064269686 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064912297 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066849517 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065015338 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064341035 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066867257 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064699166 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06462655 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068218604 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067013618 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066237636 seconds)
  done (took 2.855703984 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086009806 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067184958 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072832226 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07228365 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070576713 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07249329 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072339928 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066916133 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07243745 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06931512 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070540445 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070360337 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069160739 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070684834 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069079795 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07032852 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072386709 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067188618 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069283992 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070353045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071881227 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067091767 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070583042 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072062927 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070932827 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072834767 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070607263 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067852803 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072266651 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070332753 seconds)
  done (took 3.348488013 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07042727 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064298677 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065213168 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071116837 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064898951 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066203228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064404744 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06509739 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065354546 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064881875 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065983537 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06435521 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064390845 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065434799 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065167958 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068604359 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079976598 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064642985 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064535116 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064893741 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068819243 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064182725 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06433441 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063908601 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06445379 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063900885 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064884098 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065845155 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067342462 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066171377 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06968088 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070556556 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066193247 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074022283 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070341574 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.181056516 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070777095 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066392447 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066972624 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06599728 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066376561 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066236321 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066388505 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073986753 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066539365 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066990385 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066479153 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06794112 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066971073 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070164548 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065413373 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06441485 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067010928 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066119987 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068838364 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064465465 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065568616 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063796123 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065688684 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064631686 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064519391 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064101705 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06729657 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065497906 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080046658 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07251952 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064593096 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067508367 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066879057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068936459 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068197362 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080003147 seconds)
  done (took 6.171842593 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090959803 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087702994 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066392843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066054225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062483083 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065004312 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071408636 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064821141 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066589687 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082568943 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065561589 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066693888 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066301392 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068516017 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065029604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066719848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073560398 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063265769 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065305274 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068298595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065558875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070671424 seconds)
  done (took 2.763042828 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154119062 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071730544 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107168361 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076577014 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070862904 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076382687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070691529 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070604769 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071211804 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068811395 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068375357 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070525805 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070944388 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068131245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06837352 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068880714 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070549605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068776242 seconds)
  done (took 2.620226509 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078081896 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066838146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087158383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066936726 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067426534 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069401808 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071154577 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075769577 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069718909 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067939803 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076111889 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070018026 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070389439 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068640437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072035876 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06816863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07077455 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068723934 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077847362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073622442 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073826988 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077368933 seconds)
  done (took 2.816873614 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081507018 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068952155 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082922 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069490825 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063653657 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065647727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07235528 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068133711 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072650638 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069591892 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068114844 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066449158 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07020368 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068040895 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071491223 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068298847 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069466828 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06640189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069396066 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06317412 seconds)
  done (took 2.62653799 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088419562 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069309713 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068779976 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076210754 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069547536 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069233748 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07652814 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068867862 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068934 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089337585 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069553642 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068948719 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076477943 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075801192 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07096751 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078291113 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078612881 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07701041 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07066897 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071385928 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092272372 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071711861 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078748767 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071023241 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070791726 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071035697 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070977698 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075914855 seconds)
  done (took 3.314934878 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067220739 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067574058 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064793076 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064498278 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064536674 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064375842 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064678204 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064397786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067198783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064449154 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066810353 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067271017 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067061042 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067405373 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066997443 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067338987 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067174772 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065580491 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064621379 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06485754 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067505631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067481685 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066903316 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064414995 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06442581 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066899801 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064776774 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064323289 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068224298 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06579255 seconds)
  done (took 3.212876669 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076145479 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073655227 seconds)
  done (took 1.382781893 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064110614 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080977538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064206001 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071075397 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071053844 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067489735 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074380361 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070656137 seconds)
  done (took 1.793865551 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083304095 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078312494 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068949687 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08093161 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079988593 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08644024 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13907139 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.0705615 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076319662 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068012115 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083449292 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068866679 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076203099 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070187378 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075718733 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076147871 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067354175 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075650183 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072017906 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067795438 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070699456 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079036862 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072273879 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065028824 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071001238 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093156645 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081960589 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069019292 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072430199 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07761822 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075766188 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063655816 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070128574 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070223198 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067527966 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080175551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085280338 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072851682 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079004448 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071563072 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080306257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064511252 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074491878 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076661546 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080385813 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070764088 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070406853 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064478889 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067256152 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072016064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065438061 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072799844 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064734488 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077448414 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074269722 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080575393 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069016893 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071565974 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072491373 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073309043 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077248281 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072027323 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072507364 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069953431 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080660994 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074780612 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079469768 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064723144 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063848902 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067320668 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080031758 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094231534 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076540681 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070635738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071092133 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067587777 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073521286 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071415032 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075535497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076617236 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069903316 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075793365 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077363493 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070495601 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07227944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077898967 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068256462 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072855545 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067529542 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087247023 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068842364 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067586909 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067848799 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080603055 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073231646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069625523 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067583176 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076746925 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062929703 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069286563 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070298475 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069808215 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079971517 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07355038 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073628736 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077898735 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076470945 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069638312 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071884656 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065011775 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069485189 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067987043 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076609702 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062686632 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071295021 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.195877531 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06946397 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077217358 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067361631 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068163962 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077028711 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074042543 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066567481 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065385378 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07269382 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070852506 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073724354 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078531056 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068857559 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065040052 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065075655 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074380955 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069488554 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0734761 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074546056 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073625017 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064455574 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067393765 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07596672 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079138261 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070235761 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07098565 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076317236 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072193679 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06984654 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077213167 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072086966 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06958288 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076165234 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070938375 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064843755 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073123181 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073168996 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068810438 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072895435 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073149031 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071591508 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070940908 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06831274 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077405828 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070495672 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069243583 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070260415 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068664242 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081369773 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072225011 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064820497 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066369796 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078870828 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068006846 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069143741 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068782582 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072076239 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071187955 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06776142 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069965093 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071645392 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080089716 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074801566 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070419559 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075088 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081791216 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06973974 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073010209 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070163519 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071179221 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070887365 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078888555 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075890933 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074783359 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072265446 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065500975 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074742706 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077329508 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069027416 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067835414 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069546538 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074760219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075504988 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074308916 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071448797 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068179344 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071497081 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073494546 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073056521 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069690547 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069549884 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076749029 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06832727 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076781434 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071036329 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081058929 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073310561 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064964241 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072484272 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068366678 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075988272 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064745113 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067516588 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068599612 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070602311 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068301266 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070948421 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060763592 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074516307 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073860729 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067382921 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065705044 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067531163 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074985395 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070399358 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073155778 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07294946 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075082466 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.209388174 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069646867 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074412928 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08283086 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071558671 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064805145 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07659969 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069500007 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069442 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069583828 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0688894 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073961095 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079788465 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077322865 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064556522 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07307031 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068150337 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069563371 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065257473 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075278486 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07298257 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072146788 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077696463 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071399408 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0703693 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074548683 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070019968 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07184478 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071678945 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073853944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070594433 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071817283 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069225809 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07348635 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069613397 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06823614 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07197905 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070156954 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070593356 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07605631 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069830853 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070098161 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072423441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071236175 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070097982 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070171156 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068822248 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073009495 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071593367 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071236931 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072889657 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065100373 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07779503 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069846254 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078189814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070901287 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06677784 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07654568 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07272172 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075812267 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071214275 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071092691 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071495083 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070019228 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073072701 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077528863 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068801886 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080972549 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077831916 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070330581 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073120564 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070558151 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072573854 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068739675 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07150011 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070634657 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070337179 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069808144 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075387192 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072753905 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070865722 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071395616 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070427724 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070083168 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071619412 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064391626 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069703118 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06952687 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070650657 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080431516 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070680174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070172817 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.070042456 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071445628 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069282226 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066403204 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077867937 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078859585 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070833681 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076987364 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069731214 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071339748 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080875846 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063456886 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067719011 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068119014 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067439534 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076733833 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070244631 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079120421 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069422921 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068558799 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066693631 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069624873 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066762015 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062532651 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064628666 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07028178 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06582568 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065540471 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06645949 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069045284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.20015243 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080525975 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070114315 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071571242 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07123232 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067334368 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071117122 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07032733 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073152196 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071494171 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067868832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068166543 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070636944 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071647234 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072153136 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073091573 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0729249 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077033026 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071014266 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073115075 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07334317 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064310959 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071631248 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067611034 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067833316 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067681405 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072870555 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073442496 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071606724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08048356 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070011446 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070262755 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069393376 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066666419 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06999162 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06961383 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070090849 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069390947 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072187182 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078087398 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068544024 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073736064 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069971687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07081428 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076739675 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06823292 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071389166 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074912152 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068545545 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070588202 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07652439 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071604096 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071605692 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068310988 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069949903 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073473003 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067341367 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07476178 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068436691 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069544147 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069327279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065790183 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067890274 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067786711 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068993128 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076977167 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071136255 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06988712 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069768289 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068944051 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070794502 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07297499 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07788659 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072640739 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07354526 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065106324 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066813981 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071170435 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067239407 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072157958 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072567874 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075046255 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070134097 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068349029 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06715552 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077455851 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074047964 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071634593 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065710687 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071587439 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070733286 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071814389 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070913553 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070672717 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071312282 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072935711 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06963216 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067462697 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074668466 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071278264 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069064916 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069225672 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069061568 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067893231 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062477563 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068096754 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06950758 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072573095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070001794 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068626264 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078718546 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067073831 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06939225 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069897844 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066022983 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071347041 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061751793 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068489566 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067978558 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067025632 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061421949 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066268874 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.196879504 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072211203 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068316173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063557301 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079744632 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0780413 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071372716 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067884118 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06672208 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063689353 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063321014 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06758123 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070023296 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069989006 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078568263 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067660364 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067230688 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063241313 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068224659 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071918559 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071624127 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065019497 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0632698 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067470444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071455336 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075087375 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068793627 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070088466 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074085558 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072201953 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068235757 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072839423 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066599256 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073698086 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083907622 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070648639 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07096847 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076823086 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078156528 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070649039 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065087155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070594305 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074195647 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070985439 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071574825 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070917274 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084059886 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071261085 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067098045 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066861548 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070826626 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067517055 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075966644 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069300212 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069405579 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073103789 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071053431 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078516616 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072662808 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077951923 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073344444 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073264297 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070308703 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071343194 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068227923 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068683471 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071088295 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069769868 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074946001 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07812341 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069677255 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080168627 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077079291 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070008905 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064972825 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067644574 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06742649 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062795679 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068842859 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066474545 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06710372 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066238523 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066957676 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069131894 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073123851 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069105927 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068382372 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067768071 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062075653 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070686245 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070451821 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068956261 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065373758 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069266207 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068833385 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.0721167 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071661833 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066342305 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069934674 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069973773 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068877137 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062721267 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073764301 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066868245 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069265451 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066674911 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06772219 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067845532 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070896527 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071720997 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068998273 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070060165 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070400198 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068785587 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06411216 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064231358 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072094054 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064271719 seconds)
  done (took 44.390485921 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102155056 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064402428 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063175329 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063146148 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074647689 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063773507 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063237458 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063793843 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063963018 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065859053 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063305192 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062842859 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071252494 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078500807 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074816027 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067245183 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062808659 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064357571 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063598575 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064018501 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071481842 seconds)
  done (took 2.774846656 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074646243 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078477505 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075863785 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083882182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072551497 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071914988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07643413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071481225 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079502264 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073308742 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079582177 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071610925 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074209082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073337678 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073558322 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071521615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079891103 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071751598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071291241 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076335258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071706581 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076105387 seconds)
  done (took 2.960786618 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068445562 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066816126 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069266657 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062240716 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067075356 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062365967 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070818405 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065177364 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070135592 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066606806 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066392973 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066317304 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069555555 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062195942 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06690595 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064674104 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108455352 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070204775 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067117171 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067961257 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062407434 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068971348 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062657248 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06315854 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06636132 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070417106 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067986775 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065433058 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067270558 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066541082 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067075517 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064813594 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068755485 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067675371 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06629248 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066809095 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066778452 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067324405 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06290563 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065105066 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068003816 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063508247 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067472556 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068906634 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065089839 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065238985 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06916351 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067248062 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062259876 seconds)
  done (took 4.614987475 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080047178 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110410834 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068505034 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089807273 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083730755 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074027813 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071273052 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090646956 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064279389 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066072755 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082388389 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080421269 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067121793 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071404857 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073619055 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066601767 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067451854 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065508902 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070638023 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066155399 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070304807 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073728323 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08228107 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079017286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07065003 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066097306 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066090575 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071120963 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079010022 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070995212 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072001465 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072893325 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081767155 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068681232 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066292756 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068788604 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082598604 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067180958 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068835238 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064659354 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06874726 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070768873 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073427533 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082429949 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066641843 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071849742 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066644587 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06387886 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079235211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069000568 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074561105 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080524558 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07016327 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06681558 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07135841 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081420976 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066785362 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06525166 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06942356 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079482102 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066043097 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071523784 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080537535 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06909444 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074604166 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079921542 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071725002 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070374576 seconds)
  done (took 6.433656374 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077675668 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096529289 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084335149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084036089 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077192997 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076616354 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077177668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076839147 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076384035 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081165804 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076984971 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116737339 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072277729 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079352328 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076712552 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07678136 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076852555 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077394747 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077135211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076924513 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076927264 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084042665 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077226539 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083931262 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080563761 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071735652 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076712783 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077150175 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084401234 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076801955 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0889327 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076235891 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077105151 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08410443 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081104408 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076482354 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066936833 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076131068 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076548146 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076940179 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07158566 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084092408 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076477605 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07199611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076499207 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076427786 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084411395 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081207735 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079820762 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081171196 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076791632 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084658514 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077877831 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077609206 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085887127 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088951254 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084531883 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085316695 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076792877 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084057422 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084897254 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087315734 seconds)
  done (took 6.303902357 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083733864 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075214573 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082784113 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062539697 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065039457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073117301 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065184169 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065152524 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075106815 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074995648 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077811929 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072623531 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075444066 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077750622 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07283294 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075944197 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073158882 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073525185 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075127725 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073040385 seconds)
  done (took 2.810652854 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075557269 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083891296 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068779598 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072181082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070086104 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072519002 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069612797 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070245683 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068075983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070623558 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077045991 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077676187 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067936453 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072430201 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07662517 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072143291 seconds)
  done (took 2.498898968 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084703854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073914233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081121872 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067500243 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067546454 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063501005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067259755 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06238374 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063805632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079795209 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067007932 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078015856 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067802806 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067050715 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065812801 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074313699 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065388252 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066144233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069165484 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08212382 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073380838 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067594221 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071749472 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06893389 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071875071 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073868144 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068298755 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069130852 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066334479 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069961921 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072752371 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072627866 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06613453 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066707074 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065625238 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064243386 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067096825 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067328985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072742673 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06756131 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065436671 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068655715 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067121814 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068485281 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062947108 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067232239 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063364932 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06921142 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064548208 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069820636 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067050995 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069316703 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067832326 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073866956 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069797888 seconds)
  done (took 5.147100248 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080690455 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07078425 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063345222 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064915016 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069934111 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068259667 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070448233 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067965223 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068548354 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065472373 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068738969 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069926863 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06818758 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070453907 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06830262 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070881547 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062586681 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068503224 seconds)
  done (took 2.583492787 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072707896 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067156367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073819022 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06673965 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066561374 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06938927 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063129924 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065666277 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06588325 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067103533 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067344089 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0695467 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065482281 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069080561 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066820011 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066402554 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069199918 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065854771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066695734 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062948087 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069499344 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065768059 seconds)
  done (took 2.821714975 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094675499 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083886377 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142256014 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079537035 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085682914 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072696204 seconds)
  done (took 1.900340581 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092125204 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101596038 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067495725 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070245872 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07676234 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071166332 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070955498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071259673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079517059 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07657769 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070931602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07945192 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079695402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078916464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077737793 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077238779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070780189 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071012947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067312364 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084501045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071266374 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08000958 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071331477 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071761493 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073813535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081207351 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081901975 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079353144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073437196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081981515 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079707111 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073570699 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0801605 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077038959 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070633109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079799053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071712206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085313844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076964105 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079673949 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070869993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077318552 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079903019 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075890258 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079891525 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071909852 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075960232 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071491051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072373984 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087256282 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077506682 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079073897 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079646448 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080156717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080145317 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086851572 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077556456 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078513715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077303685 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077239013 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078942166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07703029 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078542007 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077399246 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077101272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078750411 seconds)
  done (took 6.445130755 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105449899 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068161019 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071679313 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077272346 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078885414 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071320907 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071850541 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071750882 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071503426 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068359349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109813726 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071255716 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079056104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079575931 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071390863 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071600014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071550625 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078825432 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067944719 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086694009 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071373943 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078738007 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078895663 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078485103 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077004805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077470242 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07164502 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071057817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071362566 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071242878 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076187833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07170244 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078871756 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068182671 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078620701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071334482 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071376746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075884192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071399384 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077271512 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079331247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084892817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071518632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071735465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076817325 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071643873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071444115 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068208301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071210246 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068187276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076846903 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077082098 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077168644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078930991 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071677397 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071869259 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071167247 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071342893 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072121069 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077431989 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078841567 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071439302 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086702595 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071469536 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071355509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079559501 seconds)
  done (took 6.330302359 seconds)
done (took 132.131294067 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188217797 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165650821 seconds)
  done (took 1.691088393 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069759929 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099846444 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07791008 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129854684 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067357788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101833091 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100391806 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079420808 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067250317 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067891977 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067525276 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070145865 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132472796 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067716432 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067899859 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07011723 seconds)
  done (took 2.687653684 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100522089 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163465841 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103935631 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066882327 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101189036 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074524448 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066147512 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077352368 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072262788 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066528811 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074175911 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07146522 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066751755 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071863177 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072595002 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074245885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06615527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074255443 seconds)
  done (took 2.815932349 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10124051 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092657949 seconds)
  done (took 1.545908386 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157720329 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134428605 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204032769 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35362722 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165508711 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149464761 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145667474 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145252858 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118396186 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140198423 seconds)
  done (took 3.062370186 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101741138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155458944 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270676359 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119268234 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074777305 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095359799 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120521768 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080017745 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082551428 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081939856 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081911724 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078154252 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101172057 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074616441 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075372127 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077552695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104829878 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074010003 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075720089 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07699109 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102030482 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06723686 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074534583 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074387403 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078772101 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079127195 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067019564 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067349884 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077102704 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076145514 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078241749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09380535 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078663514 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107898289 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07248788 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10851752 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078384715 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074863535 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076198902 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075560297 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079525219 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079654287 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07493692 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077984067 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066944615 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078446042 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067586508 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067462623 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078925088 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068634051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078674644 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077799925 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107264153 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068554453 seconds)
  done (took 6.056264914 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104340594 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106798832 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072440952 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114020285 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105154711 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073722302 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104838651 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09754758 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105981652 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071451428 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069963018 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071772509 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083454711 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084193848 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116677965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108337646 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075131085 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072540057 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107557657 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106234207 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06988963 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098483936 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092548476 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104914099 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068550389 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071732439 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069487128 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071645209 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077863846 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079821888 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071212728 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08162402 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086926233 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079894703 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068394692 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069227972 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069578998 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081483686 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08098955 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080876192 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07864027 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06914247 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069448346 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071346856 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071516435 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069198452 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079904814 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081401942 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080090013 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071374954 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07156523 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070164045 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071536159 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08143146 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079380216 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082445655 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082110363 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070107118 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070463137 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074258624 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081981274 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080919763 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080770147 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07099702 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080536396 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069989538 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081556217 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086137221 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069846347 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071791752 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070255055 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07096744 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071218991 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079211689 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079442846 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070916905 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07146484 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070148238 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081442388 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079641088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069862579 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078657678 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068877784 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069954102 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070945442 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071423428 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079237304 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081105745 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070774208 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069625165 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070316758 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070040643 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068035273 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077449169 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079856742 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078850758 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078342662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069800027 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079592947 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078742177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070345599 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079007987 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068822042 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071100921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199824115 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081137218 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079507851 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081590395 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071408074 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070725227 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080009148 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082770849 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070651454 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080274923 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081619249 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080812367 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069900829 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082613423 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070895249 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080578755 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070873267 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081264945 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070067414 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081079553 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070509688 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069779134 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072786945 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083568262 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077625654 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073055 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074509968 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073260046 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08387136 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088069132 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072719629 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080487344 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082913011 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073614187 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081544026 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070525247 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080462661 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071005069 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071522357 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068888279 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08300357 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070834523 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069665554 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070837933 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08259895 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07010344 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082175935 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080082098 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069435053 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08378967 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081228188 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078891323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081664268 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071533798 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070088999 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069824921 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070667848 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08124761 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083949471 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074104608 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070871939 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08141072 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084213831 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070823979 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079092445 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079542205 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079404242 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070042316 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070827639 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082038794 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082584008 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079763369 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079014611 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081225543 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069994968 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078969283 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079779878 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070059784 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087260551 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06999281 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084080184 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080347676 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077986002 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080266225 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08159274 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081568348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081419029 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084216089 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070266035 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069041026 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080842673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069473925 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070686396 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078613239 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070181052 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069714108 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083481158 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069662032 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07953396 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06849391 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081364916 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068075317 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070426965 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082981677 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069122903 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201563588 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081645391 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072543551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08020824 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081870168 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080062172 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070233907 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072361033 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081499591 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081271526 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069904917 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070107368 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071709709 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080158316 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079156334 seconds)
  done (took 19.026361607 seconds)
done (took 38.244563986 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210201322 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162277958 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174434845 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120079296 seconds)
  done (took 2.123670107 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118390173 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102799875 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093342162 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06609746 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100540247 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066348458 seconds)
  done (took 1.94109584 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311684529 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21216926 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189614933 seconds)
  done (took 2.09920479 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203072014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193453037 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41966918 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263182681 seconds)
  done (took 2.578037633 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146460002 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092417692 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068538217 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08495338 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136031273 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162579394 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101859625 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127056707 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080057964 seconds)
  done (took 2.445264747 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150806588 seconds)
done (took 12.726940014 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.213772375 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169108684 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.197268033 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.161507124 seconds)
    (5/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111897169 seconds)
    (6/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.184105987 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120171143 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 0.155366207 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13715502 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104063143 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.125129861 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084025511 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.159147736 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205935206 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086416832 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.166527645 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077522883 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0801796 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074906529 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105503702 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075275604 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.146800099 seconds)
    (23/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161941462 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078995878 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081807855 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.217315222 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09463425 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096842225 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.219959722 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.155950589 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074547105 seconds)
    (32/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15776424 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.114317826 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093115246 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.178065462 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075795034 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.18508165 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073934362 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092713799 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082293116 seconds)
    (41/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11741152 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084547309 seconds)
    (43/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094583252 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148987229 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073824445 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175174962 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228895182 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069300017 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093008289 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201272815 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091735907 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091206309 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073318452 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06681416 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120561318 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155569765 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075798287 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.195714387 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074233215 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103278166 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.180477547 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052555699 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.112665539 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077675331 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.164522321 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077424673 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.207627726 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06831497 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072250474 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066261683 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067449023 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140103665 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066531181 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077107658 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.20619333 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10083001 seconds)
    (77/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051700304 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.183521757 seconds)
    (79/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092461931 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194995171 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067593986 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053548829 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.216552776 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.158611002 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102549028 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066655186 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179436389 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16382925 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066736422 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.068187753 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073365479 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077386312 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068256934 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.0915228 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08193084 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075747973 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091051827 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074196057 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055432152 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.188875517 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067818256 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077070539 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065208365 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096523655 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.409150383 seconds)
    (106/309) benchmarking ("sort", Int8, false)...
    done (took 0.142513642 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111601317 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053432237 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066544257 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175699443 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053994992 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053435604 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.063621996 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076011788 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076981165 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076335608 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115476554 seconds)
    (118/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078788214 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147102809 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067625726 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089694411 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053478836 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.162923779 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071840905 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054095428 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133565621 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056716989 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156924005 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180923397 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.138254873 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074702409 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05205122 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094543817 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074273256 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157150302 seconds)
    (136/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07344244 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074773078 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097194773 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073007526 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05614587 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074000314 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066487233 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111417598 seconds)
    (144/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052132651 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141995085 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126126927 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.0516968 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073721725 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053880112 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186897974 seconds)
    (151/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077988051 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071427701 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066481351 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182826101 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074122912 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093185975 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07550148 seconds)
    (158/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064884823 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074707996 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198200099 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093390496 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0705108 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072856883 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.156183967 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090343323 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053627399 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075109479 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07808662 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071003777 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068698209 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071324092 seconds)
    (172/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069789438 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069315205 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17940737 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112774652 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055657678 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075940973 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137366255 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06500038 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160112226 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075739551 seconds)
    (182/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075970206 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067063925 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052079449 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093384165 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07179763 seconds)
    (187/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052929355 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051832592 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05319307 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066319121 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065629381 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072909462 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.257912332 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078074367 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063461835 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052948292 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076379192 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092737571 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054013378 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078991595 seconds)
    (201/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063213919 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116040255 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073852218 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.10117739 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067367719 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066040229 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126238516 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078405261 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075624969 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102261024 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189102378 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.052709073 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067445083 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164660024 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087559168 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112442981 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075357293 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06830141 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.054920563 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079427646 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077030409 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054843491 seconds)
    (223/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055271517 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054320717 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095523593 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055172013 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074821559 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065697163 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102019904 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068983301 seconds)
    (231/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067616954 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069445428 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055639867 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067587708 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163989138 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056000318 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054823037 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069227411 seconds)
    (239/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.112182331 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144981904 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070507082 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 0.136813385 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082291474 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090302352 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066732486 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090861615 seconds)
    (247/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062107907 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.1444236 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067998672 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068305124 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052198892 seconds)
    (252/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080472782 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067799696 seconds)
    (254/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07073239 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066406015 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08299565 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089623123 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067036176 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066638117 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073479032 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070944971 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054034242 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071737298 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072041033 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069989391 seconds)
    (266/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065535572 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077567141 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143120199 seconds)
    (269/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077696583 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054310245 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068371943 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054222399 seconds)
    (273/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070519048 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054419643 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074208387 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065349771 seconds)
    (277/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054789834 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124093065 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080584606 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05433703 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054588553 seconds)
    (282/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093051897 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070475927 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156767734 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053411696 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074601075 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065391287 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05205957 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052169806 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092450191 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065600129 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065885876 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052523117 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114315003 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066969932 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096148504 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076405962 seconds)
    (298/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064339638 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053585642 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090162289 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052019652 seconds)
    (302/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053449598 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08810841 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072947737 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073591108 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052876987 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129622732 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067841113 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072070542 seconds)
  done (took 31.626398718 seconds)
done (took 33.02845171 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088579714 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095706344 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077849738 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100552835 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087359613 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082999506 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077969034 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084046389 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085715957 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086074979 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081294656 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05622996 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076628421 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077133253 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076879063 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093644384 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08302661 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077805486 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077530163 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068936113 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077978356 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070262192 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071667766 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057923206 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082763036 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076183467 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076855178 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078477808 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069935644 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069811188 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073547563 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078272126 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069610863 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082806078 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076427439 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077465822 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07952156 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080796974 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071358322 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069901504 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078955535 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069738022 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077086218 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077926295 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07613309 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07587874 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078161096 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081582682 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093668895 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068941709 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076364077 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077589884 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078249901 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074276494 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070941646 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074317848 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072312787 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092939775 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075055127 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069431647 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076113631 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076532118 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073266057 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074551603 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075054148 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078083208 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078472865 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075361645 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07901205 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075718055 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069492672 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077944562 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073494758 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069406046 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080575633 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082042833 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066289329 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072896582 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074922295 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072988533 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066309655 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068911244 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068680051 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073649799 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069088629 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055563255 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071574001 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073761812 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066272993 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074898083 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073291292 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074181563 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068873766 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078063565 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065740895 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073364989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067626206 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069213282 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071156098 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074256431 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069276128 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07213463 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078904729 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071155609 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076778589 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083960839 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069732631 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076352184 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06780611 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068517218 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083617944 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078709723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068794025 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072519538 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067959278 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076112348 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068103217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068521178 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068452572 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06890308 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074077205 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066421017 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06825894 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073542539 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079460767 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065380023 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069217562 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067649667 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065890101 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072088613 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066284385 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.203911704 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071213676 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065991158 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0699188 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068037886 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075929723 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069194749 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074758106 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069315179 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075476704 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072686701 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074176114 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07308248 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065958418 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060344837 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069093361 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069659593 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070890526 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068670348 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071409453 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069668154 seconds)
done (took 12.939988763 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068114575 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142109625 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.0987114 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097250191 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087142307 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068507796 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07700069 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101909584 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069803032 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102551362 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08905309 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087726695 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116273045 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06793612 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068832977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073745978 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071303179 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085966698 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10532661 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092052616 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121783429 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069961295 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09782267 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094587834 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093661679 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107214787 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071010253 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07148796 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073534956 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098440874 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092905756 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07190958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070337754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103516447 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097682888 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085649826 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068408112 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08486344 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067894691 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067225961 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069080405 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100885012 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082407418 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082706115 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071704656 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077847108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068593499 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08540374 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0919232 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081639111 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087496774 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103435186 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070504137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085715926 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06639409 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088414002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07911262 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070836 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067722578 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.075211196 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067664289 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071289569 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082182981 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082247257 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071504306 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086471587 seconds)
  done (took 7.017179135 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085772812 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092784793 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085118646 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08519415 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067104336 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068065062 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068034719 seconds)
  done (took 2.053122732 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068820969 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090646062 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090681018 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09160003 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084095666 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089653901 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077194915 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068320889 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089690026 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069527381 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089765478 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104115252 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071791664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077749362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096420058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071125929 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09599312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070659287 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074202551 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095525378 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073561371 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10040027 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073106793 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068643806 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083933121 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070479157 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119420819 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075256454 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070782138 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071592516 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067211054 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111623357 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084556003 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079569915 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071438764 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085677772 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085973419 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068882224 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088007384 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080178708 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085252123 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069625067 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068870885 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066424819 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072560367 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078662806 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069142979 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068855365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070622604 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088773584 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069429573 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082527442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071637082 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073677292 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069860764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074911446 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0783775 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069126178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088387711 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069628521 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085251518 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084820456 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083994842 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088180895 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072868817 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085299598 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08502681 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073116228 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07271932 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074073366 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08806915 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068468479 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071989814 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080609494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070770438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092388532 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091454164 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07078003 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083119967 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06873644 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068351147 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068326338 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09160231 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073949527 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06791225 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072892051 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072196854 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066342934 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06770489 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072265177 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066213191 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06978467 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071274474 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071294862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071241844 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085673484 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070759802 seconds)
  done (took 9.097048908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070221543 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069149837 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070955439 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069372267 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069509163 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069769427 seconds)
  done (took 1.937882111 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094730293 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07037445 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081804008 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072921166 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107306977 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088407699 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090711948 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081726513 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087420189 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083028815 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091450609 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.093354447 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.097814393 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076745458 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091946469 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076768539 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092803606 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079450273 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083371058 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076497885 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088916039 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07371292 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075820398 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086125183 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080230095 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076352946 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082856444 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083520817 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083146166 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083260614 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076969138 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080245407 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074629882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08200031 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091590579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074443264 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074470857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078155491 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073151124 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077625767 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088987498 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073554875 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075580506 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078016459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07968603 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07221181 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078354493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080896318 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08883723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077857816 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078244981 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073593676 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077003712 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07788049 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07167097 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079487629 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078030639 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088139745 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073490552 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072321213 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070054902 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077604782 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07986923 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080554329 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.0827649 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079641856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075121028 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077934928 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076971564 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074979522 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081507958 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073009609 seconds)
  done (took 7.307447935 seconds)
done (took 28.900414411 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536681485 seconds)
  done (took 2.024720095 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.617620276 seconds)
  done (took 2.129059932 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.846712052 seconds)
  done (took 8.353717434 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40247692 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.528669755 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730314672 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134480702 seconds)
  done (took 3.343834935 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702843899 seconds)
  done (took 2.220872738 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216341156 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203744745 seconds)
  done (took 1.947969118 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376428975 seconds)
  done (took 1.891421911 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.146325636 seconds)
  done (took 2.659464187 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2592904 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176521871 seconds)
  done (took 1.953787946 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.481277422 seconds)
  done (took 1.998901382 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.878399478 seconds)
  done (took 6.399525813 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214322469 seconds)
  done (took 1.77615365 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235268222 seconds)
  done (took 1.755139176 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733446763 seconds)
  done (took 3.25439815 seconds)
done (took 43.22435104 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082826321 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083269992 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082791671 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080736541 seconds)
  done (took 1.837543185 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079110826 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075212357 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078347152 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074673374 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078060724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074337844 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076495418 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07718016 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074507734 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074661118 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074871718 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074756643 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077214922 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076091809 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072872474 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076944462 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078656998 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07453145 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077347861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074850877 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07269525 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076639404 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077265927 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073531522 seconds)
  done (took 3.342646144 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079130826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07479023 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077492642 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073663776 seconds)
  done (took 1.832667578 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079538437 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094920265 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093844025 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080278219 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094594358 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088535851 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070664303 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070540837 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072481005 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079715015 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069691458 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098269052 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09105591 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079807068 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082378973 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067435731 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070661797 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089791362 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080075091 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080648282 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072769876 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079993239 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070325978 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090554256 seconds)
  done (took 3.473681454 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087285568 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107418601 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082674032 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091119386 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094082097 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06711751 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090324257 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09316027 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129873906 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067812509 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072451594 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067846956 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074905607 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067204364 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083464334 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110361632 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11371651 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071086478 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099454928 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068081907 seconds)
  done (took 3.272456103 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074809215 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071532337 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068072153 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070510085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078778792 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074618632 seconds)
  done (took 1.973622625 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069505618 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070038336 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069457031 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069254683 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074031057 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068866323 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068194491 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069290571 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069875232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0691856 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068840702 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067617218 seconds)
  done (took 2.364991714 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204909951 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070651988 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071847741 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068118372 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072309802 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068372672 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082955243 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069902268 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094395944 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068809351 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069249596 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070918842 seconds)
  done (took 2.54388543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209491446 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078124825 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242742277 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154186904 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113279835 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118241535 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11531942 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115898266 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145371204 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103351883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1705761 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1701126 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110110842 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140691619 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091477455 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103542483 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157771731 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167206421 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108450427 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170247808 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129196109 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151123186 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109753763 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109159469 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124629659 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074463402 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082277323 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173239972 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136396245 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147204928 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113836569 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094795043 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178581366 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175287169 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143148296 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149986302 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086295089 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107654225 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135595201 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204720934 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093452664 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162403744 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250054221 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084383314 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136937199 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121623181 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121553826 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107557714 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092423818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148749636 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186606998 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139678293 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08989973 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126921541 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116427185 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116685464 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115411143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184403128 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164092836 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131015158 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073346927 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110629938 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156504161 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134503287 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110574128 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127927433 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094508367 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136875272 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157258771 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123801491 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148409249 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119681402 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091599301 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121343614 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143150976 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130578048 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167030552 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130102426 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076675182 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126892771 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104235804 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083288966 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148375895 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077450746 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178065169 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10123296 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110482457 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127035462 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110511883 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110671344 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160977751 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149583241 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107514531 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.214374874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108283573 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123756735 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149266425 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089744333 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111103328 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120953234 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.0800764 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140029621 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07762482 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125672345 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079225335 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126773305 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134631075 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079117684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125145623 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105948909 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102889211 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134587651 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162789607 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089773533 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084557822 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170902185 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124600044 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10532874 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146523579 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159212876 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101997244 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102094583 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151453341 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184596535 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09251657 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165607366 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108780141 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085701458 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089659462 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126085477 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114228457 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126566193 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083698023 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120149128 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171841345 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076926473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097773126 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136238467 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080386062 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082439154 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107109653 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111012389 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.101096226 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103548586 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.108714843 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141717187 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127751557 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106705323 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123740094 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098441643 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167352463 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087343999 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101419916 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103545832 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070284125 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132835652 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154382284 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079044289 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160396515 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120608784 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115148668 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116934878 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083454368 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138772169 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079388546 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070546176 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136660849 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105551445 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106184378 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144389805 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112223693 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120526536 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113787651 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125387194 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124065433 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125705721 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101745483 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086372637 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107939355 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121144574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072696609 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.087469074 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078371856 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100311229 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091927356 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081116373 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13385512 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118206943 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106175258 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107023692 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093247636 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140465942 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07430896 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122019102 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113765336 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092540463 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14526393 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146006166 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126162629 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096046537 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129716332 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069522529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073048684 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085682018 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.374565025 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087974658 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088030926 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122186436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15245102 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13346541 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14264003 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128647458 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124626391 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161272188 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07375268 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122667283 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151331877 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12519257 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107175238 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093455987 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102650975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146943589 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110635451 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187034107 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119279114 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126413351 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156202004 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10421826 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082100766 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105256786 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139773206 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106839641 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147359918 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101810689 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091365217 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111692564 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077220957 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101586427 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130038693 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121906338 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136951531 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118506541 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13559953 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079925372 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118478787 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125083947 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125151337 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066719133 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122097536 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163611076 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096360199 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119467525 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158297251 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084525444 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.141075617 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1830022 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298095417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088366214 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112143657 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121834399 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130543647 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121954423 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143156578 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109808815 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138881295 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111877952 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088114209 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090719143 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099807124 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107294289 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097426737 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108360498 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116678676 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097692297 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134685398 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106346224 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112788496 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119572159 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101573481 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093957106 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098725543 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180337212 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121111592 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173975475 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101949448 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147734821 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166470889 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077323796 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081322998 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080415323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142914834 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086606926 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132869994 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109695677 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120149152 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126398954 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1453566 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097853387 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070485955 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110548574 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135363293 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127469155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100720257 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105833993 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165364931 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102533619 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081014487 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115341238 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11838912 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104700552 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173803155 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062738207 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10769473 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077594972 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081091528 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127750769 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152287675 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081443763 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104654299 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119171961 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112766318 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127591689 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099138259 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108314794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128335767 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146822718 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126344988 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089203214 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110756264 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125416699 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153413205 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103938067 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095815058 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168734883 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150553589 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157158504 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086702263 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112387149 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112440399 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107366012 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136179612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083163779 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160761835 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082090615 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134158004 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102330422 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088041549 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127177286 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107448916 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087687418 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145417433 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116125425 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083124213 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077259806 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116444217 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117860113 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105165311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076467994 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135882911 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073907626 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130408718 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157006951 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080909899 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104455036 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095211348 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079316972 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371413434 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106822305 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092238677 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103907941 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178510985 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09057918 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154982047 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137448355 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11721201 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138448799 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106103501 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643784535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081499419 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156929409 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12041802 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178265588 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103974238 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120410875 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112272092 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125805066 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147474456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107063677 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184436259 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135454019 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11944723 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082088225 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105241302 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107009074 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090140012 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110882448 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116598906 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117998837 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095741235 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118882309 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127734856 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084356809 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099294459 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159371768 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119581238 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147057382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144133613 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088166323 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120152645 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141718497 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082385856 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122069486 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154432791 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108986732 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102080825 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082832841 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102323718 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315256889 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076074334 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162572109 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123761425 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11167829 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114608573 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114827372 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134499006 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109058547 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124337628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094569006 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110671567 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115611819 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083479502 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079032703 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108000629 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113484626 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100178929 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099621706 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10175469 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155104465 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074635897 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101561529 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11783187 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146814106 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177382527 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090469728 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085586305 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121041791 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116624962 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116298511 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124084327 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081726299 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084115103 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08216866 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080313889 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111816864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116008615 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118375912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112766345 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166506837 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085333799 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234582158 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097912347 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107340596 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072147843 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080579107 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09832194 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100531156 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109820187 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112820769 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162567265 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097927968 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092448604 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092902011 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075914273 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084924161 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130518751 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112657161 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27148589 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101616978 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065416734 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111125031 seconds)
  done (took 59.831208874 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110629251 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084748166 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097453528 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146516122 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125283554 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204657173 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15602052 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190746225 seconds)
  done (took 2.812774379 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07095339 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09719891 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106065285 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087055968 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069375537 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072732366 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235518854 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087289877 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068660415 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102825942 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082072261 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07222536 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438450551 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070503803 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072261712 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065153261 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069494376 seconds)
  done (took 3.556149366 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392128742 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615788491 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355513804 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074405834 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.509161774 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086851697 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.164601124 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130333971 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075190366 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.527388903 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406484027 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129551364 seconds)
  done (took 18.167895728 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077120006 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070896556 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08545605 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087089178 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074569308 seconds)
  done (took 2.093767823 seconds)
done (took 108.677973888 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083097192 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.608554872 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05457608 seconds)
  done (took 2.389441143 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085430892 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088150601 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087371626 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087336642 seconds)
  done (took 2.053981428 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075892952 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078622909 seconds)
  done (took 1.85471651 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236531317 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166656218 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098035164 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085158626 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081844882 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081120171 seconds)
  done (took 1.95875716 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073582282 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077097947 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074585298 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078224982 seconds)
  done (took 2.009530873 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078726577 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055662251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058833627 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060263879 seconds)
  done (took 1.960104815 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089889961 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081232567 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08069398 seconds)
  done (took 1.958727577 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10411886 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088291373 seconds)
  done (took 1.8984389 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08379 seconds)
  done (took 1.790798739 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096892347 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102522724 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134382628 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113449132 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144695174 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111569124 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087268373 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087739592 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078114771 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08833226 seconds)
  done (took 2.753158302 seconds)
done (took 22.909237364 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081217357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46470241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362778962 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092430455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670837762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358631657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.039504596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095462897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118243344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070934357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0865512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650938945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025784536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.422520021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.013557961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415652441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651923638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069971993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069158123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069535698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020698975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069230315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069993496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07066007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651730167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374499771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070562798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420251655 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069756047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072169558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357479803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070351589 seconds)
  done (took 16.843252293 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071456929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122340154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075086973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086624898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072559061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071927118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073862452 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070999316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123617569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0700171 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087206494 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069678737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073686154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087740186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089725579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070298931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071316372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070751271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070192938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070452917 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089303294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069582439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070390306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071233489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06993367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082728856 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071036204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070902427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070474904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072180034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072979915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070633953 seconds)
  done (took 4.201424363 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116309085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126314683 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076686601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106373759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113377114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072074837 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146262049 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09562364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12919273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070407198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087182188 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070044062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104788831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070761049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090184626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070183087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071133985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070372184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070313133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071247179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090129152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069846738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069935071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071255761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070696379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084139847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070833631 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070449537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070757504 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072204344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074449186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070698482 seconds)
  done (took 4.435290459 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074846613 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077044447 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085361385 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086071711 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071673614 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074023937 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074655345 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071564591 seconds)
  done (took 2.339355616 seconds)
done (took 29.531728511 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081011874 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0707039 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07428273 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085236412 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074844526 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080315589 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069560949 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077580049 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074408803 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075479633 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077044269 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069873869 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073429428 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069296602 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076312227 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069449477 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081393898 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074822285 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081053686 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081262711 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072018162 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075182865 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076969191 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080841916 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080577875 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080728224 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079612926 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075361017 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070864767 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072275755 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078697109 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086361873 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070682037 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080936583 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069430658 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069728369 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073511308 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069893316 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081099152 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079226078 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071199889 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07865282 seconds)
  done (took 4.898038824 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089655597 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097485113 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090752751 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06602603 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071862197 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0691718 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092194555 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063992691 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060800811 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090608955 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059192628 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062844092 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065548919 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055120196 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062235857 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05807003 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06369182 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057440292 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06209127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061583011 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094101399 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056873926 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079882394 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06518303 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058033211 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063455551 seconds)
  done (took 3.548822246 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077147609 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087367904 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092302777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133607504 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108378559 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081679991 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081038069 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09771147 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091000649 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069474501 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073460029 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095785099 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093051587 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076585585 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070343494 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089270921 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085783619 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070990272 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075691137 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097637969 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088670741 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08808233 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098694499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085431809 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068785934 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071862578 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073323289 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083291502 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07463582 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078802637 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072976674 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072850707 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071582074 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.092739904 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072900342 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071107787 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094445082 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079518213 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081094663 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070350312 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077747211 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070463899 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094696295 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128352681 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06994518 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075666599 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073543418 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078900211 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070030032 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090527387 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080937894 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069234901 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072925028 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068632957 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069764324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083538597 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071744802 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071491627 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078836066 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075656484 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094833392 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074432503 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085820993 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069461841 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077638211 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069074135 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070095275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06883026 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098286091 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071217482 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11365639 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073909959 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072795109 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079925203 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077599401 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076036911 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070097563 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085446969 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080208965 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075740554 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079506379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072763972 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072375715 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094296425 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07196618 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071069037 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070510374 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075779918 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07275663 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072817779 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082942413 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069147636 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072666836 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08711885 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069418218 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072343822 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077801991 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075680119 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069071242 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080699754 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074562048 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070631274 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07954979 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069655853 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073130541 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082351893 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076182932 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069140307 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074023021 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075858623 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070654154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071414236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072414115 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071255257 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078104599 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076674259 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074646754 seconds)
  done (took 11.002544261 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168242694 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160762184 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072369025 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152647201 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079070312 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081822292 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155207919 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097491286 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070426655 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070702336 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071253436 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113922024 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112499551 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.126330679 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085572251 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072504209 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087659945 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118390366 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157942272 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150083 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087299948 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080050951 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071994568 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071346666 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072696458 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080933764 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087715397 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079000975 seconds)
  done (took 4.598655788 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082582107 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106852348 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076922272 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093905369 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093271819 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070062377 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072435261 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072284597 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083982828 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080854395 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070050191 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075460407 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076795315 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073937818 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071317162 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077252046 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0778923 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071160721 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073238444 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075586776 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080722452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094705094 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074387947 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069736781 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075208757 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069358803 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066186903 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086525204 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070781905 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098191985 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068481934 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075378218 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084946792 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07130467 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070536739 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070391525 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070185417 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069349486 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071731486 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068530649 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068311088 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059225177 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068868379 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081774248 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076774022 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058417433 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075105557 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075572247 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075123182 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067019252 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072979472 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072314645 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073749534 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077661554 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073898929 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075300719 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07159492 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076772257 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079398832 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069707699 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06713772 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068238234 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074647287 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067313241 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078323126 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074909368 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068512367 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069671792 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071899023 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076914057 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07011878 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074267413 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067699508 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071828455 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074554539 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071600511 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07105636 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068731871 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069849237 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070224006 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057655926 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070306056 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055259234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073064077 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067718687 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068328841 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069851662 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074895119 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081977431 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071332867 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075475516 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070627791 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068926035 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072999033 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062635365 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072674962 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085970013 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085314801 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070095982 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067479348 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083905241 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074737082 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069317132 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05823234 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07543373 seconds)
  done (took 9.496891516 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093124094 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072376329 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086813312 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093799478 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089688187 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077295699 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080024374 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071675081 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086166018 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076312219 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079330956 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069692249 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080529331 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079755527 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072320062 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080382556 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07420436 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087164864 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085201473 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070197755 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078550223 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.0828009 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092802097 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085025175 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083494787 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084604258 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092992427 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079996534 seconds)
  done (took 4.056806408 seconds)
done (took 39.32171383 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.807553226 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.058771264 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.809600668 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.201310508 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.891081766 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.979817997 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.893462468 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.803199527 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.985575986 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.839687873 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.014364254 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.938064564 seconds)
done (took 65.963614686 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.868256425 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.948479512 seconds)
    (2/2) benchmarking "String"...
    done (took 2.045544017 seconds)
  done (took 5.734196647 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.036658026 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.359753695 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.047595372 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.802843001 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.808997658 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.12105719 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.605112097 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.31719915 seconds)
  done (took 30.804305278 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.988287488 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.028592823 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.504650558 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.53649213 seconds)
  done (took 15.848796818 seconds)
done (took 64.112303487 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.817774795 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.810109877 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.816987993 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.789598672 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.86551569 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.813412094 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.936000106 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.067739561 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.805379114 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.796162187 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.804839205 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.238991893 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.810332404 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.930002688 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.804151733 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.812184095 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.879562605 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.275537024 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.962730001 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.814694638 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.813041362 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.859340303 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.811274985 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.812792574 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.847486734 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.807031682 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197570824 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.811529647 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.434262274 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.80992396 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.832283587 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.177197774 seconds)
  done (took 205.807818138 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.805730215 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.963820397 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.00313338 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.81035769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.450924285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.985409729 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.92562329 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.4605846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.807471868 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.819800898 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.942448349 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.806916215 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.950692385 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.792637748 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.835529153 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.807836733 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.048682544 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.963366922 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.839988059 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.97751941 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.806257404 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.799654929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.782331314 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.918362947 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.851009481 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.900178233 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.959461618 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.82935312 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.007178502 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.031907278 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.852422375 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.834043437 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.032804814 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.688466083 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.814846324 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.826437889 seconds)
  done (took 171.679703341 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.201087262 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.807194059 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.805974088 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.807107721 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.818887646 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.806242993 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.938770241 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.937410871 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.413304502 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.547262725 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.863666591 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626884153 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.806978447 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.873239879 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.820467891 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.807768397 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.82159095 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.832563334 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.812469864 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.807092067 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.94102342 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.818583929 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.880342859 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.819078955 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.807967058 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813012037 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.179342609 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.805756825 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.807468615 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812966452 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.066180384 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.808849067 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.807597144 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.660015151 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.859688933 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.896438325 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.80902453 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814020824 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.809924596 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.025425479 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.809006322 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.80882105 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.811477157 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948594945 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.808691781 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.934901975 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80784254 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289869648 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.809285461 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.808770738 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.486440104 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.400702719 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.813445765 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.808385004 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.811570958 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.809142774 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.808605356 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.814885182 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.808506225 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.550173441 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.884367188 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.810367709 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.812470329 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814889794 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.809674297 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.058915013 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.81011495 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.596360007 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.869684015 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.052663489 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.938183498 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.809480321 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.876300958 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.901638118 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.810036491 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.80978681 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.810256988 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.809053371 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.891114475 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.811405315 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.810316058 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.938768622 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.818074131 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.811366126 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.860612005 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.879282514 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.811127633 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661406846 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.815493103 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.809646637 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.070935492 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.877253297 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.811306222 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.811041765 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.811629575 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.938741426 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.936122124 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.526614063 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.818281956 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.813131993 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.657137897 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.815676229 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.948310656 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.811722873 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.952714103 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.81722932 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.893465464 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.817547444 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.812679551 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.812413842 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.843733859 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.81320599 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.868992265 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.8160163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.186978163 seconds)
  done (took 407.390112747 seconds)
done (took 788.872120134 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.463343576 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.431177667 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.531991933 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.448925911 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.424680977 seconds)
  done (took 14.049808216 seconds)
done (took 15.797606282 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899647201 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906982432 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.84029445 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.903729836 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.836881032 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.903487021 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887181845 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.838652775 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.870914316 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.839152804 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873074964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.838895645 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.825875785 seconds)
  done (took 26.015136105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.039736583 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.044394512 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.885436249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.045406502 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.860589881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.040348112 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.976642149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.964931529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.96463186 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.830083127 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.827215916 seconds)
  done (took 23.230850485 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.052457724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.053108559 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.890797385 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.05214328 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.863790387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.048894548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.97887016 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.971649237 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.968459741 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.828596253 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.828975963 seconds)
  done (took 23.289662698 seconds)
done (took 74.283065081 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.821743501 seconds)
  done (took 3.572940152 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.847030938 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.00363953 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.826820324 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.822844361 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.820516619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.820989216 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.822922475 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.818994603 seconds)
  done (took 16.536332711 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.816250763 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.819700293 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.816902408 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.816898728 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.821949981 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.819437765 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.818250576 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.816988679 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.820040333 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.817761112 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.82029955 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.81781454 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.819664419 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.821549452 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.820570938 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.821235542 seconds)
  done (took 30.855810793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.820060051 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.81772898 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.817530643 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.818319708 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.817344998 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.819388974 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.819984755 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.818250772 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.818122984 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.819019343 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.819048042 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.818459865 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.818656299 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.817966744 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.819177542 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.819949469 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.818413355 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.81914583 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.823532605 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.819178115 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.819234317 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.81895268 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.81920778 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.819497614 seconds)
  done (took 45.409169559 seconds)
done (took 98.122921676 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.747149562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.200629856 seconds)
  done (took 8.699515708 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.8221088 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.82233196 seconds)
  done (took 5.42716233 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.822163479 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.821454254 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.821650016 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.821358513 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.821655706 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.822470469 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.823663151 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.823900606 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.822977838 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.82384342 seconds)
  done (took 19.977042864 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.825065431 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.824229242 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.821615897 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.823553357 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.82487782 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.821857576 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.825209393 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.825085804 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.824839027 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.822183499 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.825559716 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.823582049 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.82444655 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.823265605 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.82533056 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.823323498 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.822527198 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.822842285 seconds)
  done (took 34.583183585 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.825438594 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.825393481 seconds)
  done (took 5.405386522 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.822466303 seconds)
    (2/7) benchmarking "second"...
    done (took 1.822649317 seconds)
    (3/7) benchmarking "month"...
    done (took 1.822334059 seconds)
    (4/7) benchmarking "year"...
    done (took 1.822592583 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.821672886 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.822523841 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.822259915 seconds)
  done (took 14.510930538 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.826484345 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.979742634 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.049019936 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.457285708 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.826913742 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.829955964 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.817295801 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.8296512 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.831062498 seconds)
  done (took 20.20293474 seconds)
done (took 110.554895904 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.627559377 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.820967136 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.153924903 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.905982436 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.839150729 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.166594847 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.863869962 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.131952981 seconds)
done (took 43.263196079 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.852011907 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.367845001 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.39734024 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.219639428 seconds)
  done (took 12.741278643 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.805534838 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.370542797 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.865009193 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.489391923 seconds)
  done (took 20.475295707 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.190972441 seconds)
    (2/2) benchmarking "read"...
    done (took 2.172803417 seconds)
  done (took 6.124630235 seconds)
done (took 47.949606394 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827823924 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.827948815 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.827512609 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.824901988 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.825143934 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.827968833 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.825758195 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.824241036 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.827566321 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.82847392 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.828412888 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.828526714 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828089865 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825847587 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826230611 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828723381 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.825840194 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825546342 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.827860841 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.825528227 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825644914 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828665075 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.825911465 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.826162511 seconds)
  done (took 45.60149298 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.828156622 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.82733696 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.829272848 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.828536054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.82585074 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.829767025 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.829833396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.826858694 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.829420965 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.829856325 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826800744 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.826810244 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.830209504 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.82752729 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829643913 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.827162986 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.830121284 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827118643 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829769869 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.827363061 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.82931246 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827923822 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.827253289 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829987802 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.82839436 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.828138883 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.830207089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.828670309 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83101802 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.827335555 seconds)
  done (took 56.614613106 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.835388351 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.838258157 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.829743467 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.831416448 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.830953989 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.83026482 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.830676836 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.830816761 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.831494148 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.831447879 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.831256405 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.831144443 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.831311763 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.830949984 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.83045087 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.831394971 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.831684949 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.83160495 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.832591777 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.830736418 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.830935194 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.831417574 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.831269004 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.832440163 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.831721477 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.832072965 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.832797575 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.832545277 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.832522357 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.833252657 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.83211871 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.831985183 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.832563988 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.832691925 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.832344737 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.832592463 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.837536204 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.840524108 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.832180619 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.832424391 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.832335883 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.833011361 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.833341486 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.833403071 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.832133412 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.832051649 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.833076555 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.832477219 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.832891123 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.832766725 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.833279087 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.832327698 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.832799883 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.833778656 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.832843616 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.832850596 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.832835417 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.833458975 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.833742034 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.833807788 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.833979134 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.834047596 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.833633476 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.833728768 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.834249955 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.83331903 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.83433881 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.833411997 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.834063566 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.833579655 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.833748048 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.834653476 seconds)
  done (took 133.719663408 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.834627768 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.83289329 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831706471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.83198538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832279288 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.834476405 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.832345825 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834617911 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832748804 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83520866 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834260896 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.832846271 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832048332 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835080141 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834025371 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.831976759 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.834450042 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832672139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.834521799 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835178786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834664126 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832359909 seconds)
  done (took 42.101574947 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835446491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834736925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.833000155 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83470584 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.832402309 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.835322461 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835045967 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835013611 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835425374 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833496109 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832650462 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836001378 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.83332631 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833127866 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832998347 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.832668729 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836011036 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833628082 seconds)
  done (took 34.779890941 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.832894387 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.834031843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.836515478 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.83397696 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.833914698 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.836522522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833684417 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836623682 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.836589595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.833867277 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.836801745 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836329018 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.837129014 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834400792 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836956979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.834631289 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.836690129 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834469766 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837285878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834899261 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835639866 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838217219 seconds)
  done (took 42.148281947 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837393308 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838559385 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.834856112 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.835628201 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.834455183 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83706557 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.837832185 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.835489436 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.838688251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.83868109 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834857563 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.838616638 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.835206983 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83569478 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.835421928 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835279549 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837295112 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.836957983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838081777 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83632426 seconds)
  done (took 38.499574349 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839016356 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838236433 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83768779 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839428673 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838180652 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.838734629 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838720048 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.839345598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83856897 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.839815641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838812333 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.838652895 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839184278 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83902983 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839221259 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83882236 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838358508 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839525084 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.838791206 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839351821 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840082445 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83997694 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.83940374 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83909272 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839892128 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840257978 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840353191 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839601888 seconds)
  done (took 53.264656602 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839736996 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839905394 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.838215033 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.837436074 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.837621357 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.838032049 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.83782956 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.837964755 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840246801 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.83710922 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.840328363 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.839734022 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841267915 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.841064151 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840462795 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.840779767 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840519772 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.838686942 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83757297 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837946087 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.8407931 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840047678 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.840747239 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838401383 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837944725 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.840323543 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837685643 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838697744 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841430713 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839373985 seconds)
  done (took 56.948354814 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.860828241 seconds)
    (2/2) benchmarking "in"...
    done (took 1.860220709 seconds)
  done (took 5.491053145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.838280856 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84083992 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.841374015 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.839201007 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.838403722 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.842197448 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.84115342 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838568249 seconds)
  done (took 16.490814971 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.841027049 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.8426203 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.842421458 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.842423583 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.842058105 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.841374763 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.847954617 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.842816536 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.843204499 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.842541007 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.849053134 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.850349712 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.844647315 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841433619 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.842190097 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843737961 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.843671411 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.843532184 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.843767009 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.843814306 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842242236 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.845393537 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844607442 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.841098138 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.844481929 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.85329379 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.84627141 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.844097393 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.84252688 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.847104899 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.842420085 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.840522966 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.84394497 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.843750871 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.844593541 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.843613557 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.85055394 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843573773 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.849165567 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.844069718 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.844383694 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.841772352 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.844465115 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.844585724 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846420576 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.846051733 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.847150267 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.843541576 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.846062443 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.849077149 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.853133314 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845159263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.843176994 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.847418975 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.845566863 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850440945 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.845337606 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.847215759 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.853315321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.854187509 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.858403024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.852834032 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.846732529 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.845825199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855545031 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.869717258 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851642833 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.844119323 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.843036046 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.845660102 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.851102813 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.859007805 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.854909808 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.846136994 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845667932 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.846586976 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.846156538 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.846130062 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.852546932 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.848919759 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.846591134 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845769157 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.855879735 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869583988 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.845951555 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.846565572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.846510588 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.845479586 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.847395377 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856476571 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.847289982 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.847610521 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.845192653 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.846669246 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.847742285 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.84779693 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.845502299 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.846354294 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.84462346 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.849188292 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.846914334 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84985804 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.855927165 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846365058 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847591622 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.853499956 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.847748501 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846684217 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.853457807 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.847998449 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.847460395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.847589197 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.85322497 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.844908146 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851281157 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.856244405 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.848401272 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.848371614 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.848044347 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.848848741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857974962 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.874265618 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.847929174 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.848355782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.852051139 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.859416177 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848796407 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.850723325 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.849566926 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.84614841 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.845725871 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.850260433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.850133077 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.849076989 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.849154526 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.848822479 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.846538343 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.849204612 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.849049265 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.849996555 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.849778567 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.84953048 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.849193542 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.851578179 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.849239352 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.851075981 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.854162444 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.84925293 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.850580861 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.85049902 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.847404658 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.850706127 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.850403915 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.850140467 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.849673424 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.849728792 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.849142337 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.850654275 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.850767506 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.850874446 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.85092719 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.85138773 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853637963 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.850549002 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.853698044 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.848928589 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.848318662 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.851143011 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.851448026 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.850213378 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.851337304 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.849533591 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.854406277 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.86044229 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.852037378 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.8513474 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.852726556 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852038753 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.851554838 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851007742 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.85460197 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.85989142 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.851751741 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.85755611 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.851689854 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.853081979 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.852104121 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.852397135 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.851012465 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851964856 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.855926942 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.861495698 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865143436 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86018219 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.853514578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.85682608 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.853462001 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.85640423 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.856228459 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.852158614 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.853977971 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.852726579 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.852338024 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.8523578 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.852472853 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.852561984 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.852011213 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.853348862 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.852918016 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.853450008 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.853692998 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.852813326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.854763692 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.851759765 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.85350219 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.853474324 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.851646111 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.850546272 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.851728338 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.852017604 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.853365835 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.85383372 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.859206137 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.85121215 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854025742 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.854280993 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.854387938 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.852501009 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.854773798 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.856581393 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.854642972 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.85946893 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.854331278 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.854716637 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859803007 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.853399911 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.854070601 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.857323903 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.855271374 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.852667628 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.85826749 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.863906906 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.855537089 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.854929527 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.855157717 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85514605 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.856186267 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.859849017 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.852191654 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.853799053 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.856579139 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.85742042 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.855058658 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.857721958 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.857738729 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.857585069 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.859120953 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.857714239 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.856409257 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.856053279 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.854731771 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.85531348 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.855016626 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858085899 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.864911741 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.859736906 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.854931981 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.858264654 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.856807616 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.860677796 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.85646717 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.856702613 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.855733567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8691055 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.866048401 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.862489485 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.856679313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.857472871 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.860664013 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.857491086 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.860198097 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85564387 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85668434 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.855680605 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.855796695 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.854974995 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.857034369 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.857279874 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.858142767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.859213544 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.861823239 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.859271301 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.85723392 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.857773347 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.858452654 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.858358991 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.85705263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.857616291 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.859200141 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.85940062 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.857728809 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.858046323 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.863393142 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.857293876 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.858764416 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.857486763 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.857478268 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.857046446 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.858836292 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.858123599 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.861628863 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.867150679 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.860824571 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.867459741 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.860084432 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.866895824 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.858578271 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.863434669 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.867442019 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.857455543 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.857602672 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.859300082 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.85886552 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86530652 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.858836028 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.859338821 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.86368243 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.858864702 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.859840775 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.859581721 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.858899464 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.859966135 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.859306146 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.865912625 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.860417282 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.863549124 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861402594 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.857471654 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.86015642 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.859964232 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.859629738 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.863135782 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.860584894 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.859696211 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.859521343 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.860308062 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.861484039 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.861335915 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.860443921 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.858606825 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.860728231 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866214471 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.860823573 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865452847 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.861374743 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.868039677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.860211699 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866342385 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.86050548 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.860569926 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.860336764 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.860348488 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.861422246 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.860010326 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.86153882 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.861540768 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.862617448 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.867053858 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.861467474 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.862583244 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.861732044 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.862125481 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.860343879 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871332648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.886080146 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.862858177 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.866632098 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.859564225 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.862988207 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.867007769 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.861304248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.861107452 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.86514821 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873732894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.871185739 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.862058603 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.862745781 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862769042 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.863542374 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.863234859 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.863549502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.863126255 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.864198126 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.863432681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.863426044 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.866678013 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.863387409 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.864128914 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864335394 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.864119801 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.872607559 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.863495164 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.863859344 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.863843356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.863669245 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.863687726 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.862772765 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.86402113 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.865376018 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.863876502 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.864371821 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87097781 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.871183711 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.865588255 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.864555366 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.863908692 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.86427573 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.864167342 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.863514953 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.864036454 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.864664994 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.865158881 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.86420863 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.865411886 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.862878632 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.864743297 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.864564512 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.865155878 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.86698274 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.87249698 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865020481 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.862567415 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.864638526 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.865414021 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.863372239 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.864054681 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.871997328 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868691529 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.876459139 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.874039827 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.870253512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.864538617 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868797853 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.874107152 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.864817171 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.866567262 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.865140146 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.867327062 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.865919493 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.869217549 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866619929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.872343547 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.866239967 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.865622629 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.872533551 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.867452052 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.86702385 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.867981301 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.869787445 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.8650965 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.864370671 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.867930812 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.865459285 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.871433599 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.868094183 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.867514331 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.867089157 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.865083556 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.86831338 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.87089103 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.867731281 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.866673788 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.864664038 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.866569536 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.867116977 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.868239816 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.864953582 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.86581908 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.866770884 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.870431155 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.875347287 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.865263791 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.868357192 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.867514474 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.868028958 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867080336 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.86725688 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.865257678 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.865576588 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.867712842 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.867777345 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.867894071 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.870158172 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.866642672 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.869170052 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.870357258 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868893306 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871933097 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.879674382 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.877500059 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.86683763 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.868174164 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.869131619 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.871820118 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869667479 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.869310471 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.869505395 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.87095137 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.86967464 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.86956119 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.869065329 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.871352274 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.883727578 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.869028559 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.868221698 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.869152546 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.873201747 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.869864332 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.866601333 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.870171924 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.871599784 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.87259277 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.87766739 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.870506013 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.875919629 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869363716 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.87071522 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.874512422 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.874221222 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.878292987 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.872640572 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.868905929 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.870128842 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.874378594 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.886313367 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.87113451 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881017128 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.900723984 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.870369326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.871018857 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.870536661 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869773478 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.870830723 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.872208099 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.871205647 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.871597817 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.871630379 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.871586491 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.871663272 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.877064255 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.872576126 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.871829606 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.872391789 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.871315662 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.872381609 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.868634912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.87208415 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.872158901 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.871963293 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.872369564 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.872688802 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.87190254 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.885130768 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.882006649 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.872074458 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.872170237 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.869538842 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.875401382 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.875860858 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883034788 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.880625291 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.871882398 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.87186001 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.873025994 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872082673 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.870234354 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.873255221 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.872326122 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872309214 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.870040762 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.884829662 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881950304 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.876045046 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.873530779 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873081901 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.873875181 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.874130282 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.872907009 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.872645368 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.874298793 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.87353537 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877774935 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.873684453 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.874665099 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.876140289 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.88173994 seconds)
  done (took 1110.071121678 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.871979906 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871448077 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870868884 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871712615 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871933164 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.872733239 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871725166 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.871490318 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.87220547 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871599507 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.871949729 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872253357 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871836793 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87277941 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871379763 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.872764145 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872306924 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.872039745 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.873052385 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873046821 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.871912574 seconds)
  done (took 41.115043325 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.875662825 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.871960573 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.873183894 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.875671943 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871965897 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.87549455 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.873129549 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874786665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.875288213 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873388919 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.877400937 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877912979 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.875270922 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.875434161 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875736655 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.878631244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.87876682 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873373529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.876144845 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.872728584 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.875419593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.873506695 seconds)
  done (took 43.054921223 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.875914627 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.875668364 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8755155 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.873182651 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.876799945 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.87388541 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.876870429 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.877054147 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.877291858 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.877201673 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.874750994 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.877287493 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.884357898 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.883717069 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.87889438 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.877688936 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.021259939 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.877395967 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.877772567 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.877358219 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.875965994 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.880765656 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.874541096 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.874795149 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.87552888 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.876862913 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.877615531 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.877604638 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.876999521 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.878568592 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.882676822 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.877621318 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.877188049 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.878906893 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.87656947 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.878335106 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.882711702 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.878327568 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.876045764 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.877757374 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.88834825 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.899212287 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.879166798 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.884036481 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.878134562 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.879506493 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.881326399 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.886957195 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.875753208 seconds)
  done (took 94.003197512 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.87884488 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.878440778 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.876749546 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878401403 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.878961594 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.879735758 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.879145514 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.879282092 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.875891723 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.876074138 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.879443876 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.874329615 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.874185316 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.877329774 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.878519717 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874486953 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.876065891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.875346953 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.876191193 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875996057 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.87575483 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.879290314 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.878924999 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.876517021 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878241493 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.876193287 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.876220713 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.878702089 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.876009163 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.876877834 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.8786725 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878776225 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.879983532 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.876974779 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87695964 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.879675109 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.879860611 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.877285169 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.879108494 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.876838892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.878952157 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.879282495 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.879577369 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.879169563 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876828611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.876633928 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.876315676 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.876578123 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.877858974 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.879233036 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.880213263 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877964501 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.8800917 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.877739582 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.878826274 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.879959541 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.877875947 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.87721243 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.880006503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.877246915 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.876257796 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.87932004 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.877563657 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.880370248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.879832915 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.878311199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.878730982 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.880414584 seconds)
  done (took 129.507381471 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.880439259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.881130969 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.880638194 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.880939596 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.882216342 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.881638815 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.880917044 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.881092434 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.881617029 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.881801012 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.881571398 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.88119221 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.881814677 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.882377098 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.881569088 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.881765768 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.882281832 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.881399216 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.881905879 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881235287 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.880948167 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.881640727 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.881607961 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.881687413 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.881536718 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.881624223 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.881927669 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.881493458 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.881919466 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.881819956 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.882106148 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.881932974 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.882435767 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.881817583 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.882406145 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.882391516 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.883208666 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.881167884 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.883590259 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.882025728 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.882912126 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.882298695 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.88253779 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.883837273 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.883753075 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.88257812 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.883580672 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.883669623 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.884380853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.883203793 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.882955906 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.883746206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883083643 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.883115097 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.883939188 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.884422552 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.88346022 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.882768695 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.883817561 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.883908595 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.883140938 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.884003355 seconds)
  done (took 118.515121916 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883985637 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.88466045 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.882000357 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.882111759 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.884250349 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.882533078 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.884849369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.883989847 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.885093783 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.883794821 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88521785 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.882397201 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884034997 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884617768 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.882838069 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883137723 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.881918677 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.883028016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884585237 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.882470933 seconds)
  done (took 39.483868569 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.881743975 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.884895089 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.882864512 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.883375589 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.885357585 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.882138174 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.88485178 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885565103 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.882673738 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886152812 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.885548949 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.884938532 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883160551 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.882960856 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.886031997 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.882968224 seconds)
  done (took 31.958491137 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.882625007 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.885424008 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.885602336 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.885552545 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.883621064 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.882905502 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.885938157 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.883251553 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.884128747 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.886983561 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.886399359 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.887423613 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.887200316 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.88612568 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.884249752 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.887155715 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.884497573 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.885218861 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.887584042 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.887484385 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.884810977 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.88553512 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.887836475 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.888397848 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.885160589 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.885569129 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.885340614 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.885674869 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.885560256 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.887029125 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.885328748 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.88520304 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.884872317 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.885665424 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.888722579 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.886528351 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.890567129 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.889210675 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.890182609 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.88960174 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.890582402 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.887594145 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.888758654 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.888319268 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.88512204 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.88823135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.885524866 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.885849089 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.885375049 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.886396465 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.888112386 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.888021436 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.888821724 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.889010636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.888519782 seconds)
  done (took 105.575889971 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.888446864 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.888600464 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.886424372 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.889269241 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.889514618 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.886098996 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.88889469 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.886008511 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887968235 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.889089884 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.888667711 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.891786878 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889691766 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.891517467 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.891459574 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.891657063 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.887968824 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.887195189 seconds)
  done (took 35.817956052 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.88652925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.887284955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.887859684 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.885791528 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.88600881 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.888973072 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.886579708 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.888203625 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889400365 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.886206125 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88622542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.889305886 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889338488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.888841418 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.886779213 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886314213 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.889914074 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.889106293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.886358679 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.887116881 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.889707391 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.889036678 seconds)
  done (took 43.348389362 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.887054108 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.887720265 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.904488275 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.911145111 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.91119953 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.926541034 seconds)
  done (took 13.246219942 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88673861 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889058528 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.887666098 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889429299 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889138047 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887261363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887831296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88757433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889813067 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88438991 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884212477 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887023329 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887404185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88538812 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88721316 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88741519 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885697037 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885251702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885989955 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883261789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880101072 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883435967 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880303062 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88066567 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879947469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880263141 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882098083 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879988024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878560389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882324659 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882131945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877831793 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881287341 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878717479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883625285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880465253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877982501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881472113 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880994346 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880482432 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.884894473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883519794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88082584 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878128987 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880200039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878708186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878704409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878545852 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878192144 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881794497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881019846 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878952653 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881615685 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882190144 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882407828 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881973266 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879749977 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879167086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880910733 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881862354 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878449661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881798859 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879346968 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879894558 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881597071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880466915 seconds)
  done (took 126.063990643 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879673016 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.879372021 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879149557 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88022723 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879898728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879472997 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880146518 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880726776 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880690324 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881164256 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883762448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879090796 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88035713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880029017 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879855667 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881042541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880502115 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88086729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880805813 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882743138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880761917 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881914506 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879813147 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88041086 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880452115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8827676 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881386194 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880585957 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879863587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880951155 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880440724 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881809087 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88003756 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.881162471 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881086341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881366911 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881672059 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88157846 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881164643 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883632784 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880676618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884125264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882773715 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881347158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8818255 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881184828 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881213468 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882094911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881898068 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882072582 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881766637 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881449116 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882380443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881344536 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882002456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881976757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881838272 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882115035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881902031 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883035886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878549466 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880828363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883169279 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881056001 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875896544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875793638 seconds)
  done (took 125.959769189 seconds)
done (took 2585.136015784 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.924879236 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.921748272 seconds)
  done (took 15.653226916 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.03538475 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.990777199 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.876258067 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.899811838 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.876070603 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.893941628 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.891088087 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.876126633 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.876533147 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.87486688 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.87604148 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.06128141 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.875884731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.876095426 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.875820628 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.968655884 seconds)
  done (took 52.436308275 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.879796863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.881632882 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.89054746 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.881915098 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.879304725 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.892124855 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.916638786 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.883601374 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.920029911 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.894145951 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.957427976 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.894054974 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.879258325 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.93137945 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.894226756 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.894921793 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.972009012 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.957596185 seconds)
  done (took 36.107710539 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.958135928 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.880805839 seconds)
  done (took 10.653483384 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.894356769 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.893882375 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.886097802 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.884940988 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.893178741 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.888302042 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.868904481 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.911801525 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.885254073 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.873855883 seconds)
  done (took 70.689804464 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.875287447 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.87156714 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.871874949 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.869873642 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.863779524 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.867042288 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.869139048 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.866683178 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.544120156 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.904396732 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.878482555 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.879621712 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.872132122 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.871754095 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.872665824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.895925089 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.000631479 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.869564902 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.867514363 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.875966525 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.870969911 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.941861931 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.885247623 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.876190032 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.903712717 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.547854803 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.882195645 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.878610575 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.9945616 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.86894478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.870621435 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.87325315 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.871833119 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.262618184 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.169395355 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.872042058 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.883593251 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.879087288 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.870563183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.003762374 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.87090235 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.87666983 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.856809533 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.148961431 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.986533386 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.920756935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.224068361 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.885775239 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.870349276 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.899983368 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.871545608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.869647699 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.881462877 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.387838633 seconds)
  done (took 132.851488071 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.862819536 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.12473402 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017620715 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862459468 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151259212 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074871106 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.864146927 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911623377 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.86309503 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.090613115 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.082199223 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973479064 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865387238 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.863809752 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.864765926 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.861421388 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02564686 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93701304 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.86338051 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.858661279 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890177031 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109415183 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.989212132 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.863205447 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.884793489 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077524794 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.988951201 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970987819 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.314127735 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.858853274 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.928255126 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.863840194 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.861845303 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858322564 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.017166101 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957205265 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949022718 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.862024153 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857407508 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.855694937 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.533238686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054453568 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.95610668 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.002036025 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10747714 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.064219736 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.644346783 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.855462621 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.595804426 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019181516 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.093235432 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.089384343 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.983120138 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.860714491 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.138581856 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.855204989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855851964 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092792571 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100786269 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96145787 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858994557 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.856639289 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855182312 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102514912 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.863173027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.956470789 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860876663 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.858052894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.954394339 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963500394 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106689404 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073310813 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.890624842 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.164882041 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.323439622 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106869945 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.929375533 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090813599 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.858250277 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.856671702 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942946571 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.710760433 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058031665 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.109973026 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113419331 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896672343 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.586803723 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.857716694 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.087751409 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.082600094 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112259025 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102681687 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.013062304 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.172774841 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.856166877 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.858477624 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.101636489 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997362346 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86008868 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.222547186 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094981886 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.42998126 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89119414 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.169092746 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992675989 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.860570767 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.502688704 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.85949911 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.087962939 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90509038 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.861644723 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860102885 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.080348247 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.839645435 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858593442 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.583149173 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.923579799 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.86139849 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094910401 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.863751778 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125020248 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862138194 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09971213 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.1461063 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8946056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.037689965 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.103463744 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.861439652 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120080741 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.107148005 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.977315638 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.134452785 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.785266608 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.860186502 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151221919 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.861511421 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.858597026 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.03542079 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864525799 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.095132647 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.863568396 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148160247 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887870795 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018470662 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864630536 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.118896651 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896623401 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912825642 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.86306473 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993584677 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864463169 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.729867486 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.014398209 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863333772 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860230162 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.445063424 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859800912 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019809296 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.101323076 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887061754 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.938136485 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.534567083 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859455722 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947685376 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889205289 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.215964083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.860459285 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.075687929 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.864916248 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.405222725 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.859067573 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.101463941 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.09684916 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870272362 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864439426 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.769142418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.861479009 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861337178 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.023309332 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.676857117 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.861157131 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068243564 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864145791 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995870313 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.864621614 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.949194585 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.217008543 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861791075 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.863127474 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.863845827 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.862874722 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.864338065 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073149933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893554996 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.388823597 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001830535 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138172728 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.181948104 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.113696988 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.909151228 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866776214 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.110249621 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.865276462 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.927963473 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.865512144 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.887114297 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101326296 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867065384 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074158086 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142710818 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.794769693 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915236523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.86406692 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863945828 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.784731894 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017663825 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956204915 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.864116416 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.864298611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.981080547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.989462216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.08033705 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.864595132 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.095992589 seconds)
  done (took 901.79484022 seconds)
done (took 1221.99093569 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.863348728 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.871583603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.852913608 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.867565155 seconds)
  done (took 29.256415365 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.872428928 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.869190604 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.869827869 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.868020097 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.870703139 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.870903479 seconds)
  done (took 13.017680595 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.899063676 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.863169169 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.869034417 seconds)
  done (took 21.429732297 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.937557951 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.255011517 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.985304277 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.293329104 seconds)
  done (took 10.271820495 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.872740058 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.873031944 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.870366549 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.872901918 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.872702745 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.873587282 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.873459302 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.872056373 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.875128209 seconds)
  done (took 18.657401019 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.177318271 seconds)
done (took 98.607450876 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.937065895 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.869414369 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.032226037 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.003333975 seconds)
    (5/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.889190565 seconds)
    (6/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.47204428 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.250301264 seconds)
    (8/309) benchmarking ("sort", Float64, false)...
    done (took 5.649838505 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.853425243 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.022667024 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.796242741 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.869228858 seconds)
    (13/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.119685335 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.060955149 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.997972373 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.936783725 seconds)
    (17/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.870490224 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.001980002 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.891618597 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.865550718 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.115985295 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.204954006 seconds)
    (23/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.965109109 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.867070784 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.244920719 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.860591182 seconds)
    (27/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.512924385 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.659532351 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.864522422 seconds)
    (30/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.182808218 seconds)
    (31/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.147595032 seconds)
    (32/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.367554273 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.393573759 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.082827849 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.814845579 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.906662782 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.043229447 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.272675424 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.953804658 seconds)
    (40/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.5770849 seconds)
    (41/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.051117165 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.827569103 seconds)
    (43/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.780842806 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.882615024 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.993089781 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.9680771 seconds)
    (47/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.867305671 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.597770176 seconds)
    (49/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.986268999 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.303115839 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.119327074 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.180510131 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.970192527 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.180721185 seconds)
    (55/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.892753496 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.084181722 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.995189018 seconds)
    (58/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.129531613 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.131587437 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.26214267 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.849020829 seconds)
    (62/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.173456743 seconds)
    (63/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.040907095 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.968821445 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.417236893 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.903631489 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.338566084 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.945530068 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.022090116 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.213974501 seconds)
    (71/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.887168395 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.952789896 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.181914026 seconds)
    (74/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.968793596 seconds)
    (75/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.866232333 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.654547879 seconds)
    (77/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.139856218 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.245667449 seconds)
    (79/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.426414189 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.308234593 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.010678241 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.865308636 seconds)
    (83/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.332798272 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.86613845 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.903847269 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.218594563 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.886713238 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.083984668 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.187107051 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.577671179 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.105387179 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.028145301 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.079091192 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.879835508 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.048768516 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.881076017 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.23269004 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.011408578 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.865597409 seconds)
    (100/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.427044164 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.996866502 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.988673069 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.267527291 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.883771008 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.959787413 seconds)
    (106/309) benchmarking ("sort", Int8, false)...
    done (took 4.874940075 seconds)
    (107/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.097751966 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.856399204 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.129524592 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.884741529 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.127329541 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.435393318 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.23571579 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.916586625 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.107084938 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.214018317 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.96385812 seconds)
    (118/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.882666033 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.362959252 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.264241056 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.861958242 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.999874215 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.354540107 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.872641142 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.153356156 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.996397482 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.867229103 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.067053904 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.199234113 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.324514217 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905660574 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.229996793 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.53509194 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.171601087 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.095657057 seconds)
    (136/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.911373612 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.90129166 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.890891472 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.108510734 seconds)
    (140/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.148065997 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.235950463 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101003714 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.932015384 seconds)
    (144/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.900926984 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.892099103 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.963786774 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.962831013 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.992649561 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.17394165 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.888876915 seconds)
    (151/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.899990361 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.965917184 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.105280679 seconds)
    (154/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.887521305 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.913290434 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.571736943 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.928872139 seconds)
    (158/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.869749323 seconds)
    (159/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.141747456 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.884813338 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.005713775 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.060165485 seconds)
    (163/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.970723204 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.904437348 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.860187182 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.435412722 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.911433168 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.885498966 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.417616403 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.082873476 seconds)
    (171/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.981066662 seconds)
    (172/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.02301306 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.948803324 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.885163515 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.874041797 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.00051538 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.029995017 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.988319029 seconds)
    (179/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.153897628 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.03882058 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.921494229 seconds)
    (182/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.912885855 seconds)
    (183/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.884679174 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.717468216 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.549759646 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.921655683 seconds)
    (187/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.360743467 seconds)
    (188/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.255993401 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.87792403 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.309075019 seconds)
    (191/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.977230431 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.91269978 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.987176484 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.885928383 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.888991126 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.878304672 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.032756418 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.998940289 seconds)
    (199/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.353764083 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.896181523 seconds)
    (201/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.174146879 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.014388017 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.913560657 seconds)
    (204/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.016378153 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.891126924 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.049682519 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.915953452 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.897296304 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.896825089 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.060917527 seconds)
    (211/309) benchmarking ("sort", BigInt, false)...
    done (took 6.894470651 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.071958705 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.573083843 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.085189855 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.905525151 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.874516395 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.005251041 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.013378117 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.25649441 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.687909453 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.110475454 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.992487691 seconds)
    (223/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.026571859 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.990152302 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.701143908 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.025812136 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.91254278 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.149059244 seconds)
    (229/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.908537108 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.157108332 seconds)
    (231/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.424725813 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.217294867 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.38153505 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.944082047 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.997824437 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.237304852 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.179851028 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.232486087 seconds)
    (239/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.07065835 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.888531918 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.897987621 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 5.691078951 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.466137376 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.049797919 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.231047546 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.822326538 seconds)
    (247/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.066615741 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288166863 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.896451243 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.971936456 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.203971231 seconds)
    (252/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.596641361 seconds)
    (253/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.905560512 seconds)
    (254/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.96318963 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.001465428 seconds)
    (256/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74755096 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.10413899 seconds)
    (258/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.898127577 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.182346188 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.923804569 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.953772617 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.474277893 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.984233196 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.978982207 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.134975448 seconds)
    (266/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.169155679 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.259654038 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.892693943 seconds)
    (269/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.904330373 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.061707982 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.821804456 seconds)
    (272/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.089926137 seconds)
    (273/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.000116586 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.197626005 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.453129111 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.156974276 seconds)
    (277/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.234398696 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.897875057 seconds)
    (279/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.96958767 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.191439871 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.484014687 seconds)
    (282/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.982253963 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.94291847 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.992058875 seconds)
    (285/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.303582791 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.123025305 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.975839557 seconds)
    (288/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.180703592 seconds)
    (289/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.815338932 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.260343171 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.983522477 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.03435682 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.084612789 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.971719105 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.269376815 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.705463617 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.649602956 seconds)
    (298/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.148851615 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.196369746 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.927692978 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.137148369 seconds)
    (302/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.454544894 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.822906497 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.934027438 seconds)
    (305/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.978356408 seconds)
    (306/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.022890888 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.015334789 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.009921949 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.913222028 seconds)
  done (took 1015.500424842 seconds)
done (took 1017.359130055 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.926371733 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.921884343 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.905154695 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.926457257 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.016282893 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933572796 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.914947419 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.906438064 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.952875935 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.954925072 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.905271856 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.932023008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.908481147 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.907800836 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.904644715 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919775979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.21832517 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.941097757 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.920838501 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.91456574 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.92230266 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.904168561 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.956217886 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.933480597 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.908134108 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.909512228 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.909326815 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.926015981 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.019827591 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.909917225 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.907912367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.920107576 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.218268899 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.93509125 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.901042061 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.92594356 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.918075209 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.917035457 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.911179189 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.93978191 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.311010656 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.94698841 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.909036746 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.907744218 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.908098455 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.911433963 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.909603466 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.913072381 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919556636 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921713606 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.309490242 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.961803829 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.910780944 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.907674347 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.917944968 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.907800201 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.91116086 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.923819357 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.928733224 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924874789 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.208370019 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.941069746 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.911259372 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.92524954 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.915321952 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.34727047 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.944265711 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.909899429 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.314176146 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.953134241 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.346687906 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.957610492 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.910954551 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.922725888 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.942730299 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.219290893 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.934090178 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.910069935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.916663441 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.908043123 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.920416845 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922760156 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.913519993 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.910854768 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92481603 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.937667975 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.919982518 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.909947604 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.918697363 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.930743205 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.917689816 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.921312293 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.913710343 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.905983111 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.920230573 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.915874522 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.913373248 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.913523141 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.915689608 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.921702856 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.312416446 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.967702971 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.906170498 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.906454644 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.908947562 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.926132806 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.313258509 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.952283163 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.932832721 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.958246957 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.913101856 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.211867584 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.944436523 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.926885092 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.919709454 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.914610398 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.905667749 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.211649381 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.344128558 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.966562186 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.913645457 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.909757954 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.928721931 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.913583337 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.909114681 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.673030855 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.947914077 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.926705998 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.033494663 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.922887581 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.945596646 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.911561437 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.916508529 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.940376414 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.930202226 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.946227173 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.916563191 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.928082393 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.928940761 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.90943798 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.925038919 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.922610424 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.914475226 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.917937155 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.907577112 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.943271555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924968204 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92449427 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.933522053 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.035306928 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.910459932 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.21190587 seconds)
done (took 300.493490215 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.981962005 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.909743591 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.010074988 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.91094697 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.992114011 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.995613648 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.907427907 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.908035247 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.906543053 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.291924962 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.90697 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.908877322 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.905628209 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.908341549 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.993304521 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.910123797 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.908952974 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.255487501 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.911562402 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982104124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.905848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.908191951 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.910446024 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.283876286 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.909598297 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.902260065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.98255346 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.910460803 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.249410744 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.903480803 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.905291865 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.248714834 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.00164187 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.929873995 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.921594953 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.919102177 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.99243325 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.916069877 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.993428855 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.993184578 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.013188495 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.951155868 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.907472384 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.909976543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.914476197 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.913371303 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.908901303 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.939282535 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.910374574 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.911366568 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.256088653 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.922159249 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.919608897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.910736579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.911166742 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.934279947 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.909976745 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.913697235 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.003415423 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.91316014 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.974049431 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.287136115 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.293097261 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.913131542 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.912310747 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.910015693 seconds)
  done (took 187.094873786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.978678587 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.985950138 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.979393763 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.917140356 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.963712439 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.980455233 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.91610035 seconds)
  done (took 15.561010324 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.919058947 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914069749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.963401114 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.963898575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.913088003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.061677302 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914147562 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.923901176 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.911482826 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.966751692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.913902642 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915071153 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.922147318 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.912653413 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.962384191 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.924321168 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.029999168 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.915317913 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.914318743 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.065384468 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913108938 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.920958995 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.974988623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.927013926 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.915427889 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.919765906 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.50653251 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914551277 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91387542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.914320385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911560051 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.956733407 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.915580284 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.908602729 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.912055286 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.029797593 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.916016217 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.912360675 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.914915336 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.913836819 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.916471232 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.915207217 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.916859406 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.913963704 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.917139992 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.938928388 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.916280712 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.916813323 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.916607162 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916036487 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.966056037 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.916368939 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.912712714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.913092036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.971586569 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.922594974 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.915696401 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.914212358 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.918049669 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.913497966 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.066977193 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.965256142 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.916139748 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96389446 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.917939169 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.917852088 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.917162723 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.917804438 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.011519766 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.917896925 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.965799308 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.913779101 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.076415353 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.940630315 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.918623248 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.91999196 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.920465601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918066837 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.914388567 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.924693917 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.914542931 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.918527871 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.923941078 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.916199798 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.91547915 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.02993816 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.024364807 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.916475587 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.929873443 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.925085497 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.915666321 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.969600587 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.917874097 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.916630142 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.971844329 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.032915598 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.980212921 seconds)
  done (took 210.375031505 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.925869595 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.926419154 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.919631988 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.934629296 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.918948182 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.919534097 seconds)
  done (took 13.389816504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.918960313 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.919613311 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.918108889 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.919099238 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.91743171 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.919547287 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.920699783 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920690538 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.924200167 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.920963095 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.920444335 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.920279181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.920970027 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.920172277 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.923036445 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.920786561 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.91991224 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.917933477 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.920816567 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921154381 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.073322757 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.919829491 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920191557 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.922894394 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.924922155 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.921584648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.929491318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.921177188 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.921131471 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.931356233 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.924915132 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.920732441 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.922387612 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.92747299 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.926227494 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.921899058 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.925345612 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.922247108 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.919040689 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.923364504 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.921658858 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.921130344 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.921984685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.921585432 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.923405908 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.925993294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.925102802 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.928283541 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.921938575 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.923639743 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.922324625 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.921988507 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.921847844 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.923299597 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.923385833 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92778244 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.926815523 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.922934586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.921931299 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.923353416 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.923945556 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.921779375 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.924057005 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.927722267 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.931408297 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.923583041 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.924235801 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.927404619 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921718743 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.92292076 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.922842968 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.920258051 seconds)
  done (took 141.434056983 seconds)
done (took 569.70560909 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.050892891 seconds)
  done (took 8.899901586 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.942891411 seconds)
  done (took 8.831437704 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.256121366 seconds)
  done (took 10.10789619 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.935680772 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.955829289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.926770938 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.923481026 seconds)
  done (took 29.612719554 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.973078092 seconds)
  done (took 8.822361622 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.940214622 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.916958673 seconds)
  done (took 15.737419398 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.944460291 seconds)
  done (took 8.793541891 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.054791929 seconds)
  done (took 8.92795018 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.929945922 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.947880968 seconds)
  done (took 15.740228923 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.901099027 seconds)
  done (took 8.750402466 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.57946925 seconds)
  done (took 11.52333191 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.931819954 seconds)
  done (took 8.885441361 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.92291574 seconds)
  done (took 8.773740815 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.929697028 seconds)
  done (took 8.778242913 seconds)
done (took 164.030873519 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.919252317 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.919790282 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.918912169 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.921213189 seconds)
  done (took 29.529271539 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.959748303 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.95808502 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.96370049 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.968000524 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.963754243 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.958141871 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.949938577 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.949208576 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.968163141 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.960412317 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.959962185 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.959699682 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.958189011 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.950203766 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.959567424 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.959874311 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.968574252 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.958318507 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.949879893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.961472868 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.925471165 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.969089048 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.961094013 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.924203998 seconds)
  done (took 48.816675277 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.126335155 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.995239527 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.078116362 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.975645613 seconds)
  done (took 10.025456407 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.976904242 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.978964663 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.989623634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.028648775 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.051707592 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.988895708 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.951263519 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.946272453 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.932422773 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.978520246 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.055446574 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.974900727 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.06443113 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.925372493 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.112583052 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.926918522 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.924917703 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.979153833 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.029806924 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.04240134 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.92799511 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.97744329 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.981446643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.974230822 seconds)
  done (took 49.572608795 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.925483317 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.934138229 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.930810453 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.925510174 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.924630541 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.925867202 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.933408851 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.927001914 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.946905251 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.928141775 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.925305238 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.926789063 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.92516345 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.925273757 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.924717226 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.938250526 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.939975178 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.92510091 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.929733584 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.932355763 seconds)
  done (took 40.447423252 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.920484248 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.772897741 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.27052886 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.174871392 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.919388447 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.923444709 seconds)
  done (took 31.834179055 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.939226137 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.932560413 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.92527376 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.983028284 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.065613268 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.932478664 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.926925414 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.937999657 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.974384803 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.990329958 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.949836751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.956349438 seconds)
  done (took 25.369135824 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.921931732 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.922352281 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.921854574 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.937586625 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.936930441 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.935574657 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.933775489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.91991929 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.940021799 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.944922808 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.93514896 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.940405048 seconds)
  done (took 45.047673235 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011999446 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.813085314 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.981029294 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646145077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39645419 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133993611 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.4523622 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266743174 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.927229022 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197306942 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89347723 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169190762 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179248593 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925213663 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.044462585 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.415185903 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227929414 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153502536 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951389134 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788270954 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048288851 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445959013 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.8064892 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054703314 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134775375 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.057024756 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.184420335 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.885198325 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063704393 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962863272 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934970224 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925737569 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199034322 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30418462 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022149941 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935652244 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622672806 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.64278927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.913130133 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.684839981 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.873944506 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.061142395 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93414886 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92581724 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.860529465 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432471911 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269579783 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.931189179 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.636749259 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925473799 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936786827 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014411661 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.929728279 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.741731275 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912597247 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.20618432 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.92416614 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933026006 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.498571503 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.027753138 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.546539777 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.862801955 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.118277383 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718692032 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406363985 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.076521903 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.930847349 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931088632 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861906831 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.6831598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054908358 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072749297 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.947350196 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577007225 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240538791 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.980652525 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.014084131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216532344 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.70258547 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.862981414 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155592632 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883980552 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861560967 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.792043495 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863415834 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199744093 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963090369 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.569227296 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966251515 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268220814 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938681343 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945064754 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935868964 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152426387 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.810496843 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929882138 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.691690785 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225760716 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950537366 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268762963 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864618883 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.932441682 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18568099 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.141531407 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.032796399 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.537832499 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098202658 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931078359 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.015520104 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.72173672 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054592749 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.213007818 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992319279 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.029101911 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06584415 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.894302943 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230707311 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956101634 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.102557229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.943550058 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202004193 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.261544496 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.222183156 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994498759 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93104511 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930477621 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.697339408 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562314396 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.197201699 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.93232947 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299946516 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039026654 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.931907763 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866293514 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.525666932 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937881275 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.042924153 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154851964 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.744854317 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30470359 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870638436 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083519813 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046711467 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.154709421 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.591873661 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.018961043 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190346095 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29368046 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.114988486 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043893933 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952208101 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022745698 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954584464 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.219537573 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284226927 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.937356225 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.937170667 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.70777015 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.009200783 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934121112 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.936811439 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.736392923 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222021797 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960804794 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.936727477 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.821449316 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.94725879 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99963381 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938317199 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944642413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.457642149 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701094622 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.94409129 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.526894832 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160679128 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943708279 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.722638297 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126918761 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.020864299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221273803 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997148963 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.868577046 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.645213862 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.627724691 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934961921 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86963839 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934826681 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944277012 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945170976 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.315131473 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227802096 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98113209 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.701663204 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.057724198 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946578972 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.940444626 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935893487 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.453537183 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.046750335 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429344254 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045730311 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073591722 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.949977977 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.870167629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938560801 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940057797 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.935448992 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.894140494 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988884271 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.772827679 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398494104 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194622877 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.591305596 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954063607 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.727488837 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.071374586 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.954561122 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720608094 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883324958 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.035825194 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001109212 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.947846817 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.690116473 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.713444797 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505533183 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257927743 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259972021 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390973779 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.287782166 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.304928936 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277730037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172072261 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467407854 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999116253 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286130482 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884483089 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028622192 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.599771752 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.300030777 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951330209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166616193 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339556388 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.804354753 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105172383 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149693794 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972301083 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.711414828 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965850948 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.143156096 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080532378 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804421595 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164679266 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277310863 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.728445127 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056911592 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.938092724 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.637349589 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020993356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.648238292 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.300540843 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.443453871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.953014644 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446656117 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942530299 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384554891 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3015337 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.244954014 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.028221485 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874245088 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.949238254 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.949631641 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.940739455 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.913520382 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.794465136 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.192596507 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950715605 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174201478 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.185288149 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207895473 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.845221439 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.945057942 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940281514 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239675394 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.597251566 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178229018 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.249624623 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.506000209 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946615856 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874127192 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875081199 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.637896766 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.948163361 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915462282 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171989701 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.125688773 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89301014 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29331841 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249621288 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.195300681 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.95522771 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223405397 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216785863 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.677406941 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969439679 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.041506339 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761965452 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.068372715 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.210576228 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17706696 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750463991 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172040152 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.994701371 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.723666335 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.940379944 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155952529 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.211170778 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.959684651 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200922004 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.66328203 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.948474379 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315603423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003768211 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.97381257 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121878728 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.135595354 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952977334 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026984542 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951958669 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.954137112 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.953944978 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992183476 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970480637 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.086459406 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.956709787 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031403408 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.05858553 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.527898314 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.952976618 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229813511 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316517121 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282524068 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0029978 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944334628 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943336909 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877161263 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079467284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.3882053 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21695689 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.073684405 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.244495341 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969181565 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724780287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.18918706 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254897284 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218971364 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.840238193 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9443163 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051616206 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.211021602 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954773277 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.155101036 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180652783 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260236035 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415236287 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.04723989 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381606175 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218970533 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315039238 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944647982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535424701 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.953141229 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.696110963 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.984294729 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973477639 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23782504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956086051 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.326800478 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.967817399 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.147114762 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.462406626 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710104079 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313863293 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.94102592 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012141926 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23291977 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352447094 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259317019 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018027092 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957550126 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.649898323 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083693409 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.80005508 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.216356978 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.946735039 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157275084 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.656453048 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955964452 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240043918 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257927957 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.944195233 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.807252402 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967620321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.956964677 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170338873 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217570254 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19862493 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956222357 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.95597827 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.76266635 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239085796 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009912029 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882352506 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.951387761 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044625904 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194617797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970335165 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.465791541 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.659064225 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244321383 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.86461876 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97226796 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331144933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392602313 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294521233 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.468793304 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17867069 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.505170634 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.779819749 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320701926 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.955131732 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.329727953 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324640646 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.951512007 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416511251 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056461789 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.229013506 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270967187 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.962706496 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775251884 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.998750166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172258656 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549666801 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891304418 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949886297 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.010822006 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.952787337 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.081433667 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963617546 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.850791559 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769929108 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.836917976 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44382428 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.955358772 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.94205318 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.773021501 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.484953228 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055584699 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092844546 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958433835 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.661344255 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.242611713 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204274597 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.433846448 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.018589652 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.954582206 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950694308 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880529586 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.147121677 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.329832415 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2515252 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.273400426 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.060065947 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955186734 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.166436652 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1630165 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.966437934 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114373889 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286125637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060853227 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.720199458 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.630266979 seconds)
  done (took 1720.439963233 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.972765398 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.968805981 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.056109869 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.049142577 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022744836 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.077551757 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.015506824 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.048289025 seconds)
  done (took 58.094295392 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.951337365 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.179055257 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.961945485 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.952806086 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.991094464 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.953258291 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.154763785 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.964822043 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.000273214 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.962521142 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.955110189 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.97802371 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.304016022 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.977603174 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.958778303 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.977525924 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.962666331 seconds)
  done (took 76.13724151 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.953941516 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.126591289 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.992194308 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.985330624 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.916013901 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.97284713 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.069838101 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.016896594 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.957140902 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.193876719 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.294284961 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.957314052 seconds)
  done (took 91.323004319 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.968033194 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.960289574 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.959759024 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.960028503 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.959984274 seconds)
  done (took 11.700012613 seconds)
done (took 2240.19758263 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.206071562 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.180081176 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.195621563 seconds)
  done (took 6.262705081 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.103846862 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.151371768 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.273107593 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.294639225 seconds)
  done (took 10.713536895 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.249058076 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.333816783 seconds)
  done (took 6.470240102 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.323251752 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.976025488 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.354824809 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.955009761 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.958001094 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.956870655 seconds)
  done (took 22.760910822 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.957860179 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.961125551 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.957831282 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.962304937 seconds)
  done (took 9.725203615 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.938287361 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.678690397 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.939883564 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.951790956 seconds)
  done (took 21.395240644 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.714781241 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.357096217 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.70330929 seconds)
  done (took 9.663194417 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.507122373 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.803208919 seconds)
  done (took 9.197414034 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.208712146 seconds)
  done (took 4.096141492 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.986753256 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.229817626 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.488157117 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.487962758 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.567835321 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.779280549 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.253502599 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.183812278 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.411716782 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.41039692 seconds)
  done (took 25.68696171 seconds)
done (took 141.715685553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.318809449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.323332596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.154003281 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.332311061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.181071386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.154887999 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.370451613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.315004246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.791024266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.787568008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.33265195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.179915623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.319166865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.320405266 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.321806581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.320016574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.175357372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.335585005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.026315342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.237155921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.377599613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.926863561 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.212631026 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.944170438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.179413732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.107182171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.50298605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.322567014 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.185245532 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.517731351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.110914513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.386074325 seconds)
  done (took 172.959180628 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.956815886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.957637834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962804169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.958503906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.361824354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.968066231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.959775966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.957366996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.3651492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.323059799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.959532046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.326580041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.961340906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959234528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.962221199 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.958646472 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.479974747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959227766 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.959819642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.962663767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.96323291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.174580247 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.95987619 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.20874053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.451981989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95987453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.961963327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.962089891 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.96228196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961453704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96368379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.960205295 seconds)
  done (took 211.649712071 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.958853081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.958585051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.960615844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.960071212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.961266256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.96026799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961959892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959093318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.54090829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.547879233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.959785469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.963678478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.965445991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.960629412 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971801399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.960753532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.973262216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.974448851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.974704719 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.977706143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.978690734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.735786849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.977092804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.786162072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.979421954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.983652058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.961439379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.983252857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.986714998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.976263141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.979753328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.961065915 seconds)
  done (took 223.639372997 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.16562533 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.968104266 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.96899597 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.898072807 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.968899261 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.968738955 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.9165218 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.157497699 seconds)
  done (took 19.929943603 seconds)
done (took 630.071141849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.47441384 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.311719332 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.138779529 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.991765892 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.215631825 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.023368105 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.987424541 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.058573177 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.709589111 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.057179504 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.680442467 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.005986342 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.772894781 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.011907332 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.108119809 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.051083415 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.57745732 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.674960543 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.161573753 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.031893648 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.159669136 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.925858976 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.071237904 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.750106429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.793163037 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.974163773 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.153994059 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.585018394 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.997099744 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.148187195 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.741658123 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.372314679 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.001107186 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.985564483 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.047593706 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.022072372 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.325527923 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.999107153 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.104117413 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.721523393 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.038156348 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.591370614 seconds)
  done (took 107.446886595 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.958907101 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.957379275 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.956480122 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.957206666 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.957872228 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.95698033 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.956537991 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.956591857 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.957196655 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.957117079 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.956748813 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.962056258 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.957332771 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.959056602 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.957818794 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.958111243 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.958300659 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.959581313 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.958106246 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.958021303 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.958677612 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.957305296 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.973930616 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.957440483 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.959105993 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.959136499 seconds)
  done (took 52.827446045 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.972728057 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.122016571 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.230424401 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.990879266 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.970768453 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.974229881 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.989935882 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.976750055 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.974052912 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.97691166 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.067422712 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.97648555 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989633378 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.231610695 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.986297704 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.971651864 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.971237228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.970830478 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.127887338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.987598138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.990490861 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.976223934 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.98934978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.984881777 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.973065902 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971183259 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.974675413 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.442447575 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.98033951 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.064905224 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.01411107 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.997598689 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.385490605 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.25109889 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.025817158 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.984787824 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.972971675 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.068796818 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.978243796 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.972138309 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.991335699 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.976669911 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.230919209 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.468629859 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.986627522 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.973743849 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.453042862 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.077351601 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.013992548 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.982387613 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.233320453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.989429071 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.97537101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.97317798 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.008516006 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.982069643 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.973594575 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.299083545 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.984574808 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.991235746 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.978122486 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.97469589 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135628351 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.982160817 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.122589935 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.982133478 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.980811351 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.975076115 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.232481198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.99040593 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.473622551 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.987401047 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.975304373 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.067240495 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.126943477 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.48031519 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.986433868 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136949012 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.401378759 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.999024928 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.980922287 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.435156122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.002299531 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.981394012 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.977174992 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.977688496 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.977850686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.020654901 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.991807978 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.398698432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.478600436 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.317388117 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.001525289 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.990571161 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.976164482 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.298134187 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.984966833 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.977281105 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.226435594 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.485976649 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.990147184 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.983944952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.459951507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.990748282 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.99507378 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.984455182 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.238692955 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.992937899 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.022284882 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.97848333 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.983119016 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.979385024 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.994761314 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.982537222 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.976427507 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.450710413 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.088001137 seconds)
  done (took 244.485724144 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.972137452 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.995982266 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.971755858 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.97490256 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.970658086 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.977024673 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.969628819 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.971747872 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.976568065 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.971363778 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.971424168 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.970224658 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.970652783 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.970411978 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.637789774 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.979599728 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.630378359 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.974003281 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.974408382 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.975965491 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.656734289 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.985841035 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.974188899 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.97327948 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.975112519 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.972433447 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.046963637 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.976402687 seconds)
  done (took 171.272816538 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.981218375 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.159095071 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.999167881 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.019229638 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.990138279 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.978545483 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.003890623 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.004524916 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.985371402 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.978944326 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.977963776 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.041206511 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.990860744 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.122360914 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.011964465 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.012244702 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.086370222 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.988561765 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.979102349 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.979690573 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.00920219 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.975780486 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.040541403 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.110969197 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.999851477 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09776413 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.986290994 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.982904361 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.981609351 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.097366782 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.998133365 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.042345813 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.014543809 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.999531106 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.101599937 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.098307551 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.087405077 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.012036606 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.987031032 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.980464649 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.981751703 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.97008437 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.096738127 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.004011908 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.982144871 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.087835114 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.001005537 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.983495783 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.990611682 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.979853704 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.996103401 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.000730089 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.047371498 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.118056408 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.017851903 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.007806393 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.00759622 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.271509875 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.992629865 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.080116293 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.975527723 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.099888911 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.003720084 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.97014371 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.982519135 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.987938483 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.011904795 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.014498627 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.086489423 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.989742311 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.081104922 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.018537872 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.989869376 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.982102783 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.984734698 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099776239 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.100315603 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.019097526 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.020773922 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.014496692 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.979631612 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.983683645 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.972086814 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.001379547 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.987431016 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.099465705 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.101630488 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.99202362 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.985698718 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.98627546 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.985781504 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.009241418 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.108960277 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.020208128 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.079336475 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.05157318 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.060681168 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.998822819 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.997405694 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.988228297 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.046713493 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.002258285 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.995476177 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.320000018 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.05561609 seconds)
  done (took 214.663147524 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.462820944 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.037901229 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.042888975 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.296055225 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.419175167 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.8470559 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.033983327 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.035005068 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.059410946 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.223175199 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.104087202 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.053265851 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.020637572 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.007279226 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.035948286 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.054978549 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.043224476 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.368748204 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.160011063 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.143843614 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.015460157 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.345453473 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.34946908 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.477043191 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.068314125 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.374871944 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.7134065 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.175129096 seconds)
  done (took 64.885059721 seconds)
done (took 857.471232593 seconds)
SAVING RESULT...
DONE!
