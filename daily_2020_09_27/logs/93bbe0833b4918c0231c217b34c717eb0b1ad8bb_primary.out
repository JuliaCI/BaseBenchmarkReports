cset: moving following pidspec: 29085
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.746815625 seconds)
loading group "shootout"... done (took 1.191297082 seconds)
loading group "string"... done (took 0.439152203 seconds)
loading group "linalg"... done (took 8.163517802 seconds)
loading group "parallel"... done (took 0.1680296 seconds)
loading group "find"... done (took 1.374464472 seconds)
loading group "tuple"... done (took 1.996681699 seconds)
loading group "union"... done (took 13.010201041 seconds)
loading group "dates"... done (took 1.407556531 seconds)
loading group "micro"... done (took 0.211050461 seconds)
loading group "simd"... done (took 4.57718559 seconds)
loading group "io"... done (took 1.047596918 seconds)
loading group "random"... done (took 9.170364821 seconds)
loading group "problem"... done (took 1.50298443 seconds)
loading group "array"... done (took 20.371085252 seconds)
loading group "misc"... done (took 1.53948529 seconds)
loading group "scalar"... done (took 41.408322618 seconds)
loading group "sort"... done (took 3.252376293 seconds)
loading group "sparse"... done (took 12.259049367 seconds)
loading group "collection"... done (took 17.837713307 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518409995 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121167426 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128850233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121217468 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209843947 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118937207 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128915096 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085809407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.844624171 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.134512367 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113582587 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.425956171 seconds)
done (took 5.302296056 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.167390124 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090641895 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083454148 seconds)
  done (took 1.280365697 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064701938 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132835233 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065919777 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066198439 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066478032 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06601645 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065766207 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065772802 seconds)
  done (took 1.635460631 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070210503 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066468245 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064848484 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066834398 seconds)
  done (took 1.378758985 seconds)
done (took 5.652822811 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240692135 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101247152 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.287837628 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.44250274 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.609609985 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.093495846 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074451609 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.06995563 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.13055946 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319606684 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104026218 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183025632 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091431829 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.166389297 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.005040883 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11929222 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086444447 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124895156 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095366337 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131879242 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.392796596 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07840259 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.076370026 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070748342 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068142918 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.652299496 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668277025 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.119057685 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085693027 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160282156 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115106934 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.64907832 seconds)
  done (took 10.755451097 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091372134 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087640262 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067237308 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123472945 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09287421 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069899032 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075194947 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06725202 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088622379 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123436906 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089562234 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098219966 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066713227 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068875635 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073911519 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196931456 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081344059 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080991582 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067446548 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080462202 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106116428 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078778339 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078336799 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078453547 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129198502 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170915415 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09720511 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097316111 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066600076 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081111053 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114967243 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129918092 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06676378 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065290439 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119564507 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097136389 seconds)
  done (took 4.521161451 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.978230688 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.094162361 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100139906 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.628179521 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065428586 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.151244988 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240806772 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073501929 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.367791238 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113937362 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149301178 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.112512518 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147821328 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.117289854 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069344442 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.251452677 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.118860426 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.523878745 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068672082 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066990542 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065800083 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068490999 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067820113 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063374018 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069376193 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095331455 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088506756 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.1603897 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956147614 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.295787059 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.0677873 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166754323 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083410688 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354530565 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070719949 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083523603 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065297567 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.451078291 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122134619 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066344693 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171470352 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.11787103 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065715451 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.120635703 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078465099 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069249891 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069045632 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068380952 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07066941 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078703213 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101224101 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068703913 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065567452 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171832939 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065601884 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065819484 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067295833 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150256381 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06394962 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142390369 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064207356 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06870967 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102528401 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068917896 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.086807126 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.095915374 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.337438011 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.03956747 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068561735 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.921857228 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077335988 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066082813 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070353796 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066682523 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068156463 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064191975 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067564165 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072463743 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070647907 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068914641 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109475424 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067203073 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070567251 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066684676 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071992677 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097522695 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063712903 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.499637445 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095853536 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067106401 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075573232 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106248249 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065390831 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071474606 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067607163 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066977641 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066483552 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067719844 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069859896 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064007354 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096406522 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070058462 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112620703 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.141807315 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068213958 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066411294 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.074856525 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070120079 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070276421 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067536862 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069650657 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068715426 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065413062 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108049519 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067694834 seconds)
  done (took 21.795713096 seconds)
done (took 39.157205664 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.253086165 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079031533 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078138768 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07821371 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078620062 seconds)
  done (took 1.785105411 seconds)
done (took 2.989285787 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108769519 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064211776 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100398723 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099703959 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063987087 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064042276 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098136761 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064304299 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098835826 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099704574 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101946442 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101143916 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064172373 seconds)
  done (took 2.344467761 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069037716 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081487878 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083049277 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061523628 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071419034 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081426742 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061945267 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08117023 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086902612 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081662806 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081497388 seconds)
  done (took 2.038078223 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.073034311 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081404067 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083609918 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06142608 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073086043 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081611789 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061817125 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08096591 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084687958 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081727751 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08152501 seconds)
  done (took 2.034380817 seconds)
done (took 7.610858562 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064936523 seconds)
  done (took 1.236831494 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.505545037 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.162985355 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06689209 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085416111 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191933027 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.091886965 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.192890716 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069175526 seconds)
  done (took 7.714715258 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101789017 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069348651 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067048435 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066870565 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067213276 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067523038 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068281369 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068083306 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069025688 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068809258 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06813125 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067833839 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067299231 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067873167 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069137722 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067566901 seconds)
  done (took 2.400493058 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097841732 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097732177 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071462158 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072443218 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070817648 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070282989 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07249899 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072370372 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069763186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07095833 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072423229 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071681512 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071223841 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062058866 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072551054 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073197858 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069136196 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072130165 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072445045 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073898657 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072090228 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062582474 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071227399 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071321979 seconds)
  done (took 3.053550508 seconds)
done (took 15.593289387 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17566166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07347605 seconds)
  done (took 1.429595023 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066380044 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066970359 seconds)
  done (took 1.333008559 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071093797 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059175784 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076364053 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068896773 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061341175 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061044283 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.07594963 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061351237 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060774866 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061267821 seconds)
  done (took 1.856128479 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062026556 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067795096 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066836571 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068493959 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066341941 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06202862 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064924157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062126553 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068767357 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061234046 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065090492 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081317178 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065072876 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082552975 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064543077 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065106476 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067397004 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064931292 seconds)
  done (took 2.410830828 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059981756 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061266411 seconds)
  done (took 1.325861396 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062977662 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060849349 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063919955 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063637801 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061693079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060854583 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06160961 seconds)
  done (took 1.632178736 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408073947 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121109578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33698037 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068767377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076250506 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251817071 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063291498 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068356185 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067944639 seconds)
  done (took 2.704170364 seconds)
done (took 13.898984449 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08054045 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.177361537 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.088262478 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41114414 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091475968 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066642942 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112416118 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.167661256 seconds)
done (took 2.415329679 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226849183 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.311141119 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.901891119 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.069831084 seconds)
  done (took 3.491178449 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328493386 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079092877 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078492792 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06790854 seconds)
  done (took 1.776746656 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064288897 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071273283 seconds)
  done (took 1.345293679 seconds)
done (took 8.05531685 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063360214 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0927848 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063187321 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063412384 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063886716 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063651895 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063086852 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063409657 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064010669 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063421088 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063265653 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.062889554 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063186818 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06331031 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063218551 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064237562 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063368667 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063859879 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064341936 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063558782 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063829459 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063451083 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063696434 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063745802 seconds)
  done (took 2.792106514 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077526928 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065630378 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066949804 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066885973 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067522291 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066075016 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066818367 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065251708 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066371543 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065240127 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066648878 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066619955 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064962852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066922017 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065433058 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067209373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066628078 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065648719 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06536962 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066875771 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066205879 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065159542 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067442737 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066156168 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066671601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066816955 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065069445 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065578302 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067522568 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067155603 seconds)
  done (took 3.225853907 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063218666 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059946374 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060573425 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069430507 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059712058 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060519933 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060433307 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059756806 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060523411 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061015694 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060102198 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059384938 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060999434 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059765642 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059611737 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060403279 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064676095 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078747167 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060173115 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059577123 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064821578 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.0599072 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059651313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060301176 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060166895 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06012889 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059623235 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060001572 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059845328 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060340776 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059717637 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064089386 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064832592 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.068528668 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069742408 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06437967 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059732913 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063872717 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060803325 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059930427 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059717946 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060425415 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059888268 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059924684 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069395643 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060000465 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06055333 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060294064 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060266566 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.05954918 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060201509 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06166679 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065180615 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061157913 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059712167 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061051051 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059437925 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060652339 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059512333 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059779795 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059792105 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063371589 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060994625 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060890822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078926614 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061110274 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069139592 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059357032 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060458722 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063856038 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060427879 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077111457 seconds)
  done (took 5.697565538 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082344222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083856473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063982591 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064791623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06009217 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060147985 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067554751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060150959 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064828002 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080153188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060278423 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064553789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06466329 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064219015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060087897 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064591409 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067769266 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060766311 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060285304 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064287452 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060599718 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067404819 seconds)
  done (took 2.690435744 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136332371 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065588797 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104845898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074563959 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068319659 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073880462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065859866 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065758722 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065595583 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066213191 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066053797 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065859004 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06816236 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065988048 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066441809 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06593848 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065350143 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066040677 seconds)
  done (took 2.549508876 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075905575 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065759613 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086752494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066206656 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065224766 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065414636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068960729 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069443364 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065622047 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06570854 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0694524 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065252495 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065532368 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065505629 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065204637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065369421 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064903729 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06525892 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069414481 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068458504 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068585643 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069209716 seconds)
  done (took 2.73052931 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076429027 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064475723 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079718565 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065817793 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060824253 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060750659 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065871241 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064717426 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065199542 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064329151 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064712302 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059793388 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066265752 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065041605 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066335477 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064353891 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064564441 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064850407 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064612958 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059922027 seconds)
  done (took 2.543077575 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086313826 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063044194 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062537113 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082431521 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063284094 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063245608 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081648014 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062899474 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063084523 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08445632 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063110476 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061776355 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08112956 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081436901 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062576366 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082104891 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081518532 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08180325 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062527043 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062628454 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08409713 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062894019 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081868643 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06274876 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063005491 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062680572 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062657784 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082324971 seconds)
  done (took 3.231529233 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063498037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06254416 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063484381 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063181617 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065079547 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064172637 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063848285 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063799419 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063525951 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063447206 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063144339 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063165492 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063460152 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062910181 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062841822 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063334717 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063387046 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063671496 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06360728 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063434623 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063188195 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063142074 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063067088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063783682 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063969188 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063603305 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063699827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063748671 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063338706 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063692695 seconds)
  done (took 3.148566806 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072961287 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071358963 seconds)
  done (took 1.385252308 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061584917 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077217363 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059919543 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072355575 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068651526 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063585811 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068792053 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068040435 seconds)
  done (took 1.774637749 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066153237 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089481002 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062195917 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062419056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065526303 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121289026 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074431281 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073014433 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074906303 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06370727 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062431804 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073750427 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063263557 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074171473 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063258623 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070383609 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068682501 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073938909 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074428739 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06092387 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073664801 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06270628 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06016739 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062715526 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061062961 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068912392 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07683265 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073650272 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070157816 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059572702 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.08013694 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060425013 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0614514 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07014675 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064458508 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060394303 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096914092 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061190548 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065969903 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06017782 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072184827 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082322845 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074762644 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.078204571 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062532648 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062341703 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060340596 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062517623 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064422166 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070110169 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060275944 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067870032 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059869809 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062252713 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071164479 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061006685 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065958295 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069924508 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074014281 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071007239 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069083123 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075671702 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069057789 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068162371 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061360248 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080303605 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061985911 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073210843 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074554167 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061640249 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073013039 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060004468 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059129059 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060225429 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093307262 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062518537 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061397447 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060042117 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060455761 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061838485 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069560953 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065693484 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067467159 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063478882 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076389712 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069291229 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060191114 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067312834 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077926444 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063965636 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06054721 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076241682 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06360754 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060382365 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077456417 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070138091 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061953882 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061243663 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063734225 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073481646 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061743983 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059130696 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068526775 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06189669 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062652581 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064123773 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067882782 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060208708 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069802384 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064623878 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061268543 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058689193 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064206068 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060688246 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058643601 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069304405 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059526956 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073750768 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066286183 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074311657 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074943334 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070697166 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075570758 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059992659 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058811113 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07732142 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069032658 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061412488 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077068629 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059205052 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070223725 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.192518762 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062110927 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071651253 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061576275 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06442309 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062116584 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066649562 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.063208563 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063426796 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065777897 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069990906 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073085607 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061759834 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07083169 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06150368 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076761939 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070701637 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065544013 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064534509 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061750377 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072834919 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067315162 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070217152 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060460682 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.061699912 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061011289 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071059167 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070792255 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062250776 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068302765 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065313959 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061554535 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060499908 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062367018 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064707019 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064289729 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061936177 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068938595 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069938744 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075155383 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067910021 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069691567 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060403328 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060523988 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.065148511 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060880479 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065185359 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070070104 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07600623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072068827 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081349448 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060557133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070141998 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062243148 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076937864 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07417821 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061951183 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065079714 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060610139 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06235398 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070103412 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072367324 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074489504 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075537588 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065307904 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065512128 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060816727 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075835363 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060991905 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069560418 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.070096896 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065155271 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060753439 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062386663 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069321422 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065099992 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0606611 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.076346401 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06673117 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060118865 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074851363 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060922682 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070988726 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060849247 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064501542 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066004575 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062498592 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070177653 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076267081 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059490146 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061202954 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076212102 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062943971 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062167945 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06897908 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075779041 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065486456 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068606363 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071042876 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070306434 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064760974 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069806368 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061043201 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069425393 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063391801 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07205324 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060370276 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077755105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059925959 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074889686 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060162451 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071234246 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060336324 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069019153 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060814514 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076163996 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061950876 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061016656 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071093274 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058729295 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068591331 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059942731 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064912009 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066346589 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.06939385 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0613997 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069241374 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062097677 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068762359 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064467058 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068168082 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069032599 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064741608 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059749893 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068072446 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070645101 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068206835 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.199299033 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062538228 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062484752 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072002626 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063724637 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063444928 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070049615 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066490859 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067578421 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062811756 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063345176 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.063166321 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069730376 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070665279 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079076835 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069719089 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068606764 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070344551 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060475755 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076622455 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061247678 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068606535 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060194059 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066908892 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070308144 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061572394 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079806312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062653385 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069033864 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073591841 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068908057 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0641671 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078790442 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063959444 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069292977 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069107071 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065534378 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067221868 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062128271 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069256452 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070257007 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071676987 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062090953 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068672836 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069669704 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063012256 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068104706 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062736875 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069509528 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062848757 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059968474 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065925237 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072274842 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065482426 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065678862 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061006214 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060000585 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060922143 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067606196 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065224605 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069393345 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.0763904 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059865192 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061234487 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060179198 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064263649 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07853143 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070266154 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068593417 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066288257 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062579061 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062783142 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062543765 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.06179019 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064538604 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059942321 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060515124 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071836135 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062762794 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06543312 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061604639 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062001126 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070598168 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065952082 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06168185 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067084047 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060937016 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066076139 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060067003 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062003446 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065793943 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060547183 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064189518 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.07114293 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077056449 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067390349 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06958429 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061579157 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068644916 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075870578 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06755029 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061809453 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070020263 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059950604 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078826874 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070150399 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068892394 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070274419 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06182985 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076958771 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065031515 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070309125 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075577486 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061306996 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066646591 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060015214 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075667311 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064764019 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059548654 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06793887 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0681182 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065908505 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071095064 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060713729 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068409912 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064618967 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063901634 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.06171572 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061067957 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068962395 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075952144 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061060971 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063754615 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067669023 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068122475 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064783884 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.21428839 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069326327 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063550648 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064084218 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065830119 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063254682 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073444006 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061962299 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066292917 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065941906 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060908539 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068361965 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077656681 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070901662 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070920887 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06054002 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06033465 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07736476 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063922275 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062834194 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067505747 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069146123 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073424569 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070145527 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07719962 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062470129 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067565685 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073328066 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062332902 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060447967 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064867343 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062443941 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070428405 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070683506 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06873826 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062893738 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067833366 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07418673 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061963941 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065705652 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065837112 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.062181473 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071329574 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069189648 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06978287 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062495877 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060673875 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06516088 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070015989 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068267894 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069935836 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062027754 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066855597 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074175822 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068149962 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064069797 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061493259 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063731875 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069617893 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064977763 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060600718 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065410798 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064712645 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067772111 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070249323 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065089184 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060533347 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077547384 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068917444 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069867847 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06248781 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062858506 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061516855 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060396897 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071953087 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060419498 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062519049 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065256556 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062661551 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078355344 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069013714 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.080341896 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062091065 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065619586 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060837932 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070175717 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065545328 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060851948 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07128911 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060097288 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076363592 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072682502 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066339672 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060145454 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066040891 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069430575 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077552244 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070364809 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069999195 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064654339 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070608117 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.0628166 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071576537 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060686593 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060222798 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07082588 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069491349 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07299347 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060354561 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070798712 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062446928 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068899426 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068999325 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062129701 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062528334 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06227804 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070039363 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065293262 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069269243 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065141532 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077061534 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061108634 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071443462 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069059711 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070602429 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074154462 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071717983 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067718208 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060675248 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067192402 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067753572 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06086781 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064656193 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062883131 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080420113 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0614134 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.200975198 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074846747 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067411978 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062883928 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066665388 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065923039 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071450751 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062802488 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071097521 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065048794 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061711773 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06610172 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06554171 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059822262 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06128697 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061296737 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070645445 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065591395 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060809227 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080282175 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062708329 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06945523 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07198265 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067709047 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062544664 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059564041 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061400451 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074320202 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076557321 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065239544 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07010115 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063178533 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070835502 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060207073 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0691981 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068828916 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069428301 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077565846 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061337484 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075806477 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076363889 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065310987 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07059225 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069984958 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061958702 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082383662 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069594096 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062153682 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071611183 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063193573 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060014865 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059835367 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.0621383 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072017605 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060316263 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062961137 seconds)
  done (took 41.752287869 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09720768 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061802501 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061107845 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06043798 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072153101 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061480134 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06051047 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061776454 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061637824 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063658884 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060905602 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060531884 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071907509 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074431973 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071413429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066370996 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060630725 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061383182 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060541193 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061244735 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07043274 seconds)
  done (took 2.738788398 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06616748 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074212417 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07011733 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075370512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068421803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064409514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071418381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064481703 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071943537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069836765 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071935514 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064126903 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069789475 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06968567 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069876142 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064655311 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071906806 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068961178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064482919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071692376 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06519818 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071578863 seconds)
  done (took 2.854125846 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062003423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061080983 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06930704 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060728931 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.0596269 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063662899 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.05980762 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064385994 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.064651222 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064473719 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069698701 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061154843 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.059712706 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065928573 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059889441 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061072175 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101920684 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061390787 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061361388 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059939803 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062868798 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069171726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059957497 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060706873 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066934314 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.063834681 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060513517 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062887093 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061236474 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064731907 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061226011 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060058719 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069565966 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068852246 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064899241 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06467928 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062053886 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061277859 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060566922 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060285873 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068528679 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061793515 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060248031 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061446618 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069223032 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060551077 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060132384 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069337941 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059825542 seconds)
  done (took 4.468370396 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069811916 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111463876 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066572997 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09197638 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072748485 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066663407 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066120681 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094085293 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06159288 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062577765 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073733899 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076322632 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063388562 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06482853 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067688307 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063400025 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063823751 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063035203 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065760078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062889666 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066066575 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067081506 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072280722 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073157465 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063886542 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062052135 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062741848 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064121795 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073202022 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066088685 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064568313 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065010509 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073406228 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067757284 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062502235 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062890279 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073828639 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063078635 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062960984 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061870992 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062310193 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064517543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067148625 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074122777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063363404 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068030614 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063294042 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061820596 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073615338 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063176995 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066982955 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074142858 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064438461 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063580785 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064326367 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072867338 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063400515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062053729 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063196581 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071996291 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060748727 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0637365 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073790282 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062843707 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066595766 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074218058 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068008463 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064206795 seconds)
  done (took 6.07308544 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06995108 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094731798 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072402914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071773739 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070780669 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070887255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070822019 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071402174 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071115877 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071453288 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070935393 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110057913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06752017 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074969882 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070610288 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070749732 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070691531 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070816054 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071093069 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070411977 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070586224 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071207122 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071561052 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071352222 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073180621 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067018486 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071302818 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070793288 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071043112 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070873362 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073237996 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070971332 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071049635 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071393216 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073127302 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070774206 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061398615 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070913865 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070696197 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071020578 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067489973 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071341754 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070752001 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067039981 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071023584 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071061705 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071140166 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073173198 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07760726 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07164659 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071054777 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071673247 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070702747 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071311927 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071778821 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077774582 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07106858 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069932844 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069583282 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070040998 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070839477 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077543584 seconds)
  done (took 5.843287111 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073136227 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065413268 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077223989 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059003047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060584785 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070107337 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060679899 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060342206 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069035025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067228574 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068631207 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069823323 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071701454 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068674565 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069411515 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071619663 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069577616 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069191822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066854716 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069644501 seconds)
  done (took 2.722489159 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074992489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07915951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066854002 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069955025 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066606316 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06995063 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065150772 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066201088 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066216578 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06585622 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0707517 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071155175 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066518979 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069868679 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070873861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069385142 seconds)
  done (took 2.463235901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065725138 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066111972 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065893939 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060507168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065103034 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061518381 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061244291 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060075855 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060711159 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074872447 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061479633 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073919015 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061247583 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060791939 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060874786 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066949304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060634739 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061217717 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061417996 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066024159 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067741666 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062451877 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065007158 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06113302 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067286919 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068530777 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063173875 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065404454 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061562512 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061975197 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067371289 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067785571 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061375157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062172723 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060514358 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06164482 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061338689 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062032683 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066971559 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061338527 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060162927 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067018916 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06181337 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062150106 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060749084 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061842915 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060761193 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066971433 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062104829 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066816739 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061230788 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063235644 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061931027 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068465959 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063999956 seconds)
  done (took 4.854936422 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07534997 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06409121 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058956956 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060888171 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065203722 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066482501 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068223069 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06644884 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066509202 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060382735 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066010549 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065219981 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066512886 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065557747 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066158328 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065881669 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060292794 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065591364 seconds)
  done (took 2.543055161 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071205879 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064293954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069033079 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064383334 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064524547 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063996566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060588973 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06067132 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060487818 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065182609 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065058989 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064554046 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060674467 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064887203 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065200852 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064776231 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064835119 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060518792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065528007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060639294 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064971167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060988466 seconds)
  done (took 2.765158553 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086193062 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083897626 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.126753873 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079614013 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08751262 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071837914 seconds)
  done (took 1.896608329 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091362591 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100770331 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064254481 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064264552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074176106 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068437499 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068366034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068626507 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073620755 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072390111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068661613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073804214 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074002244 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070171411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073808271 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076149038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069158168 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068558816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065531565 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076078102 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068381018 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074091378 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068488802 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068331186 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068546117 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073319959 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075893813 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071391791 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068004729 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073338326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076104187 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06870329 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073893244 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074366347 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065566056 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073817154 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068467178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076430584 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073951563 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070223472 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065653016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073551806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074079226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070152374 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076866477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069022359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070338582 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06863416 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068819697 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078535283 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074084011 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070837787 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074452738 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076802009 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076741208 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078590282 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072988665 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071106122 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074483709 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072940043 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070168381 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07467036 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070592753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072600272 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075624794 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070355993 seconds)
  done (took 6.153031051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097410243 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065072391 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068032161 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071470399 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068740487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067582892 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068716295 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06753962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067824409 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064771118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101379512 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06750059 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068754026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069164011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067863522 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066863956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067341381 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06853562 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06525089 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07651725 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06723526 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068761753 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069816626 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070362071 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072525348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07604531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068459911 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068697034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068658781 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068602933 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070524496 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068925854 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070263582 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065911677 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070308904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068500934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06876815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070294207 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068405035 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073860787 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070077611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076478746 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068884348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068587853 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072238888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068540366 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068481172 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065996515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069672256 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065740246 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072491408 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072001707 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073074395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070477417 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068812541 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069276087 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068201689 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068201206 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06943065 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076663488 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070655095 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068777751 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078274191 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06849781 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068616619 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07005157 seconds)
  done (took 6.035514666 seconds)
done (took 126.146007006 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208778792 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181842792 seconds)
  done (took 1.739503385 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071999914 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095533759 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073341001 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133192212 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070274582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103389129 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102625368 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073901471 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070009917 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070116896 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070930572 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07284145 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136294982 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070271932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069957694 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072006051 seconds)
  done (took 2.72439764 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104935353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179940381 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111391076 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068443937 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104660056 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076102034 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069551203 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081173564 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073536993 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07174363 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075950364 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074839198 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071561299 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075084825 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073664655 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076607381 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071085534 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075704044 seconds)
  done (took 2.908182532 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095608226 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08385572 seconds)
  done (took 1.556001341 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152891137 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103106446 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14166593 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317429889 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.129638764 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12599733 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127094977 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.122258039 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107811917 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.11944342 seconds)
  done (took 2.816797702 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104316289 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173966935 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308145302 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118436895 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074319035 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096164727 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119738 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080265278 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077329853 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077335965 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076768095 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074997225 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099390157 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074000435 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073282075 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078378852 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104183436 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074442135 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07490701 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075501044 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105756091 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070655918 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076220219 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074239773 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077572474 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077612107 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071721079 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070331719 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075419133 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075260428 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078277635 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0954082 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077632126 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.097565241 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074520002 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099302379 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074692774 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073957591 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074750826 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073967691 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076694726 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077060633 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079403312 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07636727 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072489042 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074505625 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072052095 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069992647 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078269022 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070888721 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078364845 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077052304 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097980916 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071514024 seconds)
  done (took 6.090547652 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105104734 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103127925 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068785723 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110195987 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103981464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06909308 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102454976 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098862995 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105944494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067547235 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067485016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067524235 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074147015 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077170776 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11235655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105368993 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069093391 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067861622 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10480733 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104596032 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066905936 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099395719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097837165 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103985912 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066764812 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067840447 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066321284 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067097331 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07162898 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073027419 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067147772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073540445 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07865481 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072993853 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066301499 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066802181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067422336 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074383326 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074086961 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075738103 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074582491 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067690651 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068158938 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06867934 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069266242 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067725568 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074879732 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075273194 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073727476 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067538616 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067912241 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066649556 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068375114 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074881906 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074405969 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076229877 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074719613 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067411797 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067882006 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068931041 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076147724 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074810621 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073256367 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067706363 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074884331 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06700556 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076402499 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07999703 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068896074 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068446297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068126823 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068350138 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06856947 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073769062 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074594489 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06937188 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068528673 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068375411 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075965525 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073120203 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066477456 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07272846 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066589317 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068013914 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0677519 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068692645 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073390038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074470883 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067531629 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068026844 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068987171 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068912088 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067878566 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074248861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07513903 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07564173 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074573667 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068593264 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074919559 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07465271 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06903244 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073790812 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068214601 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068017806 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068079539 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073669313 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072831652 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074783397 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067403691 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066398096 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071375728 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073430983 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06553332 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07050142 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072543421 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.071187403 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065143359 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073536641 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06526571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072380808 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065952601 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072849552 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067917184 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071252723 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066464158 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06690838 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068085032 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073335596 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067565794 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066227454 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066260188 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065934809 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072011489 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074228937 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065994403 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070920444 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.070928049 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066253921 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070976235 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065401013 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0725602 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06611131 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065969711 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064773785 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072064733 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06545526 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064923758 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065227935 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.071798417 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065513917 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072520849 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0696854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064635378 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073301027 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071878501 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.06939164 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.072533302 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065167232 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065284373 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06537975 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065458274 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.068807596 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.069893984 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065327638 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066009672 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.069485155 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.071385351 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064456017 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.069547792 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.069219236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.069479843 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065687131 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065414138 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073125812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071461065 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.069571327 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.069642904 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.069484788 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065835333 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.068803875 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.069699403 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065250777 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074928164 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065412763 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073961939 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070442193 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.06862906 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.069992785 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.071391295 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.071514258 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072197725 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07433642 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06500349 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065294901 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070756508 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065129267 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06552453 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.06899128 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065783377 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065488827 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.073548991 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065310747 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072134156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065393387 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071068745 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064544765 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06578265 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075446727 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065294434 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066120501 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.069333172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06553534 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069307586 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072737834 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.0696016 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065391143 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065303284 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070292345 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070840842 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065338062 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06506856 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065752834 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.069856108 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.06880484 seconds)
  done (took 17.490655665 seconds)
done (took 36.713151367 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.225071506 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172234422 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.207657225 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118878235 seconds)
  done (took 2.244393592 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.092675652 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102308673 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076608768 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067156635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.08084051 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067373202 seconds)
  done (took 1.942120032 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254059943 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189273313 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173988216 seconds)
  done (took 2.066116762 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.224249458 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197228115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.503690486 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.306840968 seconds)
  done (took 2.787787137 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.129858682 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079798905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064917217 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.076455138 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.104584184 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132082233 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.084077867 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.105211701 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074658181 seconds)
  done (took 2.363920386 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128835688 seconds)
done (took 13.122678262 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.230354414 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111440098 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106888575 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074539796 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123745056 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099025354 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.182087236 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081202899 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075945515 seconds)
    (10/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.179194895 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078483842 seconds)
    (12/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.260878613 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093958676 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092834192 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208923296 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11994585 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068213365 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.242044256 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 0.355923703 seconds)
    (20/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.078862467 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204314434 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076052356 seconds)
    (23/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.074332117 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.126376681 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074809354 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141995828 seconds)
    (27/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.096948227 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089343058 seconds)
    (29/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071976651 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074608686 seconds)
    (31/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.170268816 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0827158 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075687529 seconds)
    (34/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.169356744 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076188455 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.241367578 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065611038 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163621073 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066073163 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077640259 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.217402309 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.240530298 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075464427 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.144859593 seconds)
    (45/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.080525699 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 0.151978515 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094038176 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.156875031 seconds)
    (49/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065640769 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.186004627 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.168132824 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.06864698 seconds)
    (53/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084092666 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079904508 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067463849 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084670591 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.1864542 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125348308 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066259157 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076365238 seconds)
    (61/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067203125 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065328247 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16452438 seconds)
    (64/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.147450834 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.17690131 seconds)
    (66/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.163295728 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.150083276 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065583997 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079019245 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093334488 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095828612 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079311353 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088212193 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148920245 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186004317 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.230385886 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198438392 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.189935363 seconds)
    (79/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.074622395 seconds)
    (80/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.138729727 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197439545 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067716212 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.385335763 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 0.140267479 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078660272 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.068800616 seconds)
    (87/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.096531429 seconds)
    (88/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076202962 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.080766471 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091845746 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224580615 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.143039335 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074988095 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073788689 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065797249 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091444414 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064423462 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.189725715 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073250136 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.13904433 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09169791 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065705775 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135557775 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220313104 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068488751 seconds)
    (106/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068042153 seconds)
    (107/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.06843067 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178239474 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066366597 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157071895 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069000254 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088810921 seconds)
    (113/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.082318781 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077444626 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075356768 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.206009732 seconds)
    (117/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.146264591 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.180787422 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075344143 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067083843 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097620315 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157975226 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079699433 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068275244 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155856105 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076417292 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162693722 seconds)
    (128/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.067255567 seconds)
    (129/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065021317 seconds)
    (130/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071168319 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077248643 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.200382887 seconds)
    (133/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.079723707 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066575267 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06489193 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07653339 seconds)
    (137/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077413254 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089209371 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065909001 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065509652 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073365792 seconds)
    (142/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078063364 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07434333 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 0.264795189 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071341541 seconds)
    (146/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.20288407 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094037442 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065463744 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.14235666 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066379446 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077073528 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089023633 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077910733 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064809243 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074300929 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069273408 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064888623 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074534367 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074799429 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.122180509 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.098241399 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065852659 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07333657 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151204208 seconds)
    (165/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068077194 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077925343 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066123168 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147466568 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172260847 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066279948 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087307517 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069472401 seconds)
    (173/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068165493 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123693224 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073378682 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066491282 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06581316 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073129948 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066352422 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06689853 seconds)
    (181/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066512086 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068568408 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068801244 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075742604 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187521988 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066205112 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07299 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066385615 seconds)
    (189/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064856624 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.142989618 seconds)
    (191/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065005188 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074604221 seconds)
    (193/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072798453 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065688149 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158336974 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066196366 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06631479 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077453354 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077385855 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.22719306 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067091475 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152252975 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069632015 seconds)
    (204/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.068349044 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068509607 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175162557 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135322931 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 0.170493776 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074530315 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067913869 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197955546 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068687907 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069194063 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065726638 seconds)
    (215/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067294347 seconds)
    (216/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067822694 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078866174 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077926238 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150252855 seconds)
    (220/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066550227 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076437745 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067365606 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075571708 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165214819 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074537161 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071691722 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119148127 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16208602 seconds)
    (229/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06977876 seconds)
    (230/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.066059356 seconds)
    (231/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067479823 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067402362 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074230471 seconds)
    (234/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.171133397 seconds)
    (235/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.143970659 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134764982 seconds)
    (237/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.144809531 seconds)
    (238/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06795025 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.219300616 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067629478 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092844485 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08991466 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065919446 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065534153 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067100037 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067899747 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092093151 seconds)
    (248/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065573303 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185161174 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066752722 seconds)
    (251/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.075262184 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086666998 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065807264 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089524743 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087577546 seconds)
    (256/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074806385 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065791862 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067568808 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067043546 seconds)
    (260/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.168346433 seconds)
    (261/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.06707197 seconds)
    (262/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066946223 seconds)
    (263/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.074385567 seconds)
    (264/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.065862171 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06552386 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067132552 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073934548 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067575995 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066387649 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076064203 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067614061 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066945162 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117033198 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074303709 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066162292 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.125601189 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065657756 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065391008 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066297596 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.14731976 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06772239 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074019853 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065103238 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074739228 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066871807 seconds)
    (286/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06790732 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065567118 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151167483 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067023372 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077480846 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066670315 seconds)
    (292/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06729168 seconds)
    (293/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.07987031 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065667548 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065897827 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181465762 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07830478 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068598416 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073373711 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066147708 seconds)
    (301/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.06587458 seconds)
    (302/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.066594452 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065194816 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070469478 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130824064 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065541088 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068238901 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065461138 seconds)
    (309/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.065194657 seconds)
  done (took 33.745214524 seconds)
done (took 35.210826794 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087221722 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092495892 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075465177 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.087001193 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082955085 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102440658 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07580448 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079806535 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083092409 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081693887 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080350746 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07458001 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076897579 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07668493 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074431535 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090405742 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082409829 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075179142 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07587297 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066253549 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075371332 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066811869 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065465764 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073870735 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078307421 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073212068 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075852218 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075973806 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067269613 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066725721 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071402338 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075504596 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066058771 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078310758 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075307267 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075112322 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078510559 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079258715 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066087151 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06691819 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077810448 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066671515 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07525622 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073103311 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071879038 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073985466 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075472346 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078666072 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089849718 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071888566 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078215961 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077886662 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078075106 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072785889 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072175713 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0752765 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073235569 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090913998 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075723237 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071767159 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07745767 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076487992 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073682048 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075219959 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075040565 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078001045 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078225213 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073663064 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07804215 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074329525 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066129037 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074905254 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071535891 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066464042 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078430523 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08120062 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064958958 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071027302 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074776013 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07533385 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065946977 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07114118 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065365606 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071843592 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071113882 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072844776 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072147752 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074062972 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065284958 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075491469 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074046675 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074606366 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064923646 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078122826 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065532763 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073433559 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066708351 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06634231 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065420665 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072351938 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066436808 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071158755 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074443247 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064807364 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071902049 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07912079 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066752609 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074190042 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065133959 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066039414 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076853037 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07730945 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066914222 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071502608 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065440557 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072115619 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065897334 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066686151 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065901303 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066510415 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071032326 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066413627 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07150908 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071900545 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078259169 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066042569 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071252824 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071117102 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066249249 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073402739 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066483077 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066616659 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065588493 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080283224 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071552239 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066788948 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072099696 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071286327 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074970879 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064891487 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074833893 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072345171 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07038837 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072870574 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064864641 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077591629 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070924075 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070626287 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.206069234 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065950795 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06426536 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064929622 seconds)
done (took 12.87805945 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068280792 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103526042 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071704049 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080114956 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077378864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066675576 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069977013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082478465 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069860373 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086348213 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091510297 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08779927 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.094194464 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066410996 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067159863 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06792596 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065833044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.074654142 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.081340485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090124726 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096160051 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066961323 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.075796651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083925829 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077872249 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083580602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068439102 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068064201 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069720856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084179071 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092893936 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.067224532 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069007682 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.081102108 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081051562 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07432038 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068038259 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071398423 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067701786 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067122699 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068569853 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.081338977 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070840714 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071192828 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067450379 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067686766 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067337443 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072284424 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.080149912 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.069598651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072855027 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076600227 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066892896 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065565497 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065269749 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.070571822 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066442359 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067445832 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067512525 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066768309 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066908625 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069725879 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067888517 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.067545191 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070340721 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069222611 seconds)
  done (took 6.416914786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083672354 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092825928 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082147104 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081442222 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065536049 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067179801 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067863611 seconds)
  done (took 2.116198709 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066668919 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.078821948 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081402095 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083082731 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.074987415 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085088835 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068348129 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098455144 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066901774 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079821454 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.112633909 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084104655 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070584619 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079015233 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067495796 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.074596578 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067866003 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.076313375 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075814163 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083451991 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071214697 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09663847 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081971682 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06800905 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.086754153 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.070931607 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06662907 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067985869 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068434934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068564077 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06833946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106144096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.070892571 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079498794 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06860167 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.0669671 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.072978304 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070804269 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06955141 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076612628 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.072116881 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06840864 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065946128 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068262359 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069467874 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070548806 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065963149 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068119948 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067752075 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078449689 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067208813 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07068341 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069985107 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071987951 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073807376 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071560039 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076460891 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069430497 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.078501711 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.0751964 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068236495 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075401855 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074464885 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107213274 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074903684 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071918388 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07117066 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071933474 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067849015 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069147065 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069076262 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074847991 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.066687695 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069840827 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070831286 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068833442 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.070906928 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.084179608 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.083731458 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079934425 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069595832 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068282491 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071099446 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.083637716 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07194991 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06811554 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070816857 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066331599 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072051867 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068583926 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073791767 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068584982 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075528363 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06990308 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071457395 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075473765 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06706695 seconds)
  done (took 8.758347477 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069400375 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06851077 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069526644 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068451278 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068362359 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069574178 seconds)
  done (took 2.021425926 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088268698 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066544874 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081657951 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068092497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10321916 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.074540872 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074357511 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075786276 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082801165 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080488901 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.074286498 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.077062008 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.074016098 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069501122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.073842689 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069299119 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074387424 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070430267 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079825447 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069545694 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080901389 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069397898 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069543943 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079443742 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069953912 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068547699 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068850504 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080334886 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079820008 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075372275 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069123778 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070508778 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075701221 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077310339 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.073875012 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075694081 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067469288 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07303165 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069824597 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070042068 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075654593 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070008335 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069973852 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073274706 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075247449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075717534 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072811034 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071474652 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073497689 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072947064 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072912445 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068718887 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070662229 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072796693 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07556702 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075564968 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073391433 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073710137 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069741464 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075529226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067706097 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070093984 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074858525 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070342864 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072311109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073213569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075546256 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069096902 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069574343 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067409578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073387712 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067214565 seconds)
  done (took 6.8751675 seconds)
done (took 27.741350446 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54235808 seconds)
  done (took 2.090828699 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.569118153 seconds)
  done (took 2.157951959 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.664774262 seconds)
  done (took 8.253937611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.28408909 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.309757855 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728272595 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132958937 seconds)
  done (took 3.072386763 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.749363053 seconds)
  done (took 2.34495297 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234706527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226818349 seconds)
  done (took 2.062363438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339693596 seconds)
  done (took 1.9282672 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.119950098 seconds)
  done (took 2.704726536 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.220570883 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157281017 seconds)
  done (took 1.973758112 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.491312206 seconds)
  done (took 2.083124956 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.130646475 seconds)
  done (took 5.725877791 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2286825 seconds)
  done (took 1.866415559 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233349979 seconds)
  done (took 1.836849469 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.764144567 seconds)
  done (took 3.362014444 seconds)
done (took 43.057627183 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081282738 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083917425 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084275985 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079334592 seconds)
  done (took 1.903762758 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072401182 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068154536 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071309095 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071615551 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069823997 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071125673 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070939794 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068382355 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069481524 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067876825 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066794242 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067958525 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071210523 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068028417 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070683525 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071465369 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067835619 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067847591 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070619249 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.06760596 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070935314 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068377131 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066569138 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068116065 seconds)
  done (took 3.26386188 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07716337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071204677 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073949222 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070120238 seconds)
  done (took 1.901107418 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073987561 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081661619 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082380251 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088288181 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074833949 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074727266 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08013419 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081791665 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064017414 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.083701877 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06614934 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065218842 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065342493 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083559095 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.0805125 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06086661 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062005059 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074515811 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074169376 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076655413 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068496063 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065720784 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077127374 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075577405 seconds)
  done (took 3.391165112 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077744335 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063943285 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075891643 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088648007 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090547948 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064250521 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076999944 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09150055 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121629621 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066178118 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072086218 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066039801 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104758782 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066381648 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080486543 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106756969 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108237363 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068157698 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096138252 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063617278 seconds)
  done (took 3.270083034 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074661012 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067787593 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069907714 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06591912 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076777818 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074574162 seconds)
  done (took 2.037931602 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068195114 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067885822 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06810627 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067410559 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072593353 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.0677668 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066337178 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068106033 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06819394 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067960074 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067183218 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066442922 seconds)
  done (took 2.428490266 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163458142 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067036228 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068224552 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064883025 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070347774 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067133413 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081420808 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071251918 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085600967 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067187144 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068074566 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069690307 seconds)
  done (took 2.553702276 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096471042 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0984951 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14092242 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114557957 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093480718 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095179124 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.159520643 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.135046048 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116644136 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069746453 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086693132 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099897526 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098513327 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131783854 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11068053 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072905866 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.111978982 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081110234 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114584879 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122554613 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.115673144 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121457727 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093385308 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097711184 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105988817 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116454155 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.07078839 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070503774 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148942831 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.10056929 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.091282427 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097675271 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106443097 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.068188876 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084846255 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.103935318 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082202798 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118403664 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.088047021 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097991984 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078889662 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128528669 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103110336 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101517891 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130837351 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093256284 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11077529 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.106658906 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082780177 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.118571692 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098533008 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091370746 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080482181 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15838413 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086925931 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.107899183 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109338393 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079385496 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08653684 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098681421 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125387533 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.10305631 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11024991 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.252547692 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090668051 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092148793 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130668431 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085744819 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101348235 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129854841 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.092302209 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076932572 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.096703808 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070145267 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09609057 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105682311 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09107949 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109769909 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076969648 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126198633 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106884151 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073584114 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.117788681 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099183368 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155295206 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095429378 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101499072 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09147764 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.150749548 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085534324 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079680812 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099411695 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128285359 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094255036 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09632977 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128604524 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097168794 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087800741 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07543784 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.089559828 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101799825 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106925669 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101755647 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088592706 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085752028 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096413693 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075109245 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081182059 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.101925164 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085607174 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.124594692 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109116116 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124514728 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.080141108 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105840278 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.097477939 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12929694 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117366983 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.08368265 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107863057 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140031884 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.114172497 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086074662 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100530883 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111088508 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107303644 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097545713 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.137951739 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116167157 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089660566 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094070065 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.245345302 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.110038065 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153776494 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089934814 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105481978 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138925997 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.114780344 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091604891 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084792852 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09567779 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106550875 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.140260602 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095207876 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.07111002 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091561324 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128671666 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074417497 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097292349 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091222572 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084564393 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082173454 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069010967 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101592892 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137387415 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.113820409 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098823924 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.103894657 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068703069 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096770282 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102320724 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138836573 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115454564 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096831583 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.096937359 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105105205 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080498695 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.134074734 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.132974966 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092219836 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089646729 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121267306 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.096506355 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.105138442 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117511521 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103690415 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.100567173 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.141541836 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121540841 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.124855949 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104807017 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123729445 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081451508 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114426911 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073515228 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101578386 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075741271 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104049098 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077729823 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.112407409 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080288422 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099616899 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.069885008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073296797 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.108766883 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.242663154 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084476162 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132779786 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.128723917 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079848423 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099869027 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099508498 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100798997 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106744825 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088609712 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09174722 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.080191514 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080333866 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099273792 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094242981 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107247701 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07973214 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076285256 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137598035 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103850331 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091549219 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09529812 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.120797527 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089600639 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088748223 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104039705 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138526955 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.118381668 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080908521 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092088173 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.07011996 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08540277 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.075906885 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109055394 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075230811 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109988579 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.068631833 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.128397467 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085218557 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100622608 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096741018 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128803153 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091188549 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1292119 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087626974 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108032212 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094943957 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095722251 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.110214664 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.096663012 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105877517 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110851135 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093339844 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090270096 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122328174 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106078507 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116947215 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106409889 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.135572447 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112661022 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075765856 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104617052 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099734285 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146000775 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100247847 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090515849 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094352381 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101120955 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081079307 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138360824 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084009932 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085335931 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110596827 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088151284 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095932239 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075270949 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.09870164 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092819232 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110420261 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.09771288 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092023589 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105201735 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106791766 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084659825 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.0856216 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120992423 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.125162426 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.097969596 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091005274 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087294436 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096363819 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092818267 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106719355 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079090404 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074934995 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.068300544 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071916721 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.114599269 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105067895 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096523814 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096892509 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100427515 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071392389 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085913576 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087876346 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08086917 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08706406 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112244591 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100438922 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125712903 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098869179 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083659453 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137148863 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124438469 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083438685 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089352565 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098925344 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07393618 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142717747 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116614689 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07620177 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083780521 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076680298 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082205859 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071100523 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101306013 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101465298 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074684804 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099723904 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095440244 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12057274 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094748221 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075366318 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077623029 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073328991 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074275488 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096780009 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.074385053 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071994749 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119037013 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096627735 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101321406 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081657355 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.340520612 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134462681 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.073245728 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.137310626 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086303642 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11366392 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083971298 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082804747 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091759248 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109308658 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108741403 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114718791 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073011467 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106695742 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.159187513 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078386111 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078868924 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076903687 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113297909 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089354693 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14196043 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090917723 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094766325 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078403199 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129735024 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.105390281 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08487089 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130189651 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081337847 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072859345 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.088154458 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.11329657 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.073452759 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076807725 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114192773 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.511583162 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09201397 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077972864 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089940276 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127407848 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084445996 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109448039 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119508397 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106666643 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.186833906 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075579794 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092181634 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104671879 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099248355 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092914047 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080475228 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088993448 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088489653 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.085174184 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106932411 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081289013 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092230516 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080684731 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103788148 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.130935052 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086575945 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102616986 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089213395 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091272598 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100007091 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114070828 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.108471801 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.090362089 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089783765 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110579713 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085070487 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.23726655 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09768653 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076540994 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078729947 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118368792 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085586742 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09518002 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105038807 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.09091765 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114195402 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116973312 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111374355 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097474181 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080830069 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087427631 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088661218 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075169535 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079421005 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075936631 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.072030825 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108116999 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086213873 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082548327 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10066475 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109227811 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101070081 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107656885 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091545008 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098150035 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101613569 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.127939977 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146600293 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099018786 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.12396843 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132827386 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078406832 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077212114 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.081947864 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132499121 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.082534513 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093213999 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.236582423 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079184827 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.082353036 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091908834 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107303982 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083610579 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081090509 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098804312 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109281048 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085181749 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081389612 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093511644 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109036295 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129451761 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090061067 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076541244 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108899633 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102901681 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124403696 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074638801 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082095294 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.129608842 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088780015 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104746421 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08091696 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124726358 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13268155 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075546364 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090343504 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073831111 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089653191 seconds)
  done (took 51.003603018 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.149377646 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.146389289 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081294299 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096597684 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185340175 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.194912977 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.116951834 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093707832 seconds)
  done (took 2.857646939 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069324293 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083797967 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101155664 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08446201 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068404069 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068894879 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201895276 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082374344 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066107981 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106646137 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075569851 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067606157 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.358457088 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066645062 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067605914 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07602687 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068166689 seconds)
  done (took 3.459086309 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371365862 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626533429 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.318400065 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075592953 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.961781867 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087477014 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.201754908 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136535899 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081661494 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545489797 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366017611 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130032837 seconds)
  done (took 18.658744925 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077156058 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075912826 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.078848042 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07923056 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075292866 seconds)
  done (took 2.136116252 seconds)
done (took 100.48578153 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085151339 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.172178785 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068663647 seconds)
  done (took 2.025810156 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.08331842 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081475338 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081510385 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.079331355 seconds)
  done (took 2.079732138 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075696894 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077127437 seconds)
  done (took 1.902007147 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234603821 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16864612 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091524541 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083836895 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081135397 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081430569 seconds)
  done (took 2.010294066 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073012625 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071926349 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07258126 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.072750562 seconds)
  done (took 2.042920635 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066956319 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06676435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069220516 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071829952 seconds)
  done (took 2.029964692 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083704517 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079778732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078992876 seconds)
  done (took 1.998018926 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10871446 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097384665 seconds)
  done (took 1.962277312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080701451 seconds)
  done (took 1.833794817 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091159455 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.097388799 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139945444 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105552067 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137450087 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12210683 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074870195 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076622453 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072378532 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.072763925 seconds)
  done (took 2.743231465 seconds)
done (took 22.954580926 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079912018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365077166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361088116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088751657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730982031 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358011249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973426437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092131271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.100787018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069312198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086076733 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650502159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962436564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327124442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948517742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324428648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651889678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069633618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068923896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069258368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956490127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06788747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068643386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069548723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649146622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373123424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067872506 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322066065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069601946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071481261 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357169954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070370385 seconds)
  done (took 16.248402227 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070997025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121416034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07115811 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081807626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068759574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069017294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071238214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069563913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110579341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069838588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08685849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068963242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073441804 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071097893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090439212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070766875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071498935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071409926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070309982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070908094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088689496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070214207 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071548244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073100665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0712932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083688319 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071582387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070788883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070389442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072826775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073745857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072333381 seconds)
  done (took 4.205603525 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123455291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127297087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074592394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110386116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119476569 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07173989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152289896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092631014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114605663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069790975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086750624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068448178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105306509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07139318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091550448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070713638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072268018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070846721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07050632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071768783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088583384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06940083 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069095622 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068343825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072339153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082313773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068525445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068184771 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067569877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070622363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073823882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072135183 seconds)
  done (took 4.476843017 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070971864 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072098025 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080420508 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081224247 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067920295 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070156598 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070865552 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068549654 seconds)
  done (took 2.351692004 seconds)
done (took 29.045983468 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080357109 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068777977 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072937323 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088966207 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074958616 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071876317 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065313348 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075451188 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071943049 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072037428 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073451035 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067790109 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070612343 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06587035 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072836347 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067076707 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.073828268 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071750664 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.072192084 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.073290024 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070221197 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073043973 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076459239 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.072441725 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.072843103 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.072703586 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077159753 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074187591 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068448158 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071204079 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.069978401 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082513011 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074696642 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.074430354 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067692041 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067949461 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072237762 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07004628 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.074541874 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076950961 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070477315 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076606517 seconds)
  done (took 4.790976478 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089000361 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095127315 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087370968 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083787701 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.106834674 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083674964 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090809024 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080479877 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079301828 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089888904 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07503821 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080117031 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080240863 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073529004 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079913337 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075852382 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081038414 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075264084 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080099028 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080604734 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092620167 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073477583 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080670371 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082298346 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076189255 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08094028 seconds)
  done (took 3.937126363 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074041585 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088727728 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092583932 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142524418 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111494586 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084127194 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083098911 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103722653 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.102456919 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069069871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073308258 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095866039 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09767617 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075906712 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108300274 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087063697 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081050575 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0711098 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076023013 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103662998 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092267231 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087220972 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101097894 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087146467 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066454674 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07651498 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073958472 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082192562 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075040936 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07941438 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07109983 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071038122 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069353385 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080878404 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072898029 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066952004 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090124193 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079071665 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080854928 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10415587 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07552837 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067821658 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096338177 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133703356 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068206586 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071057539 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072192406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080828647 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070008787 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097813662 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086917753 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068199113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.087167501 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070137558 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070101866 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084380098 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070597837 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070800635 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081065685 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075041083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089278622 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073454924 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08855645 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068433796 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079635189 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069730638 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069875171 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067255767 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103583458 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075907408 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.119583866 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069555819 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066381328 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080877338 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080092599 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075634711 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068580903 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085135461 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077615064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070218097 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078168943 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069328438 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071998614 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10452286 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067660918 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06695023 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066310879 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070785777 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071782233 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069243873 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081977796 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067746872 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071267601 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080433824 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066509286 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067231542 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069042351 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067294724 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065826819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078721668 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072190142 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069679356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080525847 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069446587 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071123855 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080877357 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075321156 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066021781 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067653022 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068276816 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068279021 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070648904 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070397636 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069926079 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074046871 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074317364 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073633393 seconds)
  done (took 11.066810689 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162757792 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152269601 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07055642 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146282049 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0752194 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071704456 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146609015 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086900222 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06713519 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068486496 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066657064 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094054721 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089308529 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.101329551 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071197088 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06703713 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09251549 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099882979 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150990239 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14532828 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08980386 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074674152 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069116473 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068851506 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.068702423 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075944976 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083577225 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075114724 seconds)
  done (took 4.448339738 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076018545 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111604619 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07370287 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093417618 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087599706 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06922315 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071361417 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070228317 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086515279 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075955744 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069153873 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074038738 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07266169 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071580994 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069944572 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075265644 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075781912 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067982001 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072647016 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073421533 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08012337 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093824942 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07328155 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069284465 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070880691 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067672474 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073742988 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078976357 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068822118 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099505685 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066627305 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073745917 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083639618 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070191399 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068992416 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069869957 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068629066 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068184243 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067153394 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065575482 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065280061 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071547979 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06574024 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072764673 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080949331 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073949169 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.06793126 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069172885 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069430038 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063966406 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070164149 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07000149 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069240559 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07524764 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071040744 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069220665 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068727707 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098435971 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075634206 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068587667 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067914252 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069877821 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070263395 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076115652 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084741125 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069275014 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065556146 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066717053 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071323752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081174961 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06629186 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071872162 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063901876 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067095593 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06921811 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069905194 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06829588 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065813807 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066482286 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069013246 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068878404 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068843865 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068269214 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07183862 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067002016 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067548005 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069713374 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069892958 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075545754 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068292974 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071452443 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070314192 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068236953 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071976258 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074054638 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07183418 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088077063 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077891549 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06958264 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066771775 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083358641 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070911744 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068136289 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075764436 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073805832 seconds)
  done (took 9.459857372 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091910428 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070762028 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088848373 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096172592 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081556334 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074709685 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08276449 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070752063 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085099317 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068458597 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078962553 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067480338 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081346436 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077636497 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069893824 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078322707 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070913703 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088418559 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08352728 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067688362 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077474931 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081233066 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081570128 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086531824 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086484138 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087299135 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081718789 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072229506 seconds)
  done (took 4.057067531 seconds)
done (took 39.518085063 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.831788213 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.004169039 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.829753455 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.047713111 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.903527937 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.856493075 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.060714266 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.833365828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.049622892 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.86418336 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.139851769 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.267980493 seconds)
done (took 67.513063236 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.912692254 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.994549019 seconds)
    (2/2) benchmarking "String"...
    done (took 2.058107703 seconds)
  done (took 5.819305073 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.970880125 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.478875381 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.1118704 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.83441956 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.834541081 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.34818076 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.642864613 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.324120093 seconds)
  done (took 31.345152161 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.009900844 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.05767267 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.550720696 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.580371938 seconds)
  done (took 16.010682824 seconds)
done (took 64.919508504 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.843924326 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.832891939 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.838793286 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.864933747 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.83747174 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.83532509 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.841881835 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.834300981 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.850450648 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.969493317 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.831058499 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.838067833 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.837457289 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.868186041 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.446125045 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.880916984 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.84868114 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.84588969 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.835587317 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.875125377 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.837508603 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.83719281 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.290286534 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.994908887 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.442115689 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.165256643 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.431502909 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216512366 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.845407604 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.834794126 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.09581665 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.257176078 seconds)
  done (took 206.671294855 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.837440679 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.619901722 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.767256561 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.845355536 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.864703463 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.013944854 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.938248168 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.238624926 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.83666113 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.847757425 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.946381765 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.836943721 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.020292836 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.778590105 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.876434492 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.87368376 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.991445808 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.045284722 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.874457539 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.985477295 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.857502867 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.815529735 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.743470367 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.938445801 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.863841477 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.916553534 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.84474034 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.83515199 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.023134799 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.915921917 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.843819338 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.86141158 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.027433108 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.705123269 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.851396163 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.857948373 seconds)
  done (took 170.709406747 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.023965492 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.844518948 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.844019522 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.89328772 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.95836156 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.839037045 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.51190358 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.845198575 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.161339215 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.835545328 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.839463865 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.836294735 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.839441447 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.838381902 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.848762683 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.956057208 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.848062183 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.85605395 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.846589347 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.864253976 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.843931923 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.838188278 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.840162472 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.839665292 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.840121219 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.837353747 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.841454977 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.471857296 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.114822424 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.852262586 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.853664456 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.001203317 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.874551553 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.229142442 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.85971103 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.949513685 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.849273479 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.919806571 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.980729975 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.859188492 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.078078133 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.957047006 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.851843428 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.851500477 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.916483931 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.870843188 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.85245321 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.854026296 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.862733798 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.908474273 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.121328394 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.851464821 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.97255619 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.347023362 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.850595158 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.850539914 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.848893907 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.459456662 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.848697426 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.854393988 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.855171584 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.852107399 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.851796514 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.854531817 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.235861644 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.917281629 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.209111419 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.308551886 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.862963645 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.438758206 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.912307169 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.849313726 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.849221083 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.852183726 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.851399845 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.853827488 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.85071686 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.858247213 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.972963325 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.855336038 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.973691325 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.931035302 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.966207177 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.851320748 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.861294027 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.677734457 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.925015526 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.880077441 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.671120785 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.847363582 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.223475048 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.626905307 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.844296827 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.8383888 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.859814856 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.836959514 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.844565341 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.843013471 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.925174712 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.842632413 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.845845233 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.967471017 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.559205405 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.170402579 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.849084162 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849467134 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.863132834 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.934437132 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.973046664 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.845928996 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.915195278 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.851912421 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.850609156 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.965878217 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.852488544 seconds)
  done (took 410.457932595 seconds)
done (took 791.685531132 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.454425605 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.431578522 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.523073112 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.445263064 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.419848889 seconds)
  done (took 14.056887685 seconds)
done (took 15.841995018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.861105794 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.856436347 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.904946542 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.93527436 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.868492581 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.865084783 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.930298227 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.868601581 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.902400377 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.903888718 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.932933471 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.932106506 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.872309866 seconds)
  done (took 26.41918984 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.858232338 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.995910243 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.070765213 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.891401827 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.856788855 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.074937211 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.916525516 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.990996012 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.988500532 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.077977083 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.090682483 seconds)
  done (took 23.601219293 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.85841839 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.005923367 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.069413974 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.895393136 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.857805384 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.079172135 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.922112831 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.99620457 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.002160501 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.085075012 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.093737374 seconds)
  done (took 23.659967294 seconds)
done (took 75.462551315 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.861694137 seconds)
  done (took 3.653521876 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.88000614 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.054269759 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.859994384 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.865465569 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.86283157 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.862252861 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.862239347 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.859908561 seconds)
  done (took 16.899895371 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.860315015 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.860007121 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.860556857 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.859211606 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.863656573 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.862968835 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.863397186 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.862177625 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.860810554 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.860534962 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.862073508 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.859722849 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.860884705 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.862472895 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.861518733 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.863643388 seconds)
  done (took 31.576730733 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.861801618 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.861153345 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.860041534 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.865487173 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.856075148 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.859128126 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.86127971 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.859532944 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.860548248 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.859189256 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.860827842 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.858217277 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.860354457 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.857029317 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.863637187 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.859416804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.857716733 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.860792982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.862247897 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.859607404 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.860069032 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.861774539 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.856036264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.857121707 seconds)
  done (took 46.433382091 seconds)
done (took 100.358538574 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.636024713 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.632352727 seconds)
  done (took 10.062098214 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.859221777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.855886362 seconds)
  done (took 5.510410959 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.857396663 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.861544095 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.858994011 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.861278675 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.859685256 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.858658813 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.858066972 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.860169677 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.858543726 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.858142394 seconds)
  done (took 20.385401125 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.859137326 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.863715541 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.858126471 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.857373263 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.861009312 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.860220701 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.859043586 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.86527569 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.858670762 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.859298233 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.858082269 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.8584055 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.859827565 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.860948016 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.861821422 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.860731478 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.862518832 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.860203657 seconds)
  done (took 35.27536931 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.861089125 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.860306622 seconds)
  done (took 5.515495882 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.86141881 seconds)
    (2/7) benchmarking "second"...
    done (took 1.863666067 seconds)
    (3/7) benchmarking "month"...
    done (took 1.859949135 seconds)
    (4/7) benchmarking "year"...
    done (took 1.862413459 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.86213698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.863879831 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.862667829 seconds)
  done (took 14.828701671 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.862477331 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.019431133 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.071893186 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.475310518 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.864718447 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.865229495 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.7304535 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.863509802 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.869257765 seconds)
  done (took 20.417950537 seconds)
done (took 113.78758823 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.626057076 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.861896566 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.106403912 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.927792454 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.883691875 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.200816578 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.880507646 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.493861971 seconds)
done (took 42.77401018 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.938617819 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.859748846 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.905386618 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.903646165 seconds)
  done (took 22.462289825 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.861729232 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.174977459 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.885967257 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.692629359 seconds)
  done (took 22.427944453 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243547895 seconds)
    (2/2) benchmarking "read"...
    done (took 2.212490678 seconds)
  done (took 6.254044075 seconds)
done (took 59.880682188 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862571866 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.864334506 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.862672445 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.863329397 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.861392825 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.863108765 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.865526792 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.865474784 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.864266118 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.863184336 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.862999189 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.8634814 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.863806904 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863225369 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862012328 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863661568 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863866557 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.865243664 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862584835 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.863585606 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.864304384 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864145408 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.864271465 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.865811802 seconds)
  done (took 46.524033072 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.863737099 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.864933411 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.863181241 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.867009295 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.866098575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.86375036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.864999141 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.866943251 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.867907795 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.866921074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.864383994 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.865187037 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.862568464 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.866360777 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867106923 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.864097172 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.864909663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865585455 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863049525 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.867073306 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.866091363 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865315982 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.866557736 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866537585 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.868504463 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866780233 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.865256339 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.86548251 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.86631173 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.863944935 seconds)
  done (took 57.766805232 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.866240817 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.8651776 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.865408515 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.86842605 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.866305683 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.865612521 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.864612197 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.865061039 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.86584989 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.866893848 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.86590952 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.86614649 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.868522608 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.865037709 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.866160853 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.869363661 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.868117663 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.865825473 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.867674143 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.867954414 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.870862693 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.868227189 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.868400455 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.870199635 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.867086242 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.867674013 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.868453046 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.866379894 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.867316616 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.86933531 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.869891153 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.870205644 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.867683433 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.869147339 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.86917104 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.868321301 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.868104536 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.871060992 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.868247662 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.869108045 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.867648435 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.867701097 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.867449059 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.868259367 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.866514416 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.866093733 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.872610106 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.870668566 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.867941572 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.86877263 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.867274209 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.866843315 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.87151941 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.869678287 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.866769267 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.868187027 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.870072958 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.871746628 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.869686905 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.870941609 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.866398063 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.868242175 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.869426842 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.870785999 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.872107106 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.871391346 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.868888875 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.870141584 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.871246534 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.866992952 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.871373562 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.867756965 seconds)
  done (took 136.32114924 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.869169437 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871983276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.870958266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.869607886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.868890869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.87043243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.868091106 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.868038242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866158806 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.868836545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.869539308 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.870954518 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866882002 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868559546 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.867809405 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.867846514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.867657331 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873795199 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.869566556 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871446268 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.86914344 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.870728312 seconds)
  done (took 42.930593903 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.87275885 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.868220561 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.868148044 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.871128247 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.870453563 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.871312387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.868048058 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.869944132 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872967211 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.869379079 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873733694 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871063741 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.869717289 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871147638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.873580818 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.874496705 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.872415747 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.871910586 seconds)
  done (took 35.485336913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.872704333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.873186975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.874473297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.872616319 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.873753926 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.872402204 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871959706 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.876745031 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.87260876 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.871381732 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.872959024 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873081531 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.875768621 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874434895 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874416488 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.875068323 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.875239785 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875819387 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876685592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.875913179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.876052796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87447828 seconds)
  done (took 43.038122406 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.87690427 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.874761984 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.874997282 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.874607181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.876372929 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.874996741 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.875095462 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.875078258 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.873790706 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.875810318 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875839166 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.878102981 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.876564526 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.876303202 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.875871275 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.874647468 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.877460043 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.875823549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.873336008 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.875121696 seconds)
  done (took 39.31988902 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877100654 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87741873 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876380391 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87462623 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877196484 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.876073222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879003199 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.875404142 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.879696113 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.877532111 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875790958 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.880068263 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875166094 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.876504737 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.875797839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876908172 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88029634 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876984462 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.877879729 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877615891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.877593044 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.875493932 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.879279873 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.873554624 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876947623 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.876313589 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879339399 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.879500625 seconds)
  done (took 54.370582995 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.876794579 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.874284942 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.875650359 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.880056098 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.875700752 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.876939156 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.873356852 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.875409443 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.878647361 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.874821636 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.874167962 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.874080336 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.87549724 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.879496961 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.876798288 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.87203887 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87398322 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.877539706 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.875838771 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875004413 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.880592563 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876906362 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.877834064 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.878067206 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872773992 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.871628047 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.877263073 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.877297908 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.878310711 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.877469683 seconds)
  done (took 58.090436592 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.897192626 seconds)
    (2/2) benchmarking "in"...
    done (took 1.896389526 seconds)
  done (took 5.598440639 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.872968372 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876672007 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.875913803 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.873934402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.875721487 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.876172957 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.87751088 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.87762392 seconds)
  done (took 16.81307637 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.878730694 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.874927688 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.876135331 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.878381636 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.882484318 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.887258368 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.878913083 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.880154627 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.885241269 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.878647765 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.880238955 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.883091114 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.888096282 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.881720063 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.880191904 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.876636718 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881863176 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.880983848 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.878018742 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.882743945 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.884835116 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878857047 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.877681305 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.880310271 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.879841312 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.878976119 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.889586291 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.877326855 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883122342 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.881124078 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.886478534 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.877509334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.87856223 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.881052788 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.877764594 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.881884613 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.882655883 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.878250908 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.87418455 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.875091591 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.886024495 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.886447514 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.879734757 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.884827889 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.884235836 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.875192834 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.878762865 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.878631633 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.876227227 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.879885032 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.888132894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879140579 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.875416061 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.880605242 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.882905349 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.877114101 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.880619356 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.882023105 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.887139106 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.888862075 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.883068844 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.900505037 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.887007154 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.877146637 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.877466298 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.886823554 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.90167231 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.879084064 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.882000797 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.879144791 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.886521148 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.879952499 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.883368634 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.882386112 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.895757378 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.890418963 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.883499746 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.883626886 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.877665849 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.880092914 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.882900582 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.878471457 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.876025829 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.881903265 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.893946395 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.904235909 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.879653205 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.877736109 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.882840124 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.880748808 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.881644559 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.882568415 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.884003445 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.880384776 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.880545402 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.886273255 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.883088074 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.880835522 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.884118505 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.896016688 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.880826712 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.881529752 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888423836 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.890997041 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.88694759 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.888690922 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884764337 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.882872745 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.893248506 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.886220727 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.879405772 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.884667866 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.880757815 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.887072644 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.882456956 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888632493 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.892577427 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.897655025 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.88467451 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.887196963 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.889002933 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.889752456 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.898062395 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.906086465 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.881916815 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.890230636 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.888759446 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.896978813 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.888824241 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.87954139 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.887078802 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.8857062 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.882573764 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.885087037 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.884132068 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.883687012 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.883201637 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.883893882 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.881944701 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.879228774 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.887479767 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.883347974 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.889528322 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.881005704 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.888945037 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.883567389 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.887099624 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.897188033 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.884634712 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.882361707 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.88442431 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.889772784 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.887639563 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.886880287 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.883445181 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.886598563 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.885303422 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.885321104 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.887786938 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.888021869 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.888249344 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.886205226 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.891703363 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.881321962 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.88737559 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.885910244 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.886213187 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.888243216 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.885683653 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.892464767 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.891052934 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.884777786 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.88841006 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.885016732 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.885587281 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.888432745 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.887206166 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.884599411 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.88775077 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.898821459 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.889783187 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.895824274 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.885801989 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.896756303 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.881291077 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.887999871 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.884063298 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.884179161 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.886252122 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.887631083 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.883662984 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.892102164 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.909298503 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.898105778 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.887454693 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.886395238 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.890598799 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.889325665 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.891360292 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.88611788 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.886908781 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.891493877 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.888436194 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.886081785 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.888978073 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.890755781 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.886962504 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.885837233 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.889495305 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.886123062 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.887891326 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.888772535 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.889523478 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.89080313 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.885583237 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.886755132 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.888028806 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.88906725 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.894981455 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.893345544 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.887935354 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.890047231 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.890315675 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.890919456 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.888432823 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.890148475 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.892760672 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.888916424 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.886864137 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.897245771 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.890543159 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.88814214 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.887863061 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.888925335 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.891451689 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.888026821 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.893330673 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.899085803 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.8912488 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.887548979 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.892153672 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.88931646 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.892305033 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.890497403 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.889497988 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.887015178 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.890069123 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.891007454 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.889444121 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.895055944 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.888727505 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.892978082 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.891500616 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.890525875 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.890963505 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.89260065 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.890176621 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.894074365 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.894717434 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.895671643 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.890816058 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.894527888 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.892417017 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.890571432 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.894859458 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.892238083 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.904358533 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.899598289 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.887759824 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.890794996 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.88865431 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.890547454 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.888813616 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.89355176 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.897724044 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.891673045 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.892572905 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.895223764 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.890623009 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.89179051 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.898629871 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.893163291 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.898021553 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.89262287 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.89399252 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.891254546 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.891030833 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894610679 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.889170879 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.894298685 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.892966918 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.889491932 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.891523852 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.891731309 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.904937585 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.890744366 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.893579626 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.899244494 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.893798798 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.89363688 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.893793553 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.89352562 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.891049777 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.893467394 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.892494498 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.89711116 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.893145734 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.893591541 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.901215124 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.895462549 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.900514438 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.895409403 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.901882789 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.892330951 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.890744075 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.890263041 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.896752958 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.901484578 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.889880717 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.887730715 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.902280627 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.893448055 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.893639034 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.896818404 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.891206493 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.894313448 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.894127846 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.89716284 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.897712842 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.89562003 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.89409797 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.894555744 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.892965609 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.894077693 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.89815945 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.898394618 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.896349433 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.895673132 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.893966971 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.893935884 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.89664225 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.897394057 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.891602766 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.895269477 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.892944884 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.904812061 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.893627549 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.895783676 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.89844463 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.892903214 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.903988059 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.890905658 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.894588682 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.895256674 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.896970405 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.899993529 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.892421829 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.894291464 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.897821433 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.896414416 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.89818657 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.910431595 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.905619015 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.902778941 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.897404022 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.895775405 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.895073132 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.904853622 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.919677551 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.895389306 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.896131317 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.90284549 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.903386863 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.896883529 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.901048265 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.899010041 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.903210108 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.89595879 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.898518896 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.900088836 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.908963498 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.896501379 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.89502931 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.897872932 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.900656871 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.89898404 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.896863376 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.900350914 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.898849188 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.898236072 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.909102185 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.895346579 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.897993979 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.896838389 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.896892232 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.895617212 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.896666325 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.898181008 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.897410607 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.896278783 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.895388261 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.900753659 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.900486817 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.895576085 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.900306869 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.908331501 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.897241445 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.898064998 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.898950856 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.897883575 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.898700851 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.896996938 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.896306426 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.899569121 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.897716213 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.898967521 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.901000473 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.907626636 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.902631545 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.898085993 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.898249308 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.903802382 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.900338411 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.8997758 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.899474147 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.908494471 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.90113448 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.910393644 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.913071181 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.900149929 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.902103329 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.909173379 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.909443625 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.898375542 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.900083212 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.898552625 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.903651045 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.902447871 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.90241058 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.900837567 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.901182465 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.905923648 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.903622243 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.902399424 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.899321087 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.900209766 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.902461796 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.90219295 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.90709336 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.901899543 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.899082248 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.900065807 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.900521533 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.899542472 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.905425132 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.900672496 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.900974761 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.90224065 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.899477757 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.909952789 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.900732356 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901014233 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.905810561 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.898717385 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.901094987 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.900490756 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.900395629 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.901149136 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.906351262 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.914317335 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.904107879 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.904023821 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.903368232 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.907232987 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.905010766 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.901132539 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.89918995 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.900157291 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.910840164 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.901053198 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.902931773 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.903874754 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.901451836 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.907467948 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.901454131 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.908468302 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.903120385 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.904272122 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.901779108 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.906895993 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.912289328 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.904704921 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.905181518 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.909808951 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.907877392 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.90537372 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.902028602 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.90278481 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.904166411 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.905945795 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.908067706 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.905477236 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.906697125 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.900653119 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.905430657 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.903957005 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.905264103 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.903494919 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.903433643 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.907434845 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.916578572 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.914366729 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.900458146 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.908833048 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.903398157 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.904526095 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.918387776 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.904558595 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.903997299 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.903368361 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.90649201 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.90678676 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.91292806 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.913725332 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.910379843 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.904268329 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.908135805 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.923073791 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.908086789 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.913804835 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.93747324 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.905500013 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.905265937 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.906017296 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.907420875 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.903855702 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.907253849 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.904237692 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.913438913 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.905340046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.902768387 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.913666717 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.905248359 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.904738858 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.904010352 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.907093998 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.912482752 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.90656291 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.914541424 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.904958603 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.905458071 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.905404139 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.912510339 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.905487545 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.906359949 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.906647024 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.906768348 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.906089731 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.904747989 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.914915352 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.906311295 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.907643029 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.920484664 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.920399721 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.904862384 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.905956561 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.904255709 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.911723101 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.906759666 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.904763428 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.911961612 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.920783778 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.907938401 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.9143377 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.909043735 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.905775078 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.908357072 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.905987347 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.904442223 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.921489233 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.916620316 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.907249718 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.908438454 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.916755515 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.908880407 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.91589319 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.910618099 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.905995761 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.9091563 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.907338441 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.905620263 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.905836184 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.908619486 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.91100726 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.917850455 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.906483801 seconds)
  done (took 1131.206587352 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.908045234 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909032236 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909364459 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.907877149 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.907003776 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.913481903 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.909923798 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.910284131 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.910027408 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.90797285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.908692449 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.909634499 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.90711832 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.909261821 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.906759765 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.9118876 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.907732768 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.907583755 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.906579079 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.908932094 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.912790402 seconds)
  done (took 41.929803097 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.910156815 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.909597373 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.907293886 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.906946971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.908029564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.90774204 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.908753826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.909936922 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.90979385 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.91457834 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.910283934 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.906507326 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.910775123 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.9113358 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912459856 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.909838594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.90901929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.908993624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.914132864 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.908649291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.910218622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.910234636 seconds)
  done (took 43.852295974 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.908949926 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.911925185 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.910968786 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.911493986 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.909710825 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.910433492 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.911045812 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.91277736 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.909398402 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.910338009 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.91716561 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.922390843 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.914012998 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.912650615 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.911267001 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.912497065 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.056358642 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.913212281 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.912812999 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.910328633 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.912560556 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.919298769 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.911662737 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.912702253 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.911107992 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.913067002 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.913444936 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.911027853 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.911782544 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.912274721 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.916178271 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.910705553 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.912862567 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.919223165 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.91192792 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.914334377 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.917548973 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.911795105 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.912414539 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.912357562 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.923580319 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.938049658 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.913391108 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.913532952 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.921124197 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.911492011 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.908445146 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.911176495 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.915542811 seconds)
  done (took 95.754048664 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.906855909 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.907255314 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.906779223 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.908683048 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.908044779 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.906116174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.907084034 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.906426312 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.907030064 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.907777438 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.906585885 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.905756944 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.907886577 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.909217639 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.907434527 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.907159479 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.906251775 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.908134397 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.908017557 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.907970675 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.907477995 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.906500565 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.906465253 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.908790554 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.906818311 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.906421441 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.907216424 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.907911491 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.908504043 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.90684081 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.910371502 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.907922479 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.907114881 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.909456909 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.909259977 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.90695747 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.90756681 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.909357375 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.909206551 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.909288488 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.908837897 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.908599719 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.908616772 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.907957058 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.908841634 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.907825163 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.910640514 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.908779014 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.910985301 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.908958826 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.909647492 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.908645634 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.909187713 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.90981614 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.910277617 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.908656646 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.909324944 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.909392629 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.909299152 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.910328612 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.911279173 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.909645072 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.911267273 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.909366167 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.910334706 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.909721849 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.910336213 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.910154971 seconds)
  done (took 131.609257617 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.910724491 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.910872676 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910100899 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910449847 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.911139152 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.911822074 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.911387802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.909281459 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.910940549 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.910642483 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.911436594 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.912503528 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.909534231 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.912572271 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.910584801 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.912580591 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.912079947 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.911258956 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.911088147 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.911523287 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.912352181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.912599554 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.910890992 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.91365159 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.913913258 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.912094888 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.91295984 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.912942303 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.91134594 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.911822683 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.913133695 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.912037035 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.911432327 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.91280172 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.911482843 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.911661984 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911697203 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.912750533 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.913202727 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.912807657 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.914188908 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914193768 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.915098499 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.912715498 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.913898399 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.914007372 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.912630928 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.914740348 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.912680489 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.913735611 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.914012479 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.912778012 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.914483288 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.914128083 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.914478101 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.914254425 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.914838608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.914395796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.914311617 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.914694679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.914399079 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.913743255 seconds)
  done (took 120.419413369 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.913257274 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.915316864 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.914101422 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.913937729 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.914644225 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.914349346 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.914617049 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.913077694 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.914597246 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.914113959 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.914885323 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.914962742 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.916593689 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.914184583 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.913992786 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.915971375 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.915018142 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.915188927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.913341728 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.915073498 seconds)
  done (took 40.131541708 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.914954759 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.915221889 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.915579655 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.91684685 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.915002128 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.916030106 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.915844552 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.914619727 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.914638732 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.915240056 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.916035641 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.916740593 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.915977974 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.91717771 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.915540764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.916128661 seconds)
  done (took 32.49285721 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.917016431 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.91609927 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.914199188 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.915219983 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.918099513 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.917166939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.916290268 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.9170948 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.91652431 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.9159561 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.91805106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.916165394 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.917850091 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.916331858 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.916387137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.915821641 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.916801464 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.917026908 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.917956851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.915998883 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.917751108 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.91751156 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.917283512 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.916352072 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.917579715 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.921146747 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.917916986 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.917163787 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.916681014 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.917407159 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.916655022 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.918256426 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.917955885 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.917355606 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.917148473 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.918614551 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.917140274 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.917321898 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.916612805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.917335749 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.917097373 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.91809432 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.917903934 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.917390568 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.918652383 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.917010938 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.918444777 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.918573706 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.918839916 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.919708631 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.917595671 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.918665908 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.918751105 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.917953166 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.919108473 seconds)
  done (took 107.304288053 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.919305921 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.918267811 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.919583469 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.918983644 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.919352883 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.91806308 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.919313767 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.919364286 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.918347406 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.920151348 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.918738732 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.918002572 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.919199581 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.918752477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.918418856 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.918629055 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.918232935 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.919479077 seconds)
  done (took 36.384642044 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.920719992 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.920113689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.919907088 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.920101361 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.919143541 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.919439996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.919822729 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.919556798 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920023741 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.920798983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.919439452 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.920356458 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.920109183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.919756215 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.921292964 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.921140889 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.919988957 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.919908848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.920966089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921520481 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.91976166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.922126755 seconds)
  done (took 44.09348798 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.922108609 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.919919032 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.935231278 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.947374347 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.941827657 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.95962304 seconds)
  done (took 13.473439356 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921214348 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921777166 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.922443843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921019049 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920729834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923706753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924982094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921534625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921224296 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922343575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922464188 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921631396 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919962135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921106025 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921491802 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921009602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923229287 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92290687 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921897225 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922146138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.922690067 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922090212 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922901901 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921778526 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920826787 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923281723 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92310271 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92318038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923687065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922204094 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923289738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924270538 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92323279 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.923751654 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922783601 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922873842 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923621566 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923521388 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924727968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925739358 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.922140226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923804066 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923349034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924313139 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924353163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924486024 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923287383 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924291038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92342404 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92263276 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923196684 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92372913 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924133738 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925200267 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923488346 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923879862 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.924949201 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925529829 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924350035 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924521734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924698467 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925397503 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924520871 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924636348 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924095291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.925205863 seconds)
  done (took 128.780504161 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924948686 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.924467079 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925267284 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924759936 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924068578 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925542367 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92377379 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924155992 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925326691 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92488716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925104529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.926596559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925912346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925123969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.924767893 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92499682 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92528234 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925491232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.926004769 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92546654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925329131 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923634715 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92606428 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925179186 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925413082 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925306517 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925984966 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92617117 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926844576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925618774 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926167693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927096254 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926721316 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.926986322 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927985902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927053876 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928622749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927222096 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927582321 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927189864 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928505055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926950342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927220473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927188559 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929515221 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926762705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927524895 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928131693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.928790581 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930417596 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926364234 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927962391 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928530367 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928452675 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928314526 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928224739 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926776601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92752602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927394116 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928439777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930218105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.929310839 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926862132 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928265448 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929188559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929646072 seconds)
  done (took 129.01616211 seconds)
done (took 2634.510344837 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.01988189 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.188378548 seconds)
  done (took 16.062029357 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.10136758 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.051161577 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.938075056 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.965726351 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.936231644 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.962104196 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.953217779 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.935954669 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.93896438 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.938147229 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.938300436 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.126735988 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.940904459 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.935862725 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.935709294 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.031909268 seconds)
  done (took 53.490569962 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.944642966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.936589492 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.953729024 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.940013614 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.941727112 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.961784667 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.96910401 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.949607261 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.00501083 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.956124718 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.066795501 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.954602566 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.943381521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.996979006 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.955961824 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.956922694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.042488961 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.02034448 seconds)
  done (took 37.353788151 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.021834558 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.952378529 seconds)
  done (took 10.841880728 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.941751519 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.941617967 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.939840963 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.939794478 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.933611127 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.963603728 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.93428588 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.945332772 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.956176821 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.950668401 seconds)
  done (took 71.309812411 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.942588965 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.939589384 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.939922694 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.936721979 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.935707031 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.940811362 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.938479427 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.935940728 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.645183503 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.978118545 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.952751211 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.947715093 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.937477841 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.938972814 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.936654818 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.964623835 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.112631599 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.935152192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.935566557 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.944139813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.939693325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.016862856 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.953719956 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.94039836 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.974461551 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.642186249 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.951653142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.942315946 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.114621219 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.936627628 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.938228405 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.149497777 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.946165041 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.318484562 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.210174496 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.946415033 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.94640348 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.942918786 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.936630309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.104939449 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.940163736 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.944178553 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.818900411 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.178828988 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.026480457 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.985511547 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.324325626 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.938745773 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.940543842 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.97268686 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.941633594 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.940152815 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.95955033 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.451678106 seconds)
  done (took 136.81832797 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.936733375 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.1823842 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.090990977 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.940893439 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189828138 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.148624096 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.924771461 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.985737885 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.935704589 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.138553715 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.188197444 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.039214244 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.93645472 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.936334117 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.937412511 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.933918882 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087422841 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.002422549 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.937724132 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.936747896 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.963900358 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14068726 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.059930612 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.938908675 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.96375434 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.148541533 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.058083863 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.037287394 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.65476097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.93818135 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.002344075 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.939099172 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.941911739 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.935917027 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.094920434 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.033317647 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.018879598 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.939357146 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.936235485 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.939512846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.612348754 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.141417733 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.033481639 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.06011628 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.190644483 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.158147456 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.630116283 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.938121219 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.57130016 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.105348547 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.143446069 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.146315819 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.057361292 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.945222865 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.219284199 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.93961636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.940818812 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.16359521 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.161636264 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.040649824 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.940524324 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.939783153 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.934129787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.177966685 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.944510025 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.027624435 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.940103703 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.939837914 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.028361084 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.037201988 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.171379712 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156811196 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.967902232 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.285009038 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.449345943 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140447166 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.001839389 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.160025589 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.94278765 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.934806813 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.012285089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.797173573 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.189927165 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.178228279 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.136199771 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965473175 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.561785888 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.938344854 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.125238986 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.121921296 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.169139197 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.185706455 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.171584803 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.273803655 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.943150442 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.935401085 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.24365334 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052480172 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.879298253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.279077374 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.164894985 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.415632772 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.956701347 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.220840196 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060952943 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.931990921 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.579156036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.936456639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.138296494 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.968652535 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.934553171 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.933331391 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.1192194 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.828423449 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.931628509 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.621586685 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.989284492 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.931850373 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.130013585 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.929869619 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172878556 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.933921999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.156218155 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.512551767 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.952876123 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.100787531 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.173998324 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.55215263 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166789242 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.162791144 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.036177839 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150410609 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.716594609 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.928955279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186215107 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.920286465 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.925301342 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.091588906 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.922025864 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.065923663 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.922345586 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187571008 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.937409172 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.15276154 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.92631877 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.153283127 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.948320259 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968931435 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.920920568 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048030184 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.922965012 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.741374937 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.079678568 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.924317828 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.920065881 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.512081244 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.919168136 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067310756 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.145629333 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936992447 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.988656852 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.465816447 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.896773192 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999769301 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937009006 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.204618717 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.918049496 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.169073894 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.864674202 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.390693816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.916249258 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.154624809 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.102196629 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.917199167 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.918585681 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.75410944 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.894699621 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.917296335 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.074764685 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.33639259 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.669275916 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119655745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.916777162 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045155661 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.919009836 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.008051902 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.248883955 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.913821749 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.915383215 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.918115988 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.91538773 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.917766371 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.128996135 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.940616216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.350520489 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.053622735 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.171872113 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.217141852 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119364589 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.955200481 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.91976465 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.140890898 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.918637443 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.980466239 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.917046373 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.936328686 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14632189 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.91932659 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12486245 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.151979629 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.775473792 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963307463 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.920577732 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.918570991 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.849336626 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.068141678 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999685317 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.916465572 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.919212625 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032679285 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.037979761 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.095948846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.606647604 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.039654707 seconds)
  done (took 912.908305388 seconds)
done (took 1240.63938677 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.918760017 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.921775254 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.922202348 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.921828838 seconds)
  done (took 29.528556773 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.927184634 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.919582598 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.918263456 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.918513456 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.921690408 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.918971767 seconds)
  done (took 13.370239438 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.918359842 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.920981034 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.916989036 seconds)
  done (took 22.599591771 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.998042656 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.342065414 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.063190131 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.355568516 seconds)
  done (took 10.603793863 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.921502044 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.919583482 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.919829444 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.91836854 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.925896913 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.925160995 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.923197519 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.923152829 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.928727387 seconds)
  done (took 19.152624542 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.840309243 seconds)
done (took 100.941334917 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.053728842 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.491012153 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.980846928 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.961058224 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.18610617 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.954646195 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.089979089 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.959681446 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.027302672 seconds)
    (10/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.333777701 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.963770983 seconds)
    (12/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.264564549 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.281728685 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.300474626 seconds)
    (15/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.341209138 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.934031418 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.952821419 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.301007981 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 5.604786468 seconds)
    (20/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.079314794 seconds)
    (21/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.126923706 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.100885002 seconds)
    (23/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.08078069 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.054583576 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.965194583 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.952573389 seconds)
    (27/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.650081882 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.802887363 seconds)
    (29/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.037227562 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.035804344 seconds)
    (31/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.104182032 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.76013261 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.97016171 seconds)
    (34/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.030358024 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.099206318 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.951455916 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.396077716 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.07445524 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.240090435 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.032370865 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.087014302 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.835668612 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.085694422 seconds)
    (44/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.151957421 seconds)
    (45/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.371489066 seconds)
    (46/309) benchmarking ("sort", Bool, false)...
    done (took 2.165443179 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.5651251 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.960057449 seconds)
    (49/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.32039582 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.955572433 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.333697046 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.564746378 seconds)
    (53/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.728893994 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.955718052 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.022347819 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 4.200728022 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.957557769 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.638360319 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.17875076 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.977546334 seconds)
    (61/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.227557812 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.03816087 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.054405362 seconds)
    (64/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.444390649 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.109350173 seconds)
    (66/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.138820908 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.095717144 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.142403609 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.516587077 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.847844989 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.990009387 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.979012499 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.971895927 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.964349839 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.162751393 seconds)
    (76/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.230783237 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.361208576 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.96618867 seconds)
    (79/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.055363557 seconds)
    (80/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.423845544 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.3467842 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.963773199 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.977437136 seconds)
    (84/309) benchmarking ("sort", Float64, false)...
    done (took 5.692243397 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.207702406 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.037621635 seconds)
    (87/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.001117998 seconds)
    (88/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.960653392 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.278787532 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.361745902 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.31518863 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.068291745 seconds)
    (93/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.970180088 seconds)
    (94/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.967403032 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.061290855 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.736149645 seconds)
    (97/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.110857626 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.968164672 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.676599376 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.090043992 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.966983222 seconds)
    (102/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.945270393 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.064450313 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.208163539 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.959419742 seconds)
    (106/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 4.106220357 seconds)
    (107/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.708241887 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.950348738 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.24658706 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.947527544 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.946491639 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.833136821 seconds)
    (113/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.439173196 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.242189217 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.960058323 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.157188291 seconds)
    (117/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.158745423 seconds)
    (118/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.199220276 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.082371445 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.944129715 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.60378539 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.98742669 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.954306022 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.265132857 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.95076823 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.966939752 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.045867267 seconds)
    (128/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.584998083 seconds)
    (129/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.02910722 seconds)
    (130/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.10240404 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.196963755 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.166987296 seconds)
    (133/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.110878252 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.337057149 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.046213605 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.257391349 seconds)
    (137/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.94537696 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.10446327 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.128486873 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.151778224 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.945705136 seconds)
    (142/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.596466881 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.962840943 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 6.942320282 seconds)
    (145/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.077940804 seconds)
    (146/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.69636949 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.954682648 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.318222305 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.209220008 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.117659828 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.940214555 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.877527526 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.427063132 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.964327041 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.944996862 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.993606613 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.321327906 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.041248602 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.692622755 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.171340821 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.921504708 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244611514 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.198913163 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.933955834 seconds)
    (165/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.933093518 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 4.440754256 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.179307728 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.933817692 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.835731431 seconds)
    (170/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.933567939 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.87054565 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.001617111 seconds)
    (173/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.003365511 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.929494803 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.207437797 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.32418519 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.043863733 seconds)
    (178/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.940726677 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.989315076 seconds)
    (180/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.341930018 seconds)
    (181/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.004165368 seconds)
    (182/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.989811374 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.023218421 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.624836246 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.014952602 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.110948309 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.931926915 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.639191875 seconds)
    (189/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.424745205 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.048258491 seconds)
    (191/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.683822518 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.00345953 seconds)
    (193/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.319734646 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.231072315 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.078940299 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.928763561 seconds)
    (197/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.943173427 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.991893301 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.941618142 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.268709749 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.239260893 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.951785824 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.943616951 seconds)
    (204/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.626288834 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.763505347 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.022540729 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.053420921 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 4.872653006 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.167619646 seconds)
    (210/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.929145667 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.302031668 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.341016137 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.880612388 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.151219969 seconds)
    (215/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.173889317 seconds)
    (216/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.203876527 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.54511382 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.234797013 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.926705105 seconds)
    (220/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.01538947 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.938055145 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.3290378 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.010354253 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.195781199 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.93895126 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.008290482 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.057755975 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.201650954 seconds)
    (229/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.551764268 seconds)
    (230/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.505209377 seconds)
    (231/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.041401345 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.265246395 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.979237272 seconds)
    (234/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.480491251 seconds)
    (235/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.069553407 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.098758141 seconds)
    (237/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.154659933 seconds)
    (238/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.745543549 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.961140944 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.353828991 seconds)
    (241/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.723469044 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.948247326 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.282330432 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.985712871 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.91705693 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.068085068 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.677176582 seconds)
    (248/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.087169175 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.966029686 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.177432492 seconds)
    (251/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.97846177 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.084123725 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.236444922 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.31454461 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.861748128 seconds)
    (256/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.988931433 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.278586671 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.969527525 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.76071006 seconds)
    (260/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.429434062 seconds)
    (261/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.163744317 seconds)
    (262/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.232501917 seconds)
    (263/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.974152607 seconds)
    (264/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.406594366 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.152474477 seconds)
    (266/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.065779973 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.991346035 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.256378076 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.287564142 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.986682611 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.271167106 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.055778253 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.096134244 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.975780617 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.133643931 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.788717645 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.070420766 seconds)
    (278/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.084035625 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.985329897 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.064295432 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.235804782 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.986899102 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.967357695 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.744778769 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.299679939 seconds)
    (286/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.954585164 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.388351407 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.970310967 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.297837618 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.90356049 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.684210123 seconds)
    (292/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.405452887 seconds)
    (293/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.87577992 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.389384138 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.269748252 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.963377231 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.644829382 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.11185225 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.97926772 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.256498547 seconds)
    (301/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.099761507 seconds)
    (302/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.096820777 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.257518438 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.98766069 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.088822365 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.058389357 seconds)
    (307/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.027761605 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.179221141 seconds)
    (309/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.16796802 seconds)
  done (took 1036.087108641 seconds)
done (took 1038.030417362 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.995750223 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.987238935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.968121242 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.991983554 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.082274074 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.016279973 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.98017859 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.972078232 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.01668219 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.017258087 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.969879501 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.007684958 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.96510326 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.966431774 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.965896595 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.983793576 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.276622595 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.995357002 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.983700523 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.977582302 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.985002226 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.962758279 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.01494204 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.004261794 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.966186455 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.972335105 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.966534217 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.982445855 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.077112036 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.966276607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.971333781 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.974088128 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.272222166 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.990264447 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.958525108 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.983084527 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.972008609 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.969681448 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.961438465 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.991749425 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.423030371 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.962827104 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.958841506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.959852035 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.96022133 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.967509326 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.960093083 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.967541365 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.974956814 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.975283526 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.419019106 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.980405433 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.962697354 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.959002519 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.973337387 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.962210437 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.962589362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.976084423 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.980364241 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.976675977 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.259286391 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.996650496 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.962009953 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.979103621 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.967401126 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.450729743 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.962481359 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.966386942 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.423412374 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.971967281 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.452854849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.973786992 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.962501149 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.976396411 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.994917607 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.273093912 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.986747231 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.959985947 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.967073609 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.958441946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.973516259 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.975415812 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.963493036 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.958974558 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.979422741 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.004006169 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.970792839 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.960072546 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.971432982 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.980170931 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.967643404 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.972178149 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.960361238 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.956453076 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.97388688 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.96167659 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.959441951 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.959363855 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.961807226 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.97560823 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.416804067 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.979057804 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.951378906 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.955963719 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.954731057 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.967027599 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.413378923 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.958868072 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.973747443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.000713256 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.957498998 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.250742908 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.988798724 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.973447291 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.966981625 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.957548906 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.950930108 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.25417039 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.441031184 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.975168641 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.955941765 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.954701827 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.968843542 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.956757238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.947916575 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.268229469 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.986474095 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.970094382 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.079492582 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.967413922 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.98743983 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.953424638 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.956503031 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.001507563 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.97195556 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.990306009 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.956289463 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.970762848 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.974652269 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.954527976 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.967173516 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.967420975 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.95468295 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.963441822 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.954473503 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.003176731 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.969585752 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.973694301 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.979218872 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.079099189 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.956788192 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.25394065 seconds)
done (took 308.13951546 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.039687719 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.953597439 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.046066669 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.954550559 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.051775394 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.033027563 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.953932952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.954297765 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.953208949 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.466835767 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.955527526 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.958682155 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.955272642 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.956539065 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.028174151 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.954829587 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.95672807 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.24375552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.953195428 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.038860941 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.953113676 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.958240092 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.953537817 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.474737953 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.952109958 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.954781952 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.040431626 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.956047057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.248764366 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.954692786 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.955511582 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.24879513 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.03998794 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.967767312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.963238082 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.962658409 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.050220051 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.966140236 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.026078458 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.026167291 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.047500255 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.987201678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.954607205 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.954698119 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.957853768 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.956582006 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.954282484 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.989404905 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.953151245 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.963459322 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.242533353 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.962490106 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.962823351 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.956848236 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.956233731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.973268138 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.958471477 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.958557416 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.041186754 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.958268245 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.02814995 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.476531927 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.475148121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.957642438 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.958100096 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.956649871 seconds)
  done (took 190.481910586 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.024288824 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.030151094 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.027698672 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.962134272 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.005516132 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.024197207 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.963150144 seconds)
  done (took 15.915709285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.961782021 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.957713819 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.016254972 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.016947334 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.957438109 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.136298345 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.968822252 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.960370176 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.984956006 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.957381606 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.620518524 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.015844542 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.96508963 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.957056624 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.968743919 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.02084191 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.960537599 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.958443174 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.067272442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.105475312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.965528228 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.964402625 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.983916011 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.969766598 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.957930529 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.959673202 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.958434188 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.966032017 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.959000256 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.963252881 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.959614771 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.023973338 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.960805586 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.958922758 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.962079323 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.961060734 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.959529315 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.961527999 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.958112748 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.958887507 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.960094693 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.959357177 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.960171056 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.959529327 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.960095119 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.9815293 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.960129955 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.958773184 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.960134462 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.961492364 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.986259477 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.962789626 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.959268187 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.964919757 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.000889745 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.968317806 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.960656676 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.961084374 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.959946048 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.962230478 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.960711137 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.111347195 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.021778173 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.962426353 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.021979178 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.117011958 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.961058799 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.95917556 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.959898756 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.055405216 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.961783517 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.020343342 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.961540063 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.078416622 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.961981554 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.143020552 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.985795894 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.967118404 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.966371996 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.96113616 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.969643953 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.961632034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.963604935 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.969013402 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.969752635 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.96213247 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.961266631 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.962913932 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.969333857 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.96191875 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.013708527 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.962064848 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.962788654 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.103832676 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.962246117 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.072729984 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.989964566 seconds)
  done (took 214.921136481 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.970999566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.96897803 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.964568079 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.977895243 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.962469383 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.963081282 seconds)
  done (took 13.691251189 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.965057763 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.968468825 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.962458612 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.962006018 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.963772248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.964641628 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.963470445 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.965643684 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.966457673 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.9632949 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.962662453 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.96301526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.965489589 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.962879259 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.965592335 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.962917025 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.964008883 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.963062912 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.965478286 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.963588713 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.096264506 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.963870126 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.96283864 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.973687972 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.970060283 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.966089017 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.977422271 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.96732677 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.966455184 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.973458932 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.967066564 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.965465152 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.971504542 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.970603493 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.969650739 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.973316385 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.969228959 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.966730008 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.966238671 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.966153695 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.968533445 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.965750293 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.967034032 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.969255403 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.968417193 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.979612502 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.972587984 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.976819145 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.965836954 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.966281289 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.967086039 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.965916361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.968077202 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.966277711 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.97590491 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.969476893 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.970051626 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.965430844 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.964033667 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.974227045 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.969593471 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.967220802 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.969164182 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.971909538 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.970926477 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.966771829 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.974083469 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.971226327 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.966302628 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.967475287 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.966851233 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.965848352 seconds)
  done (took 144.691830875 seconds)
done (took 581.599722118 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.037598827 seconds)
  done (took 8.925918454 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.004755943 seconds)
  done (took 8.996622714 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.852586087 seconds)
  done (took 10.745905159 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.984670481 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.982311341 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.982972757 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.967336387 seconds)
  done (took 29.819329511 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.263579795 seconds)
  done (took 9.154643713 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.981972908 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.963037388 seconds)
  done (took 15.90889779 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.090314049 seconds)
  done (took 8.982190167 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.418658648 seconds)
  done (took 9.334319218 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.976177346 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.992806404 seconds)
  done (took 15.88334256 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.97057228 seconds)
  done (took 8.860894954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.777479322 seconds)
  done (took 9.763806722 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.983833919 seconds)
  done (took 8.89455618 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.981989479 seconds)
  done (took 8.87308739 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.126733539 seconds)
  done (took 9.017999071 seconds)
done (took 165.049504408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.975951051 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.964907775 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.96394444 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.963382835 seconds)
  done (took 29.757470202 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.001032549 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.003283427 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.013852482 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.002454294 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.992921831 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.993249937 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.004134618 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.003008896 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.993836951 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.002795821 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.005178576 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.999827135 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.003708198 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.014213574 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.011767904 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.000089084 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.00388498 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.006575166 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.994154036 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.012079364 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.00069095 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.003418279 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.969639631 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.973492453 seconds)
  done (took 49.902167173 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.15458787 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.035016036 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.122722304 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.017668662 seconds)
  done (took 10.219628258 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.968677608 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.033655329 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.021251196 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.016747105 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.054697615 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.072805218 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.022770678 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.1795277 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.08566398 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.093729665 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.976133331 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.990678508 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.994939697 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.014476696 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.072898718 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.969940605 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.971034071 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.08561514 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.031369984 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.246632117 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.970789057 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.025171939 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.055200341 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.025987918 seconds)
  done (took 50.87320153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.971168163 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.980007993 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.977531998 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.973203283 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.972654294 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.972643888 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.979392791 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.973510259 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.993201114 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.973300276 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.971711165 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.971976749 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.978833639 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.975529846 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.97328709 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.9869734 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.984973661 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.972192547 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.977021029 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.979478884 seconds)
  done (took 41.432205192 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.97107443 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.817205713 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.31570022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.223113589 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.970672049 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.97403815 seconds)
  done (took 32.1671074 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.985010766 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.980863664 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.973334418 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.02968224 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.111595771 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.980830937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.974561194 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.983580643 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.019760524 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.038833052 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.993559472 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.002710947 seconds)
  done (took 25.96972161 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.973848655 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.972806966 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.97252029 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.984114217 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.984369088 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.984517139 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.981672053 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.972686903 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.987571656 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.995050839 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.983197191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.984643458 seconds)
  done (took 45.677515703 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.188458666 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.201190337 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.189359021 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.549881876 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.969206093 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.870863494 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.655276288 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.703962235 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.271133771 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.960011623 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.939386079 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.854445518 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.217440287 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977998598 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.235527701 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.905399578 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.975131514 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247842498 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.976554884 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.980865727 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.280458627 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.028911093 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.187246395 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.021304995 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.189325094 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.436284856 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.228384933 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.238824059 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.314751266 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.156307601 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.150023218 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.027254725 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.984137379 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.987939052 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.98364305 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.991242133 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249720149 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980269598 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.10609251 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.972904719 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.90250042 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.302164018 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.103775062 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.390679922 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.0995831 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.22232815 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.983686879 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.147024051 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.04505774 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.241017088 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.091506852 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.19197784 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.90352965 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.375409704 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.113424194 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.981390195 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984437152 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.678864756 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.22140391 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.060335197 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.332613426 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.101429723 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.983950872 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.077466421 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.977862433 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.092404045 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.350341661 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.98563558 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.977797019 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.988096476 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.076967398 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.197578469 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.980804452 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981970565 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.99777148 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984182723 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.332714869 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.523023835 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.976111574 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.542585787 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.452328406 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.955226068 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.447692574 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.031844264 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.259622336 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.195006345 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.163373599 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.2256074 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.884676572 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.985717333 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.787372838 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.063546902 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056874245 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.980880073 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.149363573 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.293618026 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.107715159 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.979721782 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.907056375 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.993318437 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.186403014 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.444607988 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.044047058 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.977909822 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.980416906 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.986433802 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.982312522 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99814798 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.992002755 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.502265789 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.27077933 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.09409607 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.243727946 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.983327263 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.664069724 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.253238737 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.117970825 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.556326032 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.11118393 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.981784799 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131426419 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.991461842 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.985352116 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.356877422 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.389390704 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.153105459 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.22996569 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.056964531 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.020326951 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.99059186 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.069535777 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.211142932 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.986431229 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.234018188 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.227758569 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.631617572 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.056941905 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.060752936 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.995844219 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.200006381 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.066894615 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.509961753 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200543302 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.544581351 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.978763871 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.487031422 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.267324051 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.381399084 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.003126818 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.149824918 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.024264302 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.694766907 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.91408577 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992682988 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.321995537 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.02717163 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.077329506 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.989225499 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.991764511 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.997013167 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.069259774 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.059426246 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.063258457 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.915476082 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.987493714 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990575967 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.988729022 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.50594611 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.666894553 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.280048327 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.990477161 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.049759748 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.991114221 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.592489136 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.990792003 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.111851553 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.125775683 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.719453865 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.017935913 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.265139801 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.415499853 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.114145267 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.988601432 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.99906441 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.690743138 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.001562983 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.692072924 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.283367841 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.993218269 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.442572324 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.056610687 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.17904026 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.004805581 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.993165914 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.993128323 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99286002 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.194986671 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.496390344 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.329647919 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.348272915 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.076992519 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.265859006 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.187143313 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.496092342 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.689772848 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.511478883 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.216888322 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.991856491 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993448865 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.642019862 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.997800285 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.207043207 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.195404913 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.266803039 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.289207052 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.412372379 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.996474623 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.005636842 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.233912793 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.993254757 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.424303872 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.070608228 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.349503112 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.813117119 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.261602367 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.06268142 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.003631933 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.64757296 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12968175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.947564847 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.112459428 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.92147026 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.685082522 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291713345 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.269659174 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.977896948 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.332782423 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.293761219 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.266026699 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.632168326 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.994476907 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.04838603 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.075209587 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.996876575 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.519430122 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.042792825 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.041844614 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.001927167 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.998739932 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998638773 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.675376606 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.071180572 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.115429591 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.77556111 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.488209409 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.912226142 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.271965502 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.055496169 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.435007184 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038146104 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.210949097 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.999302716 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.552025324 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.051535818 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.266708164 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.949940462 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.206863363 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.198271096 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.022771944 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.999351571 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.922752686 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.877423803 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.998016348 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.178959221 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.885295117 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.001295491 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.301878133 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.606410812 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038399185 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.998898717 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.321401089 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.412203246 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.264428155 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.004279078 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.212411722 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121232048 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.916951259 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.476932018 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.576748362 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.696921156 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.011960371 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.201663698 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.340880513 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.287682952 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.042186901 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.06993639 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.26955227 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.982569702 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.999296624 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.51866253 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.095176625 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.240343802 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.30828491 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.494157928 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.438182943 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.43999951 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.059339231 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.206855767 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.360746176 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.243343585 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.002907294 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.100430002 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.209609123 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.276833564 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.889023011 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.710596949 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.241625854 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.004270257 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.956233057 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.206718807 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.503640479 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.357003032 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.540911669 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.186221187 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.034839423 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.478971434 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.01377418 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.936443204 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.99806014 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.947887361 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.217208607 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.181163038 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.044561984 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.55872046 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.253272776 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.414985365 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.244715265 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.044780849 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.928545199 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.674619686 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.952032616 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.086639563 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.041122575 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.074191468 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.004519994 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.204992495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.440750721 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048000738 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.53438494 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.199839791 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.302851943 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.274650918 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.30521678 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.961429825 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275119218 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.952420822 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.614016595 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.095363464 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.093289973 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.004835889 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.006899773 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273070122 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.328997698 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.58846173 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.043805366 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.347291025 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.108627525 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.007852493 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.008259358 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.476208473 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.244051077 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.217312745 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.081165507 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.14756864 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.077032241 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.518976845 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.010551234 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.006485703 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.140409474 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.001558927 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.717503333 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.304662766 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.741782883 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.206400575 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.525002904 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.864842993 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.190675369 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.055261595 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.005819082 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.015899484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.118332864 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.241238035 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.2819555 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.774153511 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.008198394 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.006329814 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.86164079 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.685028061 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.242122472 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.011177001 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.056713726 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.0085555 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.126075602 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.01051118 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.273191678 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.064610222 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.005816644 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.009446698 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.222368172 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.523043619 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.02513844 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.707976037 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.211481108 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.013966722 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.488510171 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.475448849 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.261400845 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.053993705 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.188382893 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.257656475 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.526825587 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.191124797 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.011334024 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.230895366 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.010171936 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27942022 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282227426 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.008573218 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.224859932 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.476928582 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.301876931 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.016358475 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.885519756 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 7.008669141 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.274196403 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.064502078 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.008090993 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.017269819 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.549715347 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.685346128 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.480500654 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.16264299 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.330640682 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.798189429 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.765142833 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.013852216 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.012310977 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.705407054 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.723487823 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.228152571 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.297348327 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.95872856 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.21356503 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.715799633 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.007197367 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.281781734 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.937987488 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.015051353 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.632703381 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.288621614 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.946421933 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.013011624 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.572679103 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.01127548 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.098337141 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.012739799 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.130196347 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.283403201 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.37748096 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.132620515 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.65241687 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.690579326 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.95381894 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.053739482 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.820855457 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.578570756 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.694880226 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035210553 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.028133817 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.939068279 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.015653213 seconds)
  done (took 1708.667454214 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.040557776 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.111671176 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.069091455 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.1295944 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.053366306 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.090840094 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.119211415 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.032856207 seconds)
  done (took 58.58215042 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.012975456 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.028841302 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.016994021 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.013544925 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.01503975 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.015164128 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.172913924 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.02314383 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.014162441 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.022170645 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.015472259 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.015729229 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.284511095 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.034208908 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.014381389 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.013363408 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.016445818 seconds)
  done (took 76.706433165 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.015054691 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.314953217 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.062576164 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.020475762 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.879094526 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.030764028 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.137659033 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.040840066 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.016559397 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.160491596 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.309921589 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.069768012 seconds)
  done (took 91.994949036 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.021641613 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.015430198 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.017492859 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.015072861 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.014731662 seconds)
  done (took 12.026456178 seconds)
done (took 2235.937259425 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.293223868 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.074007315 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.118421515 seconds)
  done (took 6.128337901 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.163493955 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.210113161 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.323270356 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.082518702 seconds)
  done (took 10.724806422 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.277714133 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.400203147 seconds)
  done (took 6.615007124 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.379777663 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.017259427 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.408914816 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.021230903 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.017576086 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.01947101 seconds)
  done (took 23.005292224 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.016702564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.016244216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.019363239 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.017498 seconds)
  done (took 10.007988782 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.015140457 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.676715623 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.017188603 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.029825928 seconds)
  done (took 21.676470008 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.159487188 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.027442445 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.157175266 seconds)
  done (took 8.28159797 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.240781106 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.028682567 seconds)
  done (took 7.20698941 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.162478559 seconds)
  done (took 4.098976937 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.047310527 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.292351098 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.510444125 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.013313207 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.647287687 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.096396957 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.386832958 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.292744361 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.414788218 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.473681787 seconds)
  done (took 27.112830232 seconds)
done (took 140.893445903 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.551412411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.042538165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.213800224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.400522421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.260911764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.212043713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.224651252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.400347657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.081208951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.107835176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.386270372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.239384218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.163502676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.031361411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.16245728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.028108337 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.223158723 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.391717504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.038944478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.262235065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.213983109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.01359681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.204908302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.029364712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.221309764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.152757005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.556061307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.027290899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.186660323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.567034011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.153256134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.412003504 seconds)
  done (took 173.097379236 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.000240946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.998067668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995712579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.998443341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.319110263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.998659491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.997457605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.995954307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.26534456 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.252001291 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.998380837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.307222394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.997805086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.998441079 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.000067712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.998054991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.419394505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.998678156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.000587709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.001424428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.997299649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.165844658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.998945217 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.177226401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.4015709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.001178036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.999162461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997839013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.999345381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.999048006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.000483881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.000936845 seconds)
  done (took 212.204435523 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.003926062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.000233282 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.999145402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.000772333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.000768001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.999020201 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.999888839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.998874726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.647525643 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.630761627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.999334571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.000849751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.003023968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.000115598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002175613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.00028528 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.000383261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.002827735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.018563726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.00071275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.00158528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.629351976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.011254128 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.637345432 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.999893944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.001757836 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.002207697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.001605566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.000088279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.005525541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.00299619 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.001247391 seconds)
  done (took 224.531558366 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.241042089 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.005174883 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.005207758 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.024285792 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.006204692 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.005444597 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.012270578 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.250548781 seconds)
  done (took 20.477032988 seconds)
done (took 632.267685216 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.5955095 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.944019433 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.142270258 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.025553451 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.254031364 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.0729988 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.022996923 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.09229061 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.863395909 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.098619156 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.413401609 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.030365789 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.783778036 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.052725989 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.148265569 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.083005931 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.388481447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.735516635 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.169494171 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.676541408 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.184608682 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.974495651 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.102533236 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.910562751 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.431061438 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.007774475 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.072492223 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.389109414 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.028022025 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.181852806 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.903182473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327260366 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.038609498 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.026766927 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.079760458 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.05792976 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.258475783 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.036170274 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.14666839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.770121928 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.672696847 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.745879563 seconds)
  done (took 106.865647829 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.017921844 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.01362207 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.014854012 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.014319921 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.023309851 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.014181691 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.01527771 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.013677042 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.014759366 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.014777845 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.015674857 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.022215497 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.013846667 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.022201063 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.017092313 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.013988372 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.014485831 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.022888464 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.013661982 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.015079578 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.013557161 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.013967936 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.010383711 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.014616202 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.014180176 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.01393844 seconds)
  done (took 54.354482945 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.00918005 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.202149848 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.253474316 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028440233 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.009451443 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.0132106 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.037569849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.014462507 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.013258307 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.012514256 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.129648164 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.014431073 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.023787574 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.253942742 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.026817412 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.008604211 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.011017402 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.010823265 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.2085673 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.026052477 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.038936265 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.015210462 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.040546468 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.023652945 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.012274896 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009593975 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.013583598 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.476819425 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.019316648 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.129989842 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.084794894 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.040869419 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.40120745 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.265055326 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.064653544 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.015185144 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.012857644 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136678859 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.019812827 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.014527124 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.040773869 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.018037053 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.257807466 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.537521119 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.027778639 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.013421728 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.479951741 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.143614593 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.05401253 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.024472425 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.264345248 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.027689128 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.01227697 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.01306623 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.04910916 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.026046331 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.014670983 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.311281121 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.026152721 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.043186446 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.01696871 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.014670395 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.215670556 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.024268695 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.201639133 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.023010726 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.01909252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.014075275 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.258473306 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030104972 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.55361425 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.02868818 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.012641655 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.134214892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.205651275 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.505818619 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.027328509 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.217843801 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.423262092 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.051417445 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.023913408 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.464719009 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.052294885 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.021458219 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.014954361 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.014221071 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.015031352 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.062389455 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.041972826 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.467584367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.546677207 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.328981903 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.052894917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.023861921 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.014442438 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.309763783 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.021261819 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.014713312 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249468343 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.561122062 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.031400663 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.024054292 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.52695647 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.031201613 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.045864426 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.023538464 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.269971656 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.030439816 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.061090003 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.016019007 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.022239183 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.019456256 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.048082308 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.021288195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.016155238 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.527041738 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.155560748 seconds)
  done (took 249.61597671 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.01650706 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.010838032 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.01414488 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.011120733 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.016284616 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.018109644 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.01518508 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.01710862 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.018209425 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.016652151 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.014188964 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.020107469 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.018878088 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.019196195 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.05006231 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.017295977 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.502732706 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.017547914 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.018054558 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.013856585 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.57972435 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.019370075 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.017410904 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.014949963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.018205034 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.015746941 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.020911693 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.048257354 seconds)
  done (took 171.522357628 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.017240813 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074132693 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.028531536 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.066635029 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.029567552 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.019240063 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.116475133 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.031388303 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.022403276 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.019381636 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.019541163 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.048468616 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.023636728 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.115550734 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.045740384 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.121196211 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.119779712 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.022259058 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.019032404 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.020780776 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.064991223 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.032949401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.048628084 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076206773 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.032018022 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.075765355 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.031331413 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.021005285 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.019503053 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.132728649 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.033630129 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.050813457 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.05326307 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.037250528 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.134912942 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.129110926 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.117670369 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.117071129 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.022619328 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.020902337 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.020079144 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.02178203 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.077206976 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.03432688 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.019350711 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.138242961 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.035250552 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.020113172 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.021938505 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.021466492 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.033410637 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.034788071 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.056692334 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.14179539 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.062754671 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.046187532 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.116524656 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.135543892 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.021575604 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.1166947 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.026571883 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.134837579 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.036134495 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.023360027 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.023449734 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.022856848 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.070844919 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.131494068 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.119702332 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.024261975 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.116984823 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.069813477 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.035013484 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.022314484 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.024700257 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.077806814 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.13216626 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.071715768 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.085147027 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.059805682 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.032164347 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.022344272 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.025126214 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.051063007 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.026742314 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.13504855 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.131174018 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.025666305 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.021822866 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.023928197 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.023116195 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.046975617 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.086038331 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.064598157 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.126657516 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.056225646 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.058292747 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.026601545 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.036283914 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.026791147 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.057218816 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.027831494 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.035487636 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.298904088 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.054641037 seconds)
  done (took 218.183009136 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.405794158 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.064310773 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.097837327 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.275779397 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.375683932 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.939228066 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.057438587 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.072189781 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.079067221 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.199817227 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.13208801 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.121021652 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.060174317 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.043119029 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.067969519 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.082428326 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.097781462 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.375010641 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.25521023 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.536053782 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.056454272 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.364207789 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.399098331 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.436265146 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.115766028 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.471735396 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.645091938 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.166514373 seconds)
  done (took 66.941438479 seconds)
done (took 869.406136317 seconds)
SAVING RESULT...
DONE!
