cset: moving following pidspec: 17080
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.36504286 seconds)
loading group "string"... done (took 0.559355281 seconds)
loading group "linalg"... done (took 7.162231792 seconds)
loading group "parallel"... done (took 0.161236712 seconds)
loading group "find"... done (took 1.138606495 seconds)
loading group "tuple"... done (took 1.797407645 seconds)
loading group "dates"... done (took 1.272030852 seconds)
loading group "micro"... done (took 0.226865493 seconds)
loading group "io"... done (took 0.907966444 seconds)
loading group "scalar"... done (took 37.929493648 seconds)
loading group "sparse"... done (took 11.982752806 seconds)
loading group "broadcast"... done (took 0.954673911 seconds)
loading group "union"... done (took 12.688807089 seconds)
loading group "simd"... done (took 4.708344266 seconds)
loading group "random"... done (took 9.214164049 seconds)
loading group "problem"... done (took 1.922466118 seconds)
loading group "array"... done (took 21.622828723 seconds)
loading group "misc"... done (took 1.998936575 seconds)
loading group "sort"... done (took 3.397265074 seconds)
loading group "collection"... done (took 17.868400563 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484148126 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125635607 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1166003 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121177262 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.135374171 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116803913 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125474778 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085428149 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.855058768 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144259651 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117781544 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419032109 seconds)
done (took 5.205823623 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17420658 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083565066 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082252706 seconds)
  done (took 1.336910434 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066933619 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121177483 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06650197 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067344674 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068732348 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067888946 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067849336 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067829649 seconds)
  done (took 1.698373905 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072884873 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069048058 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069610867 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070532089 seconds)
  done (took 1.454135386 seconds)
done (took 5.91352198 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763695329 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206425427 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183352151 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399970128 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132216769 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161036074 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641958704 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.330576789 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183898917 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082659605 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105641136 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.324233264 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110060694 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634497151 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074095025 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090562075 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140850913 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.442725737 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067540364 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083053202 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089213209 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128616338 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088240565 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076017774 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144366715 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067970938 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130224108 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079475369 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06665097 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207400917 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172565624 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651865443 seconds)
  done (took 10.272227616 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096269589 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097717033 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068741202 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137115042 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096178167 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069624647 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070491922 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067128823 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087520437 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128044117 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088912192 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101755178 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065638642 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068746416 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08454705 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204844971 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08315177 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08328701 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071460362 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077171129 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118618878 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078445221 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078132471 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077624796 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128471393 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18042377 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096179431 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097538351 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069325511 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083021454 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117185349 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125482581 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065419699 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06621255 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124272051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094344942 seconds)
  done (took 4.656827212 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.925967458 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142463302 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093237414 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134617272 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066604718 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110766918 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067130818 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083041697 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209144393 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288310606 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.579986147 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112341021 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104169772 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067842182 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068289376 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066947269 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343330685 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108686031 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102379007 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080669257 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070011697 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068910762 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341985561 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067648031 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063774096 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067899277 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058070578 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122996954 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06787427 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.922228714 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124735271 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066673971 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100265682 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168789222 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088397593 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274222669 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067625657 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06412899 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14987419 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070992139 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066156749 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08473138 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108946648 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113238688 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065635837 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067126505 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161789369 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064673153 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07837182 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.982343715 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154139261 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097798443 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065338116 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094718937 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088121058 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070831606 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250245847 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064528639 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188206288 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13781631 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064975873 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067221607 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066332661 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067785576 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069068123 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.357039272 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068532394 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.728015092 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070113956 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078495234 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071178007 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068996414 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072529753 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072870003 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08558734 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065876726 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07470236 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067023553 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067692068 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068584655 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065042073 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087336796 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.359679483 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066143863 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067508056 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064078032 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085703731 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096598469 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067039294 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065098793 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099912686 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064253142 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.174482522 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06673801 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105206406 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066863756 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085690891 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069405306 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115675451 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066844212 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.075145437 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067292999 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099665622 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07180275 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099670397 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082818607 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068010465 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397216971 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065493901 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06600548 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068144052 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066595976 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070306314 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067068755 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079646243 seconds)
  done (took 20.956240449 seconds)
done (took 37.98429419 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.27247993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079366332 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077592874 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075559283 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075728662 seconds)
  done (took 1.845718331 seconds)
done (took 3.092571875 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118563165 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099353054 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063944561 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095393295 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064095375 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100199055 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098621639 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080536805 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099221349 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064152918 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095898325 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064456093 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064149801 seconds)
  done (took 2.373890616 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082014921 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082590352 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069692843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08271272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064035877 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082214829 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080457278 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088184551 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080310938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07222091 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063570977 seconds)
  done (took 2.088973023 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081727637 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083493644 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069399026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080621925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063271096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08107791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080497207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086097873 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081173653 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073371584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063887553 seconds)
  done (took 2.081260564 seconds)
done (took 7.778578675 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078309397 seconds)
  done (took 1.306858534 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.597124952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.110903528 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081673231 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112347214 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184136769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120631224 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283254441 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086889219 seconds)
  done (took 8.988320257 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102444917 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069095032 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068311168 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070522 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06956131 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071955768 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071060095 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069448035 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069328162 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068946633 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071572775 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071375195 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070941299 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068768783 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068191698 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07106257 seconds)
  done (took 2.449873137 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091796595 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089961707 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074566239 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075854605 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074119651 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073926565 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076224646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075461586 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072472981 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073830988 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076704293 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075303719 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07307164 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066621562 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075803473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077693942 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072764381 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076524009 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077116919 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076317393 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075463841 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065722685 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072194085 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074432947 seconds)
  done (took 3.150999908 seconds)
done (took 17.133294234 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111681234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071428378 seconds)
  done (took 1.42074389 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081784006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082609361 seconds)
  done (took 1.40667573 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082203015 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065748892 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090380254 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077962617 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066266475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065681337 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087755275 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066192345 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066698408 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067872663 seconds)
  done (took 1.979304308 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069069742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077860398 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070409845 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080575328 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073988481 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064077309 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072834974 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067571216 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077637394 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062782332 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070759048 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081850464 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070840681 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083797512 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072358351 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068613933 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070490076 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066892408 seconds)
  done (took 2.54900903 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065767081 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067520332 seconds)
  done (took 1.381533368 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066849773 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063517789 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066546773 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066450021 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063349191 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062684211 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063167929 seconds)
  done (took 1.698006958 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385891991 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109686266 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300166609 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072398374 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083692691 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247928327 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064837364 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070149699 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070388474 seconds)
  done (took 2.692525205 seconds)
done (took 14.379642237 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078189845 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085257091 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094263138 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364155991 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091823106 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065387409 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113701357 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189746914 seconds)
done (took 2.344337561 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211257648 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612763276 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384119197 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.199691221 seconds)
  done (took 2.447228599 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322907809 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088001114 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060164781 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06865039 seconds)
  done (took 1.800131113 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065588545 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068265297 seconds)
  done (took 1.38914482 seconds)
done (took 7.106077297 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065750187 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084361887 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063509033 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066179427 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065605063 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064408075 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 0.063627196 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065577716 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.063430071 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063476692 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068717875 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06537406 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.065871436 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065631454 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065817872 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063084511 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06344399 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065463541 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062943224 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066047972 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06314072 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065564208 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063722534 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063512807 seconds)
  done (took 2.86357714 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083004325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066443936 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071480106 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071248602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070060161 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071097024 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070922684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065995937 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071264792 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068395923 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070779264 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070634222 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067954112 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070271963 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068516859 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07008081 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071519473 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067032069 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067948637 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070024992 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072573365 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067939066 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071794527 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072634927 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071520248 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071592736 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070125274 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068114629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07260315 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071817061 seconds)
  done (took 3.378313652 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069567081 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062856073 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063882602 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070770581 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063548489 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064721059 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062818045 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06385419 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064251591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06365553 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064826461 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063125892 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063801065 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064301287 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064520355 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067204872 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078880703 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063768028 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063775062 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064176243 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066848949 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064036198 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063787711 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063216076 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063178365 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063000798 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064310782 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063467222 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064593578 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063638917 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066521389 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066860623 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063434095 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070114697 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067019975 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063255063 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067074749 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063120638 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.175233794 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062821707 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063079703 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063308527 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063762684 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069943161 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063331359 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064784986 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063209318 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064433774 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063558617 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065689268 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063231665 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063257664 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066144899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064996348 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067569577 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063181219 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064070652 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063472456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064061465 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063260171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062934134 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064243594 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0675088 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065232495 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079314353 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07109346 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06377109 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064493985 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063778334 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065824653 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06509837 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076207804 seconds)
  done (took 6.076046474 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087618624 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08752123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065895927 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064858458 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061693916 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064220926 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067827236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063899003 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065568904 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069501654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064320672 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064826139 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06539557 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076483748 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064090346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065125904 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069449067 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061671292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063537688 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066791525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063996641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06742632 seconds)
  done (took 2.770271593 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154855512 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070513813 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104939861 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072966321 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068341158 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074004425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071055176 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071575247 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071828778 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069758878 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070413163 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071841918 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06946998 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069470241 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070006445 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069614998 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071837351 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069895936 seconds)
  done (took 2.666323153 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076801866 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06635983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08613427 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06593739 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065796548 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067996213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070535921 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074498508 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068136332 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06591259 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074339251 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067802945 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068251467 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065757743 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068236146 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066286273 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068051973 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065471324 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074545119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07063228 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07049262 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074373884 seconds)
  done (took 2.817727913 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079372382 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068436571 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082323927 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068554412 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062649135 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064537111 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070069221 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06546256 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070273862 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067301196 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065641834 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063892964 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069280092 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066068152 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069209945 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065952788 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067793343 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065648525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067517572 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061777714 seconds)
  done (took 2.635466924 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086496706 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067642161 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067421711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076114305 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067047851 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066924433 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075275165 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067146593 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067446159 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087164886 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067007351 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066969092 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075052994 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072463141 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067051037 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074907025 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075296301 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075107055 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067528079 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06734376 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087402254 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067054181 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075190324 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067359574 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066809796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067142298 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067241651 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072023375 seconds)
  done (took 3.283319495 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066246675 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065974356 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063681268 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06352673 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063230298 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063509565 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063339713 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063156873 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065979514 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06336682 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067215015 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067340632 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067421114 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067501091 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067473727 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066488738 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066238856 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063243847 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06319744 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063332353 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065644107 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065538586 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065649724 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063176015 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063523776 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066214383 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063026183 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063436716 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066132315 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063308221 seconds)
  done (took 3.226629408 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075286359 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07346922 seconds)
  done (took 1.42934131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063828998 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080828514 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063353581 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070095402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070300666 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066531819 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073424393 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070059089 seconds)
  done (took 1.835056023 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081227392 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077080419 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068132286 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080977646 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077173876 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084221737 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135545645 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068915009 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075110509 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06631932 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081981068 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067385921 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073329542 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067195003 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071894961 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074135491 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064739763 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073263968 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070163627 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066466552 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069029622 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076883972 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070256424 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063048718 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068959749 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090402772 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07789641 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065597152 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069017428 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073752212 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072409705 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061254966 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067240723 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068424573 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065414637 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077658 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082078843 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069761458 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076662986 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068936177 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078938866 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062492097 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072434559 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074028284 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076471296 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0664432 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066339228 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060955449 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063655272 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068957691 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062914131 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068047868 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062520174 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077018901 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070196658 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077391174 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064733742 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068452719 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070345106 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070034468 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072678664 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069292757 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069154781 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066256519 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074532146 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071778084 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076955588 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062945284 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061523614 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065480067 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078068629 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09069211 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074201838 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06803851 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068172538 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065023034 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070464209 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068828802 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073975885 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074834597 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06818466 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074003972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075696591 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068282076 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070688501 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076573347 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066647249 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070916699 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06564088 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083490181 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06503153 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063675781 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064323069 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076295721 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069358736 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065314255 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063965988 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073153618 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060074797 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066735105 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066568518 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066146779 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075728834 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070496228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070695554 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074212222 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073124472 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065881006 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068937207 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062667518 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066627413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064538096 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0726298 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059821344 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068596773 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066622069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065876411 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199316901 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0652207 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067305786 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074260836 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072509193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065457071 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063556607 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069540332 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066743457 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069287845 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074787438 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065627888 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061502721 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061628796 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070380822 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066340436 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070079783 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071648644 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069067979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061859178 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064898397 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072107274 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07582191 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066541846 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069562928 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075102947 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070538175 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068184468 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07547706 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073893109 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067391305 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074440244 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069420259 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063325162 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072157121 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07193588 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067391892 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070616947 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069454466 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069469437 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067256774 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066069489 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074500991 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067355263 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065510092 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066018284 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065472752 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07649768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069085085 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061608031 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063522805 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075821918 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064537662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066258388 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066050348 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068144416 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067817855 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064736095 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06606841 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068641574 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07657002 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070503599 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067550885 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071940158 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077999401 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065882625 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069952647 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067781585 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068896265 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068891284 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077074694 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073309931 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072992551 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070700058 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064339402 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072441082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073788441 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065794477 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063780515 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065287876 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.0703515 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071875312 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071362216 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067623492 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064365536 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066985098 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069823461 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069253863 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065790396 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065465113 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073022964 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064469267 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073495616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067446465 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075996961 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069392136 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061350281 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069028053 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063930818 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071998857 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061417154 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063882443 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06528004 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067261872 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065129254 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068208479 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059988814 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072782636 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073114175 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065999812 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065061119 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065301515 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072295727 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06695777 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069290113 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068537996 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071094692 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075525719 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064630643 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06829343 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076035002 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065465386 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188692136 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072696079 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065838071 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065881791 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065803958 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064655738 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070219931 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075686058 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.0731223 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06014787 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069004604 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065180604 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065900398 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062394557 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071174557 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070132082 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06796557 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074294663 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067490749 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06842169 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070963893 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066962298 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0674835 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067690167 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069982614 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067414878 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068394438 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066547772 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069281057 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066077588 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065208144 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068379082 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066341188 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067505855 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072542686 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065810806 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067034748 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068717479 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0674663 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067343263 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066316544 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065942874 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069423024 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067406745 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066803296 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069137122 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062328001 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07433453 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066523612 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073763138 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067024088 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063730849 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074264938 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069051224 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073108498 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067461325 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067137438 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067777148 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065475595 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069570942 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073723324 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064554827 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077058023 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073769127 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067373939 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069195886 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067313982 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067622306 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065150496 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066756002 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068068763 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067888197 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06810031 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07250614 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070469182 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067057148 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068161778 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066919204 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066251022 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067440968 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060838717 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064994584 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06607114 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06635751 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075745525 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066625781 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065707853 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065314917 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067267261 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065113318 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062543586 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074485278 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075634975 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067255045 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073518602 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06588734 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068050347 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07688013 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060771226 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064592015 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064498172 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064419186 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073930799 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067234103 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075399667 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066919316 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065926087 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063471398 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06717329 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064558145 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060614569 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063874154 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069773305 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065015292 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065026496 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066346075 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069176882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066494609 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075192004 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064659525 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06677642 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065963077 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062795883 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065265108 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064991901 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.201575208 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068843816 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065516593 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064309366 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06666478 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068786898 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068350661 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066476815 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067997268 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076237397 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067122327 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070079391 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070588119 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061032322 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070782423 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06624184 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066895026 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06635378 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071164691 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07128378 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06782211 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075171937 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066142781 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068181161 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067187682 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064749389 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066629433 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067010229 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067266046 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065959751 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068087177 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07494133 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064644125 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07027314 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066647576 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066998484 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073167012 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067631801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069845125 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074147456 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067182227 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068363769 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075096498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071171326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070732638 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067786556 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068641423 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072930685 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066165196 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073037161 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067188843 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067781499 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068228946 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064722053 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066712567 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066253746 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065404256 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072165302 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067438038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06570546 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065404387 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064452365 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067686989 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069840055 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074221547 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069071022 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069484231 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061791533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063360881 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067652267 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065999998 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069533938 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070580368 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0743047 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070757307 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068160557 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066463576 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077012789 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073785464 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070728296 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064209331 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069521993 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066811802 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068443038 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06714794 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066576852 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067100153 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069951346 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067907334 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065398232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073170869 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069610404 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066961479 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067967133 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067051129 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067098698 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061583862 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068519491 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068696654 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072201002 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069571049 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066367204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077204502 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064496463 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066948467 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069684352 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065382337 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070405439 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061442816 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067320615 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067144285 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066658611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061070354 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065172882 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064123958 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068380938 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065098939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061225333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075878806 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074915229 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068310478 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064795484 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063687489 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060712554 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060427829 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197069216 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067922453 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068555217 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077548614 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065617867 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065616641 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061920686 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068908502 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072028812 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072629176 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065823054 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063551791 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06796236 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072308875 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074370609 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067082374 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068469334 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072272094 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071837809 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06546031 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07069378 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063412907 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070563064 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079746592 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067966078 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068352571 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073209832 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075049103 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067007821 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062273257 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067857537 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070311847 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06715236 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068341431 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068895847 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084276757 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071572246 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067720869 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067514429 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071261387 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067827997 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077062413 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069714043 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069689466 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073270826 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070702686 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079032429 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072613533 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077299368 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071698479 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071974558 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066650414 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068976547 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066188539 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066673549 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070089387 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069595396 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074294899 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077084701 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067680015 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079124272 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077615917 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0679629 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063687532 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06723704 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066709331 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062968223 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069043228 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066901902 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066340543 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067174075 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066955598 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069657987 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073280802 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068765828 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068796565 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067869727 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061988069 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070242482 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070590398 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068584306 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064706872 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067968235 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068738953 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072228385 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071392256 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065690106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069279166 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069851204 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06845905 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063431496 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074869951 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066972816 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069655518 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067211633 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068033133 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069470829 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071370944 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07298185 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069617155 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070815803 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072126924 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07068043 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065857844 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065182071 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073758 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066256683 seconds)
  done (took 42.954280315 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099979311 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063236549 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061876598 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062529801 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076012704 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064934163 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0640868 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065436616 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065157074 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067242749 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063884586 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064104867 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073653054 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080269217 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076204012 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068898247 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063978309 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065060796 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064000596 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064567365 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07295565 seconds)
  done (took 2.817863104 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07399654 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070085878 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073751804 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075966519 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067310912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072522249 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075526091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072682321 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077934855 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069372472 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078838765 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072781117 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068985967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068764576 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067611858 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070638037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0759811 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067410191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071293308 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081025773 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070875228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072544681 seconds)
  done (took 2.942950096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066879639 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065868717 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068000564 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06110977 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066053224 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06287163 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07153476 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065687703 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071400745 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066954609 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066697547 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067353625 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068632088 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0619066 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065817193 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06398268 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108997398 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068834939 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065443802 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066722963 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061439815 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06775078 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061557031 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06147068 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064799204 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069960954 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068297718 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064722033 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06675833 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06525224 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065790673 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063684694 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067247341 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066300465 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064983821 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065574623 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067691516 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067426285 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063118 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065676113 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068322677 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063235765 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067405796 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069149274 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065870178 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065110845 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068869524 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066958869 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06239618 seconds)
  done (took 4.627275209 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079513825 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109348823 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069921848 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090276886 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08218593 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077666556 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071047818 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091780727 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064845817 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066780271 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084136738 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08202355 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067865842 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072073135 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07461669 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06735012 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068914253 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066800343 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07169573 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067195255 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071594158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073820358 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082393484 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081533037 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071735946 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066298861 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067269449 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071463911 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080897349 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07205408 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072474068 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073263685 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082566889 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073245015 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066920717 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069397521 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084554044 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067859325 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070618198 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065271688 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069569912 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072024412 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0739631 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08409675 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067720972 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072563149 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067054376 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064393506 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080304762 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069739928 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075875267 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081791032 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070935057 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067758237 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071908801 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082476124 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067172327 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065619353 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070587925 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080019362 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064899517 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070817498 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08161368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069276083 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074453726 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082020294 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072713505 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071074373 seconds)
  done (took 6.533444328 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074787099 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072160994 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08109445 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080968716 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072211853 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072395185 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072035741 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072178999 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072174392 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076942048 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07242467 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093279585 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067421771 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075034616 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073006195 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072207856 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072659397 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072559315 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072201739 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073753819 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074620603 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082530339 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074691111 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082802621 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099220363 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067392994 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072026853 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072673981 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080557256 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072443417 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079764234 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07255403 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072299512 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08066708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079563767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072143804 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06515069 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072403576 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072127095 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072172623 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067860403 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080750112 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072365043 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067613057 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072197262 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07220911 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080514018 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080140277 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07530661 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077010823 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.0723003 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082673689 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074405294 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07450876 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082735966 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108117965 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082807 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083177113 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074421949 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083153681 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083160744 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089142386 seconds)
  done (took 6.11970295 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08322304 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075683384 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076063291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061655102 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064384815 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070032428 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064690728 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064073554 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074544081 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074693357 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077326292 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069782356 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072918557 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077371696 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069773847 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073033664 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069620976 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070012437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075209961 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069974276 seconds)
  done (took 2.809267716 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07439441 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083415344 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067605919 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071815062 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069324357 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071997505 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069010913 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070572009 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069232991 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071350753 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078399246 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078672772 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068813446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072467461 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075750939 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071785934 seconds)
  done (took 2.532073646 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075032259 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072800423 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08019 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067097165 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064138452 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064261347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067568609 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063531263 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064421742 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079897004 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068382778 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070305988 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067967273 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066024445 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064790667 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070515028 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064384359 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065557336 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067521492 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080461303 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079434042 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066813103 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068524726 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067874457 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068226943 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073298888 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067420647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065856108 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06526664 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068293804 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068601877 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071198995 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065050355 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065981557 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066322663 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065401101 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067673931 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068537271 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070995646 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067893288 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065623951 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067715303 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067618789 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068531417 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064168644 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068404057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064160439 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070016651 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06568286 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068459458 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067473171 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070400554 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068544359 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074448885 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071076516 seconds)
  done (took 5.144640538 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079675716 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069723769 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063431231 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066638077 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070935818 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070535843 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072051872 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069908751 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070318756 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066576121 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069902207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070939653 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070241762 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071587 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06985463 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071459556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063200188 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06778822 seconds)
  done (took 2.635810617 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071098296 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066656446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072927862 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067039701 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066233585 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068257575 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062748532 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064648406 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065911427 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067808872 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067865407 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070639588 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066927604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070665958 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067881488 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068237138 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070417449 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067115936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068289543 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064123981 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070951795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066546604 seconds)
  done (took 2.86681615 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072998973 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092211691 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138299897 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08458267 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08187171 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080580151 seconds)
  done (took 1.926578674 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091071263 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079290406 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06716431 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088887729 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074173737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067974025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067943273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069738957 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078825242 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078695988 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06999249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078798156 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079103006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076431697 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074229853 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074010383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067537855 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068616156 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06813577 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086699148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069562025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078355946 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069440317 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069252822 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069539876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077379661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078462665 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078303382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069399258 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078296314 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074999228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069518219 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078438938 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078340108 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070780859 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078358311 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069553739 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086540376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075260417 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077682265 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070646639 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075764893 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078443565 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074431266 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078174746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069778854 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074893301 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06946647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069916342 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089037845 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075345545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077795019 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075703575 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078535597 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078473611 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089126588 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079023482 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07796501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07572019 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081294835 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078126701 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075322044 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07779374 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079035588 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075354395 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077765873 seconds)
  done (took 6.38577087 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082791447 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086617368 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067533087 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077029006 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075975112 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069279884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069973591 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069926055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070375237 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069871672 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111148619 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06899764 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076089306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076026527 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067996586 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067879842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068033393 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075784739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067751932 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089333906 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069794879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077915708 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078207297 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078166145 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078852231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075572362 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070617678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069989995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070151777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070054584 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075238208 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070001318 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078216446 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069494235 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078112514 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070375183 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069996164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074646861 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069145788 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074222865 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076366415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086875699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069949562 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069876513 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079140962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070175102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069948025 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069663136 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070145545 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069151259 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078827294 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078500676 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078837886 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077760564 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07005555 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069664932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069655439 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069691506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069802006 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075131496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077406204 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069244829 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088388327 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069934399 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069557756 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078147001 seconds)
  done (took 6.293436874 seconds)
done (took 130.825689542 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184037411 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169383325 seconds)
  done (took 1.725098293 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069562318 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097889642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077341526 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128669886 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066790345 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100528672 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099716985 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078373064 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066455284 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066718495 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066397755 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068637156 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13185006 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066548611 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06640692 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069457496 seconds)
  done (took 2.70511574 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097886061 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.158208888 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09946444 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064858498 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09726035 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074206283 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066777719 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077740786 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073738497 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067432383 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074686815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070747895 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06537986 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070766642 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071627582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073274098 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065012805 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073601004 seconds)
  done (took 2.829874766 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101291016 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091707164 seconds)
  done (took 1.580918764 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156172894 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106047428 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149706076 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347941098 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167710907 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230801247 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.133020195 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127710838 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117262651 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123297518 seconds)
  done (took 3.044280985 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098002674 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154240527 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.258055597 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116043081 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075472163 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098546403 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119575335 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080933307 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084482949 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082722386 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080983136 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076626181 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100429494 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07435498 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073563978 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077192683 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104391613 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074974575 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076276163 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079536013 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100981232 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067758074 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076308325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07452976 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080501818 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078748788 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06545345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065795131 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07706146 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075222711 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077362578 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094205399 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07754002 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108371923 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070678657 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109004998 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076810633 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074102876 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074088872 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074137731 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079067153 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079256489 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072723021 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076436331 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06561355 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076898684 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065432943 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0656407 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078408503 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066701433 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082645036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079627427 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110678094 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067618858 seconds)
  done (took 6.063871425 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102417995 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105709696 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071617756 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110186102 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097670136 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071748011 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101822904 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091829316 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103381159 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093128425 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089623551 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071123741 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082787183 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083679152 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110791395 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102895244 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.096122558 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070802978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102644122 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103086527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068728078 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09550007 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091066104 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102299236 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068066666 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070986986 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068104323 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070768386 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077451969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078986924 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070693866 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102741641 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08452322 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078599322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067617769 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0681994 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068506954 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079550638 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09858503 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079397435 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078353167 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067879518 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067872435 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069544348 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090988139 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068138784 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079092989 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080551789 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079178529 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070361285 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070393442 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068231372 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069828614 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08044547 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077862322 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081104188 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080075688 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068748206 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068611422 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071577034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081431803 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079467073 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079648912 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092995247 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080344101 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068288874 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080689421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0848914 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068052455 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070080171 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068602795 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069452943 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069645973 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078111966 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078556146 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069884618 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069864235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068392432 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080332889 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078691571 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067951526 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077399229 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067404893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068985282 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070558287 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070508723 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078336489 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080562451 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070414302 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068219095 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069872551 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069326818 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068568008 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077438782 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079562186 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078659343 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078611134 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069403824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078364689 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078336973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069746794 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079122394 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068588008 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069900306 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069029269 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078011045 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076643963 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078551914 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068886364 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06750973 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078144003 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080773582 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06770039 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076675419 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079088636 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078180695 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067008778 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079795768 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067493312 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078560792 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068675986 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078696965 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067876134 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077084759 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06766206 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066851506 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067685532 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07764316 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068954498 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06789207 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068741728 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068856291 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077800745 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081100494 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070042486 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079784782 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076887453 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068828063 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077206496 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067800598 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077575484 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068965741 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069340878 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066758065 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080593847 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067605389 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067652059 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068939506 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0791942 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067185331 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07822777 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075925622 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067122564 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079833262 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078475282 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075554396 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078281815 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069332117 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067324654 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066655195 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068648324 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075509821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07697442 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067954713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066961791 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07507869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076623507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065725464 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075814994 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074352239 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075331887 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066495083 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067849665 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078507119 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077853938 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075319818 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076530263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075652301 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06667972 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075222866 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07624024 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06635694 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081729532 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066133459 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080181622 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076480622 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074506677 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076031054 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077876391 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077637323 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077996663 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079696108 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066265823 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066633708 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076489963 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066547822 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067449331 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07553415 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069164744 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0676354 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080533704 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066224998 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076914144 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066024532 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076355051 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06522043 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06769209 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317142545 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070386599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072541241 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082915692 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073099643 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081843658 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084691567 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08224496 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070673986 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072420368 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081826891 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081428544 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070990039 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070387909 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072262918 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081082777 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079510249 seconds)
  done (took 18.687143692 seconds)
done (took 38.033636745 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214007677 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154241459 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18396942 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121847886 seconds)
  done (took 2.190854682 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125452798 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103643091 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098084308 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067097635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106188767 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067571223 seconds)
  done (took 2.018888166 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317689802 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215604501 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186140242 seconds)
  done (took 2.167863012 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202344156 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191510393 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.403657178 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257615557 seconds)
  done (took 2.615408895 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146059128 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090826419 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067970875 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084435761 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137131657 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163625231 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102943785 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127298545 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078901575 seconds)
  done (took 2.500075789 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151425406 seconds)
done (took 13.102153604 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10332665 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.123963852 seconds)
    (3/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077586138 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.24831554 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.178284805 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.218373721 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.20308687 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.104818049 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085667148 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.17825632 seconds)
    (11/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078125566 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080980844 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081422487 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147828035 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.110137125 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073772482 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125017508 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137627516 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110585249 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07546036 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192944521 seconds)
    (22/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184534666 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075518176 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.166128627 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05447121 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177594534 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164513534 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15221454 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.141424817 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110213165 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173912334 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073069062 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105233829 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153846187 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076769766 seconds)
    (36/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053799708 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.189728918 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073720563 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.168425419 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075916532 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.221149374 seconds)
    (42/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088375854 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078495884 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11376647 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143274289 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068229914 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098427732 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071697869 seconds)
    (49/309) benchmarking ("sort", Float64, false)...
    done (took 0.128490805 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097388086 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07356443 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072643964 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.184438912 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.150026985 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07064134 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074754648 seconds)
    (57/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107506645 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066533782 seconds)
    (59/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052643203 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067955991 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112522187 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080551987 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096528676 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053221605 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.197341991 seconds)
    (66/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15277621 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104970336 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.181275371 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.189317651 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143983158 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066019519 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072998319 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171496384 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121086542 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.066012919 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069412058 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088624854 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068060755 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.147261258 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093916942 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.328818057 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067511744 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141118716 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053654688 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073241043 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078738189 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052767598 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089596228 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.190633308 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.14874799 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066034646 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.209949074 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18895604 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.152779663 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144817516 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158246144 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074359239 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07393017 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07282969 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096564996 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052806955 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07329622 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089267342 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072011634 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065962321 seconds)
    (106/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.189618296 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 0.411205079 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141686794 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070679618 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080386588 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078725238 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159526053 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05199903 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067804211 seconds)
    (115/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.183468315 seconds)
    (116/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.176273309 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066826132 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11584491 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.144041782 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095201118 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075488135 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076687375 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07285003 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066883998 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068314452 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052093642 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071700175 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116676312 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096384588 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072661598 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065789996 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073750336 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07248391 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089887044 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108046463 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051670646 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051175615 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072685548 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053253261 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051147017 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180036473 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075535068 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065373388 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072836171 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051375493 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091964707 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067422327 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052520562 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099603127 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073894561 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073388819 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066868818 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078042846 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098388807 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088260863 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09395893 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087759092 seconds)
    (158/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108524967 seconds)
    (159/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075169359 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089024376 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120671486 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.175389156 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065311071 seconds)
    (164/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096685054 seconds)
    (165/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062927377 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09299258 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078948429 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051538393 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051398585 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080484181 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051255607 seconds)
    (172/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053197629 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051010145 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071971142 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148420492 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051053904 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065345116 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066038892 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066918026 seconds)
    (180/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072010761 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183924832 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052553699 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052908278 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110202909 seconds)
    (185/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088728468 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051684149 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072128361 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146430989 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.217811085 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090616495 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075207822 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099728612 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075109889 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107845026 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067098675 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091245663 seconds)
    (197/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113508644 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187702605 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095998973 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052334269 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054163135 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064463359 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061036132 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05163377 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051731699 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072874366 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143218589 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074707194 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073386885 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053544736 seconds)
    (211/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073293262 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112819222 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068463625 seconds)
    (214/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054003903 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128425453 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18061265 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072449449 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05312019 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067754432 seconds)
    (220/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068384593 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06456186 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067687994 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090151393 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066136004 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088944327 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07612216 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053111589 seconds)
    (228/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052511081 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052782815 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052612324 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.0616731 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076109655 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136965968 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12774224 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078880978 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06293019 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062768117 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067997557 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 0.140001831 seconds)
    (240/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065746804 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081490281 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064391225 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06604168 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051790445 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065812938 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071932686 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073273259 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074909756 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07155258 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073491917 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071055192 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065514111 seconds)
    (253/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076325293 seconds)
    (254/309) benchmarking ("sort", Float32, false)...
    done (took 0.126958157 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064762886 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051831344 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069555215 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064813768 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068117556 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072178054 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071661302 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051506739 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052801126 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149662416 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052693339 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065358436 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10016587 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071163786 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072864793 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061270741 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091844674 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051087874 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054369991 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065595893 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052730237 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071799685 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052015981 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065059656 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061907337 seconds)
    (280/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06685448 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05126415 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051843851 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065677189 seconds)
    (284/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052756653 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089482473 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065798281 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073089284 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051700992 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06530369 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079837305 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064618708 seconds)
    (292/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061876834 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066529589 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073049785 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051890114 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064505475 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087676235 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066753993 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071013039 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079307845 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078152594 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086158506 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136594352 seconds)
    (304/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072169045 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051516166 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071144091 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066757531 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084933129 seconds)
    (309/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069574443 seconds)
  done (took 30.968038133 seconds)
done (took 32.429401702 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085799317 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093182914 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076203096 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093311733 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081879213 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076938245 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073106949 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078851593 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080587128 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081977728 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079126652 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055320659 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074771466 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075117494 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074742798 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091535143 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078313874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073158756 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073286693 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064896534 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073070742 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065757455 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067505968 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054733797 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077780743 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071577786 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072523129 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07416656 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066154852 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065991982 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069298908 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07313382 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065409946 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078337492 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072241644 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07317869 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074806839 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07608713 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067541827 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066098496 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074626237 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065914184 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072925688 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073377699 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072369236 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07123938 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073294907 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078312216 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091440716 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068278314 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074368385 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07596115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076737405 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072574642 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069661757 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073310455 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070683631 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091515908 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073741494 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068464878 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074245715 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073952616 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070891034 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073216145 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073179641 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07515922 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075244554 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071517348 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07463046 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071052205 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065700356 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072942931 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068893683 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066043349 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075406817 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076513231 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064469624 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07159121 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072475521 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071688454 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065305927 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067771298 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067374656 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071364815 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067672002 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054713298 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069144049 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071315137 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064422515 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072903926 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071192962 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072312176 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066931292 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075363693 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064683565 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070239195 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065347591 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065572944 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066975619 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068834369 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065437697 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067298476 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074040183 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066845135 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071116885 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078900118 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065258502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071829911 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06452194 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064841357 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080023284 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074519515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065850991 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067818739 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064517485 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07255722 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064565135 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065486271 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06528107 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065319875 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071071778 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065440026 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067103274 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071786172 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077066251 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064806566 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068128484 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067258835 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064898284 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070460744 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064856497 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064962464 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200195866 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061969461 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068410854 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066203479 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072687138 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068746503 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073366202 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067341939 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073987499 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070088795 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071751904 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070744576 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064850764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059242165 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068628449 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068430604 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06738697 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066524553 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067717872 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065796312 seconds)
done (took 12.527882308 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066764082 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143295303 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099840327 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095689875 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086104864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066694616 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076524343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102223583 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067697064 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102926023 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087352696 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085171291 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112789039 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06495602 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065993482 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069646886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067425573 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081466707 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100606876 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086552741 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116377515 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065562817 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094596995 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090178309 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087890899 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092711366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067158911 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070100592 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069682921 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10069363 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086145834 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069737858 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067188312 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100737193 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092961808 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083830813 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066899236 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082265811 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066708908 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06608019 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067703322 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098108427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080331242 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080613517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069853442 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069064767 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067128348 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083785881 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089158223 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078537769 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086372563 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103302262 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068677836 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065480668 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064421314 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085456662 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065218137 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06887332 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066209693 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068135328 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065866326 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069080144 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081008966 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08209369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070310943 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080056204 seconds)
  done (took 6.861278491 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083409211 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089683382 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082854183 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083802146 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065675534 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066169451 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066814224 seconds)
  done (took 2.089655131 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0672898 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088695245 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089953524 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08851098 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084717326 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087638984 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075920652 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066753416 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081368606 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068089348 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087393263 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102492614 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066980589 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073536238 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090954944 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066788905 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09050312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066672125 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069167744 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089956553 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068610068 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082397063 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070319261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06732593 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080856494 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066814542 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111943614 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070568531 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067967247 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06938418 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064459622 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107619974 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079868974 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075563413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066447194 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08098003 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080778519 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065246765 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082641775 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071484808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080296405 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066552991 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067669487 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064467506 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070644185 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076457945 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067452719 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067062805 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068751368 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085612055 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067137417 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080014292 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06988937 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068919218 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068327369 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070975492 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076181165 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067360267 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08638376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067854613 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083572117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082835991 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081170427 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083245896 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0687169 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080101976 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079890969 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069180673 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068290184 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070002601 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082749428 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064661346 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068469639 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077133998 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068563793 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088977594 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088874643 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067538444 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075527409 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067134905 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06686544 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066776691 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089077751 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06877976 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06635609 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070298966 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069528721 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064740763 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065619421 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069878505 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064536418 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067873843 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0690793 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069609421 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069181533 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082992944 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068979964 seconds)
  done (took 8.821124787 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06918991 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068092354 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069604591 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068264573 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068689723 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068177123 seconds)
  done (took 1.986202369 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093927017 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069605425 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080565651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072944487 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10522173 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087307575 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087061015 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079077695 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083576273 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079655504 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086739943 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088512168 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092849859 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07357605 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086840588 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072208322 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08710406 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076128039 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078345 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073412863 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.0871909 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073234556 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073409991 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08208499 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076071407 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072419442 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067531979 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078802646 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07875723 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079029792 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072639137 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075618186 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070934336 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07925574 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08723884 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070868877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072195484 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077539112 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072745785 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075660183 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087973614 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073400444 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074702444 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077582244 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078881004 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070694337 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077519847 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076212091 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086342773 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07712616 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077470265 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071444842 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075780955 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077317453 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070672391 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078503957 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076837476 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086392169 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072594257 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070398723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068803522 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075581648 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077742626 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075400266 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078868458 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077482535 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070549581 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072905442 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073275689 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071919967 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077331631 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069246384 seconds)
  done (took 7.158705709 seconds)
done (took 28.457063788 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541749389 seconds)
  done (took 2.091436342 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602112993 seconds)
  done (took 2.173702976 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.675451055 seconds)
  done (took 8.245477155 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394742775 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478845577 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696187956 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131898291 seconds)
  done (took 3.311388147 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.66700343 seconds)
  done (took 2.245624105 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209233475 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197813657 seconds)
  done (took 1.997443202 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378484717 seconds)
  done (took 1.94761978 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.109446322 seconds)
  done (took 2.681387562 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266109463 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163696758 seconds)
  done (took 2.004425899 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46464008 seconds)
  done (took 2.038689485 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.84342934 seconds)
  done (took 6.420589291 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204810449 seconds)
  done (took 1.82324405 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240169531 seconds)
  done (took 1.816156693 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.806459199 seconds)
  done (took 3.383726167 seconds)
done (took 43.758687069 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079523299 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080349721 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080247929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078058431 seconds)
  done (took 1.885183076 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077366137 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071693899 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075978026 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072332679 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076705626 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072722372 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074169921 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076855145 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071857172 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072740636 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072027629 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072671813 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075246993 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074301923 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070616797 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074869472 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076337631 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072297908 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075691381 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072629834 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070625823 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07443645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074811895 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072071547 seconds)
  done (took 3.353934342 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078058313 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073115508 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074684792 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071889554 seconds)
  done (took 1.886852539 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076740614 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091920329 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08933237 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07782959 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093132508 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086225445 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069345692 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069001834 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073136125 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077193188 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068217526 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095854736 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087500953 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076412704 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078775078 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065741332 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067975097 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08674197 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076969968 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077210062 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069341144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077111931 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067449174 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088395065 seconds)
  done (took 3.472887263 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07743632 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103320671 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078107657 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088235793 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090014495 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065190311 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074525923 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089150954 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122960258 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065212779 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070124199 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0653364 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072679329 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065259211 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075763253 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104438516 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108273632 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068868622 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096054386 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065429681 seconds)
  done (took 3.2426345 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072625536 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070137206 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066071193 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068464267 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076874013 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073797339 seconds)
  done (took 2.02371461 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067436356 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067511995 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067205026 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066878933 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07188286 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066901776 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066009176 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067019828 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06723273 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067162593 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06649527 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065799106 seconds)
  done (took 2.399093808 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.423980921 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068774666 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068737968 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065488291 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070719258 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066422753 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079922069 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067794651 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090637803 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066334075 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066256607 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068278524 seconds)
  done (took 2.79720584 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205883107 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076240334 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23781105 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136891751 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111323445 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11548026 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104650332 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112340969 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144058123 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10211312 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168662554 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1661793 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107126845 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137352302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089313544 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097858922 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156403475 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162959395 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103983942 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165824509 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144603765 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124386012 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147288314 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101233855 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106030594 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121772908 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070973281 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080036439 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170771339 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131840082 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147088758 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111778769 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094230181 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177035885 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170621352 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142584271 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134053529 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083668255 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101664295 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133359193 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199700271 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088640811 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164875425 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245144643 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081235234 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134744717 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120862244 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119915224 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107088794 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089258685 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145847312 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18411587 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1400314 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086714615 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113148462 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116188938 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117937014 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103542317 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182752788 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161507641 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128133844 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070621683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09986846 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154209912 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132463383 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110261393 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127616403 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094075699 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13422068 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15502245 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118958951 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143901604 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128169036 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088545176 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119631697 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140213996 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128403973 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170691113 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124710509 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072395488 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125386382 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103645694 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081345633 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141633405 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075593899 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175419795 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098187942 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106191128 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113008905 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108786519 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108370955 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161807532 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144258092 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243327911 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066281898 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103248324 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120504276 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149071069 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08803565 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108478036 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116171106 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078453937 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140633456 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074501693 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123583921 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075814119 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125328071 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131870799 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074968475 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122373599 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101102176 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100731642 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134813346 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160864045 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088587357 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082675728 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166315081 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122653053 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104108654 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143541922 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156313096 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099540227 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102496344 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149526813 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179694491 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089129683 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163253163 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107360279 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084118703 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087252463 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12424934 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112610546 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122670253 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083162989 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118753297 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169157511 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074824188 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095139176 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134214709 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079123814 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080586549 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103284587 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100593528 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094804216 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099770228 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104641419 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137781259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123038316 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10477057 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270473303 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098021292 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171191126 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089223824 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100227275 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104297624 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070501107 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138425618 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157462909 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079190593 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166307252 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124594924 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105326344 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119839222 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082824934 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140195058 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07910495 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070670522 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143971698 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110175968 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110708025 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15065214 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104217837 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127686998 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1203212 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134736461 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132875228 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128838904 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10529607 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087536848 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111728142 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126325085 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072514017 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092224376 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080130142 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104000886 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095649176 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083016712 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142932673 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124984832 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100453517 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111768364 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096832301 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147069914 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076377077 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129739067 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119015739 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093736883 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151796301 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152137105 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131653956 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09887247 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144928316 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070223788 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073818853 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08937615 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265832636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083885307 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083962965 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117743918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147679461 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131635157 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13906432 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111274048 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121990861 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154568731 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06925177 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114627204 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148389419 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122361863 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104401167 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089823807 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099206656 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141970502 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107715799 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181810298 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114173263 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12638767 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153471831 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099035821 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079437358 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108057049 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136097605 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104423465 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145480102 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099463776 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088679158 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110428026 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073749202 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100337493 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127174484 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12040876 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135758298 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114008784 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133417895 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076847523 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117538541 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12034938 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123257047 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063766307 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120121094 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161143316 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09355128 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118397278 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153039861 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079386928 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12390512 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320504814 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146296561 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084671078 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10996438 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119016006 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128778482 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121625102 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140775691 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108479667 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136037776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109420956 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085353162 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0868333 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097434746 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104478651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094591819 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108787214 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1156383 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095464441 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133608394 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104263056 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109790535 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117534007 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096959028 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089659051 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096038657 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175367562 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120517429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172991638 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099120707 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146413569 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16515816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074345533 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078814228 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077750732 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139781878 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083770738 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130893768 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097652122 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105248645 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124459949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142453363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094621562 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068467646 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108184808 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134677975 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112208677 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098104445 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104953014 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162825372 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099728203 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079061786 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113445327 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104565498 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102824541 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172646691 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061339882 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240617916 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076172989 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081057339 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128476671 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153974152 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080741671 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10288439 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119919834 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111749361 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128443749 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10131796 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099072217 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114764985 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150294198 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129889425 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09023489 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112505035 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130425371 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157407362 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105304582 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095130504 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17268236 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152611948 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161084852 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089337703 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13168042 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116447667 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108131858 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139504659 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082982462 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16451796 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082301012 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137395693 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104427854 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0904261 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130653143 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098374615 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087990236 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147967356 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117757392 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082618246 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077646676 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117814082 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12105535 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106273039 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07506095 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138536243 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072438763 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132125472 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167988389 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080760631 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104308242 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095753946 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222487403 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110240095 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103851671 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090000412 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099302622 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174453562 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088865393 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15078159 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142201438 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113111585 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137871026 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099982438 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635711568 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079274504 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152404438 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117064202 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174229508 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097899778 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117758324 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109257412 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124502492 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144821177 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105767184 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176122854 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132743477 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.1161867 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078917544 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102476147 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103095903 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089070981 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105152538 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114087712 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116967933 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093878156 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11627697 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124099042 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082151446 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095583724 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156456266 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116765989 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144566497 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140799002 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084449321 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118342055 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138552912 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079767503 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122133392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15239286 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105802986 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097302725 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08009779 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244723754 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171580092 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073195824 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164769715 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121071281 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109974279 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113391008 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114626122 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132501788 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108665321 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122014162 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093523967 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110915898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112813833 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081697233 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076793548 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104028569 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113475904 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097619706 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098662765 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098384502 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151769122 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070832319 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096399235 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103084652 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145536149 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175100538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087613367 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083015949 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119988903 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112633412 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113867715 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120639893 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07953059 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082216958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081919869 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077060887 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108744982 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112139213 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104219405 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111400811 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164660436 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082446876 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221985493 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095456728 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104460939 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069618522 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078528813 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096160491 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097689102 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108319801 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100550292 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170277006 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094059812 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089903774 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092948599 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072747517 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082490162 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127088083 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255715528 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120279791 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0975625 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062728496 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108739618 seconds)
  done (took 59.035132138 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108466312 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082145255 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096683825 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149712283 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123066553 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213103273 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157957887 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199987499 seconds)
  done (took 2.827008595 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067656043 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094320795 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099771776 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082842016 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066885515 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068330124 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225867089 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079915915 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066703615 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088230811 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079060611 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068303118 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425533889 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065865388 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067583744 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061953877 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06702885 seconds)
  done (took 3.463595241 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363203469 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.360609893 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372469647 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072961909 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.79841503 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089290136 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075046082 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096869485 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071685909 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280228901 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706862969 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092222616 seconds)
  done (took 14.078252588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075492798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069884159 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083230674 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083558791 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072026908 seconds)
  done (took 2.082906703 seconds)
done (took 104.160714868 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079792198 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393763321 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053792543 seconds)
  done (took 2.17470478 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081899644 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084171936 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084540245 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083157368 seconds)
  done (took 2.037864694 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073893708 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075786257 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084302464 seconds)
  done (took 1.932245214 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223220879 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138992094 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086699182 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081354639 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077936306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078641742 seconds)
  done (took 1.941056899 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071896355 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075336283 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07213204 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076340172 seconds)
  done (took 1.995519211 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076458779 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054615967 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054875808 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055548721 seconds)
  done (took 1.94438577 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087136122 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078220658 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078611697 seconds)
  done (took 1.94725442 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106901087 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084442352 seconds)
  done (took 1.893975397 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081537842 seconds)
  done (took 1.78592873 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098322408 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113410277 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129509884 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109904613 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137142105 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109240578 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085672967 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087281042 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077402544 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087265802 seconds)
  done (took 2.73869646 seconds)
done (took 22.619280946 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078675182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46220785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360926016 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091372722 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667558486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356296351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993770978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092328777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113584543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067757056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083880757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647843814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983413673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419335487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973036426 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324345794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653038537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070563002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067583883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067924354 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979204449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067792692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067679656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068177755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649534294 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371135815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068060579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319224313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067802187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06967352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355188672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0681932 seconds)
  done (took 16.418557268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071014745 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116951027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073277155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084839415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071705042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07001332 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071563066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069023171 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119644884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068463078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084480505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067583332 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071761541 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069065091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087184675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068552046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068846092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068268967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068598349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068550282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086298636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06826326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068277363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068050885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068445885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07967576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068023589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067853506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067946008 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069728844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070977355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069062047 seconds)
  done (took 4.11031907 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115461434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125517599 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074618854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102591455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113185999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070012329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143283894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092730988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128124238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06796755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084593453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067955022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101065945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06879101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087660903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068775363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069646631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068886837 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06841688 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068555652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087328151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068302881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068551878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069301905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06858424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081233692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068441042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068750572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068833836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070497207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071738833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068992738 seconds)
  done (took 4.369140142 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072545932 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07470976 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082707291 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083160368 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069717886 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071932742 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072829954 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069878452 seconds)
  done (took 2.321604739 seconds)
done (took 28.931804285 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079504157 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068781983 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072358617 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081031527 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072937282 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078242855 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067810579 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075134354 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072270075 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073221815 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075486382 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067389918 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071360879 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067817584 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073521007 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068133339 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079302958 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071588212 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079403371 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079847461 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070109118 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072816236 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074311226 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078898907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080427759 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079271791 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077509819 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073339164 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069483052 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070581265 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076837498 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083590439 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069311999 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081838033 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068727401 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067866169 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071578354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068692421 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079529629 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076829029 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069565623 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076307 seconds)
  done (took 4.81138115 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087710576 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090422248 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084346539 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061661191 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067151355 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065906492 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08806517 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059854911 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059641716 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08776235 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056120226 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059668641 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062566864 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054600627 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059800032 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056699765 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061483764 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05614265 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059009916 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059712878 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057868136 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054501672 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060089241 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065031459 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056532129 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061994995 seconds)
  done (took 3.42464419 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074940764 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083728845 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088306289 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126561978 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103642178 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076674236 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077808161 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09198409 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084950607 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06699163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071419169 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093689506 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088394062 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074387978 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067584061 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084305053 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081925304 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068698538 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073371424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090999363 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084279032 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083940223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092533902 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080750805 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066863248 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069623683 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071344895 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081982589 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07240873 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076493509 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07163991 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070784263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069285306 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078663547 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071405843 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069010935 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090666511 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077292579 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078224531 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068428256 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07117476 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06811813 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089287444 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12209077 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067178056 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074108828 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075176272 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076649149 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067325205 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085697365 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078092381 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067204807 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070162784 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066865816 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067218617 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080465184 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070098981 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069303971 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076428904 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070970604 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085955808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071657754 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082842157 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066990289 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075091596 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067281618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06856142 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066740596 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092413126 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069391822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108440866 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068611036 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068440171 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076303327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07522828 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073270552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067777443 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082269721 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077689152 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072830238 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076014044 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070889201 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070079874 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087643558 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069823164 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069366318 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068410518 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07376962 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070430384 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068903586 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080715697 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067549821 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070587944 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084016166 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067514375 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0688936 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074057614 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072264735 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066973403 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079021604 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072135007 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068543794 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076621489 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067269596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070483745 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077887301 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073343796 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066404359 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072267582 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073685135 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068369039 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068672323 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070328373 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069207907 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075611807 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073748558 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071960993 seconds)
  done (took 10.632244622 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159730981 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153978701 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069589606 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144828762 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08768412 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079646603 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147604066 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094805178 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067790004 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068560222 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06861438 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109762363 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105724876 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115762775 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078922297 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067929436 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083299267 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116307003 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149488339 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142988556 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083497257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076694659 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069723977 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068805856 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070740484 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078185608 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085171153 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076018067 seconds)
  done (took 4.483769265 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081366579 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096348564 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07466265 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088988235 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091116014 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067765161 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070173147 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069547375 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080357383 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078889487 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067548672 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07322956 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074327307 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071093353 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068668511 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074627884 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075099461 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069272655 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07071711 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073479627 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07824814 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081385031 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071925178 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067394965 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074485865 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067113803 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065073825 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084803205 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068559091 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090059463 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065714415 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075382234 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082242263 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069019982 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068229287 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068014836 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068035528 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06739111 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069447364 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066203337 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066499821 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057678728 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067555355 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079734558 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074090698 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05662752 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072855639 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073340759 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072545029 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065764528 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070826967 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070447725 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070702774 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074921249 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072891667 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072657554 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06852381 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065754517 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076033438 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068129498 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064945731 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066476306 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07209538 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066665839 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076062717 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072361287 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066395583 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068004788 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069558477 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073794141 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067224372 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070906063 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065331112 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069521752 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072159241 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069880192 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068536864 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065862987 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067121197 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067711482 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055824374 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067585595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053646108 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070059266 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065533319 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06622145 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067509589 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072640934 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079886524 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068964921 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073625989 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06820925 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066352829 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070821886 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060467193 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07055637 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082866462 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082857571 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067234236 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065996875 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081770596 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07184806 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066538249 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056419616 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074633509 seconds)
  done (took 9.227579038 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093052275 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08850713 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069599298 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084825662 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091272172 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086958344 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07520801 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076923019 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069473442 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082523475 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073700989 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076644367 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067968066 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077110403 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093624568 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077107861 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069914313 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076636083 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071706309 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100541436 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082899494 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081595964 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07469897 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06811767 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076050419 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080158974 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089303746 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079958882 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.0787846 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075864615 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080169312 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089393446 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074184134 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072160012 seconds)
  done (took 4.474889585 seconds)
done (took 38.770275408 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.800387941 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.970870072 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.799365172 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.172924354 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.126370159 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.816288183 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.9520134 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.796570634 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.973342419 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.838357768 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.046815758 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.855850524 seconds)
done (took 65.88685931 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.815516831 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.945744667 seconds)
    (2/2) benchmarking "String"...
    done (took 2.072218952 seconds)
  done (took 5.757741734 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.098058548 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.43917315 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.044149266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.795479142 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.802925176 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.105780688 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.593063537 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.317233729 seconds)
  done (took 30.83679926 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.996071381 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.99813521 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.453636733 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.486639935 seconds)
  done (took 15.720708528 seconds)
done (took 64.046789337 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.805042231 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.806568059 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.800145199 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.780943281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.855671046 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.817306131 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.117686693 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.059191616 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.798241117 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.783204725 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.799282303 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.230866604 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.801527514 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.073470669 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.799788605 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.805799228 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.84222617 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.351296445 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.949504348 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.804473466 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.800046979 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.833783262 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.797470265 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.797481959 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.840894305 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.79331928 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.23607612 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.803691412 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.608853164 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.793925702 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.845499524 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.301757298 seconds)
  done (took 206.276121879 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.791773636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.661123076 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.773376675 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.834369733 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.996038754 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.989095769 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.927610633 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.205123927 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.796172375 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.816905069 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.993051446 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.791906761 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.021883989 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.743121289 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.799381576 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.899497025 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.964499649 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.017315556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.792553387 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.063383348 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.802380551 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.841748608 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.790618824 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.96847334 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.792785465 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.881599572 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.809496102 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.802932421 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.978232982 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.916863591 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.796363673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.789488159 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.991191351 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.654254501 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.787697532 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.810883829 seconds)
  done (took 170.02769099 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.924482306 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.778963987 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.778399577 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.778556891 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.78503433 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.778904919 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899483016 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906195011 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.232734092 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.225718852 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.828480956 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62299916 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.776991356 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845341433 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.789336751 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.777411293 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.791235829 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.802358276 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779519665 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.776429081 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905702287 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.788615788 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.888722091 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.78493952 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.775923157 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779528377 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.144038281 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775351183 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781327533 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.019119578 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.774732203 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.775006505 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.677785876 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.117178141 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.867866461 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.777936276 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780114525 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.775416455 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.993947632 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.775498532 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.774093105 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.776055526 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95721856 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.775174131 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.897359059 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774220927 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.283641757 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.774513894 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771512769 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.548205933 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.467058183 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.773806733 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.769554236 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.770432218 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.769061214 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.769006317 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.772323402 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.775113088 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.523198869 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.841602353 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.769505336 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.768326146 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.771046372 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774350193 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.768224389 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.958066951 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769442499 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.373784884 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.82655646 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.881426594 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892383728 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768469098 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833363209 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.861378492 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.768084169 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.765936239 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.766869596 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.766950056 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.848135684 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.767974134 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.766958159 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.88722758 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.774638956 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.769081336 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.817511539 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.836200897 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.767602583 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671969569 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.770118629 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.766474063 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083381292 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.766920615 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832790907 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.766174482 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.766538285 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.766455787 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.889668892 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888782123 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.552397411 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.769197301 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.450750046 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767086604 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.899621385 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.767088452 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.96355966 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.768367857 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848515605 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.771260003 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.767245131 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.76590309 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797869337 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.767007531 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.824127163 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.766924496 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.135977191 seconds)
  done (took 402.88140078 seconds)
done (took 782.90491506 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.441950455 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.398395689 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.519375224 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.423112835 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.401147932 seconds)
  done (took 13.892563619 seconds)
done (took 15.602033852 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.850529937 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.857011604 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789352315 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.855205382 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785698226 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.853920663 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835685313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.791219107 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822428034 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.790219551 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.821316124 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.790159091 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777599439 seconds)
  done (took 25.329768256 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.997116947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996062018 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834963409 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994251997 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.813283146 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.001026833 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.928246059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.916362187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914776311 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781875266 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.779112048 seconds)
  done (took 22.668183639 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.000577384 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.009194186 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.839849758 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.01078118 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.814736209 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.999884339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.926561629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.918107378 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.919759326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782614237 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777992293 seconds)
  done (took 22.711041489 seconds)
done (took 72.418277467 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.773668549 seconds)
  done (took 3.482771375 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.796751093 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.934668932 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.77753082 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.777445356 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.773877961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.778356774 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.777374594 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.772735185 seconds)
  done (took 16.099024497 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.77272642 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.770701413 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.771400883 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.771987003 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.770054813 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.772811309 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.772214036 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.769987436 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.77167136 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.769706036 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.772863847 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.772823527 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.772944788 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.771039185 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769939978 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.772981669 seconds)
  done (took 30.055491574 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.77132919 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.771475991 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.771699453 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770553092 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.770667431 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.771095074 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.771928628 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.770592344 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.771875951 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.77096249 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.771710771 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.771317234 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.772055477 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.772421094 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.771399462 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.771923659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77163166 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.772121482 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.775490364 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.771254043 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.771541865 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.770973368 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.771317463 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.771781484 seconds)
  done (took 44.231553533 seconds)
done (took 95.579006614 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.478583171 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.467193948 seconds)
  done (took 8.657933809 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.781634186 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.780497865 seconds)
  done (took 5.322715302 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.780978005 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.781397393 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.782117226 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.781511075 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.780928127 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.77990305 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.780372695 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.781189286 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.781599904 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.781199652 seconds)
  done (took 19.528617169 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.781149053 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.780728345 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.779701117 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.781300373 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.781831248 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.778952434 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.781712617 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.781945591 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.782658085 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.778920147 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.7815569 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.779010446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.781712469 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.780635086 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.781307317 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.779452308 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.778742803 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.778443157 seconds)
  done (took 33.767670742 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.783158391 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.780887776 seconds)
  done (took 5.282755286 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.779370959 seconds)
    (2/7) benchmarking "second"...
    done (took 1.780552995 seconds)
    (3/7) benchmarking "month"...
    done (took 1.780811766 seconds)
    (4/7) benchmarking "year"...
    done (took 1.780022407 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.780397055 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.78058841 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.780101831 seconds)
  done (took 14.180432912 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.784079254 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.950735212 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.026904438 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.458074265 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.785519044 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.78777177 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.749252673 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.786973459 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.787717909 seconds)
  done (took 19.835444952 seconds)
done (took 108.285592307 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.630757309 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.778949484 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.159569133 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.841455719 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.835970003 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.07830473 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.818667367 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.008390654 seconds)
done (took 42.871623547 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.880132375 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.30388475 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.329273677 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.318998963 seconds)
  done (took 12.672617944 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.762633596 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.302317219 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.819542362 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.373719101 seconds)
  done (took 19.995252409 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.152842432 seconds)
    (2/2) benchmarking "read"...
    done (took 2.13854583 seconds)
  done (took 6.015981988 seconds)
done (took 47.286126791 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785587373 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.784083635 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.780614122 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.784590465 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.78467385 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.784507876 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 1.783501632 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.785244523 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.781583413 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.781776048 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.785257367 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.784437729 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.784319497 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.784285934 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784788578 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782181419 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782711121 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784187781 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.782037336 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782173115 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782127985 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785040397 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.782465035 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.782245903 seconds)
  done (took 44.527104376 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.78562404 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.782975108 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.785298421 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.786211359 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.783037935 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.785665332 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.78633722 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.784442773 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.785866916 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.785842449 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783173112 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.783017645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.786354413 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.783642711 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787271509 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.783698828 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.786025998 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783898865 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787514602 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.785075765 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.786199155 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78384325 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.783752688 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786343216 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.785433236 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785343451 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.787290903 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.785404096 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787031963 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.783381595 seconds)
  done (took 55.278364633 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.793489762 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.794139586 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.787667211 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.788118795 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.78750455 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.787923905 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.787917358 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.787711104 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.78697735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.787093605 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.78766654 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.787900486 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.786971755 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.787067459 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.787257767 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.787113262 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.788637211 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.788042519 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.788161251 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.788105277 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.787658119 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.788163048 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.789359687 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.788518359 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.788235966 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.789454195 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.787848519 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.788237375 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.789147525 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.788460414 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.787153736 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.787948139 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.788302686 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.790543555 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.788475958 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.788714053 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.793777926 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.795193431 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.789407498 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.789621399 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.789782294 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.789377652 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.788568387 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.789179653 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.790681925 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.789149387 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.789393475 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.789385229 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.789736019 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.788861742 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.789874224 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.789325327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.790231418 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.790618005 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.790319798 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.791102728 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.789966114 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.789331385 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.788966058 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.790137164 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.790120567 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.791531482 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.790942125 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.789810309 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.790613835 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.79086839 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.790155932 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.791028983 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.790426457 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.790271644 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.790391841 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.79026195 seconds)
  done (took 130.55629542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.791206982 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.788310093 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.787451334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.787829286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788247535 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.79258511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.787408547 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791076849 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788720818 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.790790357 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791219218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787973336 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78817004 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791231316 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791713847 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.788444918 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.791804996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788214154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.791433661 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.791184909 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791011268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.789023715 seconds)
  done (took 41.103260599 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792067622 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.792062029 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.790093346 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792310855 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7904827 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.792605187 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.792229228 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.792572658 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792962423 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79009778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791063578 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79173452 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789823846 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789549511 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790606274 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790644738 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792916427 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.789646852 seconds)
  done (took 33.972468294 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.789197391 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.789109983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.794209915 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789559654 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.790718523 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.793685941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790182795 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.792963333 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.794156557 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.791011926 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.792340881 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792088367 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.793392362 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792362131 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792862791 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.790363888 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.79319444 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790531343 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793480283 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791594599 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.790792789 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793869829 seconds)
  done (took 41.15161079 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793158561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795195278 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790870957 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.791523091 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790858273 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.793215068 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.794268553 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.793021821 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.794269848 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.794309871 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791769061 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.79426313 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.792266877 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79194555 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.792593654 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791513485 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79452953 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792616911 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796234069 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.792065249 seconds)
  done (took 37.591246449 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795956747 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795003726 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.795497328 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796842282 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796206319 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.796017851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795877095 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.796221611 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796231223 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796188317 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795737308 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79637219 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796042382 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796430509 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.797923905 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795767555 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795627568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796619892 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795425591 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798114288 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797491363 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796829744 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796257099 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796889634 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.797209805 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797096316 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796499827 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796286243 seconds)
  done (took 52.030537745 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79691635 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.796236179 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.793985304 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.793174215 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.793612181 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.793624746 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.794968069 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.795865342 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795881589 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794275741 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.796673948 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.79785519 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795924546 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.797329224 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796787439 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.797647078 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797443227 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.794188114 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795405364 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794151303 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.796733219 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797550531 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.797702295 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795368684 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796181156 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.798401302 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795361075 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795547804 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798362518 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796945755 seconds)
  done (took 55.61305304 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.816753669 seconds)
    (2/2) benchmarking "in"...
    done (took 1.816001823 seconds)
  done (took 5.366254463 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.795189423 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798450369 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.798400725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795726628 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796242016 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.798266784 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.798762643 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798074721 seconds)
  done (took 16.113223934 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.799400891 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.798826124 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.798503631 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.799285987 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.798864177 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.799845461 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806936171 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.798154649 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.801872611 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.802318542 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.805106659 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.807262293 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.803761394 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799698785 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.801753615 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801967813 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.799179989 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.800154026 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.799361122 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.799022248 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802611864 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802551234 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802373511 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.796919118 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.801406544 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.81331967 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.805467616 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.799738568 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801027919 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.806009626 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.801421996 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.799077786 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.801140542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.800673755 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.799958619 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.800728766 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812505252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802298934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.808004921 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.800610812 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800155555 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.797807327 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.803693468 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.805208622 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802498299 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.80117936 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.801423049 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.798102425 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.804861143 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.805071079 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.805493322 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801774809 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.798620194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812279681 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.804191242 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.809384509 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.802699774 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.804595346 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.810166196 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.81314524 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.816406829 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.808575168 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804351536 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.802214211 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813051792 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.825869782 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810723262 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.798969632 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.79898531 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.802773351 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.812457319 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817416985 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.811759718 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.802786356 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802307841 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.803065941 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803653074 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802462184 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812103427 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.80631348 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.80342371 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804620734 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812961399 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822824117 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.803714235 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.802952088 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.805158316 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.804295298 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.804655868 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815372598 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.804281485 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.803456485 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.805524765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.804374025 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.809199457 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.804501053 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.803348098 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.806966893 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.801218347 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.804072564 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.804568095 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807916367 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.813180132 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806024713 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805084541 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.813036934 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.804815785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80399249 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.817184495 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.804219024 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805002342 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.80509076 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.813342426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.801085786 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808129298 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.81371355 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.804593804 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.808060571 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.805019141 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.804930791 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814993089 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.829940168 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.804458657 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.804666955 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.810561404 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.817112797 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805729832 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.809689214 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.804701433 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.802524798 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.802855859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.808570159 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.805606908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.807514544 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806291329 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80880122 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.803531549 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.805813762 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.806057999 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.807706849 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.808179116 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.807503183 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.808204704 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.809745388 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.806325918 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.808466712 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.81786501 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.807711543 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.8086373 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.808598011 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.804437183 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809076271 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.808863088 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.807407146 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.809628907 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806238048 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.806828105 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.807600589 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807399729 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.807081488 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.80666615 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.807259587 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81252249 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.806866905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.814646463 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.806905878 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.804328875 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.807177381 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.80643597 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.810167528 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.807399585 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.806569992 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.810106054 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.815156363 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.807353787 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.809403943 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.812975671 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807676295 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808065914 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80783213 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.81123598 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.816078023 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.808826323 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.816437493 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.809028066 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808361615 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.807531601 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.810045258 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.808785127 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80923936 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.811247946 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.815372981 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824394103 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817260521 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.810066641 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.812015373 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.811264032 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.813067829 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.815079322 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.809988802 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.809202493 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809246254 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810340738 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809789243 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.813499402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.810172181 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.80989967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.809572814 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.809897259 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.810909677 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810484672 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.812527005 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812248346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.807733802 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813810562 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812594693 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.809989681 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.806795565 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.809941589 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.81077116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.810533466 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.810795199 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.820116568 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.806858349 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812173376 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811639415 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.812462078 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.809775812 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.810212085 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.813829058 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.812571216 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819445879 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.812970781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.812779087 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818221847 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.811590606 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.811009623 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.813337301 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.809905597 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.807100089 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.813031178 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.818885217 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.809828678 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.810443993 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.811322219 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810852802 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810686853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.819010313 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80849864 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.810384528 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.810419362 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.814607381 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.808845981 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.814397362 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.812326901 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.813326808 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.815190343 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811757549 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.812653649 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814493964 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.811042644 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.812287843 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.81192978 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815966429 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.818257891 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.821036913 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.813316377 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.815512778 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.813547563 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.817748544 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.81322404 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.812504223 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.812649697 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82802142 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.821060076 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820875652 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.815590254 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.811474494 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.8187564 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.814307986 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.81753021 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813080682 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813895332 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.813619791 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.812889217 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.81083104 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814344761 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.813191528 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814287659 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.814020649 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.816180809 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.812742779 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.81220489 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.813008849 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.813865483 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.813937202 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.814425308 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.813081535 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.818542927 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816073156 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.813478868 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.814620874 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821667374 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815011602 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.815950782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.813599832 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.81453282 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.814813581 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.815713478 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.814635117 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.817178198 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.821806525 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.817825161 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.824545436 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.81510435 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824549528 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.814933459 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.817928196 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.823126047 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.811619618 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.81401209 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.815628677 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.81442308 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823630596 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.815296762 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.815745669 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.819105083 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815574182 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.815841823 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.815597663 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.815913548 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815529484 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.815851462 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.824735741 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.816716327 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.820088752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818075945 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.812538265 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.815890682 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.814358427 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.816552192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.821245948 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.815477959 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.817771099 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.816116042 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81709214 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.816893264 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.816647758 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.815861582 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.81328401 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.815659135 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825150463 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.817840622 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821022709 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.815652905 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.827876751 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816688492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826006057 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.81686008 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.817509729 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.816996969 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.816485327 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.821080985 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.816984696 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.819783353 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.815907686 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.818091303 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.820575266 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.818307592 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.821506972 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.818387435 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.818342356 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.818209856 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828512042 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839575997 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.819500699 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821247735 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.814529458 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.819545647 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.823055691 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.818579657 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.81694232 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.820102424 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.828434322 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825789125 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.819747944 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.818689336 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819867816 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818679425 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.818774627 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.818872322 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.81825421 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.817617964 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.822036821 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.818653896 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825844817 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.817448512 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.819894354 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820757305 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.820520133 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.830049322 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.819813635 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.820265461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81869695 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.818197878 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.820982004 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.820199956 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.819867474 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.820907797 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818165991 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.819969246 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825448028 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.82657306 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.821945405 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.818869362 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.81927403 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.82065789 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.822867919 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819981142 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.820380014 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819749951 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.821618914 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.820707005 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.824469384 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.818901793 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.820498916 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.821873288 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819822353 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824965938 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.82745032 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821503348 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.816735136 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.819053341 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.819116756 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.821471148 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.822979261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.831742913 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823765771 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.830717009 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.829689726 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.825494131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.821639873 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824266536 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.828869573 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.820286949 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.822857697 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.821501544 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.824654995 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.822438142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.825929819 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822685803 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.831344114 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.8221622 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.822189019 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.830986954 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.823341742 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.822489601 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.823227904 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.825977165 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.822383397 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.818901217 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.821715969 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.821639134 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831377437 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.825103308 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822736758 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824963787 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.821496597 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.82466053 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.826974034 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8228007 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.824461318 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.820766887 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.823615623 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823162249 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82238906 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.820711258 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.823302218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.823482627 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.825708647 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.830216608 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.820346663 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826830379 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.82384125 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.825304276 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824091155 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.823307293 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.820705582 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.821163111 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.824500222 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823985164 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.825680588 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.826328954 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.82437535 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.826687549 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.82522525 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824975936 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827400613 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.833915609 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.831075564 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.82064447 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.823831762 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.825872236 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.829819253 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.823953442 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.82431682 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825373245 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.828166538 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.824018687 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.824848062 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.824081313 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.827144986 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841946775 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.825009824 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825498643 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.826770257 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831763635 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.825244723 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.822264491 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.823591813 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.828205936 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.827908227 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.831656908 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.826019507 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83250336 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825654507 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.826216015 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.829789525 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.82832985 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.834153093 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.829965904 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826868897 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.826356348 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.830595487 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.842654831 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826674308 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835259849 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85616576 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.827902883 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.82739845 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.826628458 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826679445 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.827001046 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.830955722 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.827659528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.826517905 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826116065 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.827303765 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.82895257 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832788167 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.829421051 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.826696581 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.826301896 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.828169858 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.831039168 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.824363447 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.827123145 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.82766985 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.827353255 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.826989411 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.827947685 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.82876743 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842473188 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.83843867 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.827191155 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.828612646 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.824501858 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.832261264 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.830771213 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838266396 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.834574822 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.828276711 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.827986347 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.830166485 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827071891 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.825045938 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.830620487 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.828479549 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828716844 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.826031323 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.843124108 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836559041 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.834222345 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.829511993 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828963859 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.828014916 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831420147 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828615144 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829395381 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.832628726 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.830511236 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833188021 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.828901424 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.828561827 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.832184074 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.835767111 seconds)
  done (took 1084.234296974 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827259924 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82706924 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826746956 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.826863301 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827393051 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82750332 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826714147 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826872568 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826550803 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826635757 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.827615114 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826525566 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827801265 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.827600375 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827376161 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827081503 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82742149 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82692202 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827229748 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82700609 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826881022 seconds)
  done (took 40.133947161 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.829892804 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.827342052 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826451382 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82946126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828241192 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.829877677 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82747195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830475947 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830045949 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827582769 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83011993 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830269729 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.828207379 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.826839267 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8281546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8310155 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.830702718 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82865179 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.830693161 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.828416243 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830305864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82778825 seconds)
  done (took 42.004194874 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.832303261 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.832829662 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.831666414 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.828784718 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.831325954 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.829315734 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.831911957 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.830820813 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.831244179 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.834333677 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.832184168 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.834815731 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839362057 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.836541969 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.836241657 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.831849555 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.977109203 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.833296325 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.833299236 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.832754529 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.830033273 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.840282377 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.829201116 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.829025771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.832275664 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.832834043 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.83281906 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.832814023 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.832483255 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.834823813 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.836701157 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.833441426 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.833023134 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.835418114 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.832762159 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.834375794 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.837213936 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.834031211 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.830344323 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.833102889 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.842379958 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.852058639 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.835049622 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.843680476 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.832916739 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.833046571 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.836320498 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.840794046 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.831446039 seconds)
  done (took 91.784575003 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.833461936 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.833683445 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.83021956 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832926617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.834870555 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.834162759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.834569478 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.834316669 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.832165457 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.832006036 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.834972425 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.831088253 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83146777 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.834035633 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.834252744 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.831882466 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.831637918 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83025928 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.831440473 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.831349637 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.830882916 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.833696764 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.833638024 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.83171816 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834550526 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83161132 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833097714 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.833633382 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.831841434 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.831747867 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.833870413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834894157 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835211664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.831768037 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.831088764 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.83496773 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.834183498 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.832391007 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834485493 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.831567047 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.834674175 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835191679 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.836549551 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.833857377 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.831425715 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.831740141 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832088164 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.832376745 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.833130635 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.835124818 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.834600192 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.832690767 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834329412 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.832948721 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834457283 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.834618285 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.832795819 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.833301381 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.835190817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.834263537 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.832676408 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.835802163 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.833694155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.836183641 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.8366007 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.833714217 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834209579 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836502978 seconds)
  done (took 126.442181776 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836865488 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.837580307 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837192606 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836618271 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837673742 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.837401886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838344808 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.838073604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.837793104 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836935651 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838188431 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.838866799 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.83874202 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838197573 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839520644 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.838034666 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839196014 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839433576 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838421299 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838848208 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.839091636 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839505022 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.839746779 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838964651 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.839609305 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.839799451 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.838612804 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838361208 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840294488 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838959939 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839503944 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.839994995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.839467321 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.83986347 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.839687548 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.839816747 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839990649 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839288861 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.839459394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841277264 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840554053 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840152122 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.839968142 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.840012508 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841267326 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839851006 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840594037 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.841519551 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839571441 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841103986 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.841449751 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841295284 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840756476 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.840567909 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841056874 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.84175466 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841475961 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.841462322 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841759027 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841100893 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842122816 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.841786924 seconds)
  done (took 115.827771805 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840591507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840297136 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.837721939 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.838032331 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840596373 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838207025 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840505808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.840430761 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841206934 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.840622109 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840648149 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839053538 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83832318 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841154691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838617588 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83849604 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838253801 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839659196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841483536 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839301039 seconds)
  done (took 38.569549328 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.838427168 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.84083281 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.838303027 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839443326 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.8417165 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83984931 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.841460735 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841224094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839394293 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841972199 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842480466 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842095034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839226901 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.839948771 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.842334537 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839920013 seconds)
  done (took 31.22531751 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.841046919 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.843187299 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.843072146 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.843476377 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.840851934 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.840212421 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.842905156 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.84055944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84130732 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.843345717 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.841946257 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.842732136 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.844089153 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.844241684 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.840607157 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.843458253 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.840540304 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.840908144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.843298203 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.845595183 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.841210681 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.841310988 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.844163521 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.84412764 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.841463179 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.842307145 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.84159738 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.840035885 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.841277484 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.844050543 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.841191566 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.841580058 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.841097453 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.840545939 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.8446202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.841745994 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.844907877 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.844997999 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.844098051 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.843335299 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.844511693 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.842831966 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.843915847 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.843670643 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.842898451 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.844551766 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.842591381 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.842763525 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.842183903 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.841812047 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.844649506 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.845470987 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.846389028 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.845930394 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.845137502 seconds)
  done (took 103.135625682 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845397926 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845088779 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.842528934 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.844439539 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.846038779 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.84325065 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845770154 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.843456679 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842847404 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.846475723 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.844548063 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.845417503 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843942693 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847163263 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.843992356 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846672627 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.844064409 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844394899 seconds)
  done (took 34.985967497 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.844460164 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843879567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.846423243 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843515408 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.843744782 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.846688041 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843841097 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.846924539 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845843091 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845121643 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844213608 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.847505952 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846827198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.84683788 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.844633393 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845151775 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.847137149 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846445359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.845215581 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84390191 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848076053 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84701634 seconds)
  done (took 42.386471934 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.847413604 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.847292406 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.865717162 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.891670676 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.878386678 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.847212729 seconds)
  done (took 12.959396628 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845680096 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848852383 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844776664 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848672948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848316326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845076185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845329573 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844999938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84897725 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847172265 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845524997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847786033 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849649773 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845487462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847541464 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84815186 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845904698 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846070391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846748031 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849173023 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844794533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84787168 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845583083 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84608538 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846037647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846582075 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84885122 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846933983 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846821485 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84830835 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848552598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8464444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848418306 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847097411 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850185395 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848339111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846761329 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849786024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849052608 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847105055 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849291875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849675362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850039144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847347149 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85023571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846547265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847462685 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847784858 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846826658 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850193931 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850265714 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847200169 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849740538 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850592238 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849772547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849896941 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849135285 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848289186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851115425 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847976368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848151914 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850849856 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848838949 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848562967 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850554154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847741779 seconds)
  done (took 123.747730913 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848177874 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849195375 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849224497 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849952273 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849235884 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848744612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849214756 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848900664 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849095716 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849627477 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852406468 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849097234 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848304569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84913833 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849109278 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849633087 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8484662 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849071581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849451098 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85321348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849566406 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8485223 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849576082 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850050843 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84959906 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852182787 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850342679 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849882869 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849672618 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850010922 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848641925 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84995812 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850412458 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849564437 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850982465 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850139863 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850941737 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849890232 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850123656 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85327697 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850773529 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853201732 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849889328 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850909242 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851025353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850491514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85033635 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85108441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851242951 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85159565 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851418551 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852694142 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852179998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851819921 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852000667 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851736122 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851303495 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85177316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852176701 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854608864 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852510135 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851813666 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854150331 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852493226 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852029322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851889481 seconds)
  done (took 123.928857258 seconds)
done (took 2526.391306208 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.854449757 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.891250044 seconds)
  done (took 15.534381822 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.013774262 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.967589892 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.854110476 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.902037663 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.853679488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.87332198 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.870919311 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.854183319 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.854523767 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.85409581 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.854733791 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.042587254 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.856500811 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.854897791 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.854701454 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.946826822 seconds)
  done (took 52.109871448 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.858174784 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.858109479 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.869777552 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.860805578 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.857267706 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.869050052 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.891095539 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.861666822 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.892325009 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.868859715 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.925688543 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.866818316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.857125601 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.906024175 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.869549603 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.873588385 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.943267056 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.931205379 seconds)
  done (took 35.651108503 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.934320821 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.858005265 seconds)
  done (took 10.5885311 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.882717 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.865167252 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.866070494 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.853455311 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.861644945 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.85171229 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.878117215 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.882777511 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.866143668 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.875810541 seconds)
  done (took 70.489431535 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.86377972 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.859545454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.859848908 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.857260705 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.851388325 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.855001405 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858057139 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.850578539 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.537105776 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.892085518 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.863669398 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.863589748 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.859844971 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.860660985 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.857211742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.879932543 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.972913778 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.855953551 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.855761637 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.864317311 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.858838247 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.95590506 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.871604483 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.858513637 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.887338084 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.537601131 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.866239324 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.864491348 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.996197729 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.85705207 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.859215663 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.86032329 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.861375321 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248058212 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.189164041 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.856922051 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.866517731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.867440191 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.856440957 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.033339248 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.859630276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.865425659 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.852914245 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.16764306 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.938650023 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.901182086 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.191266507 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.863224855 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.861084507 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.890740368 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.861142439 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.860808421 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.872948388 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.380447982 seconds)
  done (took 132.233937592 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.856490828 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.439885 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019775023 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855576714 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136776227 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097029521 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.855687514 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904773021 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.856614822 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.105132814 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032770599 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974096404 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85684345 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.854990845 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.860663412 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.854995383 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010460711 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.926384799 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.857762298 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.854331981 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891467603 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121273169 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984112373 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.858007974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.880225294 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084866074 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.982374556 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.973011741 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.364407885 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.855553266 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925370619 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.856429487 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.855650443 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856056698 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021787894 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.964725651 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954232778 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.858638968 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856490864 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856781155 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.52137 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079741024 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967698684 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.994185773 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106165363 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085363102 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.505006013 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.855859273 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.495895866 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.054245239 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.065901738 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.110345115 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.985718379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.859106112 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.108698211 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857158888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856062748 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.120542147 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084404326 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971493559 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862464396 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858725497 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857506463 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.171394706 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.859972741 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968244374 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860435649 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860067922 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.970680645 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974708607 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088915898 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101527381 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.888669803 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.772985529 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.365052591 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.142672322 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.930919371 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123058728 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859660523 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858528952 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953616604 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.614776208 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.040363346 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.174244715 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.123617639 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902108569 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.461825344 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.8582989 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.106834274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.109123156 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08961123 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10405558 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.025984452 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.163406743 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858927526 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.860156238 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.069409301 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992023987 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86168783 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.220709333 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109042783 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.589160475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890895782 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165350105 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997924841 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.855300231 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.486343895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860648294 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060173953 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90286259 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.861479981 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861166819 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.108300023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.73183699 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860967937 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.645314149 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.928349551 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.864462428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126732382 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.863686942 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102570288 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862204705 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.172628252 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.402928243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.904349454 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.052827391 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.104401057 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.658486896 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129334891 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.17511435 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.986152881 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121359743 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.686521538 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863135572 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145936916 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86363271 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.861727892 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.031586967 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.862652096 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016878498 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.863645027 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122078528 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887088452 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033137193 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86519185 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.13498703 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908347501 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915901687 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.865087433 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982069606 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865127706 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.911523176 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.047002192 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864887689 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.864331787 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.437403955 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.863732768 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010331891 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.161710934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887419585 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.933907133 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390060531 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.863866934 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95780023 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890081189 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.464150815 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.863079604 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.035820299 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.866336276 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.810709935 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.863179303 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.174631181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.086475824 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.867338005 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864985202 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.658743157 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.547579715 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863013381 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040396252 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.11178656 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.511361022 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084461929 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868598148 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997297362 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.868191633 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.945955395 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213307299 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863917262 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.864028568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.862749601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.866567387 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.865315197 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090804968 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.894495196 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.551893786 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.002958558 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108674571 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.178023986 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.1277836 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.914064425 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866897853 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.131083115 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867829578 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.932457861 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.867249483 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889154589 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113841083 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869420398 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097830415 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.151630865 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.917263237 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917249022 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.86739508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866825654 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.865588032 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.011288933 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967363895 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868649145 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.866285011 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983367313 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995143212 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055868589 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.457955187 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.041530357 seconds)
  done (took 902.239776983 seconds)
done (took 1220.636394552 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.86721097 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.869829672 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.85848612 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.867348797 seconds)
  done (took 29.270250156 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.871704368 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.869347548 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.870506475 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.869500511 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.870463688 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.869025155 seconds)
  done (took 13.02269755 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.906801087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.867529915 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.865380257 seconds)
  done (took 21.442902681 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.937892187 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.271513878 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.972669987 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.309163143 seconds)
  done (took 10.293596996 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.871625125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.8706116 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.870687377 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.872171909 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.872158615 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.874659824 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.872166172 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.87132571 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.874142362 seconds)
  done (took 18.655071375 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.970793003 seconds)
done (took 98.461691078 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.060335004 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.107065932 seconds)
    (3/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.949053263 seconds)
    (4/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.469851936 seconds)
    (5/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.00214412 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.26336542 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.870693845 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.743816073 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.006872336 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.891115656 seconds)
    (11/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.14901376 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.978318069 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.889565505 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867981279 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.862476086 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.895071639 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.851939564 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.277481297 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.868871973 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.708331804 seconds)
    (21/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.998915373 seconds)
    (22/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.972049127 seconds)
    (23/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.895909441 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.065844655 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.004278559 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.868694115 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.962101706 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.941929945 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.241799204 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.530375386 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.86815071 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.97189376 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.866192165 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.965105661 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.808285381 seconds)
    (36/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.564777894 seconds)
    (37/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.751888175 seconds)
    (38/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.89472244 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.968938977 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.87024839 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.984761272 seconds)
    (42/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.989546172 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.876229418 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.894508101 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.867827095 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.46291468 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.912618609 seconds)
    (48/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.929910404 seconds)
    (49/309) benchmarking ("sort", Float64, false)...
    done (took 5.68141626 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.10778748 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.983196862 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.123653247 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.853472064 seconds)
    (54/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.089919142 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.88597608 seconds)
    (56/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.025093323 seconds)
    (57/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.126533108 seconds)
    (58/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.974487931 seconds)
    (59/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.304966134 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.930091344 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.940916858 seconds)
    (62/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.022550803 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.203040778 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.75793659 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.058624945 seconds)
    (66/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.374117915 seconds)
    (67/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.374538838 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.173305872 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.16085755 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.988692937 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.194697464 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.276630288 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.8142784 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.896860625 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.562793403 seconds)
    (76/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.936018085 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.511775161 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.939930171 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.387892389 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920252435 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.869670253 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.248650584 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.870961878 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.261289036 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.110346235 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.960109681 seconds)
    (87/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.156768919 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.879673376 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.244357524 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.857345577 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.404838013 seconds)
    (92/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.85743288 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221186339 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.497601047 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.870439557 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.393217424 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.162993396 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.897351846 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.885953653 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.191631898 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.140290034 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.085474658 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.760299164 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.972449712 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.172725615 seconds)
    (106/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.861437914 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 6.92968802 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.8733862 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.451628613 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.857910227 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.973860787 seconds)
    (112/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.061234181 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.059424769 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.175646256 seconds)
    (115/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.290014669 seconds)
    (116/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178560897 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.533457396 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.968067683 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 2.320683386 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.119891004 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.898472346 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.88135383 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.128073689 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.143668026 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.984003088 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.168668254 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.093114611 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.859753231 seconds)
    (129/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.827339258 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.136324558 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.168753316 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.899609392 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.97465703 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.873844971 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.028191689 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.075907477 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026238756 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.134501587 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.860714687 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.630713568 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.873696846 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.983795019 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.110735326 seconds)
    (144/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.902088584 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.471930984 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.666449418 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.878171913 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.112804445 seconds)
    (149/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.016904275 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.899360845 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.954544858 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.872710764 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.918759726 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.225320284 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.88216635 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.871388768 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.778829612 seconds)
    (158/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.158848601 seconds)
    (159/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.975622081 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.019745555 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.300912409 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.153919251 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.225974669 seconds)
    (164/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.007575214 seconds)
    (165/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.41786807 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.554985291 seconds)
    (167/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.881142852 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.229018488 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.111645201 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.442041752 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.055834569 seconds)
    (172/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.018511685 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.075987299 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.999998882 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.058306031 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.25904728 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.262093879 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.878962764 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.932908517 seconds)
    (180/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.964098418 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.451333592 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.954275892 seconds)
    (183/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.917754337 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.491145864 seconds)
    (185/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.967171248 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.24254967 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.903122948 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.958737355 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.986715799 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.374508715 seconds)
    (191/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.990031955 seconds)
    (192/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.045015191 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.921241533 seconds)
    (194/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.066448529 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.120723655 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.347601668 seconds)
    (197/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.387327623 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.576906044 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.395167821 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.043692098 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.86468579 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.946267977 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045137221 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.315951964 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.163625352 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.155670986 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.879621781 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.526573869 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.11537305 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.862252259 seconds)
    (211/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.205750776 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.953802313 seconds)
    (213/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.941588977 seconds)
    (214/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.864107651 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.533330654 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.88637039 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.903335761 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.258799058 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.883224352 seconds)
    (220/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.096131281 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.602015064 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.961658057 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.526413377 seconds)
    (224/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.029313627 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.794522745 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.944963925 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.472315041 seconds)
    (228/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.88155419 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.256532618 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.013352717 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.049001641 seconds)
    (232/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.884613865 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.794080658 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.992652024 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.391840196 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.17721201 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.184103905 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.004086057 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 4.875542284 seconds)
    (240/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.985191503 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.713938208 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.98554304 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.166789669 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.259335286 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.237018813 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.909104954 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.88876955 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.005378306 seconds)
    (249/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.964670309 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.888669919 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.905807892 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.975414923 seconds)
    (253/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.883078293 seconds)
    (254/309) benchmarking ("sort", Float32, false)...
    done (took 5.658993744 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.048312113 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.21798421 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.753281405 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.256431303 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.860365476 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.025046581 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.905974569 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.240906953 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.868513543 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.204941293 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.867368601 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.226252731 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.018461967 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.007030092 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.265348642 seconds)
    (270/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.386006125 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.930350274 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.142789003 seconds)
    (273/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.867330431 seconds)
    (274/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.323159713 seconds)
    (275/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.765912199 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.907253995 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.036598512 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.172579438 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.13477092 seconds)
    (280/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.974471374 seconds)
    (281/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.086161149 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.871823311 seconds)
    (283/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.950360548 seconds)
    (284/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.401372035 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.687143709 seconds)
    (286/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.291037277 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.974100134 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.975810662 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.968760501 seconds)
    (290/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.718000982 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.009042314 seconds)
    (292/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.161859059 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.884674506 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.072035355 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.186685643 seconds)
    (296/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.811116402 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.152787737 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.970835567 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.923281074 seconds)
    (300/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.809805885 seconds)
    (301/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.563338693 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.910157939 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.883289909 seconds)
    (304/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.910987933 seconds)
    (305/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.044807154 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.910917371 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016499083 seconds)
    (308/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.89777437 seconds)
    (309/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.001387717 seconds)
  done (took 1025.147831567 seconds)
done (took 1026.965379496 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.917764419 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911367707 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.894873289 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.916515891 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.007949098 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.923637083 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.905749307 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.896969727 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.94330383 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.944156627 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.893940041 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.922962886 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.897183919 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.896125462 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.89522225 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909324482 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201490782 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.916479398 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.912031043 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.905734115 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.911701796 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.894124527 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.945959401 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.923633319 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.899808898 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.899188874 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.899765487 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.915476342 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.007107394 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.899466371 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.89981367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.907698556 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201822823 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.91661144 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.890645302 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.915732218 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.906624031 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.905903245 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.900157296 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.929456323 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336411384 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901007836 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.899280381 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.897092639 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.897777712 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.902914186 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.897671009 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.902367818 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911030264 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910264425 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.330910627 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.917059683 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.900245772 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.898249133 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.908721426 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.898208044 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.901297304 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912492506 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.917730305 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912974414 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.19258112 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.922795005 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.899826399 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.914789228 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.904967539 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368215535 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.898991836 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.902531426 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334134513 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.908615139 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.372339492 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.912943239 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.900509626 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.91408003 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.930938692 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.204639242 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.914838979 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.897807094 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.906127758 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.897476934 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.909331789 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911990253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.904099365 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.900298867 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.912376967 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.928078262 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.910375572 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.900258407 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.908371521 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.919996609 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.906330768 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.911008393 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.902063954 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.894890067 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.909029655 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.903367976 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.902675478 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.90162539 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.904632973 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.911919625 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335130377 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92073286 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.897578029 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.897599178 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.899830395 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.914982938 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336714194 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.90561582 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.922901362 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.948202027 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902864253 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.195017891 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.92411822 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916306749 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.910005365 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.90336674 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.897159757 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.195073294 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.355313321 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.92078208 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.904580523 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.90073779 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917471818 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.902881754 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.897949109 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.208111452 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.923117409 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916079177 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.022771382 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.911809437 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.932856468 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.900756895 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.905173203 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.934786975 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918872313 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.934485071 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.904852447 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918176374 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.919492914 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.900019032 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.913860451 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.913988187 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.904115236 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.908509987 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.898971862 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.931265753 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914666859 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916249458 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.926183371 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.02415007 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.9008283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.196780809 seconds)
done (took 298.343257103 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.968197468 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.891441634 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.002129892 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.898782298 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.983241082 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.984701021 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.896365042 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.895548763 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.896245283 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.279123938 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.896377744 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.906419769 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.897205903 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.896321218 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.981249496 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.898990312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.897708285 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.240650386 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.900661994 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.970861278 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.89321699 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.89789113 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.900203333 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.282103462 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.897363851 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.901186292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.970861347 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.90041266 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.247104176 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.899833967 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.893290191 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.24649378 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.990178659 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.928370839 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.910611444 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.898680597 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.984476565 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.91378896 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.982390861 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.981662831 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.004415329 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.93259886 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900604142 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.897358647 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.902816051 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.903474354 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.898849674 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.929446314 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.901908517 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.900155114 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.244068677 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.911129393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.900549143 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.899229127 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.899250427 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.933342019 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.899337456 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.904575338 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.992353158 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.902515599 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.965357928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.283928734 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.280636126 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.902838714 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.902370248 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.900502829 seconds)
  done (took 186.428722324 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.968575505 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.980149516 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.9696533 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.906004665 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.953375058 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.975324632 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.90621327 seconds)
  done (took 15.494436538 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.910211964 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.903575274 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.95414834 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.953931495 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.903874307 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.054816417 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.902601775 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.915003116 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.901816956 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.956416297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90549381 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904329963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.910089578 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.904608895 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.953094571 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.916414549 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.01903727 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.9054211 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.905643092 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.062403197 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900945646 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.910477277 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.959263004 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.916101286 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.905881067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.911431519 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.488608745 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.905183612 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902547113 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.905174831 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.901630277 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.947913009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.905185173 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.90180216 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902657443 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.020942361 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.906847011 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902916273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.905809391 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.903362623 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.904554877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.90516508 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.904808086 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.902388744 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.903794572 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.928934403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.904970673 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.905279367 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.904479615 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.905994909 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.957396221 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.904742843 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.903488024 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.903665777 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.96192171 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.912824353 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.907640087 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.903459986 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.906954346 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903394093 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.063296727 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.954748604 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.906147854 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.954745989 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.907063749 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.906578125 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.906532071 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.905907086 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.961349398 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.906871486 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.95684341 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.90383542 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.067607281 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.36261866 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.907172888 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.910180335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.910553964 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908063385 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.907020755 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.912745125 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.904365599 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.908881267 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.913897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.905178098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903648134 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.019967649 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.018053236 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.905605576 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.920064221 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.915241777 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.90543525 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.960890835 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.90874371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.905317962 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960744819 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.022406506 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.963656477 seconds)
  done (took 209.783864851 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.911813293 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.915847996 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.908340793 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.925359137 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.908988132 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.909370858 seconds)
  done (took 13.319074494 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.91178538 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.909541876 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.909065762 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.908180034 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.910062593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.909242366 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.911303917 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.911772713 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.912490541 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.907751796 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.909993365 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.912849763 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.909472886 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.909738281 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.909249133 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.90871759 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.911261202 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.907098032 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.909294917 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910418942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.062448043 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.910448868 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.911014464 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.911568334 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.914263228 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.909028282 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.917674281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.910403635 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.909747527 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.918180639 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.913561498 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.909679847 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.91163489 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.916590363 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.914697269 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.912519222 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914488713 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.915034011 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.908436577 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.911287791 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.913846633 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910096429 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.910162358 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.913272466 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.9128399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.916790508 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.918208582 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.918874877 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.912271377 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.915305418 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.913856581 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.91110608 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.911755756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.914094858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.915089773 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915635185 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.917980785 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.91315707 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.912240026 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.915283274 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.912790726 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.913109673 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.914357567 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.916120299 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.909570329 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.914904828 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.9128179 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.915991333 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912546233 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.911631674 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.915061325 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.908945542 seconds)
  done (took 140.685226245 seconds)
done (took 567.554689237 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.169571221 seconds)
  done (took 9.013201515 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.97403417 seconds)
  done (took 8.907858887 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.356858579 seconds)
  done (took 10.201060261 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.920943055 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.908678673 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.916473949 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.904712209 seconds)
  done (took 29.502879656 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.030828849 seconds)
  done (took 8.874853263 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.920539927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.904219443 seconds)
  done (took 15.702680871 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.969806826 seconds)
  done (took 8.814331282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.069989841 seconds)
  done (took 8.918762774 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.921198291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.925139484 seconds)
  done (took 15.700951115 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.892412334 seconds)
  done (took 8.7369987 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.589411613 seconds)
  done (took 11.442677938 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.907289591 seconds)
  done (took 8.763597636 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.966314733 seconds)
  done (took 8.809784378 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.9707546 seconds)
  done (took 9.813073165 seconds)
done (took 165.047550176 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.907790306 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.912544938 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.908622929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.906845417 seconds)
  done (took 29.478925334 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.947595855 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.944432803 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.949191555 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.958127275 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.954307259 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.946166782 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.939777828 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.938252379 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.959386683 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.949437745 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.949005299 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.947863794 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.947805472 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.939180124 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.950052859 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.949690515 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.958005781 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.949403594 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.939992933 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.949980324 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.915679492 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.958419703 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.950954461 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.914976757 seconds)
  done (took 48.551251554 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.111711465 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.983995431 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.06832084 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.967035784 seconds)
  done (took 9.976595308 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.965006656 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.967554104 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.979368228 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.018241443 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.044607274 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.977679726 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.940093592 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.937881853 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.923200863 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.967677486 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.043646078 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.9843669 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.051472601 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.916198161 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.101546516 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.915262408 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.914886808 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.966564354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.019002085 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.034355174 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.915849896 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.96689345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.971385746 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.985572509 seconds)
  done (took 49.354404025 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.914706612 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.923493556 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.921395786 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.914134993 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.914237162 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.915061438 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.921078226 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.914376196 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.936640234 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.915914707 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.914932632 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.915662644 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.914843285 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.916621953 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.915683974 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.926291001 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.930022479 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.915191794 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.91889082 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.921590696 seconds)
  done (took 40.229453045 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.910250129 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.764678849 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.261181827 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.166546548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.908664048 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.911903881 seconds)
  done (took 31.771592932 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.928368345 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.978638931 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.921332978 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.971887258 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.050467837 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.922445604 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.917776167 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.9837386 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.024046522 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.985622742 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.934583891 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.943446714 seconds)
  done (took 25.409100745 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.912601299 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.91500523 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.929113836 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.929779945 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.926875592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.92273626 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.924722268 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.90983621 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.931206449 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.935158325 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.923739662 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.93044426 seconds)
  done (took 44.942218554 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998708818 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.960492925 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.927660897 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601828892 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288683501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123425375 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.911367345 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244124595 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.915722606 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185890807 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983801239 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016105191 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168964769 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309418065 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.94052504 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.373793086 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208708612 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121710256 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941146153 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597862957 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976726207 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993697966 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.705996637 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.971877117 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124978159 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.041857001 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.173711482 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912285751 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051322508 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952022161 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923773253 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912022955 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186741083 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289294103 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016128518 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923473531 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53209622 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.624589849 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.905532968 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.683206278 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.640957316 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.035901791 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924852045 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91408751 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847912778 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.96785884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282749274 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.918467481 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.625844004 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915051945 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925079773 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01156374 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.917969202 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.729995596 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840059468 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.916602653 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.913253419 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921495219 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.484013503 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.033434108 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00246461 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.881846757 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006114341 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679697006 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309059196 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.064353711 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.918562774 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920877088 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851069712 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.603295059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972028145 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245489581 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.937335904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565265046 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231167854 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.027254919 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857885171 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18315455 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.347800315 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.881720968 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144005169 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917350006 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85174922 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.862645379 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851822777 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17827935 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955126721 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.685501595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95621238 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.252963369 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928266392 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936650251 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94117812 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140226094 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.800294404 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917803842 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.74245563 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061561575 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940127243 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246429155 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852628826 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.923312495 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174361477 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.129192951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.893156006 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.404985967 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074025834 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372237719 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.964604791 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97408267 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960484914 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.187231967 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977333074 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.036034721 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971658431 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.919496208 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212309861 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407771418 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.048082417 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.972709336 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043308031 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238980241 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946116518 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001759885 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922900128 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918418942 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.704205392 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.471779378 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.918925253 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.921648814 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.89526192 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960517388 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.920573827 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864153228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.545241142 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998173781 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.93405346 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.14419178 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386829684 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225512069 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85723727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250500633 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012362475 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.143463516 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.566530784 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.995441222 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180460355 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894442175 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.926916068 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961855606 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940332778 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019203356 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943007086 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.969983484 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208786116 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.924711304 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.926369311 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.700183453 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.959290388 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926595384 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.927168019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672871585 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191756484 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946996467 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930331488 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.810436575 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.936065608 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985381527 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927342075 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931021215 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.452271949 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649900584 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.927401095 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.511049359 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14699397 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933042486 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.608188845 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039431889 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.004718617 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191470707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981901123 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.856834658 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.634347644 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.615798132 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921182034 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858726939 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922149192 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931024352 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934761416 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.120005443 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.196447034 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967202004 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.608197095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.964435592 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934103372 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.927124101 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922799921 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.434854038 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.043641756 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.015028417 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962635005 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068068005 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.936558529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859023958 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.927882256 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928853817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923187209 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925013234 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955555234 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.616775308 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298548603 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186234997 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572561434 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93793079 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.662507516 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.982654477 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.923240517 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.613706546 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134024094 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.952128496 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937422899 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.936660717 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.617606768 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.619122612 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492153862 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241161546 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232108404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370983204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.041219984 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94727846 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263813897 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860399335 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483002447 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982827212 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269397983 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869541699 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018080754 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.57171064 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266588535 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939299563 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153968277 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312657773 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.683185779 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066785337 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138941254 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959499371 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.976616525 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882913668 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.211504608 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069041912 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.627988474 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127609148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266280893 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627539288 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.047417489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.926104967 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60122776 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013320881 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.636612273 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099638283 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.015585039 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875316212 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397091173 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934496033 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.152276914 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272221798 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995788364 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.040368243 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861377305 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938035428 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93829133 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.930504379 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.923979358 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.816573871 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.181135895 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938415871 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860785363 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.949084066 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209755611 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.830579131 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.933263925 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927421151 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220988554 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373034635 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095950994 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.935297788 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.442686099 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934639587 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86286468 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861268064 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.620073881 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935609628 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90267643 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141953649 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.032243787 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842628525 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914605505 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170428637 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184801448 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.943291429 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199672504 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205109226 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.626188947 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952072388 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.029829934 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626685128 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.034726296 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928628481 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165172093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.68182336 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152724515 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.969068763 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.888358051 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.928574534 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142986617 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929581397 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.847198094 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156927475 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.652005928 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.956383906 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240569242 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004535848 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845875562 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972889346 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.022556498 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93683677 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009735052 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941526515 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.941909457 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.939096662 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975700901 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88194536 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.051767082 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.943958783 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026560841 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054087373 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.456203993 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.936780433 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19715724 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285179631 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253243704 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989231374 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929124458 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935442635 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865471519 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080494502 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.156595278 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204317021 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.062303861 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.048783175 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957753624 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632311776 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048207882 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167240247 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205945305 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.826644971 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.343492658 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968083179 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.930768756 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943198539 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.143424891 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145027075 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230234525 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079270085 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920374296 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285037929 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205017799 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.931610598 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.933294091 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520769311 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.970290429 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610476905 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.975021409 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.846666219 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204903324 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942962241 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30608989 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954840038 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.091517243 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.706416248 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625159044 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224121013 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921729522 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99548036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205250497 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315626604 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245736077 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002073611 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944572444 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.04461942 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081481932 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.822719298 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936209829 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934105046 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98146706 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.643904337 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.944100142 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20905236 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244915636 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.934624724 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.826247133 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959679354 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.945453113 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159494332 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198657149 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18811992 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944406456 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941368081 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.749505036 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206784381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994618057 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869992238 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.939279071 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040363059 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182998845 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954623953 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.389717598 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645890616 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204851088 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.936445013 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959669533 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.001280946 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291706821 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256035552 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.474346539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14190098 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.524876307 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.457755854 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233084363 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.942114356 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.998370261 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235563192 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.941467133 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.928431786 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971332095 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.204772627 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248218397 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.005180189 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626116165 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.907533726 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279977871 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500802392 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875692867 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940755832 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.99779678 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935948637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066199093 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94895213 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.833406078 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.003631508 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.712594428 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219858488 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.94234029 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.928367116 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.69047112 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.129500562 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966894778 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080092665 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947876039 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.611551366 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.289836028 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195320603 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.934895608 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.940704591 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.944000512 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937935699 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925691674 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.136662663 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.135443161 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221774554 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.95886089 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.972354404 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943222222 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.155476794 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150924182 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.837852906 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073188695 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931088737 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976916486 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.852698229 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.441168443 seconds)
  done (took 1698.23676996 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958786138 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.984690616 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.978438267 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.969582276 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959604623 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.004445232 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.991000695 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.008403311 seconds)
  done (took 57.732104791 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.939623078 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.16115842 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.950865571 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.942954945 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.952094209 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.957862287 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.107097519 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.950588025 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.950862227 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.950689717 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.942726847 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.942226058 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.251060983 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.961494235 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.941556807 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.933153112 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950837726 seconds)
  done (took 75.684322965 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.941854003 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.979245187 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.968002252 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.955848189 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.985861142 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.953578893 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.800898269 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.957520694 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.94317738 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.076264438 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.588492305 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.961204663 seconds)
  done (took 87.991998539 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.948793645 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.949439361 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.948253584 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.948666786 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.948013996 seconds)
  done (took 11.624886634 seconds)
done (took 2212.850461826 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.202739691 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.155437734 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.165200262 seconds)
  done (took 6.199805795 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.090737962 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.138463885 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.258422396 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.279497894 seconds)
  done (took 10.648777044 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.227104971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.327119603 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.156838978 seconds)
  done (took 8.589601752 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.338620598 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.958461329 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.049080747 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.94260781 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.946591894 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.944468161 seconds)
  done (took 22.713236533 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.944952579 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.94908847 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.946367452 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.948483247 seconds)
  done (took 9.666315624 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.927687917 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.687830529 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.928176174 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.940322595 seconds)
  done (took 21.363263337 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.696050313 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.705672639 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.690032733 seconds)
  done (took 9.971486146 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.530305832 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.857698578 seconds)
  done (took 9.266903028 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.209908589 seconds)
  done (took 4.08941295 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.078895249 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.212429419 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.409003543 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.43472364 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.519975626 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.786086857 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.24857654 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.185931267 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.336193461 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.372499677 seconds)
  done (took 25.463941343 seconds)
done (took 143.401892199 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.329948456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.311356729 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.143713605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.288459393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.170562571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.143331638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.165179174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.270909492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.799901046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.7943147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.329910783 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.171682515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.115036683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.309901261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.115103651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.178793317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.165933981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.359552317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.983990642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.182284293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.167401826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.928093 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.170765242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.944737684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.169732924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.096923235 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.519306641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.183288126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.138020344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.529352538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.098110981 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.336195726 seconds)
  done (took 173.494083814 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.876870669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946322947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.946273997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947833856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.341643286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94656561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948017473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947179966 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.131536706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.112564406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.948966785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.328756754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.948906579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946365448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.946700101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947896096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.253739181 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.916254775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946583756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.951751169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.956198228 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.234748722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.959606829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.275038068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.275841051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.966171692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.947063836 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.96784359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.94925458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.959094701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962188938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947888369 seconds)
  done (took 210.56657548 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.946864219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948576547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.947364288 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.949149748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.947767297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.952474196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948434929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947981798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.716831482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.699238524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.951356194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.954503885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.952030889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947881911 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.953871416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.949126647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.956426647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.957115883 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.956939737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.959421836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.964265164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.670718766 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.950434714 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.673463341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.951879069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954792138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.950441199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957984277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961730647 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961965527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961993655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.950866082 seconds)
  done (took 223.35407759 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147061695 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.955513665 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.957206486 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.892836734 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.956236483 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.956444911 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.951583159 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.145232503 seconds)
  done (took 19.862614841 seconds)
done (took 629.170035692 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.364427744 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.199384894 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.125111538 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.97865272 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.213734015 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.008229421 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.975960782 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.036869053 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.688244028 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.039152588 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.661002095 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.992127618 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.753591609 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.994608816 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.102080021 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.031049261 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.509478955 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.601123207 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.147979272 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.031475535 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.141854621 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.935688634 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.04657469 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.727625149 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.77237059 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.972830636 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.18123222 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.515909838 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.984236404 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.137802323 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.724852192 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.376255064 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.982962649 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.972748824 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.026231062 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.007267165 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.347653719 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.981914581 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.099759811 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740297502 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.03011231 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.572011632 seconds)
  done (took 106.61962461 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.947604653 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.945583692 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.945156006 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.947085622 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.94733012 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.946450714 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.945547546 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.945167575 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.946472175 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.94504842 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.945847746 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.948086005 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.945565648 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.948170998 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.945498891 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.946420367 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.947759394 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.9483156 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.946091726 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.946200331 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.950284505 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.947261524 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.949052137 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.947175673 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.94883006 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.947771583 seconds)
  done (took 52.516415931 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.960079317 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.104839577 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.17717235 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.976232453 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.960290059 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.96369125 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.977754145 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.963172086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.962332762 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.961739604 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.057550322 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.964874546 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.9787282 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.18123376 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.97115659 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.960913862 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.960111403 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.959856648 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.108064585 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.977304489 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.978609464 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.963617521 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.977674141 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.97293295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.962224667 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961111205 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.964949706 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.396313945 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.965794091 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.057532233 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.002451794 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.981343303 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.34998864 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.186463839 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.009691782 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.968984656 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.961425122 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.062908421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.966402603 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.960413158 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.979473074 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.9662601 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.182941286 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.453874295 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.971938283 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.962102673 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.407177001 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.068297438 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.001054822 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.975074356 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.186565114 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.97608283 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.964098195 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.964511607 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.99809167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.97263969 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.963563397 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.266886869 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.973326034 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.980240406 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.966931174 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.965015765 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115011322 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.969045008 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.105007204 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.970370294 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.970903209 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.963753145 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.181027074 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974419169 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.461101062 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.973721273 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.964276144 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.059739599 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.110548752 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.431445416 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.974090879 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121704379 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.367314684 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.984918272 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.970164897 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.388232356 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.988309106 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.97039105 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.966398681 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.967019302 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.964406619 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.00832579 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.980029382 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.395120143 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.46235691 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.277254074 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.989548658 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.979735304 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.966071563 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.270621867 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.97199413 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.965403333 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.181940894 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.471719605 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.9765487 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.974883986 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.446096089 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.977722242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.986132457 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.974670821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.189818793 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.977950848 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.009453385 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.966681058 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.974750794 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.970355101 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.984016454 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.97304213 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.966739808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.436966341 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.078980741 seconds)
  done (took 242.517480545 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.962382072 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.961980344 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.960323605 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.961939143 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.969918481 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.967175511 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.960953288 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.960495961 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.967130218 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.960858145 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.961184497 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.962133891 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.960755787 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.964713875 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.465977149 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.973109726 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.573951006 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.965738062 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.964053866 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.965140762 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.649044281 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.976141078 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.963774811 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.965263963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.962161634 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.965576138 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.970597773 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.999868021 seconds)
  done (took 170.742058849 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.971595203 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.152658282 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.987392807 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.007922996 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.980427694 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.970025486 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.994256844 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.992653478 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.975149465 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.968782701 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.96799042 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.032129748 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.983112819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.099638232 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.005551623 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.005623198 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.076084307 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.981897996 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.969416516 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.971854156 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.999669767 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.966220087 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.033900969 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.101289264 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.989223761 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.089859451 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.977379863 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.973177341 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.973455728 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.090866819 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.985282024 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.033296253 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.003921552 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.990723007 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.094428755 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.089042552 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.085120131 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.003353169 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.978408297 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.970383958 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.971332115 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.962979727 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089972954 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.990327229 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.974891049 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.081614548 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.989979355 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.975276565 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.984020587 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.971155166 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.986622399 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.99055054 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.041475801 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.108645438 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.008334677 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.001767233 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.99947704 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.261133308 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.983979482 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.075140337 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.971501182 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.090471225 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.993025362 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.962738972 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.97408884 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.977883364 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.004097095 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.005732534 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.08378521 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.985228024 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.077403327 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.013112387 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.980701348 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.97303046 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.976221785 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.092904373 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.093103964 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.012908433 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.0167326 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.009151363 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.972048224 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.974740346 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.963397823 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.992515516 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979859492 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089393563 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.092677382 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.986392655 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.975450648 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.976271446 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.976693212 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.00236934 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.102698594 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.014693112 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074210885 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.046934411 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.052748748 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.992843752 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.988639133 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.979299516 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.03929895 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.99416713 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.988176492 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.309804199 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.048519953 seconds)
  done (took 213.786813021 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.070255323 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.455218677 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.035254535 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.031970167 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.265060642 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.393993339 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.755643991 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.026624146 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.025885525 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.049540923 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.187132421 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.080924614 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.039520233 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.016132302 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.436412832 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.014321056 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.023725847 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.046447369 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.027764535 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.605895862 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.342412824 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.149107149 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.022628234 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.128184529 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.009937698 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306550379 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.3521339 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.401002677 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.06052666 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.368859194 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.368893321 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.707064065 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.232822946 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.271988437 seconds)
  done (took 78.222594075 seconds)
done (took 866.29292338 seconds)
SAVING RESULT...
DONE!
