cset: moving following pidspec: 13223
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.321162358 seconds)
loading group "string"... done (took 0.591880795 seconds)
loading group "linalg"... done (took 7.227531299 seconds)
loading group "parallel"... done (took 0.170035587 seconds)
loading group "find"... done (took 1.148869512 seconds)
loading group "tuple"... done (took 2.039702501 seconds)
loading group "dates"... done (took 1.293409631 seconds)
loading group "micro"... done (took 0.240540946 seconds)
loading group "io"... done (took 0.980863427 seconds)
loading group "scalar"... done (took 39.81026172 seconds)
loading group "sparse"... done (took 12.895787201 seconds)
loading group "broadcast"... done (took 1.029214663 seconds)
loading group "union"... done (took 13.756227636 seconds)
loading group "simd"... done (took 4.76089755 seconds)
loading group "random"... done (took 9.320555612 seconds)
loading group "problem"... done (took 1.973157216 seconds)
loading group "array"... done (took 21.535022567 seconds)
loading group "misc"... done (took 2.026246275 seconds)
loading group "sort"... done (took 3.240146627 seconds)
loading group "collection"... done (took 18.984523839 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537485483 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143648263 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11828113 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14042127 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18481499 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133362134 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146455934 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087011922 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.028176224 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162748383 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140857816 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.479870445 seconds)
done (took 5.071191004 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.25017158 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09034511 seconds)
    (2/2) benchmarking "String"...
    done (took 0.100102341 seconds)
  done (took 0.913320442 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068626608 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131051393 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083567477 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07070231 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069726166 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084357079 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069549703 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068160102 seconds)
  done (took 1.295375808 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077389909 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071636351 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087147908 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071258414 seconds)
  done (took 1.026582821 seconds)
done (took 4.285625871 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.908378179 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.246541053 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190028024 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456601104 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149075976 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189615441 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.735347294 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.40757603 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210369159 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102268195 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106066699 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380645383 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108211735 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.730365651 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076529845 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107299042 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169601291 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.484666408 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083916133 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085002593 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104332692 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145414926 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103982388 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078409177 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169360729 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070533959 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147927203 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097432436 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069542939 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245796494 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192044432 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.748704967 seconds)
  done (took 10.860694263 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10303808 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118978193 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070058653 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140238145 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103373169 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086977683 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072607788 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084150178 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092735706 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161195148 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115082178 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106700849 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083130092 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07177605 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101858866 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213419194 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107857812 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087673557 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087927177 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077085815 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123163289 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084147026 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095456955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080025038 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152915288 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195229856 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11310311 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114561558 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07257175 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083226685 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133333945 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142795682 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067419208 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082700526 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142968348 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111729001 seconds)
  done (took 4.608730014 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.040362687 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.162743252 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093298139 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153670964 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086232687 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110996664 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0842922 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101075093 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248583338 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.083188686 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113492918 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083883366 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.477818842 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130937054 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088653852 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06863234 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087200574 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068777439 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.529598175 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149738133 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104053905 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105659659 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091851428 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072272918 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.717729903 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069638796 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068507208 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086600535 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061482972 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147130678 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069936287 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.224238331 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.092316178 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08968476 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103731523 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198974304 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096974966 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066816694 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124775143 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083821509 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068482727 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171380529 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075359182 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085157975 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090087446 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12176471 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122340225 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070931696 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084319503 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183763855 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069021177 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101616799 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.922815645 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166246884 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080048234 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067985984 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289820084 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090349155 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086407178 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066114674 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083063644 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280315085 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.164801128 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070553331 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067564182 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084404064 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070450317 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.72742918 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084670041 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.387727294 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070702703 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078624299 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086523751 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069182289 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090532822 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073742706 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102231168 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068292628 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069563202 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084305401 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067520789 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08493383 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087808631 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206369145 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084651173 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069597848 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066419805 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105471268 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111743363 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072236706 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067045132 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118896438 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07079989 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084816767 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10467622 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086307942 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102292165 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071494836 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130748458 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069739588 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.166306911 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074756162 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114460707 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074226589 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11581156 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095162733 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06975253 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154613832 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066136921 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083864443 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068478678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066214702 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08666328 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069928042 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099457913 seconds)
  done (took 22.579044774 seconds)
done (took 39.808000339 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.299460913 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094658937 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092667829 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076362393 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093854067 seconds)
  done (took 1.453948049 seconds)
done (took 2.219256677 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125837032 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119006244 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065602666 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115085514 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065978477 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118815037 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11630547 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083194069 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117165853 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06886625 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11367377 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066484199 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065589126 seconds)
  done (took 2.040257118 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087269168 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088512478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088071806 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083766673 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080939587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084459315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082357657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107897631 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082629379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08964639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066367579 seconds)
  done (took 1.703024345 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086324109 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088182531 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087602886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083148551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079840678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083689927 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082406561 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105074227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082974447 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092336608 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065782542 seconds)
  done (took 1.699569431 seconds)
done (took 6.19954694 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08204228 seconds)
  done (took 0.840897458 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.699342976 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.55447467 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085546006 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136449122 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224791355 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15717944 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.447101603 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112001208 seconds)
  done (took 10.354173777 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094952196 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102038803 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070886307 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090072716 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071612365 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087095169 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07069594 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073461787 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086327783 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073494542 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088516746 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074219375 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087274911 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071787286 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074501658 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087468381 seconds)
  done (took 2.133832699 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098357298 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094182474 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093217276 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07697188 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091426757 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075146541 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094139421 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07731822 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088923985 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074944103 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093424765 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076660811 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090092201 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068295848 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092970943 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078677073 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089281868 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077241926 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092999729 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078346332 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093613341 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067705163 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090075756 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078310052 seconds)
  done (took 2.905686987 seconds)
done (took 16.998789308 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134139312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078188798 seconds)
  done (took 0.979221448 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085957182 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101948112 seconds)
  done (took 0.961086691 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086477966 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084034217 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091523181 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094686041 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068988936 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08289403 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104566795 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068740932 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083822763 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068827835 seconds)
  done (took 1.606289004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072691275 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096777182 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072209521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099570659 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075480879 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082278333 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075518833 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085759502 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080653084 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080702502 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073848129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099968562 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074228497 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101967336 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075647165 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085260859 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088747619 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070249603 seconds)
  done (took 2.264977755 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06982555 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071063078 seconds)
  done (took 0.915245671 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070780364 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069027029 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084744117 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068755088 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081177716 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065489267 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081352656 seconds)
  done (took 1.297284624 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405310058 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111987595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.247873984 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.090285901 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105168655 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267578015 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084679164 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0731514 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090255649 seconds)
  done (took 2.28921164 seconds)
done (took 11.086869637 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083272202 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091088152 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113548137 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.422149009 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108106617 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068161226 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133704001 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.222603733 seconds)
done (took 2.01925383 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130112094 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.623586979 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408876746 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216796236 seconds)
  done (took 2.030454632 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.386154211 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094964374 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078337222 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068581584 seconds)
  done (took 1.411777598 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06996947 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074025265 seconds)
  done (took 0.927314426 seconds)
done (took 5.280981553 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07038029 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070518713 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.105584444 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066085239 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086551851 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065613234 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067418201 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085327749 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06861712 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068804401 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084331537 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069183778 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083988109 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068118918 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066803503 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08152352 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068442919 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066620839 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081542974 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06601758 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066142752 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083422272 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066744134 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065884285 seconds)
  done (took 2.59441032 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09024624 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086184482 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073476624 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090791074 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072551945 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08998933 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07388465 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069677879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089444044 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071117871 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088320643 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073569414 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08685943 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072971391 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087033888 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073260859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090266996 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069675697 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072102494 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090666848 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073855242 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084443148 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072781657 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089059734 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072946311 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087824665 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07142316 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084833102 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073801504 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088401977 seconds)
  done (took 3.198372458 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074913869 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066729173 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083259143 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073538522 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066491684 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083736309 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066786228 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083002606 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067266965 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066560867 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083528679 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066262731 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066450974 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082876821 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068049165 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085478702 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082540162 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066503966 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082106953 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068158221 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069835277 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082130355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066786465 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082623468 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066425276 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06668069 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082328837 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066200217 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067435146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082832605 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06989797 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070480755 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082441967 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072857789 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085943651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066290149 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069998984 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081620128 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066082547 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066615431 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081869698 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06628519 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066273693 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.089198306 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067041024 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084173664 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066111794 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067834965 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082789629 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069004514 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081830569 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066165998 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06840469 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083313723 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070172338 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066534854 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082931341 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06676511 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083179482 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066571372 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066191203 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08150192 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068699475 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067709204 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097898937 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073165172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081706347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068001748 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067687614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084544904 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068331143 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080499936 seconds)
  done (took 6.119032631 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120998499 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093458478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084601695 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068930251 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081805365 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066536444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070990088 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082158098 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069037563 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088476194 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066365666 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067897197 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084237332 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079139669 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083136205 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068808075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088505439 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064376074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066960809 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086104339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068029557 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085874808 seconds)
  done (took 2.53205632 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189589429 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09002423 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112070193 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092791426 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087046089 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075400892 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072161089 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088922798 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073024093 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087947742 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071076893 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089178305 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071418493 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08774629 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071482696 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087359456 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073544491 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087605303 seconds)
  done (took 2.400998561 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081906402 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069727636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108089827 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069178038 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085576955 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072063952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090709703 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078179016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086765446 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069444751 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093430509 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070988498 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088227849 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068714162 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071692571 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085137437 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071898772 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085132536 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07739173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089404923 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074366754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093350673 seconds)
  done (took 2.574741446 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085267906 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071157015 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103225397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088113327 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064808569 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067369086 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09204614 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069658682 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090795617 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070728409 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069209749 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083727984 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073762467 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084871234 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074508302 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085754308 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07108658 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068872434 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08693971 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06568388 seconds)
  done (took 2.363183366 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090621147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086851778 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07065381 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094087343 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070617422 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086715636 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078347478 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087135879 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0707678 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110734561 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07070805 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086540111 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078608893 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091569812 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070265025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093594846 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077895415 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094546018 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070254555 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085705207 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110082006 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183832929 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094993894 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069638479 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086318616 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070134555 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070090079 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091685736 seconds)
  done (took 3.242766885 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06992796 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068852351 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083215311 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066710046 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066410544 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08313833 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067018532 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066894723 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085189539 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066870793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069287674 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084624972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068909652 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085018632 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068907904 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068730454 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08479159 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066654553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066814897 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082807176 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069045698 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068959819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085028078 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066335552 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08303169 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068985665 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067202464 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082217256 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068698633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066365774 seconds)
  done (took 2.994406368 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079571173 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093663722 seconds)
  done (took 0.973990838 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068348256 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083333257 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08372855 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072843597 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089762621 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069355244 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09364716 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073550362 seconds)
  done (took 1.434249944 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086778623 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080726711 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08637825 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081136493 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096328552 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085741697 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157125337 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086604677 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07609981 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084249981 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082120839 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068006867 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092330785 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06946473 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091118092 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074872509 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067490938 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091162877 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072126347 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084415962 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071075237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094175504 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071656908 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066336118 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08686873 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078094206 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096558966 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070582618 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089322948 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077045613 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074679865 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079999147 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069861521 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086256921 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068152974 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095572464 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083640095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089178939 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078231218 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070079358 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096274546 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065200751 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090158486 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07547903 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095404609 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069923003 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070363833 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081668386 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067356908 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088399313 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065672764 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069689403 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080890477 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076283542 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088856615 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079535922 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070292845 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087502759 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072263623 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088968223 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075694355 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087316062 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072040403 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070017579 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095061004 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0733591 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094286982 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065054318 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06331123 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083548398 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079579438 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107413006 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076093483 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086816004 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071268213 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083488854 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072480344 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070613171 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091041939 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075683781 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086451772 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076006618 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093032442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069291091 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071753117 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093740384 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068648162 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087894686 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067743757 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101072265 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068401898 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084024916 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067022993 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079278161 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088374593 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069181057 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08343826 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075869652 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063807167 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087129048 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070424413 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086308919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079809725 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091873842 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074819337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094340339 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077247106 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069738518 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088701855 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066543255 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087801534 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067764055 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075895084 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08007348 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071967513 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086916555 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070027523 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077036201 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084644342 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070458609 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092933053 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074874421 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08502907 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065819383 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071561586 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085419091 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073119417 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09355969 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068695646 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065046925 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081304943 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073127497 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085550265 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073119677 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09114697 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071728072 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064339358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083957824 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073312107 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094828568 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069865529 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069537327 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091868775 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070593255 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085161618 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075407322 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088393201 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068152807 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074971322 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086279098 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065631259 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08934742 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071731767 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068330913 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089184369 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073004784 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088471994 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069932396 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068002007 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091451488 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070828868 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084586087 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069254897 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084740629 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079483087 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070893671 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081655393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066716932 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09373353 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067532532 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069096628 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084995923 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07156518 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087167345 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067933875 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069357615 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087456158 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08081425 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090722788 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070848594 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090895543 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080625913 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08635015 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071273106 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069014236 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087418221 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070630105 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094964095 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074498263 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091974908 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072221538 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066665303 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091839183 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076473054 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085427743 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067800699 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067965336 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089724483 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074818183 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090864486 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070122562 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084797489 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070306716 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072540265 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087905968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069627992 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085370866 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074241588 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068004623 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092722874 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070234716 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096402235 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072105187 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081814219 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073635141 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0846477 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074967551 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0655003 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084506249 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069128839 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070467474 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085362111 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072611835 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081032693 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07603226 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093270353 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069510358 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068668003 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086611813 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076334425 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08761684 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072780757 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072853768 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092743045 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079681589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085140131 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072581907 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096914458 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069138011 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063555905 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091577283 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068966897 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085954673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068400457 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068101648 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088640069 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078241853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093145396 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064865173 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088310727 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068875903 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068890551 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082222029 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07429035 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072039981 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087865305 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07581769 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087265651 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07151973 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089922674 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069746054 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070878525 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088000384 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072432818 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087294574 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071924518 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068007358 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089595187 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068908297 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084613075 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071645622 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069086822 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086353907 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075026954 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08539621 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070003846 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071009352 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087092751 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070162894 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087033821 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068458271 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071667435 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086577719 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069358617 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088323047 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065351979 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076359062 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0863803 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076977607 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086350874 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06632827 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091466769 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071218729 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074472689 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086977354 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070929607 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087535096 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069211754 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07222772 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092931461 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067061045 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096022682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076845255 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086761577 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072162301 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069295907 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087735122 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068408918 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08733631 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070291761 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069572332 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086508022 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073218938 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089281048 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06933577 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070585344 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087459896 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069535363 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088192135 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064310819 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068375572 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085444344 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07020892 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096201647 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071158288 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085949951 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068384456 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070848632 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085749128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067250999 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094262543 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078951462 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087761316 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07731088 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067861452 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08810947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079819815 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080926544 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067737163 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066841129 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084705888 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076616671 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087930923 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078326397 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08590173 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068213968 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067197296 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08822374 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068570372 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064415385 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084865549 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073883273 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085903815 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069190862 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069807414 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089438398 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071199507 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095574238 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069458545 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087358816 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070432222 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066954835 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085667963 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069269288 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071363871 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087878049 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067256091 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08454051 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069173841 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069793562 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088455897 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069277568 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088375881 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076056652 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069561474 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088895739 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072594924 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.084201952 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07281691 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068642519 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087286125 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068781536 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089864574 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072386535 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08818665 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078051095 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069299645 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087428119 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070238946 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085361844 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069292268 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069231687 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086867211 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06924169 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08810409 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076931947 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067874318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089042365 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068803272 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086983791 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075796052 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087771851 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071740272 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076308471 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086942686 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071192263 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094275138 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073408161 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09031624 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071422395 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070948731 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092241908 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069008195 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092868894 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070266441 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070065714 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087964599 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067844706 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087290881 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069538256 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068515977 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092497416 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07039047 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086314871 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068381354 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066979285 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087604572 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073129714 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093901296 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071544399 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089626544 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065004125 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066832085 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088165131 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067369774 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070259884 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089671863 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075162113 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088894083 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070218721 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085419689 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078977197 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074828804 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090648118 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067791996 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090461783 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070642265 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071490484 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08781735 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070027812 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088412566 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074157177 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070225055 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086633211 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076618202 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090101788 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071190261 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089093168 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069634272 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070179669 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082768102 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070455717 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08825111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074747203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071638733 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087185012 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080289685 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084292863 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070040818 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072887123 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087799604 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073619704 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082973146 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070948921 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087488598 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070924035 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064618295 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086363663 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067373346 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071290027 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085872188 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065672535 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096837623 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078269736 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090265386 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069379829 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068485391 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082937901 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065691548 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086393844 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071596239 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071252042 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096981793 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068392897 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085890906 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065524246 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069795609 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089480826 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073041928 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084350548 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065639216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068893163 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090232282 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075444134 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085744712 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069302636 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07275233 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089891975 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068754045 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090268132 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066841858 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072842013 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099623356 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069834695 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087570421 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075386648 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094774752 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070506107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064691977 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08753453 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072466324 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087895403 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070355267 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087973697 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084067732 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090638231 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068652838 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069302255 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089958471 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068947739 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095199255 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070793551 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070029434 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091876582 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071929857 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095987383 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072598637 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094304863 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072408837 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072165348 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087143233 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069927182 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085840599 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068221037 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070557177 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088669425 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074741566 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095013391 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069121143 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097856835 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078697987 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089127411 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066316694 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068571312 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086353758 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065253945 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069853798 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086047087 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068231418 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086158621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06958111 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069832954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092152131 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070562066 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088547274 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070293104 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063618654 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08956945 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072037063 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088474808 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066755337 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069966192 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087943506 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074182194 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091113594 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067542989 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070441225 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088795825 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070202862 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082894334 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076222341 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068892678 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089430344 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069391452 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088298959 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070402077 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072673152 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093380864 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071115236 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090090552 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078460928 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089781084 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067086298 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06656899 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092564143 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068206517 seconds)
  done (took 47.658054571 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112297745 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085845965 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065629766 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083109819 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077567381 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084717431 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06549413 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066170434 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083552279 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068891028 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08291937 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065423676 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092190675 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088717533 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095472972 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069895503 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083272634 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066562469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083323112 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06669507 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092241074 seconds)
  done (took 2.529616576 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079488441 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092833427 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07550202 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097467623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070578703 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091752778 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076453884 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092889992 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097147955 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070576137 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097915684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074499651 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088226897 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070576281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088443357 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074564549 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097725857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070753665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092194325 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07684105 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091973824 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076105105 seconds)
  done (took 2.692737682 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071275808 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070277376 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089031476 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064479301 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068486322 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08235644 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07369975 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085503681 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073081108 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.077217447 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086356397 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068472756 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08846307 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064222669 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.0690757 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085568166 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134031824 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073222293 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068343536 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089179918 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064704383 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089400157 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065501773 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065297374 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.08654072 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.074214746 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088696593 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06736571 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069284293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086064203 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069375267 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08491952 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069906475 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069274339 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086036667 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068611092 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068917764 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086994096 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065799589 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08514252 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069982044 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065053439 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087963682 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070254237 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066382102 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085071795 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071981072 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087604561 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064657939 seconds)
  done (took 4.616129373 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089550427 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13402238 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090414631 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09526955 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106214408 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095484058 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07342687 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11387735 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066869057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086734244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085365771 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105601054 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088062656 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073930483 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093923263 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069552091 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069894114 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087051193 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073017099 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087215131 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072319031 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093865396 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102548495 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083678501 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09122853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068752983 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086452209 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073666141 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09992207 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074634533 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091934884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075094521 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102772905 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074267266 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087238599 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070889141 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10453088 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088231729 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071790968 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066857529 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089261855 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074073596 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093665605 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.086714225 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087865019 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07403728 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0880075 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066896137 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101008234 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071282852 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096034236 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102386992 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074104431 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087769003 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074200097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103032177 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069352032 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086397346 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072582704 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099519338 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067700608 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090652604 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083782341 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089090393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0766845 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102286771 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073840322 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091237448 seconds)
  done (took 6.819005961 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07943722 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093897161 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083845285 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103428403 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094924081 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076363491 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094456158 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076812728 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094589624 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081091462 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09389299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115572615 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070943358 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097242405 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076779875 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094725218 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076123218 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094507192 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075684154 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095463059 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09482467 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084202421 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094199458 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102791043 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106360154 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089636037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075943033 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094153926 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083983795 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094980663 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10559883 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07698896 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094179073 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103016289 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087745802 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094334737 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069236806 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093864407 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076210828 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094057237 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071836392 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102634044 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075247012 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089161674 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075583849 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094502679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102681356 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087837045 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096750622 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09883946 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076603835 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102881416 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075816886 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09498506 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102887183 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109676741 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10262976 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101744941 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076396027 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102339451 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102269707 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109654112 seconds)
  done (took 6.50069121 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092065978 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097562169 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099917602 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064517599 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067444357 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09212494 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067446072 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086000381 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07800063 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096245139 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081004467 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091237314 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075849266 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098750206 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090715441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076488161 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091254382 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073745055 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097108919 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073739896 seconds)
  done (took 2.55278497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080507314 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107356588 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070485534 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074870134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091560868 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074845631 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091027507 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073413717 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088990499 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072963187 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098258301 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080608558 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088744766 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075548261 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09732407 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076005976 seconds)
  done (took 2.20845851 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084140879 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099421728 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084073649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088433905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068743712 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085565561 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069436585 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065219334 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08524721 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082969186 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089699695 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072617326 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088659966 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068369345 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066444529 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09153642 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065500257 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086461655 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069201023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103303412 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08117395 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086936884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07009927 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089746194 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069816662 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075434059 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089170279 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067283123 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086557149 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070675488 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088519479 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077224083 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084878434 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068646143 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068223434 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085336973 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069649667 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089047369 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072215719 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087419733 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068502493 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068884993 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088008173 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070605266 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08424072 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070167336 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065421904 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094262641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06769701 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089350588 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069939655 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090743121 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070614642 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.09845629 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073428823 seconds)
  done (took 5.234897976 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084863009 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072933239 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08536927 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067828837 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091591869 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071267623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072102442 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090962394 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071037095 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086301338 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072247383 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090413943 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072553256 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072264882 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090161427 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073363419 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083906252 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071496265 seconds)
  done (took 2.291925321 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07672675 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070774199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096283284 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070309878 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088537624 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072314463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065379304 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087279706 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068560814 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087981257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069719539 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071542921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08663886 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072397541 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088394116 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069467621 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07176464 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086666516 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069599217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084297977 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072756212 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068038627 seconds)
  done (took 2.568133513 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075984514 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096464886 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166607343 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109729718 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086203877 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101900474 seconds)
  done (took 1.5098513 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094857172 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101550251 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070513498 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11066102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077263931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091058436 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07186864 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090066742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0804152 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103216469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070885761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099155226 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099380411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080063208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096489182 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076962863 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090816616 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071198585 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088644983 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108354532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072216674 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098792403 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071961254 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090004634 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072729026 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09850234 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080630022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103962675 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089527366 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080374565 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09549537 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071958452 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098947953 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103998706 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07273157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099056569 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071851842 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108527667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076788636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098660818 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071891937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097126012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099079936 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076955201 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099413653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071738136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095965674 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071532951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091080863 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114709052 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077504197 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09784969 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096110419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080109663 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098753857 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115739239 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084492508 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09848634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096148242 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084588998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098546202 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077012669 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099144964 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103870855 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076952429 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098632333 seconds)
  done (took 6.777621245 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088620738 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108158863 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071510418 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103926527 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099607578 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071473355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090384723 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071626494 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090499092 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071197123 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131735351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071316691 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098786302 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099156615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071027725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090344628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072511672 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098439864 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071161088 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115477478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090744466 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079144419 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098866876 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098579332 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085264527 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095875877 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071680189 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091462943 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071422796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090473332 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07604487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091372594 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098616298 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070619349 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098786604 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072265775 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090667198 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077446435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090678025 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078015236 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09924909 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108649242 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07164401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090507149 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085375237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091009885 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071087717 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090825962 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071380698 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09028538 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085285965 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104447683 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10313642 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098718398 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071928968 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090237988 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072307313 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090109067 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071803049 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095928246 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080323942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090481158 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116067757 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071271766 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090395377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079675195 seconds)
  done (took 6.665232445 seconds)
done (took 131.837110798 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.22356798 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200783245 seconds)
  done (took 1.297994929 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073621613 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100011389 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101210027 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130680014 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089222906 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102801034 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120762788 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081717138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068284774 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088739001 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069849972 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089392575 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134251082 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069745503 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088225998 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071528197 seconds)
  done (took 2.365406636 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104854337 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202230004 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112223943 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067673171 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10099013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081225679 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08794303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079637705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097005461 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068490458 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08005873 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098058864 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067708708 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097372413 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076731005 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099874635 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068299042 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099938416 seconds)
  done (took 2.573698111 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107999097 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153391514 seconds)
  done (took 1.143355336 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208563647 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124764176 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206395258 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.419787986 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.208197019 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.280039892 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175786343 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.174722101 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162216272 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172274263 seconds)
  done (took 3.015250907 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103919902 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173618474 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314295983 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140255242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088144765 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117642114 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140460505 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.092014647 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103417061 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102283606 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082569782 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09945811 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099656433 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097948195 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0771068 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099658383 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123645655 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077229357 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079072249 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09938651 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120377316 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069180964 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077042452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09670587 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079856896 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100389554 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068588766 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088308874 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078163624 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097388149 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081730265 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115843737 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099213595 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132184773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085046209 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132050747 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100014388 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075250515 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097085199 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076048453 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099865989 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079544094 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105401133 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080076979 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088747639 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080300882 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08786845 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069472484 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101095013 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080097013 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.102117598 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081142887 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.132109833 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09877598 seconds)
  done (took 6.351802385 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.760179423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.116142233 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09704164 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.815326255 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092418775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107722838 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.724763913 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121630545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211478411 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.78269325 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.094949357 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102563596 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.184244692 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214729081 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.902451377 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284238457 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.647640856 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109097982 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1133902 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.134761704 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142575365 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178660701 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153361431 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438801556 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077136492 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095038476 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139649443 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077048201 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141705057 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10887354 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09568787 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156857516 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228593815 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.158163431 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098767639 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072834951 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092949151 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150691378 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223499988 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19324176 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159812949 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070999602 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093271698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141338277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13401963 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070383915 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141154901 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.154605727 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171659099 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075767254 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077523482 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.164361633 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142823875 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14508039 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103391549 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.267184735 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285632321 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071403245 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122115812 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105990689 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2189373 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106024014 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201640148 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1420534 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170373983 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093083389 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734122676 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148904073 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094070575 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07660439 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121665297 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075863884 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162165553 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124461814 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371748237 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164271475 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075746975 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072092963 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229829859 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085447795 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09312306 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143341306 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077565566 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124308127 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144953203 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166231172 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14888217 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209060175 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144425648 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140779979 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096461749 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125726622 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.078049053 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192891752 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195713626 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143665779 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188594175 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140679625 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16378105 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148509831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078816976 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151944819 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122250535 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102487512 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142182951 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193626747 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.104750682 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107049579 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074448882 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162610179 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.106917362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109573745 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141090107 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.150471469 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479240981 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150802727 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070047209 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110233049 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142891516 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.143562558 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09845982 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214712119 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126133371 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.149135474 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122561874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090353746 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100618372 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163326618 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080740883 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125519675 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139074096 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099118584 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214852086 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.172321963 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099997497 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195553039 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163665613 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097986593 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151339219 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121462252 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148367017 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080189379 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139485879 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09928371 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751178586 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.167578406 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123671479 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076932481 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177540048 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07266094 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105609482 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085364758 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091485829 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.739563243 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10893443 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081766412 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106617621 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076064814 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123712077 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.159427573 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07689119 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140275058 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203608902 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077016292 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121734881 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106584684 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142757038 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077172861 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107564097 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105486227 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086074413 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124702052 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09639004 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08573169 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149232078 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.143190672 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194554502 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542449116 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093841249 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084662885 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20292866 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093659294 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.245435237 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139013624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200025024 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143175379 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103539302 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.268147543 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143440759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177828813 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109776159 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153842891 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069515014 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160597766 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144671154 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073121325 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097126431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142016911 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146962939 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143696356 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926299197 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072285209 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205620214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091748435 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.152421953 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077260639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100843499 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261662445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0737166 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147666152 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142754143 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097230532 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084772124 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.7031333 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085934625 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.161538122 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077119763 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195163661 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145455479 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139228718 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140657473 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098771989 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.141399758 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192644231 seconds)
  done (took 40.894478591 seconds)
done (took 58.523723871 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262129224 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.182446195 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.245067647 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147580186 seconds)
  done (took 1.820549532 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.15174052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105938132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120376571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088086236 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104621831 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088260946 seconds)
  done (took 1.567007083 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.407308721 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270111181 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234512568 seconds)
  done (took 1.816777545 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286835783 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217625293 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457096664 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30081689 seconds)
  done (took 2.277180465 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179272669 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114976912 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06939281 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109243893 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16171457 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255978539 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130212956 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.190965998 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081936246 seconds)
  done (took 2.246534936 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200386147 seconds)
done (took 10.837325304 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.220344545 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.274347368 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.159409377 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103581942 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.174214538 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.103528732 seconds)
    (7/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.216530623 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.227688822 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090364773 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105452641 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.227655184 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074845953 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.107960889 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.203012924 seconds)
    (15/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075593864 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080768755 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.197128506 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.138542773 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082492867 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078649856 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.140695317 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068570302 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097004998 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.105713974 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197292141 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097678004 seconds)
    (27/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077940843 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085232733 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099926824 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07847358 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.164988071 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065131024 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.217934665 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.103258264 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054683488 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080038644 seconds)
    (37/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.174119057 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.139502507 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.13936744 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096838137 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097180076 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108637794 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214262496 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09063437 seconds)
    (45/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.166000357 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117848273 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119818804 seconds)
    (48/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070403031 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179100737 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09672939 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072676287 seconds)
    (52/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.121557243 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.176826642 seconds)
    (54/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.196409295 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.081260489 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096151937 seconds)
    (57/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.139645594 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098498541 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054938339 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077081939 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114653325 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07677041 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077547111 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19911729 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187613325 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066328925 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161859237 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071297876 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096368374 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095578494 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101826223 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098156451 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053370867 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097935557 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096482254 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096867213 seconds)
    (77/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080814012 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052956303 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124414328 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.252103351 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077341172 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056959835 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054996236 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115723538 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204150571 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.182210694 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091417939 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098362358 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123565546 seconds)
    (90/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09583358 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.091086948 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066237411 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09322661 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101294493 seconds)
    (95/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084174336 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175787931 seconds)
    (97/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124976279 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077558115 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152529347 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054660628 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07004394 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198535801 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104015164 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.14033138 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.179363969 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.15080276 seconds)
    (107/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.153901059 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098763977 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135914589 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099355987 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110696037 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15978943 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120641439 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.182700284 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.183657573 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105197249 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.137685557 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077512593 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076412084 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098221326 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085234751 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213392091 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065959746 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173709284 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071265229 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118898421 seconds)
    (127/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054624681 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.09117392 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.139970943 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123406245 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151818078 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.162929948 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077993345 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090017721 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070127364 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076049417 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.096952904 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071901248 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141172707 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067889219 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06821057 seconds)
    (142/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.086892477 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07410261 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076857025 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.165073978 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.193777835 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093304255 seconds)
    (148/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146825932 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06904289 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138412763 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078327241 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057049759 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093136333 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.140218797 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.097077317 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054737603 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195213372 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077505911 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090146952 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068460911 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075842201 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090422811 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055646031 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098957109 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07232308 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079308597 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099848026 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092675 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.116363102 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06927929 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067609932 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093367601 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078877225 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195377117 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073295674 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096850848 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055214395 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172965528 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070336962 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054231646 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.225990156 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.113433085 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077503085 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116731472 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13527938 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115538782 seconds)
    (187/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.0994124 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091810205 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076558025 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054809956 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.182217861 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093362039 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081740043 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063390786 seconds)
    (195/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.075529248 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077485351 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068518442 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090363062 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150295721 seconds)
    (200/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.132660524 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055165509 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092099913 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099242917 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.409729357 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056608363 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069458501 seconds)
    (207/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.078872249 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05494048 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070172387 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092666171 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075671186 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072725554 seconds)
    (213/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077250612 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087592294 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099821763 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077006937 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055290748 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122785416 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203554966 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174099976 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.121483306 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055397836 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096671167 seconds)
    (224/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072388058 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068811105 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090673849 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.163952678 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089795581 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118723651 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06459727 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.07743974 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.195381063 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144246696 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113568396 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076355704 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113707929 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056769674 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054095702 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063720277 seconds)
    (240/309) benchmarking ("sort", Float32, false)...
    done (took 0.153409926 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067862424 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121073265 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069991593 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.101590463 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08572425 seconds)
    (246/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05454735 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.163845114 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073421932 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091610772 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075779114 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160436143 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.101277044 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078762493 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05430372 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068476357 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162423124 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070914833 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079119128 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068981046 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053873911 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162436816 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056781539 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080577425 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07531731 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055339472 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075918167 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069620525 seconds)
    (268/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065484582 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053433126 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099435777 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090414886 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.092144017 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094935089 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.074996164 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068919717 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056137664 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056030597 seconds)
    (278/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078249836 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145246887 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090990779 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054481314 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 0.151402164 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054021297 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054778927 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053027327 seconds)
    (286/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078569017 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077020036 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055108889 seconds)
    (289/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093403801 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068846588 seconds)
    (291/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055996532 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091052753 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055022242 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07649233 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120464231 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.11153142 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098306227 seconds)
    (298/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05503336 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068317602 seconds)
    (300/309) benchmarking ("sort", Int8, false)...
    done (took 0.166331271 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.076474389 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07435354 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116133411 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076912601 seconds)
    (305/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055600026 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091200285 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073707465 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070268846 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117153733 seconds)
  done (took 34.034793035 seconds)
done (took 34.953377968 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087105953 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119990421 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078101825 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120818835 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084157005 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104494226 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075907576 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105720881 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083727217 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107785061 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08195723 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057599548 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100157878 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078544392 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100515256 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094751593 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103367874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075222714 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099256397 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067220754 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076641595 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090985179 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070469488 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058798862 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104398618 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075788383 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097740049 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077848801 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067976651 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091190082 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071785 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076399327 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090901737 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082036972 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097368596 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076927512 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100641398 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079797127 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070231612 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08992232 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07674401 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068458974 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097234948 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07658721 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09639065 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073246889 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07705089 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105333771 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094508576 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092826248 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076796869 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101743287 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079233583 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073895897 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094692568 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076603413 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096171032 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094780359 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099506008 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071365122 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076553219 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100436915 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074814176 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098945272 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076558734 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077990814 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101435141 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075140192 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099668592 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074665412 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068692641 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099011231 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072352197 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09145571 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078698315 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079443927 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090264705 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073684446 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075801661 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097321709 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068535326 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092698693 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069843617 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075473204 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094651254 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057316753 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072672164 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096818315 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068771274 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077124285 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097355068 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075751419 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.092576186 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080297231 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068719641 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096790812 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068592239 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068067765 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093227 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073249519 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089643518 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07031782 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077830495 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092053452 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074287262 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082321964 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090969004 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075774131 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090184155 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068985374 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08422942 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10123678 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068476524 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092465812 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068307842 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076120261 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092167861 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069465059 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067812415 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091135048 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075325705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068506155 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093452676 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075737806 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104757901 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068054028 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071910081 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094131782 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06856006 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073439606 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091017346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068470964 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091752467 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065690395 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07088913 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.091124659 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076278744 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070367146 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099157727 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070717048 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099876113 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073053389 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074990123 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097753284 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067819733 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062314388 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094273026 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069793762 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069998868 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092182829 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070950235 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06757378 seconds)
done (took 13.593475059 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070384453 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.173473965 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128702269 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09888473 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113146146 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069512162 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103229675 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105573602 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093423504 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129801678 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090728755 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110446588 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116767157 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090744713 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069191829 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073116043 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094700424 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091211982 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127085475 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111800273 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119035138 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090572091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.123641357 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092840901 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.1142298 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105815777 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091805091 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073614562 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072713929 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119205209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111277975 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072352524 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069289091 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12609024 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119514349 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089103984 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091486031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087219867 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091195263 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068284755 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116715406 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103082832 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106977199 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084374134 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09815105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071623066 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093026431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089521199 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115848949 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083766553 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113024496 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136131694 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072013086 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108576341 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068445224 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11268911 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107073469 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071059146 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069844063 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094033921 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067874924 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071667142 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114191815 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118107087 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072842331 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.108221091 seconds)
  done (took 7.430489294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089718816 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.122115197 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086307059 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110537701 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068650533 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069266533 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093532376 seconds)
  done (took 1.61670066 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071348613 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094405227 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116707093 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09365497 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113005055 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08985473 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103635479 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070060783 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110449888 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070714841 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092615868 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130886556 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070639438 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099747888 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093514858 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09254883 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092927858 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09217397 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073284077 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116106593 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072062206 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089472106 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069793054 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106915808 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06946658 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140923709 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074738127 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070778692 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096922483 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068354619 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142460623 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106745625 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080353661 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069597072 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106778275 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085775357 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090836376 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086071314 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098142402 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084412348 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070221392 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094436431 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068345786 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075061 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104024685 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071236666 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093234708 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073186126 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091298513 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095093662 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084582566 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093878651 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073832789 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071853902 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099080864 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079821629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095214436 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089708513 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073757016 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112194384 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086255282 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109496587 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086482925 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097492558 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085233257 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109496194 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074568405 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073888125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.098404447 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086923312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092622976 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071295643 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082400015 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096424377 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093519093 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116990584 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0714826 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103967472 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07033909 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07101678 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09331018 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092829387 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096245452 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069693376 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07432007 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097415852 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068125986 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069704904 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.097946737 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068869627 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070817158 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096395509 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071513016 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097145603 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086384272 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072008326 seconds)
  done (took 9.588652407 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072953453 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073150349 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096709993 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071254613 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073064625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095493778 seconds)
  done (took 1.482385519 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103945228 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097668947 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087166664 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.1010329 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110479493 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109930739 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08693087 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111054128 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087971601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107582783 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085623155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110320682 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09038566 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102459881 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084784894 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099324297 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085372459 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102442542 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082142047 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100785595 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090689104 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099210223 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076844658 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085573183 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09754789 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075801639 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103804414 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08279344 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106406599 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085447074 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099718575 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074227513 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097184448 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085111114 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108263328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075053076 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098584294 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074870984 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103225693 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073627517 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109127809 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076114096 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080600181 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098473812 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108493198 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074497177 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074490726 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10485993 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084891367 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09909191 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07534229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098201368 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074042558 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097962256 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074408445 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108345755 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075154177 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109649165 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07570472 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074651494 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096916128 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073871167 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.108120218 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073914721 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106274838 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074881278 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098442942 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077392212 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099678835 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075501818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074164012 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096057154 seconds)
  done (took 7.565438524 seconds)
done (took 28.658335613 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.662971495 seconds)
  done (took 1.653813382 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.78791445 seconds)
  done (took 1.77912932 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.270053205 seconds)
  done (took 16.266265311 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.623736599 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.774186028 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.820760519 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136735948 seconds)
  done (took 3.347689864 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.911118002 seconds)
  done (took 1.929696853 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241053869 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22720355 seconds)
  done (took 1.466838277 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.757962107 seconds)
  done (took 1.764060069 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.312329688 seconds)
  done (took 2.312473842 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326554453 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18386331 seconds)
  done (took 1.514974032 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544517188 seconds)
  done (took 1.551157073 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.701986277 seconds)
  done (took 7.715400794 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237742537 seconds)
  done (took 1.262998757 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275209533 seconds)
  done (took 1.283652867 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.283804699 seconds)
  done (took 4.296906211 seconds)
done (took 49.144255339 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082898959 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085563971 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107394158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081916336 seconds)
  done (took 1.362803662 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083218003 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079209242 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105379408 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076322251 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104549769 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076330019 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102309108 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079892587 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075370598 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101068906 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07652027 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099349582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078829795 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101531184 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073265567 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07884788 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103440333 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076432207 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102983426 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076697155 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073731264 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101959527 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078847279 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099265799 seconds)
  done (took 3.120711466 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082091369 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078605243 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103586715 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076208587 seconds)
  done (took 1.351872711 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081880087 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.122621885 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09260776 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081504433 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119350619 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113983683 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073351497 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073596921 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099945763 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080635316 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09462265 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101067273 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114777207 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079848512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105901898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068736245 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071523773 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113933402 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080833693 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10430367 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074080668 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082870597 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094775234 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093992692 seconds)
  done (took 3.241776122 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083260528 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109540486 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.108492435 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093354389 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.120493357 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069298654 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104831793 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095211773 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153706056 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06915886 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096940555 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069194399 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100093245 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068480279 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079779076 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135819635 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115744917 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.095600396 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100600561 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09281528 seconds)
  done (took 2.983964882 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079722799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075164615 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095005071 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073680478 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081537021 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101301968 seconds)
  done (took 1.527847327 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07303544 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072445779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096918127 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069285625 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077461518 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096344313 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06859792 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070034288 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094099809 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069551824 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0693085 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091897738 seconds)
  done (took 1.969874336 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.389954833 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095455604 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071651451 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091408662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074252376 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093183155 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083087395 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071474615 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118487279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069388088 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09513293 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071158539 seconds)
  done (took 2.350259846 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268399081 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080703138 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329169361 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171482618 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144347055 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158528694 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106516944 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143959515 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201861957 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142749739 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204558099 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22903708 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137714198 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171322704 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119124191 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.136393892 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190297221 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225972227 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108310613 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227537371 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21124829 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159544189 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183556605 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131796852 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136741518 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155642219 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074977059 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109279839 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236280561 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164613917 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204022214 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141981375 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10042286 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235051891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23018145 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200984391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166307852 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088045118 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16015828 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168308593 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259867992 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118532538 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199525204 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137845053 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109530648 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176564363 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148836553 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150917771 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140393098 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118706477 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17776677 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244799982 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168995441 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11500593 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140838592 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144848633 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147227585 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106755422 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274367591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199185086 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164133495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099284674 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10206989 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216638992 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163786986 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14545039 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156983962 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123216033 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17121688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216336306 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150903198 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177933155 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185992342 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092959763 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150738991 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198880598 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159370937 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207195191 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184257446 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076965886 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157000446 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134440639 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08516786 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172794519 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104822345 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212148084 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129477806 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143523949 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14295066 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140269931 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114078011 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225025104 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207105904 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107648003 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095064969 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13473287 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153230886 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179535077 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117000413 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138956298 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151144827 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082828886 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19643646 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078541095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156559052 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.106945762 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155962639 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165519093 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079436686 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159029162 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13169323 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131249993 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167750753 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224895227 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0941797 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1113875 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204686684 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184167081 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136342277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178159763 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191973531 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130842787 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132450406 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209430935 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246664971 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092693229 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227446191 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1389635 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087197905 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116937126 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158626489 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142074358 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153395016 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085918421 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182938324 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204355312 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103881797 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098615239 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194848717 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0852793 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111503696 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143593026 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131261228 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099774422 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130173226 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137611303 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173076272 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158445279 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136720262 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155391135 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127805232 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229483375 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11866669 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135467399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108107693 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098993748 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16807064 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22178802 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082754452 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22973937 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157832811 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135108442 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151092492 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087059494 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172829915 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107641596 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074591981 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203132581 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142603418 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114120884 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214037337 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133696068 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158529884 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155151245 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165971948 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163132361 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190434112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135265778 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09105782 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144138929 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157608826 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102262172 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098729719 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112413465 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133752666 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12605413 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086881722 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17501206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183433062 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10132403 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142478338 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126503569 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181753122 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105359209 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162928922 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149923332 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124776571 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18851266 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215937661 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167099991 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129925165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177378344 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099100285 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078050052 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119909817 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159491728 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112991161 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086988103 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14758217 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207528586 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161077978 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170775353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14095897 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152925591 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215780293 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07421749 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148057289 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186523487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158561768 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.159139886 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094370865 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1274678 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177384775 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137663712 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250001713 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145517916 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180957045 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18473872 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133159815 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083626016 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135417956 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169292856 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135459103 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210525118 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129238518 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092109951 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140261782 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110888243 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133932907 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160297567 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151683813 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166272071 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146098235 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190284069 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08120932 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149982726 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154724442 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153453715 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093526494 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151973991 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225687052 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099327795 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148935404 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214924179 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083093715 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154904367 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240955217 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204102386 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08812206 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140145706 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154196054 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167652239 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150776803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199552137 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141792253 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167671424 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141325787 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089006201 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118045148 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101608454 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138062439 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125315774 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142062179 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148014653 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124257564 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163915496 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143100107 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141249342 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150477754 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102143011 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121490871 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129221991 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212627497 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153174418 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236821777 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130953691 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20921788 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232690361 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078691498 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084307886 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110142586 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175197099 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115582915 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169399004 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.130818123 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111700315 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190939686 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18290349 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130434419 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074204559 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146169191 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170755714 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142205091 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128634207 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13651313 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199220831 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134077763 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082485018 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15601783 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134128031 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133484174 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239441937 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06508162 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126937328 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081153283 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110533151 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162404207 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218477681 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085538944 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158095978 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150929662 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153084186 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162281007 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131592972 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126878693 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11699867 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210734128 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161436882 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119846031 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144276166 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162516392 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216245386 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110243734 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125871027 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235236456 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189545043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225848598 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118481178 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146588262 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146865232 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14090253 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174304387 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114033162 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203004731 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112414958 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169023102 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134387621 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123738246 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161009671 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126619326 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137733298 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1830292 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151576589 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111896757 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083550216 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149192181 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154756693 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136519979 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104889529 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171772496 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102818471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170035148 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233190156 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085339379 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137459197 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12639594 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085882615 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139798961 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134402209 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115692129 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123514622 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232155535 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120741184 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186551604 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200741814 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146386515 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170802432 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130243228 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666899677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108690428 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189827189 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151694587 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241285664 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128186541 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15129048 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141699038 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155347994 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177978444 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135992356 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208594282 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164423002 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15189813 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10938858 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133527272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143462183 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094738421 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137572873 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146373365 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148102679 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131968359 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152566713 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158325677 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112266117 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125108961 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194308359 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149088687 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20345527 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173861156 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088382818 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151718003 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200671502 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109063681 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155205869 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190139033 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139107539 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130063852 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.111206494 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109805722 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235913547 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103128028 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197495761 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181755802 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1154901 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144864491 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176895036 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167218763 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139386767 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158372006 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125805432 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144103027 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147922842 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088311653 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10875911 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139159527 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146092875 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105500183 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134237923 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147840513 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186583208 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101665984 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099499535 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133439113 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205588798 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243820746 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092467917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113466948 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150790283 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144336704 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148461664 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15771518 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08558967 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114000729 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.11305959 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116713326 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139377861 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146285681 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134385217 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143345676 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204942714 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115175615 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256753278 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102196428 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142789848 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075334172 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.113892726 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130991022 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104790227 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144122975 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128899903 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237597064 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100742952 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120171349 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123436302 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076845141 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113616362 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162564166 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14256106 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154119841 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129352118 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065930537 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140444815 seconds)
  done (took 72.991435044 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149071077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.122364629 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.136148138 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192950248 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162347407 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258529322 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.198411184 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24481405 seconds)
  done (took 2.571415228 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074242734 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121995511 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108103399 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121189975 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092819284 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070320189 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.299407897 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114679244 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068980627 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117669163 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12202579 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094215253 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.481195679 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070096397 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101049611 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092818534 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07245739 seconds)
  done (took 3.324300145 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.437122115 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.663416903 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.45765056 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07623839 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.06686612 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110601745 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.553739888 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168528196 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094265072 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.448524109 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.736202273 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158820923 seconds)
  done (took 18.079849316 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080476915 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074299502 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117204522 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08893177 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.106332334 seconds)
  done (took 1.575295679 seconds)
done (took 117.45915342 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085205492 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.352627677 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055544806 seconds)
  done (took 1.552174834 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088717439 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090501193 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117776491 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088452313 seconds)
  done (took 1.503069463 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079904244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081535878 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.118656683 seconds)
  done (took 1.394833043 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.286196588 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171457124 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091151727 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087844603 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083017737 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.111566734 seconds)
  done (took 1.397754264 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077719503 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080925461 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106667771 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082294096 seconds)
  done (took 1.455311961 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080868641 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056530622 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059096127 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087075784 seconds)
  done (took 1.399150702 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094674902 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.113823784 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.0861663 seconds)
  done (took 1.406083187 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.114203069 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.119425605 seconds)
  done (took 1.349863712 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087228469 seconds)
  done (took 1.196472303 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097505162 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146710073 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.161489076 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139565465 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168302024 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.140269652 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089269684 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117988074 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107229078 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090964134 seconds)
  done (took 2.378353521 seconds)
done (took 16.772484566 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082678145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.40095857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363961792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121970191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67017653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361367638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.024148903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122288922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122912482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097343564 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086654572 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678541058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986678683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.355280903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974318845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325498342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680308709 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070159866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069623147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096526111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981333369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097002044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06980052 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071142298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679095955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373590482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097273965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324949065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070068941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098637558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357216924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098480482 seconds)
  done (took 16.114091183 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075207776 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153829671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07758174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089124972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103785362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07488681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105029746 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071598312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160092439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072468774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116463386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069935659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101550966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070892529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089512619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097491049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071327104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071093772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09743054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070886131 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116547546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06966001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072147442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097970593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07049836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110011231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070714366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072519219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099360715 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074496567 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102315915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071429818 seconds)
  done (took 3.98413571 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121440697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16005956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079218645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136301985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120116669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102917913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.178636109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096745142 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164587303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072841786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116675384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072531225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135109345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0734255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11993896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072769144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074039172 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102083481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072955237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099304172 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08996686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073323745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097646528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07125672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098416296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083187205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098182602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070694345 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070854679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09929875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073513699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071172682 seconds)
  done (took 4.294388832 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077172301 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080510426 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115561368 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088923291 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10281189 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076790194 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077842884 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102730747 seconds)
  done (took 1.848474687 seconds)
done (took 27.358389994 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083321301 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074328606 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107186374 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087109738 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.106182072 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083359128 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072722363 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107536182 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081302301 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078075969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.109001463 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072967202 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.103666217 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071335484 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079639136 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100463757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084315218 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104893021 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081804112 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085226496 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.103012051 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.082499173 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10550454 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081226285 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.11343129 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083500867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.088096465 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105518957 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0721293 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102758933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078943426 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089331069 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.100577626 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084928426 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101905185 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072679482 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072794818 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099916681 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084820907 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106804466 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075650191 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107384222 seconds)
  done (took 4.900879207 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09410288 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097228132 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118541467 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.070386675 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103024431 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067419317 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118313471 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067830769 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06384031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.122174752 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059647748 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063856463 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.095160476 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055981667 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06295435 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061258899 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.091720852 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058803989 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061820509 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.089165195 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.060283279 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056352542 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090961892 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065092021 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058815138 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065073098 seconds)
  done (took 3.144920528 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079643855 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088729027 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122385549 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133133673 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139180175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079782989 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108759779 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090807877 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116261464 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069627359 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073904189 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128164562 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090181082 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103434249 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07022159 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117130083 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084961761 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071443948 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104117906 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092925916 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114204807 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081463971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122645019 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083268369 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07008834 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099831721 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073634144 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111757572 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074542094 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079043284 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101741148 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073966874 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099906841 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080973109 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074552701 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099592507 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093109685 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107375851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080949135 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070549609 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101147272 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070992133 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118793581 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.118809193 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100995945 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078152024 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079211872 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107872562 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.079560869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117459072 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079326908 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097473314 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07371881 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070314401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098106631 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083567518 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071750721 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.101951156 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078977127 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101079835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083246813 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073548048 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113682692 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06968309 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10607137 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069254335 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071560117 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.097981585 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093751693 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102641437 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112037784 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103001884 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072705359 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082209359 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.107899751 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077079638 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098733729 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085329059 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082350503 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104000911 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079295804 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10329278 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073319916 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093052365 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.102295402 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072577762 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072244561 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.104903416 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072994937 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099332358 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083121856 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069890507 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101844111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087664279 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098137968 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071454747 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076819864 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102481457 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070119877 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110024141 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07702068 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101441347 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080515709 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072264685 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102925101 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081383547 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.105687876 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071050571 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078270321 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10856306 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072755316 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073961119 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104825537 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075032079 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110609903 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078927157 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078537405 seconds)
  done (took 11.750579006 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203667524 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196196929 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075944847 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.189782309 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082270079 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114517003 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186908454 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102093455 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102683867 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071185419 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07360967 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.139450505 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132029117 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114230865 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111375308 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071410068 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.1188145 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107885039 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.186059722 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.179769103 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118338977 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078856167 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072845579 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099939593 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072850384 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079865193 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.115859984 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079459583 seconds)
  done (took 4.425456852 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085912381 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.135402445 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075696373 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093457456 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122311772 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070962097 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104143862 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072456102 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1119633 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082575071 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098980386 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076209959 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078052278 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.109650087 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071609437 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109129795 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081093284 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072367817 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102289391 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076025318 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10851793 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083655378 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104088923 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069864517 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077002795 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098934478 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067506358 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117278488 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07104234 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120336983 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068460678 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076555448 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112199218 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071475218 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098887545 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074331037 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074600467 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102687 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071564642 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069848497 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097442988 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060124283 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069562812 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.111253764 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077472787 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090168576 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076714277 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075819349 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103027873 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068292895 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101472512 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072870593 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074009234 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.108184799 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075467347 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076060561 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102932836 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068885212 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106737589 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073708224 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067628749 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098528729 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075806844 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070409158 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109769071 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07753137 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.099116216 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073554925 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077429457 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106848717 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073999285 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072776572 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.097222593 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073097043 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103658153 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074798687 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075316447 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097767111 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070050769 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071111107 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086836092 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070428065 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056412992 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102293763 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069121783 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069065012 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101361844 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077052811 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111704283 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072469149 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104942292 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071178932 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070289731 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.102447874 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065993873 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073510466 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.115036438 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115191371 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07014659 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068652416 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113957715 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075478224 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069502246 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.08829898 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077528853 seconds)
  done (took 10.176524864 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.101291889 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098263644 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101749607 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086121478 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126860646 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096908293 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106712649 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077385157 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074845179 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118501902 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070405033 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108265913 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070192332 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08020371 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127283279 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079540727 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.10078781 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080184284 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075074094 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138999079 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085124619 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112880221 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.08415109 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099563354 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07554707 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083071838 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127414996 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082683615 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109804094 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087953732 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08242671 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.127180393 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088762201 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103579139 seconds)
  done (took 4.426675292 seconds)
done (took 39.94446238 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211244544 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.433785244 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198070567 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.152244337 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.221303909 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.20689241 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211591636 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204308848 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.39381367 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199433391 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.481567168 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.860423909 seconds)
done (took 58.920852082 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.22030424 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347627359 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471070616 seconds)
  done (took 3.971481081 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.611240731 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.201344217 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.481036553 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.201127723 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.21250884 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.6471189 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.900689397 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.056248702 seconds)
  done (took 27.84206034 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.216475379 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.589169638 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.8713605 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.863570307 seconds)
  done (took 18.683647371 seconds)
done (took 60.472997131 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.208335678 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.279943777 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.219272338 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185012858 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311844943 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.226049777 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.358050488 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.259481458 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207790048 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.19110892 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219727568 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.215117327 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.21650216 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.324084813 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204122513 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201919811 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.254260786 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.83616432 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601210577 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214820909 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.218951182 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.240213733 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.202954654 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205433526 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.231986099 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202646476 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200250479 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.202896771 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.640600929 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20422508 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.202660128 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.525477476 seconds)
  done (took 190.155047748 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.204409575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.323744089 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.396153837 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.259164327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.766515741 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.400195964 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340040768 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.907045127 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216526102 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.215804377 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.542985403 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202914015 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.604832304 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166714576 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214208124 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.283599946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.522573665 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.562701572 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.21716036 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.463114305 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.229029399 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.538835519 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.476445932 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.481686297 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.21289841 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.263394582 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.213680476 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.212957274 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.392019253 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.458716892 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.21332093 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.225908267 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819933198 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.0588817 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.221245385 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.210261416 seconds)
  done (took 151.186286077 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.484386211 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206639047 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206926215 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207442427 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239768363 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207856448 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.784774547 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783955714 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.752125876 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.512864466 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207017002 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206991259 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267251733 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.510207843 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.206098929 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301728481 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218029696 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207224063 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.223814234 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.235225184 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203822711 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209361163 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785035532 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221172547 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.204682016 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21430198 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.208660081 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239838807 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603894391 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206085176 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240690533 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532776998 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25283303 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204014378 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.557327522 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.705299179 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319936863 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204165518 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20917712 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240526819 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207700104 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.482297838 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206157356 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.208966468 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.211720185 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.841701505 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208265608 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788817728 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207821828 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.133363405 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205804818 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208950481 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.779573931 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.808963196 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.210452981 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209644628 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.211377979 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209270812 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207861406 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.242242738 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209466175 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.730420821 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.310445068 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209875573 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212938215 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242550698 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207811764 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.51677961 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209549037 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.551895658 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266766645 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327882611 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790816271 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210237213 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301853773 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328220244 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207432942 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209904227 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210609722 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21046907 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31667577 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207243285 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.637596634 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213716232 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21119579 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270147149 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305835321 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208207677 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.573902956 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20967644 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209618372 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.93612626 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302544318 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209396866 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.210935408 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210931018 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.638876273 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789062026 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.433354313 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210514898 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.751764429 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211111063 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.653602272 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760320227 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87021349 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212223773 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320177533 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211688652 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211475131 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210213524 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238775588 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.212317909 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269199161 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209114191 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60968585 seconds)
  done (took 347.718773278 seconds)
done (took 691.688852949 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.89400326 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.870759031 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.990660441 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866757154 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.844908654 seconds)
  done (took 10.617750275 seconds)
done (took 11.769157165 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403404874 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.402097746 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271679584 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.402366331 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23796252 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42352832 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384460927 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231293495 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317244833 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291520361 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313958144 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262424047 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238809266 seconds)
  done (took 18.332784112 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55038727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505886566 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274149958 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510784701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248748357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518459933 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402270094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409317761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398002815 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223984983 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227299204 seconds)
  done (took 16.423046486 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516283158 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.513303671 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277423938 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519319696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251773725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524750983 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402387452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413887641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400210795 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223722939 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225542183 seconds)
  done (took 16.421154325 seconds)
done (took 52.331527697 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221216127 seconds)
  done (took 2.372966031 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255738487 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421299391 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237911641 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226029409 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222539979 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224845461 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.226745695 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22509644 seconds)
  done (took 11.196071661 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219044548 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222539838 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218638451 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223789136 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219980036 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219431663 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219162019 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.221607023 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219225473 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221852757 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.2231311 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.22340612 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221106584 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220091259 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.223156424 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222528928 seconds)
  done (took 20.695049841 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220837603 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220337808 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219982031 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221212275 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222801874 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221522993 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222244024 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221009734 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22125487 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.222067324 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221857915 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.220915334 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222562686 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.219958449 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221610864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221989829 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220659055 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220477697 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225250151 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221350115 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22118619 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220755081 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222135906 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222751369 seconds)
  done (took 30.474207521 seconds)
done (took 65.891746142 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.364234079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.904270628 seconds)
  done (took 9.424618008 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224203439 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.224763491 seconds)
  done (took 3.607023856 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224736505 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.225003166 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222888629 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224051212 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223223779 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224481439 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224694872 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223368281 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224133022 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224786065 seconds)
  done (took 13.398459862 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223129801 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223027487 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22205516 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224130789 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225955915 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222111038 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224351661 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226080687 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225372407 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221393757 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224848269 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221099623 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.223678849 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223151867 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.225274461 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.223628216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222613519 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.2230134 seconds)
  done (took 23.182546926 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.225983381 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224924769 seconds)
  done (took 3.606761843 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.223289311 seconds)
    (2/7) benchmarking "second"...
    done (took 1.224766177 seconds)
    (3/7) benchmarking "month"...
    done (took 1.221956203 seconds)
    (4/7) benchmarking "year"...
    done (took 1.222667303 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.222460797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.222703571 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.221928069 seconds)
  done (took 9.717369781 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.225075988 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397666848 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.478277299 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.810543026 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22767951 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229828239 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.036264762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230297103 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232110067 seconds)
  done (took 14.026762007 seconds)
done (took 78.120498396 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.254830078 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.218628074 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.115104565 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219876001 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.23474694 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.563728167 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.260867708 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.357531986 seconds)
done (took 37.385780501 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.218452194 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.944483733 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.992481414 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.221451555 seconds)
  done (took 11.316752416 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.210829456 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.185000604 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.206681118 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.326599087 seconds)
  done (took 18.089249044 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.857537028 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549679623 seconds)
  done (took 4.568391051 seconds)
done (took 41.350995783 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227978965 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227785505 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228174419 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.226092482 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227830223 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.226250871 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22708609 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228494599 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227372642 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.228448315 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.228014514 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.227068476 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.228923096 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227362829 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225341359 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22508731 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228418884 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228208565 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224725453 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225092409 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226685367 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227067588 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227112508 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.225675814 seconds)
  done (took 30.610621286 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229457119 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226137813 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229826706 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228948015 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226368627 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229394545 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231643603 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226345618 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229665447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229702817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226959009 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227975109 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230620233 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22764038 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228797219 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228127843 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229074941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227145999 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230590582 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226352408 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2300933 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227576452 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.22615681 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230249176 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227595577 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229362971 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229843218 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.228501064 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230201555 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228816524 seconds)
  done (took 38.020321375 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234710545 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240117422 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.23000947 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231238471 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230514225 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229336173 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232060673 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230086602 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230061842 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230961736 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229982044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232001577 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231811394 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231048067 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231263987 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.23150839 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230778194 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.230483198 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231471802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.232342897 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231756044 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231199629 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231660332 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231417943 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.23258135 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.23137894 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.231764695 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233086974 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231847534 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.231199685 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23163625 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231434657 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233771116 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232771342 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232803705 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232288319 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238100496 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240151604 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23223718 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231419518 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234416313 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232892357 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233087431 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234504492 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232111659 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.234126483 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233472178 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233261018 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233294288 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233322338 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.23470239 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234071807 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233593631 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.234035358 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233949212 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.234722454 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233136589 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233545022 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.233547122 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234465619 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233755986 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234124468 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.233124231 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233655786 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233259059 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233148288 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234689169 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233990261 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.233017745 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.23407866 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234368297 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234141639 seconds)
  done (took 89.931956029 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233435694 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231162282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231520273 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232336092 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231863344 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234066185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232864222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23445507 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232500008 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234622657 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234781729 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232968089 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233708241 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235202869 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234384914 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23156251 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23459028 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232332331 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234354955 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236425842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23534213 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232325963 seconds)
  done (took 28.304000935 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235603644 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235860889 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234159302 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234524883 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231310019 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235898598 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235457114 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235341931 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235868297 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234138504 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234145315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235957043 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233467477 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232761383 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235035659 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233316069 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235464676 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232638132 seconds)
  done (took 23.388783957 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233416049 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233034195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237228038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234855317 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236708478 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237280995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234074274 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235004355 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237063001 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234467826 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236914714 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238170217 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236625005 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235400861 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238431776 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235472986 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237423803 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232613396 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23732016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234803836 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236413883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23661789 seconds)
  done (took 28.358697352 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236847694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236745527 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234748156 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234657198 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.23601745 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237478707 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238153182 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.235446323 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237953887 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237345227 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235847032 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239058237 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234440529 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235525503 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236181121 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235158576 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238909566 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236657316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238400393 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236545557 seconds)
  done (took 25.90231172 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240286434 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238895295 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241153427 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239687793 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23897953 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24101125 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239814907 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240301931 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240122285 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240831075 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240830181 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240822759 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239162544 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239539527 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241611745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240793897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240461744 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241889293 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241616988 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241456388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241743347 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240525236 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241142377 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241771545 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241802332 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242587268 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240288643 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241235919 seconds)
  done (took 35.911583153 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238983659 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239358753 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.236203927 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239394785 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237380744 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236663529 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238537157 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238250287 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24271788 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237443763 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.239503309 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241199517 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239449953 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242253356 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241417613 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.24281633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241872709 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.23809856 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238812537 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23917607 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240396598 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240838903 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241744277 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240495748 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238752466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.240216114 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239043486 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239950119 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240626308 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238699163 seconds)
  done (took 38.364118357 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260818589 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260990248 seconds)
  done (took 3.695899541 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.237404475 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241982702 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242639306 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239011235 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24054886 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241440884 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244359712 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240960715 seconds)
  done (took 11.102226202 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242127533 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.241267146 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242748389 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243304153 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244241842 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243071839 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250857435 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.260480241 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244347436 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245230803 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250016273 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252749101 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248297725 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244022262 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242729538 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244825465 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242286027 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243307915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244139617 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243365054 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244187046 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246614649 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246912452 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.242007763 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245800359 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258614242 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.252016177 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244011872 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243995699 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250387959 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245324351 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240191088 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245867653 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245068743 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244000482 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245743265 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257543175 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263362867 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253095812 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244146522 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244938599 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242435 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246653747 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246798641 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247756745 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.246739042 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244545672 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.24287613 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245431638 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248006004 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252658401 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244149992 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242387582 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252341082 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.24713114 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254326758 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265955125 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.248909058 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.257261259 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.259824573 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.262335324 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25636789 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249353701 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247031688 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258592711 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274048743 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2550457 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.263606718 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.242481218 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246106546 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255961431 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262555766 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261104401 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247248183 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247797435 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.2470947 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248533065 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24820506 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256840307 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270036177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246246204 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249239675 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259409056 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274299869 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24750215 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248180063 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.247394137 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247541281 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.248978704 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261103404 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267322371 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247967877 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24817637 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24858545 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.250772507 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248062982 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.24713898 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250410776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.244949594 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.248437327 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250162642 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252728577 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259880947 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249757711 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248123125 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25803451 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248907199 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246937472 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25939803 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.247605444 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250979066 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.249913942 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.259732134 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246243396 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253711186 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260477921 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249287959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25051923 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250263389 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248467681 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259698859 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.280930694 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.25040292 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.249650838 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.256373133 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263678738 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249942785 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254376305 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249979068 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246419498 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246806657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252975518 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250205497 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253178742 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249972554 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252474699 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248365083 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.250853063 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.25202109 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252144329 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.254127113 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25220817 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252806452 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253246231 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251779477 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.254007063 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259625781 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.251703871 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253824027 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252877321 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247309228 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251397156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.253487822 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252393779 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.252374797 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252555653 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2527647 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252701502 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252279085 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252258706 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253416362 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253002945 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256625228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.25089837 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.257433719 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.253145303 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249597953 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252273351 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.251102186 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251122355 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25384903 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251642996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256960227 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263431344 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251269479 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253605998 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25810152 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253234682 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254056995 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254685095 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256046261 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262523638 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253533979 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.26230537 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.254303564 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253775405 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254207083 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.254947383 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253973968 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25490245 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257496481 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262265996 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269425565 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265788897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254806563 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.258839406 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255583142 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259889852 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.26004343 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.254202396 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254634415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254573265 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254870255 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254475821 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.257521452 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254440401 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253645264 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.25401577 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254675615 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254574843 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255043039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255430684 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255935584 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.250925311 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255774452 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255919405 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.25608637 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251851033 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.253094476 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25354822 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.25425571 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256790552 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265080937 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.2536093 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257310669 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255950359 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.2564769 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.254526937 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.255032432 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260371106 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.2567278 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263903765 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275435158 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257923076 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264316427 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.275019737 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254707348 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260407551 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255821271 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253947693 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259648722 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266481272 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.256141675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258053336 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.256824233 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257600764 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255428135 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266303598 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254437061 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.255878562 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256916062 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260038376 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.254792078 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.258937286 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259007738 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257247279 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26051439 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256567318 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257739461 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259529591 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258921337 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259120491 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.258487749 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26070198 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267240324 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264764985 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.259759666 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.26220219 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.259285642 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261458401 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.258712312 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258150246 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.257477149 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273041382 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270110339 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26651637 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260155641 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257765523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266786242 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261085776 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.263750806 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258686225 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.25996883 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259030161 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.258020467 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255687234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260861499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257921512 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260664014 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259304118 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262617983 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.259286222 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259614919 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260134707 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260657825 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259206323 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259946273 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259238171 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263516451 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261803169 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.259872654 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259382782 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269289022 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277736528 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.260394193 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259240023 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260149482 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259037127 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.262177015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26023142 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26447765 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270365633 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26341716 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273084289 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262099965 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272377687 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260096745 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.264569965 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271026304 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257205997 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259790805 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.261291566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261677735 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270154922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.280745056 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261916245 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266264215 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261649081 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262214254 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260822563 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261981337 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260175679 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262538222 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272144498 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.280718009 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266005969 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264225298 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.259261681 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263019424 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261537817 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262033869 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268601866 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262750355 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264762539 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262827965 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.264484776 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262054886 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263280416 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262958663 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259565979 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261832088 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272794929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281917088 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267242711 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.26276367 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.275071754 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264553571 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272267608 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.28214072 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.265079911 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264373722 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26183439 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267648704 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265202024 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265600807 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264351231 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264649722 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265936213 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264050609 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.266554189 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264143371 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265131897 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264337467 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275474262 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292735176 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266888904 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269617142 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261279389 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.266203828 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270140011 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263717603 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263904601 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267645693 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277303185 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274038441 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26538287 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264743178 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265704111 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266439398 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264899118 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264618262 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.265450038 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264648583 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.267985159 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.2654508 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270876174 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263870281 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266303779 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269084168 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266611958 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278950144 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266346315 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265355421 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266520117 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265948296 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266888552 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265673866 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265053763 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266837563 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265541991 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267494261 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272906841 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275121705 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.270265679 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266082341 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266633671 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267624395 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267246623 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267071418 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267330036 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267492472 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.268754819 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267931081 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.26915707 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265073477 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266940078 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268436252 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267301961 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270488765 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276483488 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267349846 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263763897 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267463965 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266363347 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26685439 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.268035108 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27864295 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271401996 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281481497 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27708259 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272542695 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267821338 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270680888 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277317621 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266673331 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269648965 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267622159 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270914137 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26848917 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271729265 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269157111 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278407157 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269681956 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269251193 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278964234 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290136815 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268805276 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271156266 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.27322524 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269624162 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267613021 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268309077 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268637228 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279139157 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28879748 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268501768 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271324961 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267315078 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269645472 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274353475 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268455684 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.270362785 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.26659625 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268898202 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270322811 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269176799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267159001 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.270122508 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.270206513 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272106675 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279387069 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.267257449 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272252892 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270413689 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270837776 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271921319 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270056774 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266577197 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26690732 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271777957 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270475812 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271531514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27387795 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269869714 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271482811 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272904277 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271947636 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274427842 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283754905 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280923658 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267704054 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271539366 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270987057 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275164013 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27069825 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271076623 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272199459 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273597126 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269257491 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272285437 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.270486658 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273953641 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291904007 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289260362 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272319463 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.274137668 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277439091 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271474747 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.27026855 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274251189 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276200711 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275969641 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282747912 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272398604 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281821109 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292880771 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273248114 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276660937 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275215114 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284197209 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277132374 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271964026 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272410424 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278774091 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293622184 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27518981 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2838643 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311201699 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293570418 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275278556 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273242322 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272636438 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271626631 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.277149394 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274249304 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274140003 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27313583 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273806046 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273874405 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282178463 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27643259 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273833951 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273971462 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276669872 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276652048 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270819049 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27328069 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273774743 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275632683 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274648002 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274360913 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274562476 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290815827 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.287755457 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274180212 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27547572 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271033024 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278798602 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27793857 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288259154 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28447275 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275400161 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274871137 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277680972 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274735397 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270925042 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276388143 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.276529076 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27500455 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272905156 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290510424 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286258646 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281640154 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277458115 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275903814 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.275829367 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278564911 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276327372 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275863477 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278673695 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276011594 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280439447 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277094474 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.276936194 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281375452 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287024375 seconds)
  done (took 753.774780673 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273857326 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273161901 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273822067 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274067379 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273605119 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273215473 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273184961 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273504317 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274346241 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273360851 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273421956 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273343098 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273252776 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274584044 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273964271 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275357552 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274431385 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274210807 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27464977 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275284248 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274060759 seconds)
  done (took 27.96001916 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278562511 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273976133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274730449 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278124902 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274528705 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2772138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276013073 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278297701 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278468626 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274919518 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.276870428 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278301 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275502897 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273791895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274581772 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278651674 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278131239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275592145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276620888 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27595133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278931043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276211463 seconds)
  done (took 29.292768018 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.277868997 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279222008 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279339848 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275626714 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277823773 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.275962322 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279610491 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279949245 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279903275 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.280637381 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.276702952 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28060074 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287218601 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285861292 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282551379 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279357401 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.423691985 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279303322 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279652197 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.28055786 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276617923 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287792178 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.277503193 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.276010066 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.278220989 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.280626109 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281024902 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.279261769 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.279908698 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280992934 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285375245 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280046749 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.28123426 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.283065426 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280254793 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.281776043 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285000768 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281396467 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.278688002 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.280866333 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292285198 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.307101638 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283209346 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289015294 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.280213278 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.282551489 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.283891164 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291209066 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.279297837 seconds)
  done (took 64.155569774 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.281948906 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281868249 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27991256 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280394666 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281903414 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.281032545 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281994342 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281595195 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279654381 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.27860718 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281086208 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280502769 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27930094 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281052161 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28014834 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278248282 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278845246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279796915 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278848864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27997828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280419108 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282067716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282751704 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278985378 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282551857 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278751488 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279706941 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282681681 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280220613 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.27993514 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282681741 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283347897 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281932908 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28048224 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280559411 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282071977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282922691 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281696595 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283034714 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.27930389 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282308883 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282867775 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283880377 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284812201 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281363135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281266156 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279714723 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280158323 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282316656 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284224902 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28383612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281033319 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283245566 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.279935002 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283339843 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.282830181 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.281162691 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281968624 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.282467575 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283377568 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282526777 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284042645 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280640111 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284757115 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.284702224 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282953556 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.283294555 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283616975 seconds)
  done (took 88.359498661 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285501387 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285224702 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285569782 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284149583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285153135 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285232252 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286184888 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.284898715 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284994722 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285111376 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285002764 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28424609 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286125077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285003215 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285736624 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286607136 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286573286 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285885363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286750017 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286627622 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286763303 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286732095 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287073698 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285537905 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287746862 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288002817 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28701353 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287080852 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286757237 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28668903 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287298013 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.286773653 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286993693 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286627052 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286803881 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286489572 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285899478 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288094166 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.28704322 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287248536 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287850499 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28846026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285350097 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287326784 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286637494 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287235933 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287896095 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286600423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287587648 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28949385 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287782196 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287474203 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288071501 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288949627 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288321133 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288049032 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288064922 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288226144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286562175 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286053093 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289354806 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288487499 seconds)
  done (took 80.996072795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288029882 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.287310517 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284823077 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286819715 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288933201 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285204438 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289212081 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28900129 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28963962 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.287915801 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287395188 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287157451 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286121118 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28891872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285812012 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28596543 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286606673 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286115261 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288434056 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287108228 seconds)
  done (took 26.96463948 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286022386 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.289614543 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287300775 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287829793 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289134888 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28665662 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289626851 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291463367 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287853698 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291131905 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290886488 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290473962 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288012817 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288170191 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290740698 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289539968 seconds)
  done (took 21.844703227 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287367577 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29006803 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292190538 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29011549 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288474448 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286974686 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.28946171 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287699266 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288989539 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290277897 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292010488 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288300647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.290666267 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289811677 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.288490416 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290571714 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.287825335 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288724867 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291195134 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291307027 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28989964 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28913637 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292269072 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291348415 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288649673 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291018858 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289674377 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.289998686 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289213089 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291717346 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289236929 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289191701 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288495234 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289872012 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291623303 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.287964331 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.291349523 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.291249028 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292223375 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291463012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.291996839 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289406608 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.290926838 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.290739631 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290327925 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292852494 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290457323 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291316229 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291274392 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.289885894 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.291960266 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.293934631 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294212612 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.29348606 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292709358 seconds)
  done (took 72.192737046 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291251255 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2931406 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.290506959 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292808295 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293639989 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290761776 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292263802 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290863241 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290095219 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294050846 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292694599 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293886888 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292094721 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294021288 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291602342 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293824175 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291446684 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29199332 seconds)
  done (took 24.483452719 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29080258 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29138576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.294527484 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291372812 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290684579 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294545607 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291578394 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.2945609 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294114943 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291441527 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293228842 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295945945 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294323914 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295143927 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292461082 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293351217 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29552529 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294940893 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291766866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29286936 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295785853 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294931859 seconds)
  done (took 29.679829789 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.295929477 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.29403645 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.313750666 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.342044413 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.3311682 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.294743386 seconds)
  done (took 9.096676591 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294502058 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294280543 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291957791 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298097329 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295042713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293471192 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293552417 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293992516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29509235 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294436245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292268767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295995613 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295651053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294420973 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296733237 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295800713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292917562 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293337715 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295567885 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295973189 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294655286 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297376717 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294319406 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294399275 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294039675 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29469651 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29863787 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294037152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293518703 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297441296 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296285332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295581991 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295753482 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295220518 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296905927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296817559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294972282 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297286471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296504777 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29465438 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298105333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298195913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298636598 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297305271 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299381098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294496544 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295577095 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29600469 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295295664 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299512686 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297532295 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296801452 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299090702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297951087 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298426922 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297925695 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295883866 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295878275 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298895451 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295484122 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296091195 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29892932 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296376728 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296936097 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299478101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297023903 seconds)
  done (took 86.765445801 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2952217 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296624498 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295944393 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297517178 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296574752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295163638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298008656 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297540273 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29634942 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295080056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300654793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296023667 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296827318 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297476784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298375168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296403522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297954215 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297410265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297091493 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30129034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296437026 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299302438 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297400597 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296733909 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29669718 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299115595 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297974457 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299251631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298172216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298173392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298692099 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297461969 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298322133 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297819982 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298798736 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29828926 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297271169 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299264591 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29877657 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29975641 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299132908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301176328 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298694901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298749413 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299969336 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2997749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299820014 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299556007 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298309806 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299668523 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298124275 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300598049 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300092285 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298407491 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299295041 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299169467 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2994257 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297007149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300073751 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303820465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299481576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298446441 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302690159 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299926847 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300663137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29910643 seconds)
  done (took 86.92926409 seconds)
done (took 1757.24540006 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.370283743 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.304473983 seconds)
  done (took 13.906637227 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463554345 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.416385632 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.301843688 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.35411358 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296987785 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303163721 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317415641 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297580335 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30135659 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300952375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.300041716 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.495589446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.323948739 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296423775 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301951158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392024155 seconds)
  done (took 42.702539579 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332845513 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306044356 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426376003 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320441739 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.331069035 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.4999611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.358575522 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306393797 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.487274757 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345633655 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.955997849 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328433476 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.3057568 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.475294849 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322259081 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500696735 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559969886 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.954348007 seconds)
  done (took 30.349783382 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.787273252 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315532941 seconds)
  done (took 9.336496599 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.343554165 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.342096905 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.308808358 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.296592693 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.35633976 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.344358246 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.331389916 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.352106837 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.354329636 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.350437164 seconds)
  done (took 64.621655995 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328570486 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308368633 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.307498493 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.30723717 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.298700021 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.309827843 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305745506 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.298596809 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.268153969 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.441884132 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.317397165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313816305 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.307321576 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.308831077 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305152356 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344683628 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.43919966 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305074731 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.303023592 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313692499 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.307941419 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.440128844 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347568312 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305315192 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443531303 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.288174968 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310644299 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315284519 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427322756 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304522799 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.307803761 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308770954 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.310074513 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.887451085 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.760513561 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311630148 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331088486 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317060168 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.30437991 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.488424624 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309472585 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315871124 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.30627442 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.734944962 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468913648 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423906662 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.645081697 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.305223334 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308541379 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375089179 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308807277 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.310196836 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338818401 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.07945322 seconds)
  done (took 110.717837724 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.311691576 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.791180463 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473910995 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32510775 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.101096889 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.986394007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.299443141 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.609032116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.326937786 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302590915 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.641770518 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.820738754 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305118128 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.362189394 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.964859831 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383869428 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302985865 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.06268222 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.299292421 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.305514353 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737091967 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323609449 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298701041 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.360046708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341068682 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788648293 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.86314521 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.773956642 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.300051548 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300390938 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.788103463 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.3029187 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.377021815 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302045804 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58871067 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676862566 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65736928 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.301279612 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316629375 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306788952 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330753932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786341499 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665504054 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.300771441 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303816767 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794293114 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.298907014 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.313409789 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.30996159 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510935205 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.30809856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306982872 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.861647415 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.300053664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.670607159 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383531989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343690397 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818604529 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302688256 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.391264201 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307333597 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.306574462 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.308153583 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305200171 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.29977555 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67297846 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.674615195 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308312944 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677139417 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780895279 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.301100283 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845968346 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.170075826 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.325131837 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.354216059 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316987131 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.897291676 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814182614 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357086598 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303260237 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.663221248 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.301480402 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.636997946 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.315639025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.302197641 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739782388 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.32329938 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.327694873 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.307644586 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.315873791 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.930648742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307129573 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586316168 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.331476657 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306102226 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307926788 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.32339456 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305728019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317542566 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.313293826 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854706007 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.307979179 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.629809733 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325752755 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319649762 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.3034716 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309186968 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307963644 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528557807 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.772578457 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.304089561 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309942914 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.304382589 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.305347816 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.600480431 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.310433602 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.643151671 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304188724 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307738409 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306007742 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.076835086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.33477324 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303895089 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.308888943 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.176521094 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.519252846 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32881439 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.3057461 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310586873 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340395893 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.761508777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305652762 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.394409208 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.309883498 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041841056 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320349873 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.34421216 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.961271788 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317717221 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310286092 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.308222348 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310245096 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628646945 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.604563825 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.641712891 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322476892 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.309239856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01766321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.335800072 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441210828 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330077093 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311405526 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512805297 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.524120265 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313198086 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.881197452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.309867925 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52880279 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310100696 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638352545 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.81735132 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.305602285 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.314418073 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031221427 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.995297574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.940076993 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.311383849 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.658663571 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.321597075 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.765178062 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.311238583 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.314232896 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.744183634 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.312284076 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317402522 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.311912208 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.312930894 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.382869393 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491054292 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.447990351 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.312328554 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.797772538 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3284885 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307401303 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.310380716 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.312986977 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.668461024 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.371798069 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317063862 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.35576327 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.313642318 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318529055 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808612909 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.225669855 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312988077 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468082594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966203589 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.307998925 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313172005 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.904058666 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.520654118 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.844780074 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329750978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.645729871 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.307654577 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.354174081 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04657506 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31598842 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807702024 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313343144 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.309399042 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933957631 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.309619271 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.374931662 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.309005832 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313155406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861409856 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309660466 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.314717225 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.786063164 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308808306 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57601422 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.313213475 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.351082977 seconds)
  done (took 1107.113701757 seconds)
done (took 1379.979943517 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.314363077 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.312127223 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.303258068 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315400211 seconds)
  done (took 26.49406175 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329021129 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320456804 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.322535616 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.32163337 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325059757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320845104 seconds)
  done (took 9.192270624 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.874663218 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.30979663 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314210085 seconds)
  done (took 19.749206763 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.556840124 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.655668439 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.715292504 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.643915581 seconds)
  done (took 10.824407949 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323190983 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323263519 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.323401784 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324670303 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325177297 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.325334882 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.324929333 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325794767 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325249011 seconds)
  done (took 13.170019612 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.504027523 seconds)
done (took 86.183000508 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.641069629 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.619172363 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.978016989 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.405677296 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.395649736 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.426649947 seconds)
    (7/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.691088116 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.31631057 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.370161884 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.332205997 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.926048673 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597602093 seconds)
    (13/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.491158448 seconds)
    (14/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.315438312 seconds)
    (15/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.416390501 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.356370835 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.074666732 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.93906451 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.402597051 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.342835806 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.393196903 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.316172735 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.445472637 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.521758538 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.029624346 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.341039662 seconds)
    (27/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.403053925 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.131895095 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.341860002 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.319159577 seconds)
    (31/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.58592029 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.768796953 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.820377207 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.314372893 seconds)
    (35/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.780494706 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.317097912 seconds)
    (37/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.908849279 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.387726335 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.678089318 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.414876459 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.739010535 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.167223017 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.940568926 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.759871645 seconds)
    (45/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.748496042 seconds)
    (46/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.215933725 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.74225461 seconds)
    (48/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.459590318 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.950007893 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.340583961 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.383491603 seconds)
    (52/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.137498667 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.300639475 seconds)
    (54/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.722339287 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.373327413 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.338515592 seconds)
    (57/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.614057424 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.424391949 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.949692166 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.57901014 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.468827438 seconds)
    (62/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.340075284 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.345765262 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.318189571 seconds)
    (65/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.223554267 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305733999 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.316955378 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.385565621 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.344689615 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.062547058 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.339815931 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.000829214 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.722619239 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323397121 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.190075601 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.422202604 seconds)
    (77/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.329545737 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.161335742 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.314520267 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.601072987 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.59807178 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.299699303 seconds)
    (83/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.991304687 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336027591 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.305818162 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.434131883 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.707890693 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.248597756 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.221981339 seconds)
    (90/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.344390134 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.580873552 seconds)
    (92/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.616670251 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.402779454 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.322288815 seconds)
    (95/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.126913459 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.519250673 seconds)
    (97/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990206723 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.424989628 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.345017948 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.763793376 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.326449582 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.332718417 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.356354375 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.139898099 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.338938988 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.345021208 seconds)
    (107/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.856348645 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.41689419 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.431088618 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.348062257 seconds)
    (111/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.7017254 seconds)
    (112/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.711118839 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.308800473 seconds)
    (114/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.305489998 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.470534963 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.822518789 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.31816716 seconds)
    (118/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.311716546 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.568084358 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33871742 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.878536069 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 6.318907512 seconds)
    (123/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.187003023 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.317801152 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.382800273 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.322367032 seconds)
    (127/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.734053351 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.336752042 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.986480571 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.322369801 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.340103442 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.835811869 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.341484178 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.943184409 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.301709067 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.623988741 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.554996643 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.434991302 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.425643854 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.74461481 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.042342266 seconds)
    (142/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.721236756 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.146538335 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.593712095 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.314021069 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.322246987 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.264068293 seconds)
    (148/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.342453128 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.101835281 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.305723409 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.508073338 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.775609482 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.757937776 seconds)
    (154/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.733078 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.830162258 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.258971062 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.318313366 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.360687131 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.163922946 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.402967491 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.351537285 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.6074486 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.338333882 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.342628528 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387559851 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.408708363 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.340911124 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.384547851 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.493602323 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.835863611 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444917383 seconds)
    (172/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389389033 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.323966562 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.32468221 seconds)
    (175/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.385116312 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.426609973 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.52024522 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.320062463 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.319897596 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.777508319 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.3589397 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.018436752 seconds)
    (183/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.329823081 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.763067859 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.436363006 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.867907765 seconds)
    (187/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.515868245 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.321850063 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.348963974 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.979269226 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.027623047 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.433085139 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.746959857 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.719126525 seconds)
    (195/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.717543438 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.362680759 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.333921898 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.145747857 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.322674818 seconds)
    (200/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.749439635 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.524058355 seconds)
    (202/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.889587119 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.002647696 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.671384494 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221666262 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.379256198 seconds)
    (207/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.549060751 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.231099684 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.341923976 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339860418 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20412553 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.448655067 seconds)
    (213/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.019390467 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.916546541 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.862661876 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.537199405 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.31245313 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.308605799 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.323177282 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.341159715 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.372201465 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.918115182 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.346493217 seconds)
    (224/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.042510921 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.213128069 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.304086999 seconds)
    (227/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.817688404 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.362822408 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.00180203 seconds)
    (230/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.830598002 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.352903442 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.410632605 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.338896555 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.996061799 seconds)
    (235/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350139011 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.995030222 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.310800875 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.653639625 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.891501616 seconds)
    (240/309) benchmarking ("sort", Float32, false)...
    done (took 5.384934149 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.695415034 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.390146152 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.328600636 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.446315548 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.788655927 seconds)
    (246/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.216431098 seconds)
    (247/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.57780552 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.83586667 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.325080009 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351968295 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.332256413 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.312848403 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.350985474 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.109766597 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.56952506 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.783385793 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.344729526 seconds)
    (258/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.319197707 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.009214696 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.564690011 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.440407959 seconds)
    (262/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.318044813 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.910182729 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.36794792 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.612514322 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.848182512 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.428303622 seconds)
    (268/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.782870119 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.063232576 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.709433629 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.346544095 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.416484182 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.885209452 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.98654365 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.274952497 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.061770248 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.319567762 seconds)
    (278/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.310534214 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.326918221 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.852796669 seconds)
    (281/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.499277548 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 5.696628777 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.473850431 seconds)
    (284/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.981010715 seconds)
    (285/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.666055317 seconds)
    (286/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.459263117 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.410025216 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.392913809 seconds)
    (289/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.425928379 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.413328097 seconds)
    (291/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.390337093 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.469235291 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.828523907 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.493314797 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.378571087 seconds)
    (296/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.856985388 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.352841732 seconds)
    (298/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.382980519 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.149999987 seconds)
    (300/309) benchmarking ("sort", Int8, false)...
    done (took 4.350994104 seconds)
    (301/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.526239097 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.393065242 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.331337917 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.35079805 seconds)
    (305/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.034004068 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.32219923 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.349509461 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.355672667 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.924891711 seconds)
  done (took 934.982184394 seconds)
done (took 936.234847688 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.364448599 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359508156 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.342179597 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.3652808 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.453405998 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.373333544 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.352689933 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.345083314 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.390054818 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392396991 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.341571647 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.372797195 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34382468 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342783032 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.342044489 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356228896 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.438971406 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.338004116 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.35901305 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354409102 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.359332002 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341810621 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.393229864 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.370965895 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.34701751 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346097319 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.346245237 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.362666018 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.454804795 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.346939962 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.347042196 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.355015329 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.427023529 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.337194838 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.337963472 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363735154 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.355061472 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.353156953 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348320265 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.377736844 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.862957006 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.338853701 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345633163 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.345669013 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.345935089 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.351326017 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.345226245 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.353262397 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.357367629 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358418883 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.855628553 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.355252652 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.347228487 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.346204342 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.355930552 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.346332046 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.349149067 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36064428 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364344145 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363520261 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.424087671 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.347281275 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.3479477 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.361823459 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.352897408 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.892704759 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.337123914 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.351216338 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.868579193 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.346505625 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.895280059 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349400035 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.34904739 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.360601479 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.376978188 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.434947573 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.337247525 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.34805311 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.355061832 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.345559846 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.357049389 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359442965 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.352135729 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347146205 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359588824 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.376865212 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.356558525 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34679855 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356457963 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366807573 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354391298 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.359721763 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.349641484 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343357054 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.357607037 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.352789346 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351153227 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.350458132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352081962 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.359635143 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.868986134 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360274157 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.343949289 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.345829733 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.346628139 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362830449 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.873600642 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.344596287 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370966212 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.396107805 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.350075317 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.426833382 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.348421895 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36519804 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.358182429 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353694272 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.344327844 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.428562424 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.861273433 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.359268375 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350424356 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.346487038 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365218211 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.351296143 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.347575373 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.443025888 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347110464 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36411855 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.47062916 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.360612659 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383646865 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.347279668 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.353936767 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.37819345 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364562992 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.380459655 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.353106028 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36586948 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366693367 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.347000542 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.360090519 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.361417714 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353015468 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357331261 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344867599 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.382295546 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.365462729 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362777346 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.372200972 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.471850423 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.348562303 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.430255902 seconds)
done (took 228.522017307 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407995595 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.340306324 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451835811 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.346470337 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.452152664 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.449096807 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.344490665 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344832338 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.346343082 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.816110461 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.346880586 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346488874 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.346597461 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.346819849 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432108539 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348169264 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345391108 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.690930159 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350350956 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420905897 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.346850448 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.347234214 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.348835584 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734440352 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.345706924 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.345573246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.419020353 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.348044486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.772876425 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.349611858 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.343044875 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.6985812 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.43877171 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.363265998 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.360653481 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.356436325 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452008699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372026937 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430030502 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430131002 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.454566478 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388814846 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.349015565 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.350737413 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35153028 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.353051108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347275585 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.37748316 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.344913739 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.348565794 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.77124687 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.359148172 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35698876 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.347024986 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.348722675 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.371511962 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.349284442 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352097118 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.441368753 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.353107181 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.414789094 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.820301997 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.729133095 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.351188689 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352691387 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.348708799 seconds)
  done (took 149.886051484 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417716193 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.425764011 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469916371 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348043803 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.400813816 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473627981 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.348704401 seconds)
  done (took 11.162849049 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.357812921 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.351617893 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401776622 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401884749 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.351802089 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.49944521 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352784038 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363006384 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349692779 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408954045 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355005571 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353283328 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358730546 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.347735964 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.402019345 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363520022 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.466957593 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.353280388 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35373793 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506229894 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3500182 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359465207 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.405129531 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.365296809 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355010149 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.360602724 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.920559754 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353522602 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349964213 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.353110201 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35193946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.3917163 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.353784891 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.346458906 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351028043 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469518526 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.354124785 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351890388 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.353151112 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.346532871 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.354119412 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354399648 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352954776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35123602 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.354372069 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.37878666 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.354438268 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.354905901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353871063 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.355846903 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.404595464 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354498299 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352237862 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352354753 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414004986 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361271643 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356323185 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.351279378 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356412692 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351641914 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.509753072 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.40311801 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.355266811 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.403177646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35328417 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356588657 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.354545439 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356033217 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410447125 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.354002684 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.404026763 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353878102 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.523011845 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.380498572 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356561972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.358555337 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.35865619 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356377459 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.358072519 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.364089026 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354165532 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.356574187 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362467979 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.353913613 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354191329 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468854012 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464881208 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.353979629 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369531831 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363680829 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.355414732 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.410844511 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356246237 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353543447 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409595256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471752039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413719239 seconds)
  done (took 155.285684541 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361521076 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365437961 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357448701 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.372353214 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35753718 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.356766386 seconds)
  done (took 9.453230776 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360828547 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359385029 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356976344 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358161282 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.358029126 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359924036 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35912073 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360703315 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363376877 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358548696 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.359529936 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360886188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.361336648 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360130144 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.35922018 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358772392 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359313955 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355373764 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.359535611 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36107144 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.454482852 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.360052259 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359826507 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361140407 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.366848586 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.358909829 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36750501 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358790372 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359251629 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367807614 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.362139215 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.363180785 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.361459532 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367778874 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364613118 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.360728677 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365608095 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.361106952 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357981147 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362607522 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.361532269 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361613555 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.359634301 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.362754918 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36341488 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366388971 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365624455 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368501823 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.360361346 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.36381973 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363414086 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.361059021 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.364364732 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.363623858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365719353 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367747124 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.369243742 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360760624 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362702111 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.363809664 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.363255392 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.362756787 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363877823 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.368005043 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367974495 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364198623 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364127218 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367015934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362726252 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362995181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.363054475 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.359418259 seconds)
  done (took 100.464239722 seconds)
done (took 427.527122394 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.392189997 seconds)
  done (took 7.680255308 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.539398493 seconds)
  done (took 7.829344219 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.548363638 seconds)
  done (took 22.843066757 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.395298255 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.438331635 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.356334625 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.358514201 seconds)
  done (took 26.838769855 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.424903318 seconds)
  done (took 7.713591002 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.352996202 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.358510592 seconds)
  done (took 14.002379783 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.546871048 seconds)
  done (took 7.835715957 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.893005789 seconds)
  done (took 8.187447097 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.375898462 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.356628552 seconds)
  done (took 14.294145531 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.339335995 seconds)
  done (took 7.630694335 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.583735886 seconds)
  done (took 8.874454481 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.36871283 seconds)
  done (took 7.659419775 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.429521898 seconds)
  done (took 7.720019825 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.775288789 seconds)
  done (took 10.066593124 seconds)
done (took 160.466659916 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.355858915 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.35573061 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.352531053 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.351619686 seconds)
  done (took 26.704608539 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.396707606 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.3980203 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399354381 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406866955 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.399987882 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398657824 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390222746 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.39008047 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407323456 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399860164 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399724965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399274015 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.397279687 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.389698339 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400539898 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399205629 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.40941318 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.39971607 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388894711 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.401140262 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365760008 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411144998 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401354498 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.365071382 seconds)
  done (took 34.808140167 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.564756835 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.437325879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.519415168 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.419240077 seconds)
  done (took 7.231334664 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417998427 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417736451 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431291924 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470539383 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.497182764 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.428207748 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390057458 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388056103 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.373089464 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.41966434 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494409054 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.435156341 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506591624 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367368437 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.552512121 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.3659586 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.367510132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41936535 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.469624347 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.48838324 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367147578 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417579199 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421923349 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436152492 seconds)
  done (took 35.633595283 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.364871606 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375666821 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.372109943 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.366904138 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366451567 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.368998559 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.371059907 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.366503186 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.388955023 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.368800481 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363988376 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.367076526 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.367800916 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.365766525 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.367274348 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.380921348 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.37937618 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.367764399 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369699381 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.373353461 seconds)
  done (took 28.705868822 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.362097364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.215602983 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.712410747 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.616137784 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.362784369 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.356140788 seconds)
  done (took 27.919466032 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.442743475 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583948202 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.363955244 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.786249708 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.856900886 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.361520823 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.367382271 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.624803347 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989244157 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.98768222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.429203181 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.441638629 seconds)
  done (took 20.529811658 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.378946786 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362593693 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.369527906 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.378940162 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432979241 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.374457145 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374489144 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.363750688 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.432223092 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437323138 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.370655034 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.432439313 seconds)
  done (took 38.005180448 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451862758 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41398688 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.44543105 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220863048 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.742589881 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569648695 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.282998782 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.805815133 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.362886572 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63889965 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364406484 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45117699 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619972624 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363520204 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364185095 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445643525 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586927697 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903709463 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362085292 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607844273 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385952657 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374531019 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.801031447 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.397773301 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576058068 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.497827965 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.625716612 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365134014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672758916 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371294749 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375264698 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366017867 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639479003 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063493383 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45477209 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377185499 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257530836 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074114578 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.354790161 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.617774383 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376772014 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362884742 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378298473 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368203521 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299912825 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380521654 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81979321 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.368318873 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.078112896 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367691501 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379235871 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460178111 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37056369 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.185867226 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44367454 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36246705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.365481901 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373421822 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942217419 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.304402455 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385872007 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.302174089 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.867715689 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.680750506 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027979456 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.465719634 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.369981924 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372247747 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302578814 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.685836876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38698964 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504920225 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381785806 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030851614 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127511656 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.377991697 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295932046 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963292234 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366680151 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.302799198 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597548752 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369728733 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309432758 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.326738623 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302845712 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133822088 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369858975 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.856745943 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371390026 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.812634142 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375690855 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388067596 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391764363 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592047983 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.251669691 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366230984 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.376384428 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499139452 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386855656 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.816454221 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296447011 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366827782 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625063634 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579615289 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37939412 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.4507515 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582040191 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375142133 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.383143774 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380188984 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.377370503 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.995639389 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377316698 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086045735 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382383991 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372817438 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174825965 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373902275 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.469459837 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378021889 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635018422 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.209814645 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365997838 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450820169 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373203549 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368540208 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.804379373 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.888841306 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370213732 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.371102927 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37423575 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.379637969 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.369647676 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328837877 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.362102506 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370161325 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.369317607 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597300372 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388286418 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646925966 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304859779 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511430192 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.46810791 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.590375082 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.652045688 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.366199955 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630212203 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38014338 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377343614 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384144177 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389111311 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46898214 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390811746 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.370291433 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629364984 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373636669 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375419972 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828857997 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.858119026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373638813 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.375903987 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283596499 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996841546 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339112444 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376699433 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267350272 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385356646 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436267992 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37875146 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.384437244 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.400164954 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355934655 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.372978868 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.374670089 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592854044 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383061266 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.724151453 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453914031 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.587400272 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998183391 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382939938 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.310555731 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083979202 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.063873511 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372936492 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310132889 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37448376 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38187377 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385156551 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.047370353 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003111556 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371097208 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.712948627 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.378304643 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383770865 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379858786 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375210593 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.366692026 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.332298845 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379922436 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384694206 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517760503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387150106 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308786179 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.378399146 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378755865 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374227262 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374376843 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40744789 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.7244314 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879972313 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634178686 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.232259667 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382165867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.831322962 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405882952 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.373472555 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390395754 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374670325 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.389922202 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378665443 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385328979 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.735486527 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.047656416 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942331424 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166568776 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946111499 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392758065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.387963183 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375800298 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828541205 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307752028 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933549782 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594352382 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.829034473 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329398808 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587060786 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.657875931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210331169 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381980178 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605681643 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390069981 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.38928483 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382818229 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586882374 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41018366 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390313543 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30460178 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.658283743 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627715431 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375762189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458523033 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825480601 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380717331 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374612931 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.374417495 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.812759312 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561323436 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.0898516 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555988855 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385330804 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385043804 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876942279 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383274254 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.608500523 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0466738 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391481511 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.59147161 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316269069 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387242627 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387247079 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.37881464 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.867930874 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.375773177 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.628742533 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388555886 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310450143 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38646072 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95508399 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.248988045 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382309639 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377789094 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180842277 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386684415 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692627092 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.37594472 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.353413974 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382623411 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.314887011 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312353809 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.070751211 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381694459 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34768981 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919037166 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.819164519 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437134761 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402217173 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226638788 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633940915 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.39241401 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01148321 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603836149 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.345485489 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398387693 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.478955041 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384079964 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.361665486 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378642295 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615569146 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285932947 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60042455 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.486756221 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281922862 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378216864 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588408368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379235484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378830661 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668803774 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.091370206 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.399986436 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157061151 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401097236 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39254581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297860084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.875748389 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384325809 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458080012 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39293751 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.391558848 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391888819 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567965238 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376101508 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381190154 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.392161205 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475390409 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133185445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.360829547 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.383421466 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021122315 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173197863 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016379973 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391955393 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379126612 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38143937 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316264295 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527147611 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.611052565 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655655393 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502311913 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.968003885 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398078512 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3821659 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383100543 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595049658 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655954604 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281748935 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380725603 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410240345 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.382441691 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393550173 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.594149287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92910818 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982733678 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498799862 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397024604 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833267679 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653646159 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382787407 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381440538 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977130481 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.385728667 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.825863479 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.383431993 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382020361 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526747981 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392380048 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091137864 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.388732912 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.543518971 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.156937884 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.757178877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638322275 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.929456436 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389405475 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023209825 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144725915 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646311093 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451667562 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393362867 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.505029253 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531234271 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.380453754 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380005948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383267767 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23259733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.09465543 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.395282356 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029896494 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648893211 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.380214697 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.389556601 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40410305 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394731569 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609359651 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165841365 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605417687 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393833063 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38874831 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.201412795 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027398933 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392780084 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319977953 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.385511552 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661183061 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622397466 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4089216 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.839059174 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.096871928 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993152115 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.356869653 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406581785 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39812282 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152705189 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021504381 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.374786584 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925666197 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943051563 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386748894 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663503732 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.391592716 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386535228 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66065129 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.389358331 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400363423 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39834006 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.023597297 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232457102 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.388848951 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.7737753 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.322507908 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733768641 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110241667 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321013452 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386171184 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.588170897 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384964092 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509160361 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395193352 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.386603495 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385077597 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.121640744 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669285633 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.387279389 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.377697473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.381055022 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393328914 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394999366 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644554982 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393780047 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.055622232 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.738254457 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644381742 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401709326 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.374879931 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.391498599 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390012254 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.384608886 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.593052559 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.061944272 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993470687 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.391663851 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400140821 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392265284 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.606840708 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602418205 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404638866 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397441102 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397883796 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403011441 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.295140808 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.897671181 seconds)
  done (took 1627.926802665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39240624 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.400930474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.424768438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.480066965 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418781963 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448732861 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.424909319 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473818481 seconds)
  done (took 52.786342728 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.402387003 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.614599066 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.425419525 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.406706404 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.394989827 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.40310569 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.901247043 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.407715536 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.396833711 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.398819287 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.395932735 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.402425615 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.087446618 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.40137811 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.403707987 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.385931308 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.396154113 seconds)
  done (took 66.553720635 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.407857981 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.934452197 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.442177576 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.393724655 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.259603048 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.397557731 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.019729567 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.441048339 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.413764019 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.40252486 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.048095597 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.401023189 seconds)
  done (took 81.886466425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399902368 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.400558184 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.400477997 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.399859769 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399049211 seconds)
  done (took 8.324451364 seconds)
done (took 2058.306693231 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.801538355 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.181354991 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.115305573 seconds)
  done (took 5.619220701 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.539877586 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.590334511 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.741848228 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.739501381 seconds)
  done (took 7.936797338 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.668677906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.76579494 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.581506127 seconds)
  done (took 6.338648542 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.98490263 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.399205619 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.520150263 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.39344541 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.393437556 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.394729156 seconds)
  done (took 20.508077047 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.398402169 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.400774598 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.395551703 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.40175351 seconds)
  done (took 6.922930212 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.378178696 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.156208392 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.377450818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.38923561 seconds)
  done (took 18.623792465 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14539366 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.157004084 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.140915301 seconds)
  done (took 7.769997538 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.400979014 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.237033593 seconds)
  done (took 9.961309966 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.703684197 seconds)
  done (took 3.027912901 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.528601349 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.666768064 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.524371748 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.454836414 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.541815536 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.716448665 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.248574303 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.76482605 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.447714083 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.857162527 seconds)
  done (took 30.079685753 seconds)
done (took 130.817058655 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.593038408 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412883701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.598849621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.561560958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.621933271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.599625728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.762128832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.529661452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.067679777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.053517378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.554732448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.623670606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.719988778 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416922219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.721916628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.415488183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.628229606 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.637285328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.243561676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.392022548 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.773815854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.197547844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.389629658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.215507078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.621820144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.551880587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.792314623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.415296946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.395525313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.823687257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.543047865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406878829 seconds)
  done (took 197.607737329 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.397014753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391237646 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408180644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408150863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402911121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.390090461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410381213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.390637818 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401293049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390009784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406453328 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.39029799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.392149676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.411914232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.392247785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399042953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.400154129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.390727164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408678026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.398817032 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389671488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.409039393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.393581159 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.405750068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.391493248 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.391030431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391195801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.393568784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.407257698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.391794232 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.393471595 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.392720208 seconds)
  done (took 206.059858505 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406469966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.392004894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.429195187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.392814808 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390661188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.398954417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.393908154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.391093996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405960337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398590214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.393469965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394147369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.408297808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.392393124 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395659975 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.392334432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.409356971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.393598809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408545584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.394477883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.417385367 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406394735 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.391338744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.392996376 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402052404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.394799248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.393625258 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.396146689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.412781069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.406357627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.395177825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.39443365 seconds)
  done (took 206.116827144 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.599212593 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404655571 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.406603994 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.362551233 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.406560994 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.405397981 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.402456099 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602601447 seconds)
  done (took 14.922831102 seconds)
done (took 626.032530926 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.863261748 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.564343424 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.614570008 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.425115409 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.280014796 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.423860611 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.426631565 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.618117295 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.395693219 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.620389754 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.761960495 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.42067221 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.911041962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421143709 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.697738886 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.529135067 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.315571213 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.423371868 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.762291278 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.003041094 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.692305563 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.951566038 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.60837325 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.357215289 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.911735638 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.961846098 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.196128285 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.308833202 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.423086689 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.767120364 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.248254259 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.529842401 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.499089973 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.476931975 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.530704308 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.509752927 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.422456556 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.471700475 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.612150003 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.706710077 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.023631215 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.168804619 seconds)
  done (took 96.189765346 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.396767999 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.394127267 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.396463834 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.399331377 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.397185642 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.396575033 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.395373174 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.396863794 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.397866784 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.395915143 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.396739081 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.397511039 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.398528373 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.399955045 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.39696861 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.396845834 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.397436945 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.398833597 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.396106387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.398031223 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.398624974 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.396329601 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.398654676 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.395536158 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.399464524 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.396974825 seconds)
  done (took 37.66290474 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411212147 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.658769858 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.849036563 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.412319996 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410236343 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412769536 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.497773456 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.403940433 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414584835 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413313842 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.571608147 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.409612762 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449410588 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.858723861 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.408335586 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409845969 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409809463 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.412144817 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.665059774 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.417436192 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.503621378 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.409893493 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.501025638 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.419608518 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.410928115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412567505 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.413153693 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.950797079 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.410118144 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.573840429 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.295291863 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.499239862 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.915778214 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.861651787 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.296617822 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.413832393 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.411012351 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.577177158 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.410611708 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.410456673 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.500164534 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.409826872 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.861458283 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.059258218 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.427047984 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413373488 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.977103056 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.574600053 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.698730167 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416896405 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.881797622 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.410035973 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.414357241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.412201771 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691342783 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.415573957 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.41188287 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.021077014 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.414648017 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.502090977 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.409773338 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.413332616 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671352875 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.410394213 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.662351946 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.410467342 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.419598999 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413170047 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.864411818 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.412317303 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.08191918 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.427238682 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.414406316 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.575807886 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.659001957 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.006158897 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.412292553 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.681905226 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.930982803 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.500195451 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.41835973 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.947981253 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.50642252 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416896507 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417724195 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418132636 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.41497305 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457504164 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.504535973 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.013974662 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.077208566 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.050657431 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.506243375 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.425029846 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.416433726 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.035499349 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.414127752 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.41652964 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.866590939 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.083877825 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.427922967 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.424305087 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.072426545 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.432185127 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.506876931 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420642931 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.874519606 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.412834261 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.457070425 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416148847 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.423378216 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.417312794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.50886579 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.417820352 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.416941671 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.063636025 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.599459446 seconds)
  done (took 186.125634624 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.410040021 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.404954279 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411640858 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.420861465 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.409473161 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416101066 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.409755125 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.410104511 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417331064 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.407788458 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.41220879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.41082884 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.411964912 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.408877966 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.416744206 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.418403673 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026019864 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.414861842 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.415959011 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.40627149 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.242678885 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.409750317 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.417121569 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.407198959 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.409202672 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.411548776 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.417715833 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.408739437 seconds)
  done (took 154.327589811 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.420131592 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.053904683 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.415988282 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.570987233 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.439698171 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.417327653 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.57037322 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.479828377 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416972618 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416995014 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.415777739 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.756532274 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.415582095 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.993091509 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.630820656 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.573178843 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.99090984 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.416883398 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417660271 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.41595005 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.573975869 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429474313 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.762597673 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.051467993 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417958049 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.056293062 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.405583487 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419284215 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.419767713 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.060036318 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.413283149 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.75979584 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.50544106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.48856003 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.054186863 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.99332488 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.992926937 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.585169201 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.420790462 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419114265 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.418967 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.409583477 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.060024207 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.418741698 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.419295764 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.054518227 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.433113961 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.420953824 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.4280298 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.418252073 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.4868078 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.484622551 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.763263695 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.060127847 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.503798923 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.443290949 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576507081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.846638799 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.418722154 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.999830799 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.404461699 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.113163922 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.42362913 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410830008 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420850461 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.423908623 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.596105537 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.577215767 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.00066246 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.419833963 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.001271505 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.593143104 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.41821514 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420328705 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.424374982 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.113076321 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.001961288 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.593704084 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.576859308 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.644112455 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.4066993 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.421862816 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.412178246 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.512618005 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.421636262 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.114380969 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.999626791 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41789806 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425813434 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.424901781 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.425340795 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.62569035 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.055009276 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.506107762 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997887868 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.774914675 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.759973042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.416363084 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.490967982 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.416967421 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.767599618 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.417738106 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489929415 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.914053843 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.762127516 seconds)
  done (took 170.827024415 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.689211193 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.692047907 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.512967374 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.543818131 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.99127269 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.006269616 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.685044686 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.548316257 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.53795586 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.683614613 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.678646818 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.509960275 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.640338158 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.535761735 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.161325979 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.498160171 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.52315823 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.55447962 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.542769235 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.511149492 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.0702156 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.727506672 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.614704822 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.681762176 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.521817167 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.279170014 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.997271457 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.932466177 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.599082682 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.770790191 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.949300147 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.591495279 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.42455764 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.131551839 seconds)
  done (took 68.686766941 seconds)
done (took 715.151815238 seconds)
SAVING RESULT...
DONE!
