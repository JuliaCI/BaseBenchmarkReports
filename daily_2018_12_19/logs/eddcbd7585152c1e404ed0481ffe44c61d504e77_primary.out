cset: moving following pidspec: 31927
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.367209224 seconds)
loading group "string"... done (took 0.565142207 seconds)
loading group "linalg"... done (took 7.71908942 seconds)
loading group "parallel"... done (took 0.17251168 seconds)
loading group "find"... done (took 1.194515674 seconds)
loading group "tuple"... done (took 2.128820936 seconds)
loading group "dates"... done (took 1.338381873 seconds)
loading group "micro"... done (took 0.247406363 seconds)
loading group "io"... done (took 0.986753463 seconds)
loading group "scalar"... done (took 42.240714329 seconds)
loading group "sparse"... done (took 14.074954487 seconds)
loading group "broadcast"... done (took 1.10733228 seconds)
loading group "union"... done (took 15.096482755 seconds)
loading group "simd"... done (took 5.151247017 seconds)
loading group "random"... done (took 10.438028216 seconds)
loading group "problem"... done (took 2.054601341 seconds)
loading group "array"... done (took 24.811004284 seconds)
loading group "misc"... done (took 2.198429335 seconds)
loading group "sort"... done (took 3.849447218 seconds)
loading group "collection"... done (took 21.505716836 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.584477124 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146251605 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152465337 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13359723 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209648704 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15876151 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161388975 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100600808 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.010462165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.183036707 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15547566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.537476337 seconds)
done (took 5.269488279 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.21836446 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095180419 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106129016 seconds)
  done (took 0.881081892 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078238286 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147156169 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096893982 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079923564 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097068666 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079505133 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09696053 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079230805 seconds)
  done (took 1.362707507 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08837985 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098710007 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083645916 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099101079 seconds)
  done (took 1.05753427 seconds)
done (took 4.287343152 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.750026102 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280869566 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207081574 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.48025865 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.20340496 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221748909 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676831589 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351436702 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.260851996 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102944796 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147813321 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396136089 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140193876 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685647304 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091607175 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127676159 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180891499 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449135756 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084593054 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111422793 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119512179 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144448039 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13308473 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093591389 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188318512 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082707413 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199480873 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109979467 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081435329 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28252975 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20350128 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691539944 seconds)
  done (took 11.005877816 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114508563 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137007856 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100733465 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140565261 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134991172 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101910478 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086760569 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098730379 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12467866 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180293997 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130629004 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124034597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097446362 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083681855 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117209596 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250132313 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122776091 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101804328 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102798037 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089430654 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140870609 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112790766 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111534606 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096698957 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170180671 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223167263 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11458409 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12824176 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099085987 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114488411 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145641312 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145356373 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094601341 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081541353 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1771145 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124801607 seconds)
  done (took 5.222539078 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.108079616 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194467953 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125481975 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17627398 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082065711 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14717771 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096932286 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115822621 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263068683 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.13050777 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.499489058 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145939519 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102188298 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100861858 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085846455 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.14111844 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097918338 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080976352 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.651621568 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166962392 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13907646 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098359117 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107859092 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.106144197 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373343741 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082045197 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098244837 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083361502 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083486618 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166710209 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083791836 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.167698922 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127011212 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102126601 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119648744 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.219862701 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12822181 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12117067 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100008433 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079418851 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.198891069 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090591265 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099483883 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106457159 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097040539 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135955752 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122175975 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101359267 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099804188 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207850313 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098373826 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100829152 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.954974639 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183120114 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106173967 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098961788 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299417086 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.121652429 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099625329 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080139749 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276817141 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188951426 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101475924 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082231833 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099853618 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08360616 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402641178 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083454945 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.660281904 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085332256 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110525678 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084430213 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099247739 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106661784 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089615388 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119406612 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081515649 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10224516 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081801086 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098783031 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083014012 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097644281 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110448882 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.222064363 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082464821 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100461372 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079528459 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119894136 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129866735 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085502762 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097423941 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133241719 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08632116 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100580505 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137234257 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082610815 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111508156 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101739683 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14427391 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083064716 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143569212 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081032708 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126906636 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102281203 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115848124 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114135353 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101930661 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.170850315 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080601232 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098378843 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082311654 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098595297 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082009641 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101346468 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111577059 seconds)
  done (took 23.099919117 seconds)
done (took 41.119944997 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.3367918 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106410874 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106105342 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105879489 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103833437 seconds)
  done (took 1.523846921 seconds)
done (took 2.259106418 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295407778 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182222704 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098394081 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172132342 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094945273 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.168425082 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164690499 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096490907 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.225625623 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095873918 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16606374 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077622217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095698674 seconds)
  done (took 2.697413343 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095111458 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117119858 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084661757 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112265586 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077310635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112568294 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094413894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118418158 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111111917 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086729698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095450358 seconds)
  done (took 1.840032288 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094134232 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114808852 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084333052 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112102381 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078011801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112223534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094881627 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118525508 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11421574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087218442 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095091138 seconds)
  done (took 1.839574799 seconds)
done (took 7.101620864 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091484405 seconds)
  done (took 0.822232445 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.950334872 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.655354865 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113707096 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1545085 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329242462 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177920291 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483369386 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130083866 seconds)
  done (took 10.943721634 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.116592529 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.103192017 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103500596 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097762016 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105392295 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088140383 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101575909 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100850647 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086849409 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101174403 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085073303 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103460456 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100451808 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087646951 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102648981 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087541987 seconds)
  done (took 2.372043107 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120668206 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119950254 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108591837 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110434474 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088886768 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106887025 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109554591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090252969 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10329433 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104833484 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092284937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107197805 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105706785 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081188383 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108086683 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109397425 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088172943 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10848758 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107270972 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09120163 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108404431 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097210313 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088671257 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108364583 seconds)
  done (took 3.315595044 seconds)
done (took 18.18681453 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157214477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111576054 seconds)
  done (took 1.008791738 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097153137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11599204 seconds)
  done (took 0.957920725 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098585519 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097376991 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124505742 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111526513 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083297475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098935531 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120669355 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082194269 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098839829 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081572067 seconds)
  done (took 1.745369884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082993655 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111955091 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102754842 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09623996 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107504775 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097569112 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091569803 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100781037 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113415647 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079390598 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104105754 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115995505 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087343536 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117002485 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107523429 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085503533 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104017135 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100565304 seconds)
  done (took 2.555690679 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080554429 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099617304 seconds)
  done (took 0.925634458 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082104555 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095458797 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08264017 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100033346 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095716087 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078348465 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095889459 seconds)
  done (took 1.374579501 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493542723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138837603 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265612672 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.1035132 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104715261 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307767057 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099415457 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086687732 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105306086 seconds)
  done (took 2.511131402 seconds)
done (took 11.821613517 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0927739 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117870277 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114828513 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46978569 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108777717 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099152903 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149255134 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251084685 seconds)
done (took 2.152301728 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146302984 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602718793 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.429574301 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.23842757 seconds)
  done (took 2.026673225 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.401485121 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099698605 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083944282 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083358086 seconds)
  done (took 1.428332308 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079432303 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102282176 seconds)
  done (took 0.9412709 seconds)
done (took 5.300094455 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080837196 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.132936629 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081963559 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100705337 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079613713 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101050942 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079394501 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098303775 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081651595 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098547841 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098924019 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081368833 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098566463 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07969216 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095934348 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081554221 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096797604 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080047974 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095816877 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082188544 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098331274 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079928824 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096408811 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078909391 seconds)
  done (took 2.975035403 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099449618 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099866284 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105778925 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087925716 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105135123 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087572578 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103743248 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099077087 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08750119 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102003 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102498108 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085893487 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10149687 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086831079 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101844059 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103418338 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087911705 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099607118 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084915993 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103346437 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10489842 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083251937 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104094359 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104351514 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086237901 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103404288 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084215452 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09986941 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104718951 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086070529 seconds)
  done (took 3.660285413 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085146494 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096778731 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080563346 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103938499 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079678903 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099312231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079627887 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097620778 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081198773 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096667872 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082127423 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097567689 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079808425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098659018 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080500091 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101589776 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114417381 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080042735 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097490805 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080842691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101060131 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080065931 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097971856 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079986769 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097181674 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079577155 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097156739 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079111617 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097382822 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079387388 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10062476 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083419256 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096924189 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086745216 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101770236 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079433639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101021864 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079000661 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098199916 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096666638 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079550582 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096998868 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080039779 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103438346 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079956152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100008423 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080459676 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099144893 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081120584 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101463142 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079712255 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09710506 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082250419 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098849967 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08368197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0967311 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09823936 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079434716 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098075073 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079565759 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097088147 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0794267 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099478714 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08068394 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113190034 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086890064 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096891656 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082232299 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098559096 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082399209 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099020326 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112293888 seconds)
  done (took 7.317327093 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083851224 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108256352 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082486139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100509046 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078493136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098953891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102438442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080472156 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099958333 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08692276 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098788902 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081853651 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09982436 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110711567 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081572721 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099683737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087225015 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096873158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080714166 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101094634 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081039146 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102065864 seconds)
  done (took 2.805579455 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210792216 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107221784 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144496344 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110178804 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085366363 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108215667 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104493512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088942748 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105229998 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086815293 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.214361292 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104071101 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085132269 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102360071 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102692723 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086521385 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104529519 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08707192 seconds)
  done (took 2.804873034 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093435597 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101166852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105616176 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102212744 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101135622 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086604014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106938223 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110234293 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085358035 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100342189 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093137257 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103054584 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103541328 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08376779 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102795902 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083111481 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10376002 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083104967 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110239113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106967505 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107267583 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093387423 seconds)
  done (took 2.935580075 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0983204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10353005 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121689381 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086193959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098003469 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082108366 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108977513 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083074155 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110718781 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102860247 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083953737 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099191857 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091011799 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101254257 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106278697 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082976821 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102429217 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08363423 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102323138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079466084 seconds)
  done (took 2.69852901 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10326195 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102503018 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101784206 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094094313 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103150596 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084264791 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111803853 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102509413 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085598965 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127437832 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101839547 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08472628 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111445385 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108513335 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101750154 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094185885 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111733428 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112159437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085145214 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103204995 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128212724 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084878589 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111778624 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102176576 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085294825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102456043 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102761787 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090921947 seconds)
  done (took 3.611338681 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082165701 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1016334 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083245088 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09926485 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080909319 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098709667 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080788072 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09862743 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08250242 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098517644 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083390718 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100464375 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082670066 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100861284 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082815592 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10141898 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083116018 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098358222 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080221356 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099134707 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083723613 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101256529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082888181 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099546004 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081019217 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.1014305 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080945744 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098460722 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083597483 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09954154 seconds)
  done (took 3.505192233 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090937639 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108578893 seconds)
  done (took 0.973439542 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080213524 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117135589 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080685877 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105892291 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087944887 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102516145 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110480834 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089229514 seconds)
  done (took 1.548028868 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098081145 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113425118 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08562613 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117047786 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113720288 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100230022 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175240606 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105144639 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109214718 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082329487 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116528016 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08278964 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108173225 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08369447 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108875317 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090350834 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100724467 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109220233 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090592495 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100916049 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08647275 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111715405 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085969532 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099043564 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103894174 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093479879 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115584901 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08649246 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106173808 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109566696 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089638399 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095983522 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084184667 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102705728 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082348946 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112472263 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120395624 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086945764 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112374036 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103529503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095713545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097911209 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089727536 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109332271 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113357613 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084678801 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103603476 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079836031 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099740196 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086057476 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098456042 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083425018 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097225745 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091235596 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106763547 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114096953 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083404498 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104644731 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087734661 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10676032 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091476639 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105254861 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10474486 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085257084 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109430313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088588544 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113953592 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097273125 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077934156 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100775457 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094974801 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127094455 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109973301 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086168307 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103732503 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08257644 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106148899 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086058561 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109208035 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.1093635 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085371916 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111083904 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092246534 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103163491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105152429 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09295964 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101631978 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087482609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100583306 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121819675 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083450846 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100529571 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08238574 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113958513 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087563395 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103497317 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082369984 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110890763 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096897236 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085357186 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104449459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08537616 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114636724 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109325948 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090895951 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113254572 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110195516 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084060397 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106891742 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081363634 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104566587 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087015425 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110214547 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078395933 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106491336 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085162594 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103605977 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113168344 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083420024 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10333908 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092725457 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10961871 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102438485 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081241146 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106606109 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084970695 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107046153 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093207804 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102323414 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080024331 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098779549 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106891923 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084911418 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107119228 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090689023 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106452939 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079331834 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101918418 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108676231 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095197751 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104386889 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085392536 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109653224 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105014923 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083768894 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109543257 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087551005 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102642683 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09062856 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105011539 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079532569 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107785306 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105908532 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084300456 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107538648 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088458805 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106670886 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103803195 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082881662 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10990092 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086641026 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102089574 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083753431 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102138762 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114925585 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086610258 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098949892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082094572 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111337637 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083301939 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103090278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083711551 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106147388 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104730857 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083481158 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103376898 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08693871 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116708926 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108510213 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086410122 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109571218 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097250178 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104286359 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087816482 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103742755 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105097373 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08645555 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112878089 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090242331 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11000653 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107256803 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081754297 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109827433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092593515 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103415038 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082826814 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103315035 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107673915 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091832001 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108818421 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086195343 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10258604 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085634726 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107776593 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107855458 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084754833 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103154254 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09086278 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10300936 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112284746 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086718848 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114822729 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08893441 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09909047 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089348067 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10226994 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109981196 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080051235 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101032026 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083879378 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105435975 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083922603 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106532819 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079764836 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111668059 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111867165 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08511705 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103660774 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085179238 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110763021 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086291925 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108664007 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088737534 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110335567 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114896189 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084434094 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107146812 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096156788 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104762916 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099363177 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091310728 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102637831 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084674658 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103622347 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083136645 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107389698 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114782992 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09265477 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098270718 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088443827 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102722122 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084100754 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099903375 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089860386 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107211016 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105366415 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092954193 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106411558 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088837983 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109000821 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084479616 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105798184 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10562317 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089212465 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106047416 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087930939 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10501317 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089029086 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103474081 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083473697 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10648585 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104790248 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085596897 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110865669 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0848558 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104591487 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088143074 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105848552 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10576323 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085946882 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103839014 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088139532 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105140498 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085372082 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107846017 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080691197 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11233615 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085605 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113988728 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104487008 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082627482 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110438396 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088389286 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11080547 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106508527 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086875315 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10598176 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084895785 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108090961 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092019795 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103183181 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116589471 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095117949 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105507806 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089170827 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104875306 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088215523 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104462463 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106451761 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.087380686 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105598354 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085724845 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110408878 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089511186 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106012003 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087745083 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106962828 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105155617 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086944189 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099387229 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085521526 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104454133 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086536609 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116198288 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106043797 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088407635 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103628174 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08784264 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10452774 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082239518 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114291366 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11494567 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087086475 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11250757 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084637247 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106971951 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116524802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079346862 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102611713 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08348845 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103012308 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093186243 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115331268 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095538282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105541242 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104696759 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082809726 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106925389 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084993434 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099263082 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084462574 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108567655 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088519156 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104179676 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086185614 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108078022 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107395153 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096815056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104538584 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086702001 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105737085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082985278 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10437549 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103272778 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089371685 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10638714 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084436076 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102352315 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086176495 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10608343 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086748096 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10518985 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087014247 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112595606 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105845492 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08925344 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109745876 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081285624 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108566273 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085464976 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105216216 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104104728 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090412486 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108797853 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087887208 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115282683 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085353819 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105952483 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106039836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083627902 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105573796 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085458182 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105398339 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085391358 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106832069 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094723834 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104313007 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108177963 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085766046 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106810658 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093571906 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106650901 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088826154 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11426986 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10809364 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088243446 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113761693 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089916183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109715976 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107091565 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087801436 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110979305 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08520203 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112709065 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086075531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106832681 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107262267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08411309 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106258994 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086319586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104757101 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09249598 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107262311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086338419 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104799369 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10436345 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087409126 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110196214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095493616 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109429641 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089543545 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101982175 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083022995 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108036229 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103315206 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08865559 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109568298 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093273842 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10869419 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086754135 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105397896 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116290031 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09255229 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11093466 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084675861 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110878026 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088837707 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109186486 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106929877 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087025538 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107540844 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091343561 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107292493 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085834061 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114683898 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089728959 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108491521 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108327855 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087644249 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106524695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082499006 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107069879 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0892823 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112160414 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10843459 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086946849 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118161843 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086463389 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106503985 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090587037 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106432575 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.1112331 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082583456 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107432071 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088743635 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107438663 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082921489 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105577426 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085085524 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10972376 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085992569 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102539627 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11811271 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097019509 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110356287 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086006978 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105942877 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082072321 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10255718 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105808968 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087964037 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107748475 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098829891 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105637111 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08648784 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102247094 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087222039 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110735207 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110419901 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083809296 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101792191 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086003258 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110448602 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092621205 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105856982 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086840846 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110480066 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109593004 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08535673 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111878009 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083862305 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110526904 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121724974 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088563889 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107411032 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093618501 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116371135 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088394863 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102905928 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107974156 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090959266 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107098716 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089541591 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108991291 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124303752 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090645639 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106006782 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085909165 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109217769 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08704079 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116221447 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108832004 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089006573 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112074457 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089541428 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117754156 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090015964 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116564715 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109949823 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091374983 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10675134 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087008725 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106099026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085510377 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108959957 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107914919 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093401062 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116647213 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087018456 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119838791 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116793853 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092928391 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10413168 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087700346 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10724108 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083028498 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111759324 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085678967 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106751892 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104915534 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086391567 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108056583 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09379442 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107689421 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08920091 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108846471 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082057845 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109315319 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089387035 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108637805 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103609193 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088044536 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109391275 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091620846 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112411536 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087692522 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109336413 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08871484 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108766804 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10306035 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094838103 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10615888 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090402456 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107381573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087941028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109183011 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091535513 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114077757 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109932668 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090869426 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.120185666 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090533955 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105771201 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10503587 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093110132 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105554026 seconds)
  done (took 59.822519319 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150050374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084158284 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103241264 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082708229 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117503224 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103477439 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0825836 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103957124 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084516809 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106523123 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082793939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102749221 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112866837 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128145143 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096536074 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108541832 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081944731 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104735112 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10264875 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084458411 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113343434 seconds)
  done (took 2.963635316 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107098177 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122570296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120001896 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123013938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093644972 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120266869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118800786 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119454294 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103210597 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115604343 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123405829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119851884 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094981521 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116377317 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115809004 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097556935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.123654345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113732337 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120884078 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100478407 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118274897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118898716 seconds)
  done (took 3.334086321 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086286882 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107070767 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088972715 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103205391 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087173418 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102209298 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091788799 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105284103 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091449029 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106357448 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085681837 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.106779509 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10852232 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08267391 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107049045 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085326175 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157467746 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112321751 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087486696 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109578516 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081987573 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.1106941 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102941019 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083077464 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107069507 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092550966 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108542879 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085882424 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108080954 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086313343 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107707231 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085155608 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109450901 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108338659 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086920388 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107218244 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087500809 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107358038 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083400872 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105587646 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087687057 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104132807 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088220527 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109424075 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085848717 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106458358 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088974316 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109590937 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102551979 seconds)
  done (took 5.678711174 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105249658 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167888955 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090353694 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149252227 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126508727 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118727748 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091771317 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148523464 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107811489 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086684336 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128014057 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125360807 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108631281 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092930617 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115922876 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108041008 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090297996 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10849081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112808914 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087939712 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112875515 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094963629 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125540108 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122554914 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112682149 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087122241 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108301751 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114553229 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101554884 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114279454 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114295242 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093753452 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126030524 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111169101 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087093821 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111371346 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128006084 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108809306 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09143459 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106313649 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091201084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114101404 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115779815 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105668455 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110402544 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114987642 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088657388 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105760535 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12256462 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091474075 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118501079 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125173122 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092666629 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110338543 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11357885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126106605 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088796505 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108007348 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091809532 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123582355 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106458533 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093376937 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124867161 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111708731 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096223928 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124958374 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115032357 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112696565 seconds)
  done (took 8.471786369 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094873933 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116813195 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126036312 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125712742 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094976158 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1161636 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115808911 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094666646 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116218431 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121540747 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116575365 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140160079 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090124805 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11983193 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116628621 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095249627 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116722945 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115643009 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095339752 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1157758 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115664639 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125561306 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095100645 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125477143 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148278533 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111025898 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095040029 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116220423 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126881312 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115819672 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12958244 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096350614 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116638911 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125062912 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127873303 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096228891 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108432294 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115603155 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096043014 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115572849 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110468948 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104533618 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115691794 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110395258 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0957586 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115975004 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125859938 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12828189 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119280633 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10109233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116963277 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126467167 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116545835 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0957235 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125562012 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153270502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125944785 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126524937 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116499518 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104586026 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125147338 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133923478 seconds)
  done (took 7.981508586 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110646262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120299998 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124004335 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106396798 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087353422 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114015897 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086904474 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107424515 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119530749 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098307214 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122954635 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11433665 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096580029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123148769 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114864604 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117438816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092880223 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114442659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119470235 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114909734 seconds)
  done (took 3.048965211 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09619127 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128730762 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089921862 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117559145 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11262082 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096370463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112083452 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113017049 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090851696 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11283018 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100707481 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123092238 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111012779 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095634361 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122167791 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117135956 seconds)
  done (took 2.583645709 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102349083 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123197973 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126347895 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089752304 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109733853 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085152443 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111913044 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106204619 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086335918 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125743705 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089260566 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114715572 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110592836 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087656033 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107351753 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092048407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106635131 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086910218 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10994796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124638938 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10089846 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109825094 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111675768 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090706071 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110853405 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095349849 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111907618 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107750739 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08732559 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110684147 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089811607 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119064781 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106993951 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088057174 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107787394 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086075598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110197708 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089244306 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113338639 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110577563 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087784488 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110101373 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089392439 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112861626 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08508285 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111324135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106666636 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095710557 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108741856 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089614537 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110626672 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090925978 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112237595 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121534274 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092836481 seconds)
  done (took 6.527712477 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102271403 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114363146 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085335243 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108667492 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092633561 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112613307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11478655 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092720457 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112061873 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08753151 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112627482 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094122731 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11284758 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114286146 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091221256 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114211374 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08492691 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1124188 seconds)
  done (took 2.712535152 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093087699 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110589388 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096440833 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110883029 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090737115 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113587772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085516752 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.109647553 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109301172 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089825093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110787915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092177971 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109365822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091585647 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111202163 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089798966 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114389426 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108693946 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0898881 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106457828 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092318381 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109437545 seconds)
  done (took 3.085172499 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121527296 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130905667 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097519281 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.244534398 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.108746188 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13822121 seconds)
  done (took 1.691397275 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112119285 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12702751 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111679112 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111054178 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120948607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090991263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113228812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113375687 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123533398 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105643684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112624818 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122630018 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12402873 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101662238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120183847 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119807063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113314807 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091939414 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111428912 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133587034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091817358 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124134747 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113708387 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092235578 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11299748 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122843526 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123731397 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12759928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091620567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123043952 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120111797 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092333407 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12401472 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128085821 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114750939 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102001237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113272817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134654973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120926495 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102020665 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114392321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120744805 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10159049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119318707 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124316411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114583995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097072938 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113143022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114868554 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140539615 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099372424 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123265686 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120598648 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124006415 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10172234 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161694464 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107157347 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122870056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120528632 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12846998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123897019 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098346892 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123181097 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127605543 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1209249 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100516804 seconds)
  done (took 8.478074486 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105415198 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13197433 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113947088 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127579157 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101594649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114325745 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113441179 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092260542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113176771 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112979925 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159013287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092717035 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123057165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123408151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092296795 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113725177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112838332 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124927998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090948311 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140905593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113968111 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123171738 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123349774 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10124147 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128867215 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120691738 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113650402 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09260145 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113725257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113435662 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097336342 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114530333 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12294651 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091967991 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123669025 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113492845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092486336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119891248 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11372816 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1202968 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101859806 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13326392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114340046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114394028 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106042237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113421409 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113631701 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091297194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114963837 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113159938 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107127348 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128549906 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12880912 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122704741 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11531084 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09222833 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114217237 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114123524 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092326535 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121116747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123973858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092795814 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141171336 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115214339 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113268873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124719419 seconds)
  done (took 8.384966111 seconds)
done (took 160.354513024 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215514933 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199049025 seconds)
  done (took 1.270770599 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087600808 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143381798 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102123616 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176222245 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085883103 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142466912 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140051289 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09778604 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111247111 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091470283 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.113523145 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092192293 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178543401 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086036734 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110919477 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114068971 seconds)
  done (took 2.736782319 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.121834008 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.265714957 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131560225 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111370359 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093821336 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115748961 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088683677 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118362167 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094554754 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110622984 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093332116 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112598194 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088210078 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112677803 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117448681 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092703202 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111278285 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093595723 seconds)
  done (took 2.938038476 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113106554 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151282449 seconds)
  done (took 1.133507904 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242040503 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163300034 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.233202524 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.483363205 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.285728887 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.37936812 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206603063 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.218318414 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169874577 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209406665 seconds)
  done (took 3.452749297 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121490251 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188389187 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.327149429 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163177082 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112876 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136676952 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165478216 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138046511 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.130383367 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10656294 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128732904 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.125345382 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145609318 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099942718 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121023234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124129691 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126326216 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120779281 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122080521 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101429336 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145331109 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090278277 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122258375 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.119373758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102815711 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125774344 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112960613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09020783 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122389701 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099183499 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120425161 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132093738 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125897265 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162246665 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.13041461 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.16458514 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.125541928 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095804458 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121951363 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095747308 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125049711 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124588892 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131514785 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102174039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.111967639 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102573671 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112276483 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089406365 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121083457 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125393741 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099080538 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120198526 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.162430092 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126895605 seconds)
  done (took 7.732254501 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795382157 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163578849 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095988282 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.897655405 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139558847 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10929029 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787915914 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112193311 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259817966 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769977535 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139984053 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102199974 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235744601 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260488076 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924122935 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286452158 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641570667 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126479826 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155065279 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156475213 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119955302 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117303879 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135768901 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435041295 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11688618 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093635668 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122544719 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125057912 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166316942 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128845979 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096801978 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205701547 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248618869 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203668019 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095654857 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11427052 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094586028 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.198474907 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246143951 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215307073 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182918468 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112651048 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095095204 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1288099 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13992502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092744738 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190087857 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176567761 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172151419 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115208978 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123441964 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103297063 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127276374 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16992849 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126817909 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315476754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327558385 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094194142 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128287451 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132805384 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244380839 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12923148 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230625147 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142307612 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195986796 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118739704 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784206831 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170051609 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111241186 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096080362 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121902197 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118624721 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102171395 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173066376 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.412411047 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131511907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120687362 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095541221 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2325841 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.109082613 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11884471 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167619812 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11885012 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12705918 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108810804 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130898114 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174842879 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257192457 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106256803 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126835653 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12172404 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108296703 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124116608 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217347403 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223723279 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162907792 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232855919 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101396331 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187946267 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170475702 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122211633 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178015788 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126271353 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107542043 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130466257 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222702309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152037591 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129543273 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099688035 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125978866 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153388792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.133731279 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.102028474 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.198776293 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460209786 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170471606 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111399458 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.135287028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101852926 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16857988 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121992032 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269355067 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122764077 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171136354 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124575038 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092350746 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127646167 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168748539 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128734597 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105025976 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129178947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125413581 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237598611 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222045354 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124280961 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223038658 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185356469 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118499281 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173071925 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122398741 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170273844 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120619578 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101383223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123164355 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775470336 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124102352 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100703615 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120482904 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191154004 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090191777 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127001259 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126803904 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089717569 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798211093 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127810363 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121633278 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103123771 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121826737 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125886699 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101926136 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122102939 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166278882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231360849 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12076858 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100854245 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129852299 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161931727 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117661268 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126952809 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105456279 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.129009318 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125147202 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120716303 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109073807 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195751317 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162983022 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22027135 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572154324 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112683505 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126717378 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205608838 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114127463 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291647621 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100618584 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225723555 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185417735 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099685817 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320064599 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164672248 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188222947 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12973393 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172468164 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111299644 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123626203 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167546727 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11418582 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097583737 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165881024 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130401967 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127828454 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971955515 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09132954 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22594117 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109876455 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173082561 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117896674 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122204672 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.265186587 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112371949 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130559242 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166665413 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117362233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105033987 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.870902959 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125415883 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102347349 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124413594 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226759234 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166054259 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121677754 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122579429 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098583964 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185501663 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209978012 seconds)
  done (took 44.84952264 seconds)
done (took 64.972738552 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28654165 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.223592094 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272899306 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171615544 seconds)
  done (took 1.924348419 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174626292 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158025389 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128828754 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113432317 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158926781 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090095219 seconds)
  done (took 1.714828369 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364241054 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277985337 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.246563578 seconds)
  done (took 1.78838339 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.325214222 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.259547569 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.483833843 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326322279 seconds)
  done (took 2.3889432 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.221222048 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138554766 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113422944 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10673848 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.207838766 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252741918 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143497597 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203168163 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10008039 seconds)
  done (took 2.428819576 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200608915 seconds)
done (took 11.339820683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.136693705 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.268594164 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.165485877 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133764123 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.221629397 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.157202757 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.31453879 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102991573 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.134370011 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.131918459 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123646796 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.139101503 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.108578532 seconds)
    (14/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121863069 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.125645615 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.211417075 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.168672972 seconds)
    (18/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.23945596 seconds)
    (19/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.198962884 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.193516271 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.266148297 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.258757787 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.238176899 seconds)
    (24/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.190744743 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165114936 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179233028 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120118543 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101140671 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.201977706 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.154704268 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.128247795 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096705658 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.259412823 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119336462 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092495762 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.129720391 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.101256756 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120629386 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.189724395 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.131437906 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117037128 seconds)
    (42/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.198800594 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122096184 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099291672 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09824612 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18054661 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.164867971 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.138956592 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.121040023 seconds)
    (50/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098652039 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.191857696 seconds)
    (52/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.24117757 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097675113 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.170490696 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.182997482 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096225978 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111698701 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.0923612 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.144455905 seconds)
    (60/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.178231105 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080317729 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.154202083 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.141618977 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10642411 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.143217181 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.268616296 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193393856 seconds)
    (68/309) benchmarking ("sort", Int8, false)...
    done (took 0.193980971 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.180754461 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071868893 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.131119505 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.154465893 seconds)
    (73/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082039837 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090889522 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129038681 seconds)
    (76/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.127097564 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.130943759 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.121962435 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 0.15210506 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.102135421 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191853066 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.091134458 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 0.229300472 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.201541129 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.229107881 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.13791322 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095844215 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178844936 seconds)
    (89/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.143181296 seconds)
    (90/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069650971 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071609913 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11556645 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.2230034 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090955222 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.127356309 seconds)
    (96/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080603601 seconds)
    (97/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.155356024 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10893394 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.158216777 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138047422 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.130297679 seconds)
    (102/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.205073537 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.199044871 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193482759 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149407219 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.140826108 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.079768096 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132271701 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.138020655 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096088988 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.138086905 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089943934 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204352971 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.145167122 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.363371439 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116654597 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.196288936 seconds)
    (118/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.123758799 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.198076945 seconds)
    (120/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.132000698 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.143028902 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.079078116 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073281153 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.162238942 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126754679 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.189230693 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097946838 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113330898 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091087514 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124570658 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.201341151 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095152742 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.194723552 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091479227 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117506435 seconds)
    (136/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070493492 seconds)
    (137/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.145218188 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.1167079 seconds)
    (139/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071657721 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09871027 seconds)
    (141/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169415276 seconds)
    (142/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096553099 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098553278 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073194108 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144355575 seconds)
    (146/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.160929613 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191505539 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089023814 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124844391 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109844304 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.113470783 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.217714584 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.186296593 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.168087235 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.14037748 seconds)
    (156/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.15420557 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09702294 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.08233567 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.223381272 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.149227717 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122281883 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118082623 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093903686 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072138038 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144196352 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.122058362 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096569178 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14271661 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114301619 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.096751431 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093499515 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117798105 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103384753 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116852277 seconds)
    (175/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07352003 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071782809 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.154159557 seconds)
    (178/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080649497 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.111868823 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.15467158 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.097363118 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121382257 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.097740721 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07309377 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099048403 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096566304 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.172952234 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096430711 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.0712587 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124884925 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.125993552 seconds)
    (192/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115240505 seconds)
    (193/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.09729271 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.093581711 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073310197 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.098105796 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09134111 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.203826205 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179096895 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.126303778 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.09937072 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114194337 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128179565 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090875717 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116918711 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117864303 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.10271971 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117078442 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.10453397 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.197913356 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.18557423 seconds)
    (212/309) benchmarking ("sort", Float32, false)...
    done (took 0.176221667 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10979575 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091250428 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067106899 seconds)
    (216/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069601833 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11397852 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069586134 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121662829 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098307806 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.094090452 seconds)
    (222/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08285731 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073315644 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.118165274 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.130675827 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10431468 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.127427912 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099039744 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09749109 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098131007 seconds)
    (231/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.073569636 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097479262 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08244756 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072094628 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.115585082 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095590408 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.123983219 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100658863 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.115008481 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.193057087 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073103137 seconds)
    (242/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.098825871 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083624553 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.165422309 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.09294764 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141245615 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071491446 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.125423594 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092811024 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117668947 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094920215 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094576759 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097946627 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.170641135 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.108359323 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.144696717 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11504145 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088743446 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121796485 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.163072056 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120423351 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074059435 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.126081665 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098872154 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123721903 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093045475 seconds)
    (267/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107573844 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072761261 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125765207 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091601323 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.139351632 seconds)
    (272/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07216008 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.143075597 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117896827 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116863818 seconds)
    (276/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.225262451 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097926374 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073864814 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.166419792 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.100642575 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.072688364 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099291281 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118354612 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125795963 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100015117 seconds)
    (286/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075446529 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.116925873 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073075728 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.115804132 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.094870697 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.142829578 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121703917 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094967829 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.120057674 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087590438 seconds)
    (296/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068920959 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110036425 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088175498 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115892896 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219049601 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093152502 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121525628 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093416343 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.099213654 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092195823 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.097086238 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094369003 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.12306849 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127532062 seconds)
  done (took 41.439611529 seconds)
done (took 42.338227297 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099696023 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153037599 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102774658 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143204342 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.131756214 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094976361 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.122330417 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099816476 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125238947 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126198566 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097890442 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095876799 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098530705 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124927146 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098683551 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141281123 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.13002229 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09639882 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122818754 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087635464 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121753875 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088166776 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114177849 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070916998 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125606666 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095204826 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117630472 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122403706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087050289 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.113851718 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091196581 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121751208 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085915747 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127998582 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093549796 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120738494 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097502554 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121750207 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089227542 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111015875 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118759986 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08717035 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120114897 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095132443 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11954687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092277238 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121209949 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101126441 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142182821 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122344192 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098251005 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.125536552 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096362764 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120222449 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09146866 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121711268 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092938885 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141475268 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.125101851 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092708241 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123402467 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095687163 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117344825 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096148388 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118964108 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122117137 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099118112 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118158505 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097333117 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116567692 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087976226 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120348661 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091421257 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11077022 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096173852 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122748807 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110785631 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093113709 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118562361 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093344811 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111662867 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089567064 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11505996 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093502631 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11401133 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072973912 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.119939604 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094048668 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112901752 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095822389 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117663462 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094648637 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113250755 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100062284 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110545689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092896003 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111591216 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087771248 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113145557 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091819132 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111133148 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090789936 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121865453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08923033 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117952164 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124694286 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08730824 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117799236 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086237873 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111737377 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102273673 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122452448 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087455636 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117245131 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089940909 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121036632 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087228227 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111632728 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086645235 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110957979 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093696135 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110788616 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114236809 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09672112 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129795111 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087558189 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11510421 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090138326 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113037223 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09285793 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11311579 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087432495 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114875862 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078073447 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115966277 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089100036 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.121172646 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09067993 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122569545 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089009311 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120772185 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092196003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117904997 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094353285 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110569308 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074878302 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117001888 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09482601 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.118659201 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089949268 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115494756 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08676486 seconds)
done (took 17.194442905 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08807912 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186236693 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152600579 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144586075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107820322 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113417335 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122744444 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120593078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114657113 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145105792 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111551165 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13324508 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14938644 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086991753 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11301348 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091799704 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11450898 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104311779 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14570887 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133564154 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165620331 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087241983 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148911979 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136505359 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121329884 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105322208 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11301189 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092439417 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115756514 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113810148 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132966272 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091956148 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112773509 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135354519 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105092754 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120128031 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088034834 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119615745 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087897736 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112131742 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142019691 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13437911 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093939169 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118841488 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091831609 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114896952 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089149648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122327797 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098785793 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117063106 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127025222 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157197945 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091586061 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123069345 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086528337 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122786941 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122611397 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090975773 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113259235 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091034275 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113949929 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091245936 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129347516 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1419602 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092709077 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122674117 seconds)
  done (took 8.68302969 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104881013 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140250858 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.123177063 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130973015 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112298902 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089730486 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114333693 seconds)
  done (took 1.779766877 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088394943 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136759462 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112081001 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137571062 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134055116 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109558698 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123761929 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088627253 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13154875 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090569271 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134801755 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155320501 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09090117 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12084349 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139198508 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088763895 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139984333 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089116585 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117230143 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114048667 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116590841 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13473227 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090622796 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113875409 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104782664 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11406499 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163969574 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094139992 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115175424 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092539711 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112433002 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165927132 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105994926 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125552583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088321594 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128849033 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128273185 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087016239 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132588541 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095053573 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128170208 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089503801 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115590026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086831721 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119494208 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124940441 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090039063 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115231107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092150146 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134638671 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092625752 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127861955 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091749002 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119355488 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091845986 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119966511 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125086089 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090205684 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134732933 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091071381 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132576654 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107248626 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128192584 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13183844 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094042093 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130863474 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106996912 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125672043 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096983522 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122780309 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135759819 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088480484 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120008071 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103067533 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122144299 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.118374983 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143917889 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119213284 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100443769 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115319835 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090701836 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.117691424 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.115317214 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122092372 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092837967 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122770845 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096591972 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120466638 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094808916 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124960438 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.09415944 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118107862 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121733149 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090354329 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119653079 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107041867 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119399134 seconds)
  done (took 12.014829007 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089909037 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115864688 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091588611 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115336315 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090706463 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116407406 seconds)
  done (took 1.595498305 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115119991 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118510803 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106401855 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12168083 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159765691 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104861449 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130952296 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12639344 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.110498903 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128890028 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13162594 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105922218 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138732956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123452812 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104803535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122442042 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131909134 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100582513 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128663158 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099001021 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138327484 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123573981 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098437634 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133281322 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121764956 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096305954 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127634967 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104673904 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128480238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126623204 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096516511 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121192111 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098961029 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124258179 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131913148 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096238293 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122149371 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121779211 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100466768 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120150846 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106272134 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123587397 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129149638 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096141201 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125171349 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123897679 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094279334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126827709 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104509448 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120563035 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122400288 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095818621 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120711067 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094879523 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121577232 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125881713 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094676915 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130673514 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.097967329 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12228799 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11918169 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094143734 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12553811 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120572701 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104470049 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122372686 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097898845 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122692909 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12480126 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096382099 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120828209 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093886242 seconds)
  done (took 9.340817723 seconds)
done (took 34.376196053 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690450533 seconds)
  done (took 1.663914898 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.710696497 seconds)
  done (took 1.687140881 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.114496305 seconds)
  done (took 18.092445291 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501626146 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.587712834 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.891786001 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.184608356 seconds)
  done (took 3.14312622 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950001388 seconds)
  done (took 1.947653766 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297720228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260454895 seconds)
  done (took 1.540525457 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772817205 seconds)
  done (took 1.76316834 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.348256491 seconds)
  done (took 2.331814939 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334206496 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186020614 seconds)
  done (took 1.507468616 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.556342302 seconds)
  done (took 1.543277545 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.154863604 seconds)
  done (took 8.149732424 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270366353 seconds)
  done (took 1.271474615 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301413582 seconds)
  done (took 1.29489785 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.552990675 seconds)
  done (took 4.550716272 seconds)
done (took 51.470785387 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099076644 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127585992 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102198695 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125784922 seconds)
  done (took 1.446321964 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101945561 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122329189 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101424434 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121219187 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1271202 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09667852 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12601753 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103373281 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122893725 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098917188 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124470604 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122852855 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100684687 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.127176749 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.097590093 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.131103105 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107075933 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.125578241 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130081806 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100959098 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12424888 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.101232435 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126942747 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096651385 seconds)
  done (took 3.735968249 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100972771 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121183843 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096785547 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120495814 seconds)
  done (took 1.443197718 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100497072 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142857251 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140414056 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099665423 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144619833 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138643261 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093714923 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.123054369 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099632993 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.133462335 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097801651 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159002968 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.143345126 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.101457625 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129577238 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091490673 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117883317 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137611781 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101467623 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126031095 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096669818 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126833028 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090882437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141355787 seconds)
  done (took 3.876663809 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170736589 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148207194 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141192969 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095744314 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160935582 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.144160639 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09036801 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144492932 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.092489746 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.138679077 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.122468933 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.137523712 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.133189515 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092176232 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118172719 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.092304667 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13189068 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131993113 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.094583219 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.147277539 seconds)
  done (took 3.533964019 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097639895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122469278 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090745547 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.121650415 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102169839 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123331523 seconds)
  done (took 1.666929291 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091663689 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117060469 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090844612 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116814563 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096297168 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.119548044 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090534069 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.120535519 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096783943 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.123619671 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096507198 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120079829 seconds)
  done (took 2.288071 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460963391 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093175869 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121303282 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114300301 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098395343 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117530398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.105713482 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121279463 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141811458 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092181946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118167902 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092085369 seconds)
  done (took 2.683660975 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235478873 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126662029 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29113364 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27978621 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157685371 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175079896 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284843679 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168777137 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225588843 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15938568 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204410224 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224790068 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153160324 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190568964 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139632087 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121615161 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227395398 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241699631 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154757974 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203922427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228315127 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166548976 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179691959 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151540931 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113060706 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171981586 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121085943 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130208613 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20787687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203663913 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189289892 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16296867 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147915255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238079421 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252632096 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19497866 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286606631 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138152417 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172268776 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169082686 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263633038 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113034419 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231310556 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157959475 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131811454 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193451618 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168985236 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177435164 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151097276 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142720956 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222304174 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213568792 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.218991836 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113193224 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234787251 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158122547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169338568 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195361634 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251192738 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22342941 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178167375 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093770607 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21480126 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193665397 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185561744 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1948472 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181410591 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148609229 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194790369 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188340218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189636652 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188171478 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186308819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139917361 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168413454 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176151672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198025339 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232183522 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205058868 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096858797 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169542821 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150290087 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13361469 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193935522 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101153835 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240522269 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148779198 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165372429 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220272323 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160035882 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162176858 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201465731 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223543045 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149190427 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084498748 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157506786 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15961016 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191993047 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140747236 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158741129 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163390205 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130187074 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180223899 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097327162 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202305809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092437156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175033502 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20860009 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100499593 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161970679 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152368632 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152006207 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175354366 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225186528 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117481619 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136747337 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212485246 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205051329 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150189351 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178371275 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204024542 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145845406 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150650598 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200294475 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245167315 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141006267 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205230248 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157315567 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136679312 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105750962 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210300284 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155645955 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.135085741 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13613159 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.209706044 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206639353 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125776055 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11208839 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211043325 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107723696 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137171323 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16278948 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150309669 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141201734 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147962068 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.123793497 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210066291 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179287639 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155784975 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166835992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155000396 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258806852 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142265842 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150633817 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122134882 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121951932 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194523556 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227431757 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105519733 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233143551 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174707871 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205795476 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195056951 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108828016 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178193164 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130828567 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093933814 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223523369 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168962438 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164594154 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199509224 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230293359 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180157022 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211314551 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172818222 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17467569 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168066145 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156155509 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113984694 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160616276 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196330636 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096909477 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146581273 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137829943 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150014429 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116319559 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135454468 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226503125 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171682053 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193884932 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159314 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151380979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183502347 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129282297 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175650605 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180676782 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148905332 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20148413 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223755062 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189468452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144910435 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201596884 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121106751 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125007514 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115441277 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198413097 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107880368 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137644035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168067228 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184430183 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181704206 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204613481 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214809971 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199498058 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190515749 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095456055 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170046089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187694767 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176563263 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18848517 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140718398 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152175575 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180249576 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159991471 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257175871 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171174149 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177758984 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234048351 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124315256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133054304 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152713893 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189805968 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155378124 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17864597 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151063378 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143310119 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16332145 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134493174 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161970175 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185437281 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163785959 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217781354 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124170708 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216088528 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101535133 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193606993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161008001 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166750961 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082393123 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178239879 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233743201 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148382643 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169716772 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192072211 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131779502 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308377564 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210981091 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221091598 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138210802 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157818798 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161581466 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137548964 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198907775 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178738405 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160239961 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190355165 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160318286 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109578401 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142441317 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151178386 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151703643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131743138 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150077518 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176801695 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111817654 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215195858 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162613186 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160740545 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17431827 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150124826 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117739694 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152251431 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244223181 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1771648 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239655272 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123518705 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209330236 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208876481 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127801472 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104516917 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135090357 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179752776 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137140132 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19188999 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214959129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206361053 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181847749 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21823822 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111912361 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12321678 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15960831 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175713775 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238396993 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151144343 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159495176 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205214319 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.14398345 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104698051 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173365707 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228688187 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14769551 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199221617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079378924 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307085788 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101487912 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132816965 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165118857 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210787563 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137829399 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186271868 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171899677 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16955054 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166652177 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151712169 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194333075 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244977928 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200983589 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209295528 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10603637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157107397 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177062964 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222540153 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158777939 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112485238 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234426509 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19670571 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225942334 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115435484 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172665314 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197318168 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129868042 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216898352 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135195909 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20869053 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135934722 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195440441 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154210076 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143979548 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176300039 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215625801 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114088438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217083997 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177645508 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136204451 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106144457 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199154357 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178727837 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158806159 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100655774 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209205243 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097989068 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221624964 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231930284 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136533857 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156417085 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148216318 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107618051 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185382013 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158587914 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113716967 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164425997 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205286453 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136628775 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19322866 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233053178 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171080902 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175289656 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145620929 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693614418 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132002785 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197937886 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156361034 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237535483 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150880825 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174059615 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160019668 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168548273 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198146576 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162578804 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234183518 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193188693 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207479383 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104948816 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160179772 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162229075 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14601806 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152740737 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169316787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161752154 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154558127 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180163412 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199769329 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107544502 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14098555 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201434034 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156990445 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181770259 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180976611 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141213346 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175184315 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216835643 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106292151 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208590352 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209886945 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145691455 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153463019 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135420945 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157744388 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264070917 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098691606 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230764927 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178393205 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160076458 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170248456 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148484551 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194629712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158953493 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17879257 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146335408 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161352614 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158016804 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13889349 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132250099 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127067808 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195051867 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12120595 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160556677 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168010252 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194717429 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124401809 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145934956 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200347672 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190587141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246889135 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136951656 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107926143 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165096881 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153189415 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180021981 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207227082 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109481414 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138764192 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137685174 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132850806 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138225676 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155486949 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199429324 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167939555 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207688616 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13812997 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282613242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140458565 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155915643 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090683405 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132528159 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151330119 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119443951 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159272517 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220925338 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263183198 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119954736 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133417107 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151397192 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127259327 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110164922 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167686733 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163988505 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177035787 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146151548 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109608466 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160390589 seconds)
  done (took 83.240715278 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163203428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132342317 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147460904 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202403084 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177397071 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269843943 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211349953 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253905824 seconds)
  done (took 2.654488017 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093414366 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147425093 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.164441495 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133412534 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09253178 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120776174 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346334055 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135851355 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117703794 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121665089 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173198615 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093797566 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.560548411 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.098930562 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.127618569 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107891634 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091672092 seconds)
  done (took 3.818411429 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.478877956 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.721405548 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512466928 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097739468 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.149693338 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112876535 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.727866521 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197245314 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114405893 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48616129 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.77161875 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159287285 seconds)
  done (took 18.627070086 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099115596 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.128174295 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10801899 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.140548357 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096848916 seconds)
  done (took 1.67642829 seconds)
done (took 131.681110814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104552536 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.414350381 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.078962041 seconds)
  done (took 1.627818895 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10875156 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138358931 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109693059 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137812973 seconds)
  done (took 1.60451644 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098020056 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127395285 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110044165 seconds)
  done (took 1.438310598 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325472973 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191595574 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.166254289 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106280173 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129901124 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104075994 seconds)
  done (took 1.450771685 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09723401 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127843484 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098221404 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131071525 seconds)
  done (took 1.56521507 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094816509 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077441746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104077243 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074957729 seconds)
  done (took 1.45738339 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114842737 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13169346 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104779658 seconds)
  done (took 1.462873083 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13050317 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138869401 seconds)
  done (took 1.381620846 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105531005 seconds)
  done (took 1.212081062 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118503284 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170894073 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.197161622 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166147168 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229503685 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166263416 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142059368 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113872912 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131244371 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144908945 seconds)
  done (took 2.69277902 seconds)
done (took 17.781453632 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103859476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519590408 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.417463072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117759103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723252626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382840714 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043588079 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150891571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166774639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097763344 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141868629 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674746065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.068340755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469964563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.027405932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467068986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.72551735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093137314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120941684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094564645 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.024751519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092529771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122921774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092505771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702727202 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426262119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096052759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.465274181 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0927026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127447835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383636431 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123551135 seconds)
  done (took 17.458594119 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095865656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174164995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09930331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138582788 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124077614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094264461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124969683 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094700125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180965188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124262073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111327899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121635186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126722247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0955051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141979847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092880319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125484811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093322406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121737516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122979857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112702303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120690764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095281428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121761138 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094385325 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136321609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124751908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094196359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121658875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099464071 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128118679 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095786777 seconds)
  done (took 4.862785168 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14073764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184424923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129998906 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127628952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172204852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124740622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200468369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119138545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184390711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124960437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140905907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092961538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156946119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126214678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114861309 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124757401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09758307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122216677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093218002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123622675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141097977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093497245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121878861 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094267419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122938829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108929835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124527264 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121899915 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093758358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128855031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100315399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124541512 seconds)
  done (took 5.195963069 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097338061 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126980013 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109804714 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145836576 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102996332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126699484 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097861913 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125352935 seconds)
  done (took 2.047346265 seconds)
done (took 30.671342729 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112244996 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136184747 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109775658 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.142008213 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103533078 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.1394995 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092849011 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136524171 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.142248735 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104459168 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.144163102 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.099385788 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123692585 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093784128 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135777209 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105041762 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140897171 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10554947 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.142328845 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13628653 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094593224 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.137795113 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109808926 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.141517111 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109250395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135916347 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139939967 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103217484 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.129848417 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09535088 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.127290703 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112257026 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13138218 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109697256 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132570555 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103860691 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.130566548 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097409952 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.137038478 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.137677441 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104017182 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.141535731 seconds)
  done (took 6.215353029 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107681716 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.150325466 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.107304763 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.088521691 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.12412377 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081108624 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139014298 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087408744 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.117782288 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108563635 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082286771 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.113881312 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081397094 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101928352 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078070282 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07704428 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111172792 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076073122 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079281387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106901441 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080371219 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076142167 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.111157868 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07872873 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075162607 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111175614 seconds)
  done (took 3.674858474 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100974714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135896951 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112418592 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185042007 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.168586578 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100333349 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133061404 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141505445 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109137188 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121669534 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09682743 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149863458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111890916 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129834505 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.094200672 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138857302 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135908154 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094464701 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129163642 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114440697 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139127254 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102643288 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143956364 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133800597 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091902296 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124323693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097199707 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135893141 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104116433 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133459095 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098724972 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126296129 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125330576 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105526824 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129499774 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094613078 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142396144 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103094096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132120822 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093598993 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126166348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123469707 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114841867 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170515973 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099671724 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.137004585 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129369542 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103504324 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122355626 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111763133 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132309688 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094591869 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125580471 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091778303 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122354441 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10739094 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130834954 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094920623 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131595221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124968398 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106137305 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12518114 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108926112 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12898995 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100713792 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122286756 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093604817 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12275587 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144598117 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097861163 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165031236 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10222593 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132417295 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10272754 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131100814 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129016507 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093561782 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13784175 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11113998 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133300877 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102681902 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126048927 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096126399 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.14148483 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124892931 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095574169 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123077366 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100008204 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124995116 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094948469 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136826184 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.096480999 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12536571 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11154566 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12330499 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124032262 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100290021 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136065568 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092305934 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135563153 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10218346 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123411161 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133336305 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093494966 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125656106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103870747 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1274787 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092731408 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127561489 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100430374 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123325314 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093861516 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126286158 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094786535 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132672719 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129470126 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098123019 seconds)
  done (took 15.015780722 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229464054 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217570923 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239182316 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261826896 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136010295 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115201103 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213054148 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156112991 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124100346 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161799818 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162839734 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183274818 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139916165 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18526371 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.140826011 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123588264 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111879785 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165239387 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216619632 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292149019 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112553243 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133101695 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16295126 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161596854 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107765941 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133541043 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139998506 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10544739 seconds)
  done (took 5.773906457 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107932901 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15639099 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098692157 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146308442 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148322377 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094041808 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127958754 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094477426 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135663917 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136000961 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094082594 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130405857 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10053363 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132870749 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123907897 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103547163 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133020701 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095169607 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127107549 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097922169 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13084576 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101969029 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1290609 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122478375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102794736 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1225083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086241039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141909631 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122806478 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115460555 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121867904 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099366695 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133887292 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093971189 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123976576 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094901934 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125490054 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095744053 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125525282 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092084535 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121689948 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078340565 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122462314 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136233559 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100141486 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079795096 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130436386 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129612103 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095072374 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121020845 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096109313 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125962641 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09770007 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130150755 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098474282 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125685822 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097564209 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116802772 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103688972 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128527632 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085219684 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.130270496 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09882608 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119257263 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101702673 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129383038 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093444272 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126023023 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.099278762 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129912128 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096314403 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127706522 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091938459 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126589194 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096398968 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128946014 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096771686 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12304666 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122818263 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094981044 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076403869 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12454996 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074615572 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127110508 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09273967 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122661175 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096493664 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131231592 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139218832 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095808706 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132578158 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095200724 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122872929 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097555898 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114029589 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096672832 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139287139 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141685111 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095032138 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121800704 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108173985 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127162958 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093068425 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107179566 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102326604 seconds)
  done (took 13.045958823 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128872161 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.158396997 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103481606 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143699015 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163009109 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162017511 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101169497 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131055893 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.098223819 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143232992 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.10134367 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134156336 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097988358 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137534205 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164403043 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107591082 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13406223 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110305254 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.139866518 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172492235 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.115429385 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.150016514 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.117367487 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128613232 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130083296 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11384524 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.169709922 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113693028 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.141348622 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.149603916 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110934726 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165361944 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.151700073 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104324403 seconds)
  done (took 5.650271103 seconds)
done (took 50.487183829 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.229445741 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445797977 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.217409527 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.129608264 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.215717582 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.22621243 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.252085859 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.221597892 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.309562016 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.216639312 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.465877614 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.861368372 seconds)
done (took 58.93625224 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.29848381 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.348164452 seconds)
    (2/2) benchmarking "String"...
    done (took 1.478107507 seconds)
  done (took 3.970039615 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.58647526 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.171954825 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.478216989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.215241896 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.217581554 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.503456992 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.90002641 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.583151621 seconds)
  done (took 28.212850915 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.219700578 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.615185119 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.971140043 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.984070327 seconds)
  done (took 18.934620274 seconds)
done (took 61.150437276 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.194529685 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.258565276 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.231343605 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.196419063 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.327923884 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.239283432 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.53889558 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.224550334 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.232747783 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.215808683 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.242462214 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.214705218 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.220390133 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.528264505 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.218878472 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.218116283 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.248439637 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.694195561 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.624201326 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214217235 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.233857499 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.247365521 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.226792528 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.219568388 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.2873509 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.21863591 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218922809 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230429886 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.876527667 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.221278303 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.233859861 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.686598661 seconds)
  done (took 191.128352115 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.214370075 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.331865682 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.396326006 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.270794465 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.832968948 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.412289833 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349869076 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.897346142 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.234113709 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.243866964 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.520883232 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216618591 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.599146201 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.211569294 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225796601 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.31592697 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.546848247 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.569208624 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.231674633 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.437241894 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.242017385 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.562803614 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.49764855 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.458155108 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.249028383 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.276377269 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230826199 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223287144 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.405714896 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.474743115 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216377816 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.246352784 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849661439 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.079275923 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.238399523 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.231138658 seconds)
  done (took 151.687669564 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.499916869 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.218404857 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.21729094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217369985 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250479039 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.221149058 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811897376 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816817143 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.721376961 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.489426383 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.283897443 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493283908 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.215961033 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314444138 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.230864459 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217524716 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220778813 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.21809401 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.234480619 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260657596 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224441766 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.219152379 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812881366 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236460515 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.304032621 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224100926 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.217750796 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252331488 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.614605827 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220185687 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253082568 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556115177 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.268137778 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219168681 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.60242424 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.059357776 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334661302 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221233742 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252701122 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224852897 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.501938224 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.219695225 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.220420821 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.225495692 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.221032114 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885223262 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.221205148 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816685329 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225358365 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.183241972 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.220154932 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222447242 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.585671703 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863681467 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.235344495 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220875136 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.223520121 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.221398552 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221249909 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.256127908 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.543667072 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.318218235 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.239388415 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223923588 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256000716 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.226788278 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.272222245 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226356708 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.623461861 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.290175915 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.328374926 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815759249 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225963512 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320135324 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342134677 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.220046293 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.222464317 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221549089 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.222275606 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.334341077 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.22080599 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221090759 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.647511919 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228749206 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226900969 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.283111109 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.319917926 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.222909348 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646965248 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227824129 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.22265533 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.991084925 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321104332 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.221529589 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.223105203 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222335898 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.652359878 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818415 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50869138 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228554029 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.654607743 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.227782933 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.668810683 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.789153975 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.898815911 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.223549202 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335463084 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226219326 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225011736 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.222494813 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.252292453 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.238647247 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.283551577 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.223087089 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.625384504 seconds)
  done (took 349.340953187 seconds)
done (took 694.805444265 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.892276601 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.879293781 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.995941726 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.879048859 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.855838955 seconds)
  done (took 10.655917498 seconds)
done (took 11.812759081 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415396753 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.413208617 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285445142 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415684081 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251715961 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433310963 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394935058 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.24906853 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329961116 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.3129553 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328843031 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285052349 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253266732 seconds)
  done (took 18.522626119 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.551199436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.545826175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288530845 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.579633673 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265104756 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554728438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.437704806 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43767246 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443499814 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257676843 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2398673 seconds)
  done (took 16.756953318 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54975845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.553707171 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292595708 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548024319 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266705227 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555112616 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430029278 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443537551 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443920435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259038848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239199392 seconds)
  done (took 16.736591551 seconds)
done (took 53.173930432 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.237017912 seconds)
  done (took 2.3922492 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.270785393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.43684762 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.256297955 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.240193206 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.236964804 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.237430634 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.241797927 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.237058053 seconds)
  done (took 11.314854476 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.234029839 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.232679062 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.233177563 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.236302785 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.236466091 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.237392108 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.232240998 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.235342707 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.23617671 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.232682805 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.232552028 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.23650155 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233015564 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23663932 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.238690897 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.236749243 seconds)
  done (took 20.918362996 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23679256 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.233849665 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233997898 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.235017316 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.235189836 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233478968 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.238332444 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.235323066 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.235667457 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.234876894 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.236374576 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2345451 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.236042551 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.235310877 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.235946207 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.237757838 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.237119687 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.235714859 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.240971816 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.234389064 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.236113565 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.234970499 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.235705073 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.235497994 seconds)
  done (took 30.819570939 seconds)
done (took 66.60510288 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.474013048 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.048279478 seconds)
  done (took 9.68035389 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.237726501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.236741028 seconds)
  done (took 3.63525417 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.238768912 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.236340632 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.23691919 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.237777425 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.237138516 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.237817784 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.237033279 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.237577131 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.238642657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.236821262 seconds)
  done (took 13.533850848 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.237951512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.240046075 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.23641514 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.238117208 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.238934158 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.236061049 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.239251754 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.238055255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.238486843 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.235531429 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.238720974 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.237910317 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.240330256 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23848622 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.239672263 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.23737891 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.235629653 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.237554661 seconds)
  done (took 23.444288367 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.240061247 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239429024 seconds)
  done (took 3.640450568 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.238121859 seconds)
    (2/7) benchmarking "second"...
    done (took 1.235949068 seconds)
    (3/7) benchmarking "month"...
    done (took 1.237638982 seconds)
    (4/7) benchmarking "year"...
    done (took 1.237520014 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.238043026 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.236851035 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.236756086 seconds)
  done (took 9.82177412 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.240813854 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.424751678 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.502309316 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.851313023 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.241413428 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.243379961 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.099982452 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.242939586 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.247263465 seconds)
  done (took 14.255557735 seconds)
done (took 79.174813602 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.27210596 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.251582151 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.461551004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.255990319 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.254997986 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.58005297 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.27367934 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.36295287 seconds)
done (took 37.879503117 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.243760652 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.000216029 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.011065133 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.258818316 seconds)
  done (took 11.431864472 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.216413853 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.211727064 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.22816817 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.285739901 seconds)
  done (took 18.107059617 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.309451707 seconds)
    (2/2) benchmarking "read"...
    done (took 1.581855235 seconds)
  done (took 5.054531816 seconds)
done (took 42.004313381 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243813602 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.240989983 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.243764233 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.242357536 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.239662482 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.242762933 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.241879365 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.238664349 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.241605915 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.241965144 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.240602683 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.242711443 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242185179 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238924224 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239573494 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242932233 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.2421349 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239653148 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239535226 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.241943486 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242900053 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.240379195 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.240693044 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.240000498 seconds)
  done (took 30.955048299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.244993521 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.241462103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241485969 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.24421546 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239833265 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.242640146 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.242837118 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.241108421 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.245340014 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.245208841 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241472547 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.242314634 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245921794 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.242219733 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24664169 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.241508525 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.244374383 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242068647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245665382 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243559138 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.244699388 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241575451 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.242426947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244274235 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.242728912 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241597683 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244579613 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.242858902 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245043595 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.241606196 seconds)
  done (took 38.461431017 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249854198 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.250884624 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.245143555 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.244493427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.245712331 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.244169164 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.244651153 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.245360817 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248215069 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.245814584 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.245702667 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.245065036 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245937868 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.245854337 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.247162811 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.246135259 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.245875392 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.2453515 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.244718422 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.245969283 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.246809242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24568913 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.246445896 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.246163671 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.247020162 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24597431 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.246225939 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.247925222 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.246596733 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.248891006 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.24627161 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.245965848 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.24676615 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.245794946 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.246150998 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.247698377 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.250865081 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.253572406 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.246343193 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.24749016 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.247143113 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246747816 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.248294267 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.247875798 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.24825001 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.247706903 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.246796397 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.247268332 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.248047245 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.247648805 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.246580992 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.247847865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.248424471 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.246943686 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.248237732 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.247963874 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.24673234 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.248094808 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24824819 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.248676015 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.247898757 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.247355239 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.249010207 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.247683988 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.249147013 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.248603886 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.247356168 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.248163128 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.248745667 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24825625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24984129 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.249794627 seconds)
  done (took 90.970285067 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.251650571 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246982818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.246811956 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247878315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247810183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250039251 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246259685 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2506765 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24764892 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250113879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250714694 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248250179 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248114976 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251063886 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248855825 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246731247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250742274 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247889952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.250128811 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251298206 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249429671 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248121336 seconds)
  done (took 28.647335726 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251608788 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254397865 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.247892474 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251237226 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250819849 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251200626 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251172164 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254316258 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251235278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248571268 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256488832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251889199 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248653376 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249051106 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251854765 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250980132 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251168104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250386201 seconds)
  done (took 23.693770253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.249194493 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.248636208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.251341202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.248606003 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.248310233 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252346246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249932575 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252258768 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.250681791 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.250208466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.253172406 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25158203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.252077466 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249353841 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251590682 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.250004266 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.252992626 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250710848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252577467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250660354 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250716533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252731715 seconds)
  done (took 28.692112673 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253547737 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252237395 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25088165 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249787794 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.251154627 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.253172431 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25306517 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.2504206 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.254790612 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.253897486 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251125283 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253827178 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.251861712 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251422425 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.251993076 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250774866 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253517156 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251363582 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254007157 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.252178814 seconds)
  done (took 26.218016103 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254247271 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255677029 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255901854 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256058489 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255768654 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256147641 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255128898 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255400953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255655597 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256501707 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255840309 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256497747 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255462579 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257009943 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257081632 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257393086 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256861681 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256282501 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257136053 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257425174 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257470841 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257115751 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256281526 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259687839 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257664978 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25720258 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258387799 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257688233 seconds)
  done (took 36.360174662 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256359349 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255551563 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.253838845 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.255030435 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.255105954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.254669914 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.254506108 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.253805149 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256944551 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.254182622 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.257250804 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.25673644 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256988899 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.257578683 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258057667 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.257090128 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257962571 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.255003943 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254829194 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25519135 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257556071 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258609622 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.257979173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256118027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255541758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.258034374 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255299672 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255929732 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259426633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256112405 seconds)
  done (took 38.864475282 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27881358 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278623671 seconds)
  done (took 3.736121148 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.255857984 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259736146 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.258370028 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256117926 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257139527 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.259630241 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.259595854 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257270079 seconds)
  done (took 11.24182759 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.259032991 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.258779475 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.259363512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.260151084 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.260958214 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.260219715 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266602698 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.278421526 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.259076055 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.260151397 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.265847041 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.267490484 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.261756637 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259184047 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.260452855 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261521474 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.261075382 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.261630107 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.260323845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.261637591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261359533 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262618103 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26236276 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.258764897 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262404196 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.273174908 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.283792651 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.26074508 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259911724 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.264823404 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.259580586 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.258052423 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.261561589 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262449905 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.261842435 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.26125491 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269500384 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280343887 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26662378 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283920943 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261641867 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.259407477 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.262958314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.263385093 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26271706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.264969967 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.262146229 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.2598612 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.261802483 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.265357044 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.269198938 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263386224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.260314647 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265330933 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.265026366 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270786253 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.283319594 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.265845496 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.275165894 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.273687517 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.296304778 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.290070616 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265226778 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264431606 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272177919 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.286913727 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269249759 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.283433861 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262027019 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.26219057 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.270110602 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294451307 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.289945035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.26377785 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264358705 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.26420515 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263435909 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263792224 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270732055 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285854368 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.264250399 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264144091 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274495863 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285595265 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.26459905 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.264877807 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.264778438 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.265199918 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.265935554 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2755125 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.28377631 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.265073509 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.264786974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.265262802 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.266740961 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.266447288 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.266004843 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269440279 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.264254556 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.266206156 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265739206 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268951508 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.275110245 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266223066 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266293183 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.271149744 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.286717704 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265981738 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.271372269 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.267771982 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266058761 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.269286266 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273143838 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.263811133 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269659707 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.27446285 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.26696435 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.267480352 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.266756978 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.26714321 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275777401 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.292596565 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.267098479 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.267951546 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.271033397 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.279480955 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267996873 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.268627802 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.266755598 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26555021 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.264477115 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.267778473 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.267178749 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.268084964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268008757 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268559745 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.26522654 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.269385394 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267144855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.268866954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.267725698 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.269324471 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.268647551 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.269266549 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.269181717 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.268363205 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.273841085 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.288026528 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.268785239 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.269164609 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.26538379 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268803828 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.269855219 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.269528494 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.268788362 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269138643 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.268776239 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.269495493 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269200306 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.269386743 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270219405 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.269620544 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272880142 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.269817427 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.272953016 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.270460372 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.267240294 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.268487271 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.270705909 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.269389532 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.271205874 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.269770995 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.272338831 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.279705344 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.270163401 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.269916733 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.271909052 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271008292 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27008899 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269947787 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.273020092 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.278459893 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.270842454 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.276606309 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.291566059 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272783001 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.272223694 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.270890971 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26983552 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27172782 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.274254156 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.279883053 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282930744 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297468097 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.272751765 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.275591532 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.272421142 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.276719008 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.273991293 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.271707928 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.272531854 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271945361 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271645057 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27214573 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.27280581 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.271733217 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.271032641 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.272109966 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.271884081 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.272285425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272245818 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.272313609 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272646515 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.270717717 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273441525 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272850182 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.27233722 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.270938654 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269983737 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.27340652 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.272478185 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.273097011 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.278292213 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.270389912 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275249571 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274674402 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273707071 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.272200425 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.27411625 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274622969 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.273431434 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27973855 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291948567 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.273258649 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279114131 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.294798826 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272957974 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.277216652 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.273886875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.272754696 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.276351255 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.282157568 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273961002 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.273681619 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.275275067 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274975269 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275032668 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.280118087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.29277635 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.275381479 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.275582659 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.2763473 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.274745275 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.275844739 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275814575 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.275309099 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277481236 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276369637 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.276278616 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274925453 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.277235717 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.277197577 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.275587032 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278319296 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282983798 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.280680892 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.277657966 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.277375757 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.277123192 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.280086225 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.276151471 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.277061634 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.27642635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28811676 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.303642951 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282671618 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.297233497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.276283469 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282855177 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.299531692 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.281266227 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275374797 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275908517 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.276828866 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.276246785 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.274767113 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277620975 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.278680575 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277323675 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.279159189 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.284767405 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.278040639 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.276622548 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.277634574 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.278632928 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276924777 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.276825042 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.279480361 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.279577195 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279370513 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.278152453 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.277464309 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284123833 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297607267 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.278485968 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.278498473 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.277125453 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.277977485 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.280219011 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.27870816 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.280430423 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.286937121 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.28241388 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.28753657 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.28008244 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290867932 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.28126754 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280953801 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.288293581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.278102196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.276697515 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.278059325 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.281190917 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286109072 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.299350357 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.282472208 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.285856743 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280125035 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.281214558 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.279429234 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.280745649 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279272139 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.279953436 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.288083227 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.300063941 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.285184976 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281477624 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.279614481 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.280998714 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.281133564 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.279778421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282688556 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.280579984 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.282427791 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.280580828 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.281209675 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.281794274 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.281529051 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.282870058 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.279105459 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.281981017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286015169 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.303919454 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285094493 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.281011041 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.288194046 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.301914317 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288989302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.30418348 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.282412733 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.282470758 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.282310046 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.283194854 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.282002548 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.283193023 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.284285955 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.283806707 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.28847056 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.282898606 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.284695287 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.283226681 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.284085273 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.281932022 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293044816 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306338833 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.284832964 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28868807 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.280605281 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.284131347 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.289150184 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.283495939 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.282660209 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.286160809 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.294410675 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290886386 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.283969951 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.28452395 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282547118 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284817491 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.283929853 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.284517899 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.284560529 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.283944171 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.285208437 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.285322809 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285577946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.286643199 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.285348144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287039691 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.284884348 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.294025974 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.30528546 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.284652066 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284770194 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.284491887 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.28583166 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.285623466 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.28623386 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285331939 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285971006 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284982408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290716835 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.291563523 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2875492 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.285529959 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.287174156 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.286085153 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.286502557 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287022345 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.286925294 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286618532 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.28613693 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.286358617 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.28857914 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.28511934 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.286863823 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.287243399 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287074716 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288228848 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.29220542 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287254245 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.284679787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.286685144 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28624236 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.286156093 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.287066304 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.293537149 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310308922 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.296387824 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.295308076 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.291473432 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.286505384 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290731856 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.294574928 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.286462227 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.287779283 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.288391373 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.288375319 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.288513855 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.291057444 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289657747 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.293099696 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.308533454 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285883221 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295988077 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.309722006 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28931987 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.289982632 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.293891772 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.288336381 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.286296203 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28961995 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.288445833 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294540682 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.30943482 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289467832 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289072198 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.287426384 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.28972081 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293913317 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288654397 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.289249544 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.287262363 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.289615839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289325496 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290234785 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.287750432 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.288850344 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.288915794 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.293266606 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.296923902 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288924815 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291900914 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.289774435 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.291705735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290209714 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289452228 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288365005 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.288907369 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.290029036 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291352729 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.289964882 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294113638 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.289467165 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.291802752 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.291904557 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291704222 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2934304 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.300293942 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.299003234 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2898608 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.290245126 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.292380783 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.293585172 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291269127 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291136768 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29094364 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.292688007 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.292202947 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291804886 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.291641396 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293396848 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307212733 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.313196281 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292414173 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.292721887 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.295361889 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.292664852 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.289490343 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.2923929 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.294551706 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.295291572 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.299115323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.292625026 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298613088 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.31152619 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.29431449 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.298112689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.295263917 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.299735719 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.295310353 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295168665 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.295360886 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.297841907 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.308134855 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294377177 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303597977 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322877033 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.314021052 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.294112212 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.295176384 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292369297 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.295763552 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.293903533 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.294751858 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.294984128 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294723704 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.29391683 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.294984214 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299770247 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295139166 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.296549957 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.295143021 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.293062255 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.295244725 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.293265587 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.295434217 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.295356027 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.294550015 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.295947165 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.296453607 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295732783 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307704035 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.322298261 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.295445683 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.295936103 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.293282373 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.297938367 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.300375569 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305436385 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.302482555 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.295835961 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295560576 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.296503043 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297132305 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.294942028 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.296533621 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.296210028 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295693006 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.293643588 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.307740414 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322897592 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.299924448 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.295055786 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29745888 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.297215681 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296770166 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299292354 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.296396822 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296498247 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.299459515 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302927559 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.297105747 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.297850749 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.299322186 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.303950604 seconds)
  done (took 764.816570672 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294763848 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29590674 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294568174 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294986229 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296250848 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294648299 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296779459 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294819824 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295147409 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294806575 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296364565 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295636324 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29538 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296939201 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296017451 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296181183 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295148009 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296084953 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296135493 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295773562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296231608 seconds)
  done (took 28.423061228 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.299359155 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.296314559 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297066296 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299957024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296160245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.301953744 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296761175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29935515 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299516006 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296085602 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.299985271 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300919284 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.297275457 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.296553848 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298171215 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299951941 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.300557739 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298116042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.300196535 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.298461549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300674455 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.299170705 seconds)
  done (took 29.789253119 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.301210188 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.302362041 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.299586688 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.29974064 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.300613564 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.2983523 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.301517288 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.301705719 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.30196742 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.302125727 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.300013427 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.302475192 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.310556405 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.305844993 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.302390232 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.302489705 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.446046718 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.301965266 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.302456609 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.302221042 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.299781292 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.30744225 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.321447746 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.298759807 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.301080909 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.302318838 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.301385302 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.301917413 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.303646711 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.303379188 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.310179524 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.303179913 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299953313 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.304069938 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.301033013 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.302876635 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.30705574 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.304957922 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.299919887 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.303658789 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.313499844 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.323666677 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.303447961 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.306823624 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.325385388 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.302815692 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.305800282 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.310556414 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.301572959 seconds)
  done (took 65.275368098 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.303620627 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.304179916 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.301075303 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303383884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.303617591 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.304013708 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.304775565 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30357576 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.300682518 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.302918216 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.304244808 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.303012491 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301521632 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.304054089 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.306159489 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301343035 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.301320963 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301471478 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.302189871 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.302799203 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.302963923 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.304811166 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.304988527 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.303279479 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.304981373 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303529332 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303845458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.306867847 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.302291287 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.303163781 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.304662856 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.306020661 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.306456469 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.303585675 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303291855 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.307231155 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.306161357 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30331085 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305919845 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.304207711 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.307194403 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306199716 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.306304796 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.307312583 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303048556 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.303303287 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303473105 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.304858953 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.304644301 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.306721375 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.307263655 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.305545377 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.306924352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.303342306 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30662176 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.306622791 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.304748973 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.304223453 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.306611338 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.304388855 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.305239231 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.307201881 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.304970504 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.308621912 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.308755268 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.305561817 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.305157344 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.308068724 seconds)
  done (took 89.936873707 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308574551 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.30804965 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307823236 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308752838 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308260952 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.307380344 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.308126712 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.307920938 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308709144 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.308099947 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308143587 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.307804625 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.308370927 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308928873 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308249649 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309233758 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.309309053 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309411402 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.308059311 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308456033 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.308897257 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308360656 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.308514842 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308813876 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310609513 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.309811701 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.309263319 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309879182 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310400767 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.309823559 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310453565 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.309660592 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308545708 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308878976 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.30974969 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.310245454 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31049014 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311024274 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.309804959 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.310042658 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.310950897 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31010829 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309863826 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.309677597 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310508991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.310001227 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.309405985 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.312066772 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.310970439 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.311577267 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.31105804 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.311767849 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310508639 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310328854 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.311165354 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.311038398 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310452056 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311180903 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312877398 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.311066805 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311983188 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.311666103 seconds)
  done (took 82.427881891 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310284446 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.312090512 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.30833508 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.309833295 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.311561848 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.308332918 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312581882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.311997911 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311881796 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.311668739 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31189866 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309423175 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310270929 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312289723 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.309644288 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31141362 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309807907 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.309735942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313565362 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309761903 seconds)
  done (took 27.443971706 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.310512855 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.313749276 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.310626537 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.311866516 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.313515435 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31071276 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.313337691 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31304815 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310308615 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3125726 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313337064 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313587379 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311940044 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310743696 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313676889 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312096331 seconds)
  done (took 22.224299974 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.310618341 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.314897492 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.314234644 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.313446289 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.31224055 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.31252893 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.314371237 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311769841 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.311755138 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.314587088 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.315066131 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.315266651 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.313600647 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.314281753 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.31148862 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.314327954 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.312843105 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312613874 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.315110557 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.315750585 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.313011457 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.312914923 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.314825018 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.315519242 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.312849069 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.312791634 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.312848299 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.312992122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.312991812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315882976 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.314110088 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31300906 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.313841936 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.313668587 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.315818859 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.313943794 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.315673808 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.316920388 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.317198686 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.316395006 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.316384753 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.31414682 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.317743195 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.316922905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.314018636 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.31724019 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.315037541 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.313565219 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.313173875 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.313145993 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.315856834 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.316125065 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.315973749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31797018 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.316043098 seconds)
  done (took 73.52193951 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316164426 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315763156 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.313794628 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.316432194 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316196144 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.315065601 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314043224 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313952358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311307377 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313962204 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312895776 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.316651972 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312095334 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314123201 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312508764 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313641261 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.312664342 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311930438 seconds)
  done (took 24.88503787 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313041905 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313601435 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315184033 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311616483 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.312701756 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315628363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31216396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.314940624 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314495575 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313991506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311322063 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315418064 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314884203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314830892 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312535125 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312908718 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316479144 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314830075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311550823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31201926 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31495477 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31489934 seconds)
  done (took 30.133992567 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.312351749 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.313368406 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.311287384 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.328156347 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.330671694 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.335598643 seconds)
  done (took 9.161439122 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322464899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314151201 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312023159 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313727327 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313270116 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311361612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311361363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311622551 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314348794 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312767649 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3108229 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313848697 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314739179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311563823 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314417619 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313617914 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311465454 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312617553 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313211643 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314713781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313008648 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31490015 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312035259 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312560555 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312369407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313378144 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315151042 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313720767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312618919 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315643722 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315639281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312269935 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316206933 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313028664 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316452568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315296505 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315303437 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316219847 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316128155 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314008813 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316802845 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316171536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316182558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313404323 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317292761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313624579 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313708991 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313640476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314294124 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31678294 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316849037 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314410589 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315979304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316891726 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316009949 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31740626 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315285583 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315715444 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318480585 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316093097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31457971 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317892484 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315392198 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316052172 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318697376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315160219 seconds)
  done (took 88.020959671 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315885156 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314215415 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314934139 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316679749 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315804473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316022915 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315868877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315427396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316314105 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316407501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319041932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317075247 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315096714 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315650097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315256853 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315889442 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316168954 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316187924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316785175 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319329294 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316318785 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316419287 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316278926 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316705184 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318135408 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320088723 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317528794 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317488015 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316920088 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317122369 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317410034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317617882 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317184745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31711678 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31771225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317158492 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316101916 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316845592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318198694 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31946495 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318202309 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320607129 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319001453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318001021 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318074402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317757371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317263342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31692131 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317603125 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316798361 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319699536 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317576719 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317830507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318767163 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319106134 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318025603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317989225 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318436247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319051321 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321252936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318651697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31864394 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321849625 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318055141 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318336414 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319430134 seconds)
  done (took 88.190290103 seconds)
done (took 1783.259266667 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.362033004 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.373352936 seconds)
  done (took 13.971230612 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.482313456 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.436542924 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.319556298 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.349373446 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.320451569 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.343415881 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.316282141 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.319609629 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.318588643 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.319143555 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319396148 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506695185 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.371012584 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.320492937 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.317697199 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.414609116 seconds)
  done (took 43.014465975 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.349629418 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.326185948 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.445281156 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.349509696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.349378662 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.520358809 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.38714353 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.331403094 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505363836 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.367973826 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.978135186 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.348983192 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.325704599 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.495315098 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.342749579 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.526702508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.586349918 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.973498023 seconds)
  done (took 30.74736062 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.807458096 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.335387904 seconds)
  done (took 9.379112447 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.334807709 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.350944626 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.321761477 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.32286998 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.346551703 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.371528527 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.42811207 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.408745452 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.342273418 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.344028993 seconds)
  done (took 64.810469048 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342542666 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322560369 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.323609036 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.320765651 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.328385844 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312824235 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.321682826 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.31454018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.180178446 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.458337187 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.323134234 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.330792892 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342908963 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.323866591 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.320581304 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359997574 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.470501581 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326800743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.320458724 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.328675138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.322043358 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.442840071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367908672 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325063515 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.452908633 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.175103748 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.333035361 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33070829 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44913124 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.322344578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.323602389 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322232465 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.323826712 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.942526576 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.860440983 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.338226291 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.346914306 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.331260471 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.321346261 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.487347186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.327927581 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.330479654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.315645556 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.855469524 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.459077594 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438997662 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.614259436 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.347859959 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.32446888 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386747278 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.328361354 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.32360545 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.351851197 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.079276393 seconds)
  done (took 111.515115322 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.361924541 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.705309492 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482361325 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339478217 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.955965419 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018926145 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.334722367 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.607921154 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.385746451 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313162696 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603959748 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828531453 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.33632429 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.320457669 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.967380994 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.397441765 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316264798 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.081247354 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.33900967 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.320833566 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824762286 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323975261 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.337953736 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.490462439 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.352636712 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773324179 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.836688325 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.64279198 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.337236991 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315804851 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.783521424 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336666531 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.316888292 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.317265147 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.57876631 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67372258 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.67039795 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.3369344 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345563673 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319731515 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330756662 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769831836 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676350436 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333512738 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339563555 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782225719 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.338996745 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.316224858 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316826125 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517327448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.923961399 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.317787466 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.738727079 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.318195542 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.668320997 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.330761913 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.40411792 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.801198867 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334303634 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.294677309 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371880563 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317667789 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320315916 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319072888 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319879359 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665608141 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.453551836 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324894311 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.66392397 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803453285 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34205064 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.844230816 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.19368019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.338364161 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.409585146 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317107506 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.857943207 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812046216 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.351804359 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31860444 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652798315 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.335187185 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603869898 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337344634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319124678 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854295945 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.326175934 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.359985042 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318724289 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.318087931 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.939102538 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32019 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617345918 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.387938627 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.318817218 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.319373411 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.333310466 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320107305 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.327368855 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.326711019 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.846940445 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.349561281 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.320397217 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342472989 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3199835 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.3207659 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.323079904 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320708786 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53853373 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.877774201 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.348136078 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318533112 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.321337862 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.328570565 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.482902859 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.322045868 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.639193604 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.344348668 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319971687 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.324932609 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.058691416 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388812178 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321964176 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.343803642 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.212337294 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.535563657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340512061 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.338992775 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323486401 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.34373511 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.66793434 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346648482 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.403920629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324565033 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039588178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.365831669 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.322817042 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.581238981 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33220244 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.204422814 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.343022975 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323022169 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628167689 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.600820158 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385602284 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.325774452 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.342913526 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026918782 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.392343029 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469710345 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342152269 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.364462996 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521670893 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781832316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323820748 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.939768876 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324004176 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535759014 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326500521 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622138433 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.822969794 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346866129 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325909716 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037707744 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030216101 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.012197308 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.323731145 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.608584314 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.280847834 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.803426002 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324363747 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33135059 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.754399021 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328783858 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326502934 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.323946445 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.324320137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.453581465 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497285449 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.507706438 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.328970309 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791194269 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35402374 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325819181 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.354562165 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325388268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.674359451 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.421653304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.326829812 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.369069459 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.327217274 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325601482 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811499829 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.302620218 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.333201339 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478254575 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.967902437 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.349787705 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.329080807 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.052132658 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.635030923 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.849576095 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.411114047 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648563703 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.352414243 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.363873447 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.918088014 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357359638 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804876187 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352847676 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.327527395 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928158399 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.35087689 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.683351582 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.327555849 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327105039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884642277 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.350806457 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.330952551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.670554479 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.355506179 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575744854 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.334959675 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.357220484 seconds)
  done (took 1108.852705836 seconds)
done (took 1383.53166253 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.327992501 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327650967 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.316743938 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332663764 seconds)
  done (took 26.553880944 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336756281 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332677549 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334585729 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.331321957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335013902 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.332141533 seconds)
  done (took 9.250366553 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.398155163 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327541113 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332773533 seconds)
  done (took 19.30666043 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.544442432 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.658234831 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.704509161 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.607501502 seconds)
  done (took 10.764479986 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.334966816 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.334972364 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.334811705 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.336168825 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337319946 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338261563 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.336354035 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337143225 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.338382975 seconds)
  done (took 13.27486313 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.394664581 seconds)
done (took 85.800153195 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.354134811 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.312878573 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.195994368 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.636978944 seconds)
    (5/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.331486369 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.207790286 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.852423617 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.392021172 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.786212395 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.907948938 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363110389 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440205446 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.342118599 seconds)
    (14/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365590206 seconds)
    (15/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.433921736 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.838345696 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.816067541 seconds)
    (18/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.329700097 seconds)
    (19/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.717420012 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.352468934 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.321591438 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.907014836 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.355927801 seconds)
    (24/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.515435077 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.302146083 seconds)
    (26/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.318793573 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.469111924 seconds)
    (28/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.371392754 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.321062262 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354732064 seconds)
    (31/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.456913143 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.586351669 seconds)
    (33/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.334322756 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.404713364 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330408047 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.526913261 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.413565569 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.454107083 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.691730056 seconds)
    (40/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.232902444 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.364597372 seconds)
    (42/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.323240205 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.365878919 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.440810979 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.328101255 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.332692624 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.31228088 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.621340841 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.751050108 seconds)
    (50/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.363677247 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.312122599 seconds)
    (52/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.964082054 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.17255044 seconds)
    (54/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.33922385 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.629230315 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.133084661 seconds)
    (57/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.550480654 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.412873613 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.020691538 seconds)
    (60/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.960636074 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.556626576 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.588642798 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.93915871 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.862753564 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.273992282 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.333089203 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.313225735 seconds)
    (68/309) benchmarking ("sort", Int8, false)...
    done (took 4.39840061 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.727535837 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.338936573 seconds)
    (71/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.45060879 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.733571231 seconds)
    (73/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.167880663 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.453249618 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.685749703 seconds)
    (76/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.340903275 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.547727413 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.395845148 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 5.669967461 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.100608598 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.808226955 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.577140526 seconds)
    (83/309) benchmarking ("sort", BigInt, false)...
    done (took 6.341156301 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.338623609 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.351321403 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.76388452 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.441440591 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.314211982 seconds)
    (89/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.983147743 seconds)
    (90/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.554745716 seconds)
    (91/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.568284719 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.290378572 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.438320314 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.841890242 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.43227329 seconds)
    (96/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.703090992 seconds)
    (97/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.665532095 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.056174204 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.356949264 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.413925972 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419349719 seconds)
    (102/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.967408277 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.459202049 seconds)
    (104/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.316866786 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.319391908 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.489824181 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.324708453 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.807132089 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.393331239 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.362104523 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.535585953 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.035781592 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.409972636 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.2170592 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.336199859 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.56817299 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.336313811 seconds)
    (118/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455629768 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.408738885 seconds)
    (120/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.168960635 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.523018669 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.714372781 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.323996745 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.433183684 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.337931821 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.886281089 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.384646823 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.113285724 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.355548949 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.626780424 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.337191796 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.392821795 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.33022408 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.131426494 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.617840454 seconds)
    (136/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.352187852 seconds)
    (137/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.388908186 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.74099463 seconds)
    (139/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.114454653 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.241406296 seconds)
    (141/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.318354429 seconds)
    (142/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.429020532 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.439968787 seconds)
    (144/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.318858581 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.347835369 seconds)
    (146/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.332499022 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.343429787 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.165905687 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.364185526 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.573989211 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.355605634 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.348046417 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.45949547 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.569600061 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.554934926 seconds)
    (156/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.708073549 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.368717213 seconds)
    (158/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.655893014 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.339373889 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.37473786 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.371645226 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.889971271 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.327450722 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.32907309 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.201854376 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.343806672 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.331170062 seconds)
    (168/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.429994769 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.976539359 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.18482686 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.377970221 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.710148293 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.388620371 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.757092196 seconds)
    (175/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.395370575 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.624767944 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.916658978 seconds)
    (178/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.89847121 seconds)
    (179/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.922072282 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.438240238 seconds)
    (181/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.320251008 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.408246967 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.327746834 seconds)
    (184/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.303379192 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375385396 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.624460571 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.327334638 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.431758397 seconds)
    (189/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.781707951 seconds)
    (190/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.37465038 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.38302642 seconds)
    (192/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.357487166 seconds)
    (193/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.993075089 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.162545193 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.062062501 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.344378311 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.473694923 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.341148869 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.368568433 seconds)
    (200/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.583647262 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.343411767 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.411237781 seconds)
    (203/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.352562723 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.407482159 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.340431571 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.435812527 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.341361416 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.349919964 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.36139233 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.341323206 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.346855428 seconds)
    (212/309) benchmarking ("sort", Float32, false)...
    done (took 5.383750398 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.799156739 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.401466906 seconds)
    (215/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.173675187 seconds)
    (216/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.960375421 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.337697855 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.331720418 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.600845043 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.982669283 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.323990489 seconds)
    (222/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.334246155 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.332059073 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.343059105 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.525130877 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.065955055 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.045618963 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.375748429 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.324584034 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373022222 seconds)
    (231/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.983846226 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.232284534 seconds)
    (233/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.726788598 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.317423773 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.41093093 seconds)
    (236/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.409275973 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370472241 seconds)
    (238/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370823562 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.469273772 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.344168605 seconds)
    (241/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.349818996 seconds)
    (242/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.007200078 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.935295837 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.459313378 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.34780835 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.360690087 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.33252219 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.389629213 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.344388351 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.439487499 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.363451685 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.033021359 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37910922 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.365332795 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.723962979 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.333096389 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.311250403 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.565029812 seconds)
    (259/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.431529699 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.370175359 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.445668206 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.325308344 seconds)
    (263/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.370536448 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.431089622 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371653263 seconds)
    (266/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.366284591 seconds)
    (267/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.731091998 seconds)
    (268/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.333671295 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.727076702 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767954543 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.965987401 seconds)
    (272/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.154024899 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.844524913 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.398413201 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.101875066 seconds)
    (276/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.348491752 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.447785831 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.403514613 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.34550405 seconds)
    (280/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.283896578 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.734958998 seconds)
    (282/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.475939084 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.933702395 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.361458732 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42960468 seconds)
    (286/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.358995109 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435763976 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.432641957 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.516845091 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429537175 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.735707542 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.387317202 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.169243702 seconds)
    (294/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.759837343 seconds)
    (295/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.761322126 seconds)
    (296/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.876007115 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.991375866 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.227054579 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.389650007 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.348019792 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.349605573 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.41832672 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.940596803 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.651616634 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.122758658 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.156676149 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.420936833 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.364665892 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.4107709 seconds)
  done (took 1044.225304922 seconds)
done (took 1045.481786289 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377220903 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376162023 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355116679 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.376386404 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465885185 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.378467732 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.365496902 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.35797638 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.407566043 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.405130869 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.353898971 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.376471293 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35619675 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354117963 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355566887 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370156389 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.37776831 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355979021 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371581812 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.365079431 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.370870634 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354698818 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.407787085 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.376107929 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359065301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358037154 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358539404 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.375439984 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.465779862 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.362650766 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358464317 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367489986 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.373112228 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354281511 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350140662 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376143355 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366770238 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.365837381 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359885223 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386564881 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.770121399 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.371051667 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.3597822 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.356913749 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357218412 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.359457261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358912569 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.362182731 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369830417 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371793643 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.758121254 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.386869115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.359863135 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.35683232 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368040471 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357226511 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.364233389 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373688697 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376021185 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373927102 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.37952798 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.370038255 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.360090909 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374298879 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364376577 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.791192322 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.370203079 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.361645234 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.765477705 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.379972064 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.795104308 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383678642 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.35886172 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.372001582 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.390416122 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.389222127 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.361229039 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357206269 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.365078998 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357544019 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369244778 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372752685 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36470773 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360487916 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373448154 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.379991611 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.369959098 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.359662487 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.370201854 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.377497685 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.365947787 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.369750212 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.3625121 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.354500681 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.369288979 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.364357488 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.361380106 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362142495 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364637592 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.371430762 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.764901493 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396192471 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.356894962 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.356397944 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360408241 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373592087 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.766411079 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.377414001 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.382656908 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409323251 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.362458846 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.382712623 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.371105195 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377914492 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.371031185 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.364007303 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357090564 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.383700843 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.769484533 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.392868281 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.362908948 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.359041503 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378327821 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.363397106 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358154266 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.395090205 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.370696534 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375714107 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.482468035 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.37219086 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.392062681 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.359014085 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.36565837 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38336048 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378691305 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.393753467 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36562966 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37885695 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.378467644 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358453672 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373328563 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.373723287 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.363964373 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369749869 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.357998984 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386761689 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376591007 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376468628 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.384683945 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483799919 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.360104618 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.387494057 seconds)
done (took 229.170298878 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.418617524 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.350931407 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442764239 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357638017 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.45826431 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462846685 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.355265718 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.356074148 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355245817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730377401 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355702653 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358862613 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349764083 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35554617 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.442913428 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361244907 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356202581 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.697720021 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.358075444 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.426982575 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.355486734 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36390396 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357640592 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.737068252 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.355048158 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360820162 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.434556467 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.3597985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70404659 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.358691038 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.361057174 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.705376593 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.449804474 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376761441 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.368809022 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.365666147 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.459594786 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37754116 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.439022898 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.4421937 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443584272 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.396402534 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.357136155 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.360788805 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.359764375 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.360872534 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355960219 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386833802 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.354731602 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.357542026 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.696347391 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.368623307 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.356702462 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.357078125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.357348259 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.389529986 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.357036227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360968765 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.447327579 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.3606572 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421371567 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.738794616 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.733430713 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359841329 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.357172914 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358545966 seconds)
  done (took 150.108992025 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.426322038 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.43775263 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46961187 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.379247756 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.411380257 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.47286938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.380068006 seconds)
  done (took 11.248433892 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367464227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.361724936 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.409900343 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.408058597 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362223674 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.50996897 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361967598 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371673271 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.359958185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.413381085 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.36260462 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362088172 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36886745 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.362079519 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413771453 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.371924785 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.475375897 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.362642253 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364056591 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517904832 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360023946 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368080159 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412949961 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.372785915 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.363311784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.36738185 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.925957813 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362949157 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359415547 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361767081 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360644195 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.398664077 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366657739 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.357245661 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358478532 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477709582 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.365026924 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360173677 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.362510537 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.360160759 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362897379 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.362944841 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.363779241 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360492889 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.363191934 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.385500425 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.363207294 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.36992665 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.362385465 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363887388 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413535003 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36317435 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.362160545 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.361571587 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419630496 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372796488 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.364394921 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35988939 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.363388121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362279203 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520174376 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410599418 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.365128713 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.411257353 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365124872 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.365045767 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.364098055 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365424092 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421386426 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365203452 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411635147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362539884 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.519644552 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387408758 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366022187 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.367312066 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.367124865 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365525129 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.361055067 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369998142 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.365033975 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.366031082 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37025838 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364758089 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364088149 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466522174 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474739532 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.364276742 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.377668209 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37229165 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.364023686 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416839239 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36622446 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.364550623 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419001688 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480747522 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.41999529 seconds)
  done (took 156.134748691 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.370653918 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.374277223 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.368598167 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.382353242 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367551282 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.368034499 seconds)
  done (took 9.509664561 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.369274342 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.369169166 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.3679696 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.36820811 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.367922269 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3669394 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.368475189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36820775 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370514693 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.366908363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368062982 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.368836495 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.368893365 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368014383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369668382 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.367375132 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.368092862 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365051967 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.368534947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36899044 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.472215281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.367396214 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367827148 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.367513487 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.373379641 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.368714917 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37652222 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.369410073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.368980857 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.375055643 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.387368495 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.370187562 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.368335393 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373824639 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.3726743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37006465 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373003723 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.370843743 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367269427 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.368861934 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.371446181 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369765958 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.369287988 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.371481999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.371695392 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372917082 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.374416042 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378734895 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.37099987 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371539578 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.370756544 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.370542837 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.369789047 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.371431348 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.372083561 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390290762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374681264 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.371622446 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.370218288 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.371286363 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.37270965 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.370729671 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372919982 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375047709 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369416516 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.371999195 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37106278 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375533018 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372294299 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.372197561 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372171729 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.369049828 seconds)
  done (took 101.096829969 seconds)
done (took 429.373314108 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.731209965 seconds)
  done (took 8.013980181 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.374825373 seconds)
  done (took 7.659730412 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.730030383 seconds)
  done (took 22.014927167 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.409451267 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.41294856 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.391176224 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.370682294 seconds)
  done (took 26.866196098 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.784684161 seconds)
  done (took 8.068049403 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.368247303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375611755 seconds)
  done (took 14.02818861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.848837542 seconds)
  done (took 8.13279981 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.912678816 seconds)
  done (took 8.200188366 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.371189186 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.383693019 seconds)
  done (took 14.308971159 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.344935974 seconds)
  done (took 7.626975143 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.445778552 seconds)
  done (took 8.729449339 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.376207095 seconds)
  done (took 7.661081608 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.430595099 seconds)
  done (took 7.712483241 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.302233572 seconds)
  done (took 9.586207668 seconds)
done (took 159.898497571 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.363413451 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.369464969 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.366550849 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365485086 seconds)
  done (took 26.748726918 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406114617 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.405789344 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407310369 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41723441 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408649587 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406724257 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.401820704 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398787191 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417033613 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.409280181 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.408061892 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.408586331 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.406025421 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.399111498 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.408603385 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408931858 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41738532 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.407003459 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.39942914 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409616013 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373672402 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417728908 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409273285 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.37505036 seconds)
  done (took 35.010582654 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.89194757 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444424933 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.525258501 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.425302401 seconds)
  done (took 7.571058404 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425486917 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426059817 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.43962798 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.47669375 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.542481876 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.436894294 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.400018999 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.39547518 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380810949 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427559917 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.503848364 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443405733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.573332156 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.375220347 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.557118402 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.375564665 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.375692224 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428286724 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47911169 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49198138 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.376335499 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427545992 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.430958186 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444470504 seconds)
  done (took 35.91922869 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.374918603 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382806374 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374423646 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.372914237 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.382319232 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37462578 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.37418973 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.375552861 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.375295167 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.381208376 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.374844775 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387072955 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.374339554 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.375828603 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382733322 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376420953 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.380313227 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.376295216 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.375055738 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379902282 seconds)
  done (took 28.836718306 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.369001698 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.173354193 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.7206637 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.624079575 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.368550018 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.376911744 seconds)
  done (took 28.91981079 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.444167313 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.595883596 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376783085 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.729840034 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.828130564 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.393547002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.377498779 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.614593991 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.933958662 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.928373903 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431939676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.444698539 seconds)
  done (took 20.387178501 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.373952708 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.376341612 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.383676801 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393800164 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.429222761 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.403379893 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383919581 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.371510653 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.438250535 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.455903392 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.404089424 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431630229 seconds)
  done (took 38.135202198 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45908536 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414937055 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.388441822 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384292279 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09262558 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584739799 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41123363 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.81420746 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385370117 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646014542 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37206564 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487026038 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628859216 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37612113 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382899518 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.359245856 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624185474 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870438453 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382002449 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.308803174 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406712512 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374182286 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.407100517 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410538597 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586340777 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.515953372 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.637587139 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15212206 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67237132 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394078553 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385533098 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375395052 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648663859 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060227153 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498384789 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385682803 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390821283 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005075667 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.360535329 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.328613567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299716976 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386293441 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385593062 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376952281 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310588061 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377023284 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824656984 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.388644473 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.086760744 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376193161 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387733258 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470868288 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380747556 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.946006589 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382861835 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399608261 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.371979622 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401499633 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964257829 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.815203471 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395658077 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317986019 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379421203 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.397179707 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013841787 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.495599669 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.379044488 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375364245 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305230032 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.36975747 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38632758 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509069655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.384354255 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010945416 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072597464 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392472809 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296939674 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908307649 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362115015 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.300131932 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586933495 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.135034187 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29417056 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.307749609 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295006711 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082418331 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374199383 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.780797843 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388255671 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.810680141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.377918153 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375953695 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382791206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583120761 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.238159763 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359881089 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.309895858 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513577235 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380977499 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.79328723 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301417008 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.364028439 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61654483 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.570147256 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370440717 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.356833408 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59109522 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3689278 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.404644247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37181882 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.378255213 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.931728435 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390709912 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788399621 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386052026 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.137086584 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113018392 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369533821 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470013429 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362008023 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611840355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.132679149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245797476 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43047313 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366866247 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362532948 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.397550541 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962303567 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.242299033 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.357870244 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36316762 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.379633965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.362379514 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308372327 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.362556668 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367204135 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.149397229 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.587181878 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367682652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644440603 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297316664 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510894169 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372472187 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.586232435 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575225408 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.378244849 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622964911 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368956392 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377733728 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381771492 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382089196 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465934445 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385104807 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.372302688 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626273236 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367428166 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367023733 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.4129694 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148416036 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372072638 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368863923 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363772337 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94137801 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35856178 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367556076 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308107714 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.377769457 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43264286 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370538365 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.376065217 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.182826431 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383232875 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.370237101 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.3623032 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594381655 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373643276 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.394395311 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452702556 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.561482299 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951279521 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395344868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.298723658 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.076009459 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.058333027 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364611007 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.554048451 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365522904 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376363495 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376336532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374026575 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942412895 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384351076 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.327855871 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379928028 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376309061 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.371360374 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36730755 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.162365962 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833586796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387518015 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.383920157 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509476986 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.379592466 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30134084 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.882900942 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.373242262 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367150849 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.144099247 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401922471 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.323997738 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866699728 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625412088 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369179148 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379060995 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.49406481 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406934504 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.367262751 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370602947 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37658047 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.378466661 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376510897 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378760623 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.390196726 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.737315857 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936064729 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084719431 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929300056 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321574702 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.383278587 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.269242931 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80954773 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312125522 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.02583436 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556016475 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827284713 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321915007 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571433043 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.580308598 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14988349 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380142466 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596021329 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301856033 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.370102302 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406967669 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581036907 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404629721 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384018809 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.305239482 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.887022326 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604450204 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333514893 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4541096 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802939018 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35326204 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173733913 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.390531331 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.755527976 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570078163 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.922312248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781255517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385227495 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382972286 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857794665 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375588284 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894836935 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988162064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392005338 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.576111338 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31472104 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.381452585 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.383222414 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.368447323 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.677099443 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.390519743 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.633109192 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382636817 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306764509 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371019078 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90662497 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.242994344 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.376934907 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371984124 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142815108 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387144371 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674731137 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.394673021 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.165388862 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392322861 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.306257371 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306398367 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.065026304 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384188615 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348453321 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884005915 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.389893861 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373759678 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38101672 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22773726 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629032176 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.386773135 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954245669 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615895438 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374017153 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396251887 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.47324448 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384266532 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.365386213 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.26647873 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608479631 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374004587 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599665921 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.385696005 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.273385269 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.462003623 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592756407 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.273609489 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373026097 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651379581 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.103088049 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.387544279 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068761838 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416116433 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376751601 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393086318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391831355 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394565693 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464456583 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384456226 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.384948196 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386556483 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.548356379 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397291192 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3851338 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.38927794 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46971198 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.842382504 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.172289378 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.155264413 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96141172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118261931 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983510797 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406296604 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375400202 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376773521 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309407714 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528499192 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90190065 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650601564 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507481057 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.386688217 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399745599 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375641151 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40415036 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611750556 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651257015 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34732191 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384935921 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169768572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.275396357 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387459968 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.588368494 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890987433 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956684348 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495912743 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383589121 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.823257141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660140959 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469012994 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377922453 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968589904 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.379197423 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.760616025 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410667915 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380882681 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533669742 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387486925 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069064143 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.405695153 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537999996 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.152126918 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.446355256 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64377058 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.84468636 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389548004 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965683203 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099532084 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643267487 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449438327 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389335028 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.481929562 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52548013 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.381450284 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.274111524 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378244329 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223971159 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.090083789 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.388588661 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966594351 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667938466 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.376500964 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.383368864 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410628882 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.390207702 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603660044 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108324546 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611637618 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390868299 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390050742 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.965612424 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974736768 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416417095 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314888192 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.383759711 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634013065 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643542362 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402996029 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.834086665 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.092297148 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948159695 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.360591316 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402531043 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380934827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112775161 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968436396 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.194320246 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906281833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.047471207 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388319117 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662753368 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.387293574 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381938653 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666102147 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.384523986 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380845757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399474752 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.967404499 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173761423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.412145056 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.386664453 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.32722157 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.608971754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390661147 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319933847 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383011662 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.559618797 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390233515 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512938366 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39410653 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.382935774 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399529475 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.140538047 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666270225 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.389610354 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.37192548 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.37281281 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400313589 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415823713 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640009272 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388325296 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059736845 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74135226 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640102936 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393616865 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.37124595 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.388411316 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384053312 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.101828737 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395938762 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384055102 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994968918 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.39636727 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.402474108 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388346571 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601376954 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597681871 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395237304 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404344791 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387889174 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407073164 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.2861894 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.152938807 seconds)
  done (took 1659.635874696 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386299246 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.385605599 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.399128132 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.437099561 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408338018 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.462424794 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.453475306 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.452761341 seconds)
  done (took 52.685745337 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.393099167 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.539375787 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.415569917 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.394270306 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.394065935 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.387300767 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.845457179 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.412097889 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.393968255 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.394538032 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.391625117 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.391495639 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.054774936 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.390466496 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.382921548 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.379220378 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.394691592 seconds)
  done (took 66.257091642 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.384949806 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.988995345 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.48281493 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.381314941 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.428498069 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.40151689 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.284662651 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.405597486 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.37927198 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.739761453 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.035315226 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.388463721 seconds)
  done (took 85.597591219 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.376939587 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.374463402 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.37533387 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.375548868 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.375236567 seconds)
  done (took 8.159796682 seconds)
done (took 2095.154074766 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.614901434 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.062581395 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.006297092 seconds)
  done (took 5.352723361 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.520689194 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.569527296 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.68876179 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.695296804 seconds)
  done (took 7.762514583 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.658188608 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.745914724 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.5642836 seconds)
  done (took 6.255615282 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.791090528 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.378242163 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.389583813 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.373772057 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.379197699 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.38039412 seconds)
  done (took 20.42263782 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.377446408 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.380071966 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.377883933 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379673239 seconds)
  done (took 6.802487591 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.353534668 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.067177477 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.359050931 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.380704306 seconds)
  done (took 18.449064714 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.123818359 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.138575252 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.120980891 seconds)
  done (took 7.672655115 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.382871541 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.224022295 seconds)
  done (took 9.895415686 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.671521561 seconds)
  done (took 2.960457817 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.510669798 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.702970992 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.406988274 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.366780551 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.442140113 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.197952461 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.000902428 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.590136306 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.335488428 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.548238049 seconds)
  done (took 28.39194442 seconds)
done (took 132.431593478 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.192646038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.755968747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.579635197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.200829734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.602344656 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.579905998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.570063662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.170912464 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.743289025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.670951415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.206266607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.600171475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.734242415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.755783555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.731673717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.755995387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.604854921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.238908712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.849681398 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.084365542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.570858126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.800489002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.037814339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.820987016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.603037148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.532663443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.380131099 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.762283404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.021705753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.395809469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.52113288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.250691458 seconds)
  done (took 192.615998076 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.360443939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.359880241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.361068842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.359624029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.375301471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.370801668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.359755919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.378971816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.362801002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.370379589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.374024656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.358965657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.378149808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.360057795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.379244932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.360512418 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.36123286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.359825027 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360572722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.391602396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.361969864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.378145345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.359892302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.377114341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.370685032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.361965292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.365624521 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.361313096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.378649893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.361899812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.370394197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.370918057 seconds)
  done (took 205.040068782 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359626394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.380753917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.361840269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.361598197 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.361214029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.361264814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362470524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.3613752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.377231258 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.386882756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362314387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361566836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.371547528 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362086097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.37865645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.378610637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.39227786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.376382104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361919737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.362115793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.367795476 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.362698519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.362391071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.372276617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.374373908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.362014672 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.37772661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378765759 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.363338489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.362727229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.364922362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.379595134 seconds)
  done (took 205.088507764 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.564478396 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370603043 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.372243739 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.325652605 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.371589732 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.371033004 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.369710638 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56209874 seconds)
  done (took 14.586782428 seconds)
done (took 618.629209764 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.617678772 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.349051125 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.579882183 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.399615596 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.123653991 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.418154579 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.391512002 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.55841437 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.301615194 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.57549711 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.634449698 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.406023956 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.780421041 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.389685902 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.649069507 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.489225018 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.239076686 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.361138532 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.708873088 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.910609257 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.659832117 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.852036497 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.582268669 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.307528501 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.801579518 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.84584006 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.129177791 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.251759305 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.409159715 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.722649206 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.985181596 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.349420794 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.451661427 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.451657241 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.50781148 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.488450548 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.335661132 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.449637529 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.60073606 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.628387547 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.901178016 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.126469507 seconds)
  done (took 93.00143395 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.356280895 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.356209448 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.355877 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.357370871 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.357918366 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.356540452 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.355231994 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.355803764 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.356663169 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.355869233 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.356721962 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.357315354 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.355967156 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.357376549 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.355715408 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.360021284 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.357666063 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.359252558 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.356558497 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.357056761 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.357817321 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.357168023 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.35793376 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.356040927 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.35912165 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.358247277 seconds)
  done (took 36.565731255 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.376912103 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.624714233 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.789853716 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.389939949 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.377290442 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.379550642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.453549004 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.385170326 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.378826189 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.380146473 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.54436683 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.379825116 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409781248 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.829696423 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.386561351 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.377335094 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377415068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376048378 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.63359326 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394512987 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.476643883 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.385743516 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.455685062 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.386338829 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.400521095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377332697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.382369341 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.897603294 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.396776033 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.549219143 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.178162194 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.460411437 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.847179674 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.818002227 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.179280698 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.388245425 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.37888145 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.550496649 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.379852613 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.378359385 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.454894983 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.378780811 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.796862329 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.99416092 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.396360267 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.379903198 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.919813904 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.56865132 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.622675796 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.395611913 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.817195071 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.380881097 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.381042653 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.381095602 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.624173801 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.393954091 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379432058 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.911954304 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.403297246 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.456874106 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.381522143 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.380245165 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.638578846 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379491966 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.627301032 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.381291911 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.388812738 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.400890556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.794805683 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382222222 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.020455284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.397845689 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.38189543 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.547972592 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.626374728 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955630463 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.402792871 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.642494081 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.862688549 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.474055295 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.385230706 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.890860209 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.478421827 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.385330681 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.385315891 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.384402324 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381887079 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.432855585 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.456627481 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.951913018 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.034235404 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.940200147 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.488909814 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.398505999 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.383994046 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.914693516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.403272358 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.390578019 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.797567191 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.030354623 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.408201575 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390687439 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.027648153 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.410714832 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.460022302 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.389156535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.816492338 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.391507724 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.435290814 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.383457571 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.388266258 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.405669691 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.460429474 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.385834348 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.384442644 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.987452387 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.575330969 seconds)
  done (took 181.520485828 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.376499315 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.375981856 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.376955939 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.376863537 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.376957375 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.384011905 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.377220428 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376910562 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.382274074 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.377139851 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.376652465 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.377402316 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.379455984 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.398281404 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.389754298 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.384702793 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.99021135 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.379061204 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.378387106 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.378030055 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.174362193 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.386259119 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376786081 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.379085657 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.378362481 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.379782761 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.398096989 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.381372155 seconds)
  done (took 153.35854604 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.387455234 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.942119717 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.404579689 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.516385092 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.407112061 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.38354238 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.513920974 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.44460502 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.41297197 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.384068253 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.384662365 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.684467507 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.388468696 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.909062764 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.585297556 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.543626469 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.915659576 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.413075396 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.384072857 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.385063101 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.518616741 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.399261814 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.689874222 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.964947312 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.414629705 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.955808462 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.381172619 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.389211241 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.386617569 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.956123758 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.412331332 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.692171289 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.470897236 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.454552066 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984662729 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.935442968 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.935680463 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.544180694 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.395248544 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.385426875 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.386376553 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.371547681 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.961220018 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414497947 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.388044506 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.949961461 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.415143644 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.389615858 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.394237879 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.387748089 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.446849574 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.474087291 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.723751948 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.976368747 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.490717025 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.401812052 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.51911507 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.782131516 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.392243867 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.91093297 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.381245116 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.966619056 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.41748703 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.373585497 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.388779837 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.393629113 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.538708065 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.52184816 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.902059125 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.405806343 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.900795807 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.556817445 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.392581568 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.387861723 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.391275637 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.965931834 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.927932375 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.556848569 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.532994055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.591010908 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.383336927 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.388430423 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.375081252 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.466660779 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.399010618 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.967885239 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.939521805 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.416821474 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.391298866 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392557913 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.391484874 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.566236054 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.993754378 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.493071342 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.900794793 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.724564603 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.706682501 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.401819417 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.450389896 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.414864056 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.695676564 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.393637454 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.448575853 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.859391303 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.69649409 seconds)
  done (took 165.882120695 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.641158877 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.603319906 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.490974199 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52812322 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.9837811 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.957076945 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.635176428 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535261939 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.510988379 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.648494635 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.561485573 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.490610885 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.564784603 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.474699139 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.126294887 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.487210813 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.501497883 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.529009574 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.503473003 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.409539492 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.042243064 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.676502362 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.578612032 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.484565775 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.492210015 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.163379048 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.957099628 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.923032139 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.577425037 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.716523078 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.927453978 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.519993438 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.331275171 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.081768852 seconds)
  done (took 66.956196864 seconds)
done (took 698.572248302 seconds)
SAVING RESULT...
DONE!
