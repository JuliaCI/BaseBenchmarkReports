cset: moving following pidspec: 1177
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.298107477 seconds)
loading group "string"... done (took 0.571032514 seconds)
loading group "linalg"... done (took 7.20685684 seconds)
loading group "parallel"... done (took 0.166880832 seconds)
loading group "find"... done (took 1.155930836 seconds)
loading group "tuple"... done (took 2.005167339 seconds)
loading group "dates"... done (took 1.27913189 seconds)
loading group "micro"... done (took 0.23636725 seconds)
loading group "io"... done (took 0.978753229 seconds)
loading group "scalar"... done (took 39.599572548 seconds)
loading group "sparse"... done (took 12.653368688 seconds)
loading group "broadcast"... done (took 0.997738585 seconds)
loading group "union"... done (took 13.80029105 seconds)
loading group "simd"... done (took 4.658700423 seconds)
loading group "random"... done (took 9.323682551 seconds)
loading group "problem"... done (took 1.984439955 seconds)
loading group "array"... done (took 22.169171477 seconds)
loading group "misc"... done (took 2.013473685 seconds)
loading group "sort"... done (took 3.398412021 seconds)
loading group "collection"... done (took 19.161442548 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534288051 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139979873 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11823543 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136463156 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186749356 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1309034 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126679692 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101711207 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.953844094 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143903561 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137750477 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.501059379 seconds)
done (took 4.957387141 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.287529444 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086333151 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09522077 seconds)
  done (took 0.860601967 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066148036 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126333658 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065273483 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082212211 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065968656 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080652273 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066390805 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065938413 seconds)
  done (took 1.236000013 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074348057 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068024519 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084848438 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067465153 seconds)
  done (took 0.977756044 seconds)
done (took 4.113509254 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.92608227 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.237381729 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192167385 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451541659 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150577896 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189415176 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662925267 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325063961 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208864722 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.074217819 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122547369 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.37162598 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124582634 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667030515 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077106796 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107107522 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162658923 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.434617655 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082303632 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082710224 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103322393 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128191795 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104407086 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.088577078 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157005763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069495168 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150153925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096546867 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067757751 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.258872333 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173235416 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694366225 seconds)
  done (took 10.462982343 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097600484 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119756165 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069177666 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141171985 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103359592 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087021766 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072673304 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083139819 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093393574 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162107969 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11578098 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106901752 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081708227 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070495418 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10063997 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215049697 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109585908 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085791458 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086511727 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076884032 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122434513 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083991684 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094668518 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08007433 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15258658 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194724656 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10038046 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112511862 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069084407 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098191552 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129492705 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132546379 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065880986 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084236858 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.157356123 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095859494 seconds)
  done (took 4.55120315 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.067986156 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123494734 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.174723852 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091518821 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1531261 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067060064 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129098589 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083152981 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098044474 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065210221 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230217509 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.156797525 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.474287817 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128393559 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.087114083 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067769889 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087575972 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066821524 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518748325 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145317782 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102074065 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1022274 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073106407 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087165674 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354538503 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067393747 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065402141 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085266038 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058157881 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064293828 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145863493 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084611286 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.161877105 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107868218 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068723397 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120670628 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184141195 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098664926 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120067882 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065634341 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083113464 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16124134 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074371169 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066081854 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107764235 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120552506 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104475649 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083964428 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068362337 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182481028 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066209243 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100620155 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.901311334 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16712879 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095110604 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066109077 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290799873 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08439925 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086402173 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068138233 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.265149879 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.17884148 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081300583 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068035965 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066645639 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083732756 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068642464 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366963729 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066680845 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.687135238 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084598349 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077720695 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085754513 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06736373 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090651878 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07359854 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10116872 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067414062 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067629315 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08350968 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066414795 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068361197 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.101543484 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208220204 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066912252 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084780212 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065593991 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102753071 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097887598 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086118828 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065944374 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116045332 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06970106 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067876501 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119665917 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067638692 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100709021 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084855038 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11406441 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082752609 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.12307424 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068793669 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115423356 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071391206 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114986699 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096779201 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069308661 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155780422 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064923788 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064614114 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084997675 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06516731 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085069882 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069497355 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078141975 seconds)
  done (took 20.913835536 seconds)
done (took 37.675627752 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.307193219 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093358344 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09384228 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075840511 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09342656 seconds)
  done (took 1.423740478 seconds)
done (took 2.155662524 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132605384 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119874179 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063586638 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114485843 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064211817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118995368 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115740949 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08103238 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11761019 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063749901 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112977289 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063660484 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063600691 seconds)
  done (took 1.991973998 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082457898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084668178 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086418668 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080703052 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062701769 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097401795 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079351635 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10493097 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079604689 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071171368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080717284 seconds)
  done (took 1.636592397 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081028213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083213409 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085372713 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080501655 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062548882 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096236505 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079959139 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101357636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080365505 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071964033 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081132768 seconds)
  done (took 1.635106792 seconds)
done (took 5.983554314 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077341572 seconds)
  done (took 0.800652408 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.73047869 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.628523548 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099661458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134207591 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.214242264 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154945268 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.445933428 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110528182 seconds)
  done (took 10.416350371 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101045983 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085855836 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082025932 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086066167 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072624617 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06905384 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089329673 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068919357 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086023607 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070853328 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070710806 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088349832 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071213541 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087668636 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069903711 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088160215 seconds)
  done (took 2.078797278 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104976124 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104240505 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092324954 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075931192 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090259988 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073106339 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09191337 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074448617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071886183 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0889256 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076075405 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09056457 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07222117 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082352123 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075287059 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093128093 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071914142 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091341793 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075329348 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092203172 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07568484 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081580196 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072393216 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091525107 seconds)
  done (took 2.843108634 seconds)
done (took 16.864140976 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116281082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088189097 seconds)
  done (took 0.935991789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081100454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097887772 seconds)
  done (took 0.920647919 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082628668 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08220184 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088901286 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093853531 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067063479 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082483439 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104141711 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06764377 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067101288 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082867765 seconds)
  done (took 1.559979622 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069049932 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094628248 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071370313 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097648853 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074082568 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08164537 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075498194 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069057906 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095587618 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06427161 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088100765 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099292591 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072207534 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101240122 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075112616 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085410241 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071822944 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08512692 seconds)
  done (took 2.211329833 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066332891 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067828887 seconds)
  done (took 0.875846996 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068165779 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064219018 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083377061 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066898125 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080115237 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063693996 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080318241 seconds)
  done (took 1.25102243 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409544878 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108823556 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.247158161 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088214858 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104734542 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.278941896 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08362013 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071005442 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088806749 seconds)
  done (took 2.260828394 seconds)
done (took 10.746981813 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079535731 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08479038 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111012476 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418925259 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092992084 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081232766 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131306052 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227040649 seconds)
done (took 1.968799476 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127000148 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619876724 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40520695 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215128276 seconds)
  done (took 1.985172819 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.381289113 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090169578 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073439886 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068030892 seconds)
  done (took 1.362822155 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066723461 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069763981 seconds)
  done (took 0.886010881 seconds)
done (took 5.104458895 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067427004 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066448871 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.114113863 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064094138 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084539355 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064100378 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063980909 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084885351 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066410504 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066565899 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.083898192 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067088983 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066269794 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080762722 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064433331 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064414761 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083139716 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065092042 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064117861 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080462637 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066945442 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064641403 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080548785 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066656682 seconds)
  done (took 2.523592998 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085181764 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084170717 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072484475 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071354167 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088009076 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072647883 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089468248 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067993266 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089065614 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069260657 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087555022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071145012 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069665701 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087781952 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069024979 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087313648 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072345856 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083786475 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068561497 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087410337 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07220897 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06707456 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086985079 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072852026 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088678505 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070789121 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084981718 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066973323 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088365081 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069946471 seconds)
  done (took 3.094703513 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07084958 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063499561 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08127432 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071239643 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064667204 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082856982 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064181347 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064614396 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082278626 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063858781 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065959663 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080577155 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0644086 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08237221 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064796993 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067808135 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098094985 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064164617 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0644746 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082298674 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067324412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064077698 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081442252 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06361351 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080693995 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064696449 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064780495 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080955674 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065340122 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064698349 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083979739 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067534598 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063860389 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087746368 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06796167 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063983765 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085243221 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063957476 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064752117 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080242331 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064187635 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063902531 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080785627 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07125284 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064166399 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083223014 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064513467 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082460289 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065206181 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067305838 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080902171 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064555316 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066120278 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082133972 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068082618 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080802586 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065300798 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063728258 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081854948 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064622092 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064344988 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080476761 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066690596 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064848821 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096329004 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070730899 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064097328 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082638179 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065820745 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083587845 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066126159 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078654488 seconds)
  done (took 5.935022647 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118692709 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092323889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083422875 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066010125 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062981518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082372317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067957409 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081356575 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066752883 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087171186 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065131491 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065485461 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083153475 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079682312 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065039641 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083157379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071245891 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079253426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06543075 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06847556 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081633313 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068183921 seconds)
  done (took 2.442569446 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189697586 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088208067 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109341546 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091640182 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068883393 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09162293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070216961 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087207804 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071449337 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085967133 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068839674 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087951114 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068693932 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069272385 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085882191 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068966428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.197326685 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068790783 seconds)
  done (took 2.430700676 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078814779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066976239 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1070174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06713892 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083869042 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06968718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089548252 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076199582 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086243726 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067564084 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093141055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070260047 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070238266 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083933437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069830935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084141376 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069877502 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067511851 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092383485 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072141555 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089354893 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076279069 seconds)
  done (took 2.494340438 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082189548 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068992142 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103111286 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069676193 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080390295 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065978525 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090462001 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067383483 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090330002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069541068 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066826584 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082550764 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072246159 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08386291 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072468791 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067877968 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085524901 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067035885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085667267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063043404 seconds)
  done (took 2.299301519 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087476928 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085311352 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068932393 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093637237 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068556228 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068531699 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094354736 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068624657 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085525207 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109936041 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069369696 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068476682 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093717295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090301432 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069025476 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093158351 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0773822 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094096236 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0686918 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085570702 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093394612 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086182495 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077188948 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085353482 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068388319 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068633474 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085694925 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074306981 seconds)
  done (took 3.045098857 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067199539 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067416924 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081797992 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064987489 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06485587 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081618397 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064891324 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064110244 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084338161 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064715121 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066678413 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08350518 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066828782 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066993312 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084242349 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067009747 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067144731 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081374538 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064653384 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064335672 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083819167 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066996996 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066601798 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081552683 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064766485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066579847 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081386001 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064439408 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066341019 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082170246 seconds)
  done (took 2.911162715 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.0761332 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073851097 seconds)
  done (took 0.917422236 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06507176 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081718513 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081821528 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070876213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088990435 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067924394 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091979555 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072194081 seconds)
  done (took 1.386895769 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082500451 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077903501 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08660801 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079664784 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09445601 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083208538 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158417609 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086001264 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074176642 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065180374 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098010685 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066153802 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091384986 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067372606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072983349 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091428936 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065427741 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090128091 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069766482 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066222263 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085724792 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078946028 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086779169 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064635466 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071521365 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094322293 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078587548 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086012723 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070394731 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091977177 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072957018 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061794088 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084458719 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068736017 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065418004 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094155802 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08328222 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088051835 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077190604 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086639668 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077714091 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08041939 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072115005 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073969685 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09522863 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068660258 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086882207 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063210117 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065995206 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087126968 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063238377 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084667795 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062684626 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074943535 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089179373 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078792172 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084090897 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070003906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071004365 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088626029 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07456121 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086997129 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070585938 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067771443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092146698 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071859438 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095468276 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06306167 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062072898 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082952122 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077439138 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10764485 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073476024 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085843102 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069955774 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065643593 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088339551 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068521974 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090957504 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07416817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06855389 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090532475 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074549866 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085241217 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069788742 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092725878 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065665632 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069941883 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082833803 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084185777 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084837123 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066009683 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065408884 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095977691 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070518229 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085699278 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065599942 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074432936 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079489895 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068534605 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085589946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068473309 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07834084 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09084041 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073728086 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094369208 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074651527 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085533223 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071404313 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065379611 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085616841 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066408004 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092398269 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061794177 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070139432 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085668459 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068768417 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094037112 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06702861 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067250667 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092694992 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073478764 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083979163 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065518368 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07058847 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084735649 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070926286 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092848125 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066447666 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062822605 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081116382 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070627485 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067677035 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088515681 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072525508 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088210997 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062719182 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065943731 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089869533 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07595292 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084960977 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068311585 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091396518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069167858 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067665271 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091492256 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07029952 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084333452 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073094516 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068185331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08092049 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071384542 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087912493 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066278688 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071944699 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089001505 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070684578 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086190079 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066442872 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072755223 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086492739 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066936309 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084990408 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066414976 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078143677 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087487503 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063513216 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082362679 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076332794 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065482522 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084672755 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066582838 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086900293 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068838751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066583844 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084742528 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070039738 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096496615 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072447181 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068806764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090848 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078933672 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08536346 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070056052 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067127932 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087103688 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069584512 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095107942 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0729516 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091461236 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070688379 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06464257 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091912337 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075772544 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0847699 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06619587 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066711527 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089907261 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074009328 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089030179 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069626385 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066682015 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086435296 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071793202 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087786249 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067792321 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066955065 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090290533 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067535665 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091508881 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069438403 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095718298 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071365578 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063222073 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089349836 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066724221 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091989207 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063468004 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065820278 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084496407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069574186 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06658328 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088579889 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062347175 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092917486 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076028275 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067686393 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085401734 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068586321 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092458634 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06938562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071413957 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089909388 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074913107 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095886335 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066837802 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070956512 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096405805 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067767261 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079506724 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073045105 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066751315 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085150424 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067330156 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083423229 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071349046 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075587501 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092818463 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062886951 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088320059 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067354249 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067007108 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08097626 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072842794 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088255609 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068420202 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074240399 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086855043 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069182439 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089151251 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067722224 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068983213 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086470799 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0721602 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086410089 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070895131 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067207035 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088829454 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067431847 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065321075 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087738671 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068089804 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085772268 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073657173 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068356178 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08598471 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07045422 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086595857 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068804459 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068568551 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085467184 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071677415 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068079038 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086566576 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070531632 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081155993 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074814416 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067545286 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093664021 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06834698 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082497989 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073879096 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071279299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090863892 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069748431 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086094045 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069289997 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067201405 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088684527 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075011042 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082888428 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079390626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094074179 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068945112 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071712393 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086009939 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070081497 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067235756 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087055001 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069272854 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086686202 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067861103 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072636837 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088530695 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068249029 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087133758 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069741406 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068185246 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087639089 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063749304 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067416796 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085620384 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067672671 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095817655 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068748011 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085022222 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067131921 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068970716 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085246577 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065066432 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094272084 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076947399 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06849231 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094015004 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06757294 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087540698 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078690738 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083105344 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067135055 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065871875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083807263 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07550632 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068954787 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095373748 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068113875 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085127581 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065740147 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068752578 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084800225 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062608704 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066000186 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089255923 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067597474 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085428137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068024884 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071534108 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088018991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078621884 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085283368 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069471997 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068284905 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083584814 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067330834 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068062709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089378888 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069692706 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084205642 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06565459 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067896821 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087932679 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069632582 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067546434 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087810422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075232954 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086778285 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071337756 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089316994 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063150748 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071056681 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086323067 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068632427 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066993284 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089419504 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071891288 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088101946 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077826271 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086214965 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069783131 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068794701 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084863384 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068155594 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068014681 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086600621 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06796859 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087614722 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076798856 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066459416 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089223945 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068647015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086928146 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076510822 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070234683 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08951897 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075745407 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086792613 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07042062 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076282943 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090601494 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072255749 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087879224 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069816144 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092576897 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067577941 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074476218 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086641875 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069301978 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069430494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084551016 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068352465 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085888011 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067672538 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073583558 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087173142 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067645791 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08627598 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065830289 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069133511 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089637171 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076373096 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089583972 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071664435 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063821848 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083494948 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069892081 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065702529 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089067567 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072021432 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092414635 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070493789 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068554698 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085519444 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077664595 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092097817 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072251703 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065977315 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090888286 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069848674 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089042131 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069350065 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068943578 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088038388 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073364202 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088060598 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067806959 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075266408 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090044016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070496025 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087706674 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069457571 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0686888 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082013077 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069268395 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070403679 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092010787 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071655959 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087390005 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079571816 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066120904 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087914208 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072505519 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087082242 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073273709 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064237287 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088641354 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069997469 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087657859 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064168754 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068036521 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084856572 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071057588 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067234573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082571883 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079808983 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09572296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072994556 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085233147 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067776185 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06393924 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082023498 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068448336 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069858795 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08867805 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078849429 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085754818 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067700548 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063654308 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087721205 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071876835 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089962492 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066162639 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063870987 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085660138 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072148258 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073418626 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085734896 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068291255 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090046256 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071355825 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066322941 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090833289 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066225925 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090353086 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081672809 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087541151 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069641652 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074512821 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095430356 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070080314 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081750967 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069509926 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071019117 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087062821 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069956455 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08751457 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084024536 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071701017 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087442542 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067405019 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089340192 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068255339 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076866246 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088196211 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070044376 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091304856 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070837698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095442091 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072030364 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076368974 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090144409 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071465163 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086430767 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06899269 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066244064 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085762234 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070029855 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069787793 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091981739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07579014 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087318247 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079597802 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09755787 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070382021 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083970324 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067818896 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068252307 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082202429 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069375193 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066543347 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085772267 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067340868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066455073 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088132164 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074268651 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088034842 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069445882 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068603575 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081712207 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070765842 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089333968 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069620467 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066327204 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087339232 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070416957 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072442519 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090413829 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067057379 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088622214 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071037554 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068606515 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082838975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075204538 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06664618 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089882179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067926174 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087117052 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069956133 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072240749 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091923773 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069724852 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089266166 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078386025 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089048139 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066492249 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065773437 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09250662 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067260829 seconds)
  done (took 46.906173949 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11004851 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083883204 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063783832 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083110147 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077150646 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083939979 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064298705 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06538651 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08333193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067321892 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063796411 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082298263 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073084035 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106750341 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095196426 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069166293 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082615806 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065647524 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06378135 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084068651 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074552264 seconds)
  done (took 2.456118234 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088321244 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10389741 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079322876 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101570849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073869945 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099010633 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098076735 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079831288 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101269122 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07518442 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101571569 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098554864 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07665506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093861564 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075736022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095329591 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082537286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092196312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080920416 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097758386 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076647774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098095787 seconds)
  done (took 2.783607192 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068254166 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068003308 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087957976 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063308213 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067620943 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082909396 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072205063 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065678001 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090158028 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075026492 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085172448 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066645094 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06954894 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085259648 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067791626 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065486865 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133132885 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091006149 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067681189 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088027817 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063449374 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069834864 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083010279 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064509966 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067033535 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090702165 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068736587 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08496667 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068630298 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066591959 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086484165 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066237642 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069683176 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087219001 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067770265 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066303416 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086608003 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067736148 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082446989 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06700536 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069201164 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082330028 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068336829 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069111711 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085191022 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065930535 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068499936 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086557763 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063703965 seconds)
  done (took 4.507843385 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087427932 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143301555 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090209736 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104786297 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105038973 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094780821 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071597713 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124264858 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066277977 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086309343 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084665427 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103152648 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068475473 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093206655 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071814886 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086880427 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07044948 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086005226 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072587382 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086486863 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072874795 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093509647 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082866254 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100619005 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071920218 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086331824 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068168308 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092021061 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082104472 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092162562 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073636766 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0923968 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08369903 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093691458 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067080553 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089351625 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084631651 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08788799 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070744109 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085525625 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071152055 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091575338 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075138882 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104065908 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068806569 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091928184 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069440893 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064702327 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100965055 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088976131 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07734162 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101777649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072861491 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087306088 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073313838 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103310744 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068463922 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085819571 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072342133 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099934211 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066091519 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091155145 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08374972 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090120348 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075848401 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102324816 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074200537 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092208745 seconds)
  done (took 6.748604459 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077964882 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094293136 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084183921 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103045841 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074762345 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095462188 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093622053 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075572072 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093651081 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080808892 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09464443 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115507774 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070808596 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077611681 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094827513 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094211816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07611497 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094079231 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075242488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094146066 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075533485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102939717 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074688514 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10209783 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124190254 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070782826 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093941497 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075525658 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102742835 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074105103 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106740679 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093759654 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075214932 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103057425 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106056008 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075938534 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086564256 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075052824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094003232 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075775145 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089220852 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083832713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09446876 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070991352 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093989687 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075343003 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103453239 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106960992 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079676201 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099309911 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075354311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102873763 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093980307 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076135349 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103245771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110016374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104092553 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103231708 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074923617 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103339205 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102739796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091140186 seconds)
  done (took 6.407649498 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090785686 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097790314 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079786823 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084967698 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067547214 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092627613 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067501633 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066412499 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09785568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077210202 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099784082 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091732107 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076666112 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099038411 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072897358 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095362391 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072647996 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092831908 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077185818 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093481797 seconds)
  done (took 2.520341689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078325413 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10668543 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069428635 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074566414 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091512409 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075926836 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090745342 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071659787 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08867548 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07218798 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09824683 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079578725 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069339354 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095143229 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097992764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076756328 seconds)
  done (took 2.164412356 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081220611 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099211216 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083448149 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089415673 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067164747 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064868691 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089610687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064937814 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085135493 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084401528 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088795352 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071677151 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068893416 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08761719 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066506553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091364234 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065587433 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067027839 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088787226 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083129705 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099954668 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068557678 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08924917 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071457126 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068912123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095727605 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068793715 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087315809 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067571675 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089186808 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070133553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095768521 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066692342 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068106149 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087173786 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067015736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087837446 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070070187 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071955763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088899822 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068653405 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088800809 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069769601 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069464784 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085063152 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069985972 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085236805 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075793653 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066891044 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089612841 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06925042 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090027855 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070976436 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098136163 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072856345 seconds)
  done (took 5.169705094 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082874354 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071771935 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084975194 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067588688 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091065173 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071579963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072295226 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090623428 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070943107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086243395 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071835491 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07181629 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091396824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073652421 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090359427 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072768559 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064693434 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090816969 seconds)
  done (took 2.25049025 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075267119 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069062826 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096892918 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069791007 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088063832 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072354337 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06582574 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087582696 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068407113 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068963265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089294299 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071737082 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087129327 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07162641 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069170788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088787905 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072431784 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067530836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089348643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064937306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090819195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068343214 seconds)
  done (took 2.524385162 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075848517 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095543209 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167391713 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110964856 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085768419 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102404381 seconds)
  done (took 1.472927924 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093434834 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102864312 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069818514 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090507127 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098308361 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070739597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091579695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071740222 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100541849 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10490733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07168687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099479158 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079948134 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102477564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096801975 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078637676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090734829 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07184621 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068915778 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11057318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090598267 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080555657 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091070153 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071220217 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090762809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080169259 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100530303 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104143324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070707693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099065616 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077889489 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090411616 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081249613 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105040001 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072182826 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101079828 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089978829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090434426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09612166 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079235856 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092446137 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077017064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101108702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095956274 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08084131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091155706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076396522 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091121027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07144023 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1172031 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09704806 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079896 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097104158 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080943411 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099643319 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116804991 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08378798 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101043789 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096874978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084596862 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099935017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096570875 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080178477 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104373714 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078491419 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100566458 seconds)
  done (took 6.75582901 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086043037 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109262234 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071444175 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104904525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079101045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09216462 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07116569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091908361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071600058 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090681693 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133117648 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072357653 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100048656 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080078337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092964607 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071430283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091135327 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099225352 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071864212 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117105801 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071854743 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099948564 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099551523 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0797508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10499522 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077817746 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091463671 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071418064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091067415 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070535015 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096928416 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071493614 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100289987 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069544991 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100318646 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090465156 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071245442 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096647307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071300024 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096247858 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080404358 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110402623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090441312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071949085 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104877156 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071691344 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090963924 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071293544 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091192866 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071046518 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104438935 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085114035 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104739389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100004669 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071947558 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092121729 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071344618 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091765659 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071569499 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097165616 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0806499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090894731 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117726395 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072348457 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091695405 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080904727 seconds)
  done (took 6.638471285 seconds)
done (took 129.532004426 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213400167 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188782942 seconds)
  done (took 1.237558048 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071655434 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09796339 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100903844 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131706738 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090279543 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1032692 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101697786 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102544833 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070356723 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089745583 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070095866 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071050191 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154608151 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070108091 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069297264 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092475436 seconds)
  done (took 2.329047539 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097935857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.200994613 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.083753418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088894624 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.072986281 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09272935 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06810237 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074663952 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094067985 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068947313 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.0718121 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091021887 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068089032 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069180434 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093270607 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07238291 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087597663 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072345994 seconds)
  done (took 2.410181825 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096823807 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.112677002 seconds)
  done (took 1.055631572 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205066862 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125961781 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209101138 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.428131661 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.249954578 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284645963 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181071929 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179740627 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154693549 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174803606 seconds)
  done (took 3.035297313 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102146414 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163380431 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273893035 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139978525 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110814494 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089033856 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139321559 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.092349272 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.104908502 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104864963 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084146185 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10076271 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099957175 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098605372 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077057082 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100765966 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103603197 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097519137 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078115362 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098909121 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099469057 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089506237 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078062907 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097398544 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080759216 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102182132 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069384309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069155644 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098882032 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07756488 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096548325 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.086314707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10146455 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133741272 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105732157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135821894 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080907687 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094754192 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078660782 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073612093 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102092077 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100963472 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.088209269 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100464088 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06975325 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079497086 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088825474 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069135221 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096696853 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080558767 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096999655 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075783654 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133883214 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101142474 seconds)
  done (took 6.237604984 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.766637429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113557837 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098345523 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.831245707 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119025929 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087377071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.730478096 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119747691 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217157637 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.729086236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115011897 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080718924 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210512532 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220510321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94338623 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269781911 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.618401957 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108947572 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111558691 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136398354 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101585469 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097374846 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115227038 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412056801 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077653347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096152703 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081150514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10193235 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141841171 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086316065 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097812803 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159687807 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231831699 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185380943 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078277611 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072634183 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095196796 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152559922 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225905992 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196607591 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163450455 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071089868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094349772 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084463146 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115782647 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070944537 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143520172 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156141605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.152450457 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098822614 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080629408 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10392997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.081633878 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16863825 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083940514 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298472312 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276986685 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095355006 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082971963 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109804074 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224247008 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106925725 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205946636 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100206459 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193732285 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07335391 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804963376 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15137379 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073707126 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100758963 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082074798 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099728251 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082564559 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15032007 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388012415 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084315576 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098246359 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072816599 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208371152 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086783809 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072299019 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165050111 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078210649 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103409514 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087165751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108085998 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151629658 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215074312 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083873006 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103799645 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076311207 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108712238 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076827853 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.196441929 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200754304 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143760723 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194245361 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105606172 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145545787 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.150331116 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102683326 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153923147 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.081339822 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107256251 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083156604 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196808436 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.126940032 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084641011 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098383468 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0796913 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129769181 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108625641 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080643595 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152073469 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457801995 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151140099 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071249346 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110512234 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082095911 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144423503 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100601919 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225687016 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104999181 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152362752 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080573414 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092225373 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.08202607 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143895243 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105486568 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082168984 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105423093 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079785432 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219339291 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198068059 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104987167 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202614003 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166065711 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079147738 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.151702152 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104687163 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15063146 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081046752 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104666973 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07634876 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797786663 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105912913 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082372163 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098346719 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148097064 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09510178 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0850187 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107633474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070327303 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823162678 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088710664 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104547261 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085371334 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100828411 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081362587 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101377282 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076533821 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141231134 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209965228 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101334367 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081049069 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106897902 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142722583 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077488436 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106828501 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08520517 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108292028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082530169 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09928554 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085640244 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150138246 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166203888 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.179142732 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577547052 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074025381 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107407221 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186828388 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094898092 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.25024095 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103389498 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.182907487 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167778416 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083074619 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.302259248 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147357647 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169301632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088847699 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.155203175 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092638449 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080045204 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144532724 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09551282 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079017525 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143410564 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108254914 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083846038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968327271 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073160402 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210235646 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092783834 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.153683222 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076731523 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103884815 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27055846 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073775991 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088804649 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16732367 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077360247 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106877684 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847291145 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085131714 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105790508 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100421653 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181938261 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14647502 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1037747 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080910401 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102475621 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.143665757 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194332577 seconds)
  done (took 39.426982929 seconds)
done (took 56.57168419 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235867243 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198261969 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.228639088 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152010411 seconds)
  done (took 1.776713178 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.13174515 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.132167552 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127022775 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068639873 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.133458143 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068281012 seconds)
  done (took 1.532530646 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318961098 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277020367 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204893962 seconds)
  done (took 1.672878848 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269698301 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.226095209 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.453125529 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280809192 seconds)
  done (took 2.228006686 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.188830249 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114916231 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070983702 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109458784 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154821503 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.225441455 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123905815 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158874073 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104229754 seconds)
  done (took 2.166883538 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.155079333 seconds)
done (took 10.397060493 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.124205061 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.149434964 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.223912729 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.14109956 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083710037 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.282379666 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.180150408 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.225693858 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.108928387 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081560327 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.155840685 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.150857707 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079181286 seconds)
    (14/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.199289894 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07531797 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109861775 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169477992 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.233510165 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.165872251 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207730522 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.210721682 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.178656195 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.121137662 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10252723 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.140516311 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078068587 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094578857 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217441033 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.105285387 seconds)
    (30/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.135129978 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.200506885 seconds)
    (32/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.222170983 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099473 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094703839 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.217194048 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068884239 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.191651442 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167601176 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076984343 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119150126 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094222601 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.23156949 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.166900124 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.122909415 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.102106505 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09922615 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118255833 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084773 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.173545747 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219869576 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.160156259 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096653818 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100165936 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075566804 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.182264161 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077241496 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079292315 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.19301645 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.122455086 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083048183 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081669292 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.139202033 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055277947 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093371003 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.152517689 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094555837 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074826603 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068719127 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.102142315 seconds)
    (70/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122484026 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097820635 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102120558 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176894063 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054554486 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101114208 seconds)
    (76/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081826345 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.10128326 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069374529 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215649511 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.191681275 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089908047 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12336523 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081571527 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.122043358 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084265296 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.09377114 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138991934 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054847071 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.103371385 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195720079 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080568598 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135087248 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055990894 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.105235946 seconds)
    (95/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137646349 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071657171 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054286644 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125371539 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 0.169165639 seconds)
    (100/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077528924 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066732649 seconds)
    (102/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094341999 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.104198438 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092641212 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097629778 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.099475595 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070389361 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056777659 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.139418738 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111940809 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200991163 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172103606 seconds)
    (113/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073548889 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200973436 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155398885 seconds)
    (116/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111302468 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175345077 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077494456 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069677685 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.207385688 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174112996 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.29388681 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092432442 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097854628 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.136904967 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069943454 seconds)
    (127/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.178503029 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056642956 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168135821 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15831027 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.103109262 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056429972 seconds)
    (133/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070467667 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.162633109 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101237343 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128939775 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174831898 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080602507 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099565666 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082297114 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069075682 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.077711952 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074617325 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078362997 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100035139 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.141341371 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080170707 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072579592 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077139298 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.176370042 seconds)
    (151/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055984394 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.088204959 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054871706 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055197607 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068367999 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.130679073 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054456645 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09987333 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091663641 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.158076945 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091890726 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092138946 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054908783 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077341561 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.124757297 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070052791 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076355974 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170521872 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118271253 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055780977 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141451108 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077537473 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113885008 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054978401 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054570396 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074075473 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095791776 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137155122 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.078567702 seconds)
    (180/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.101586367 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056144998 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099034816 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077669016 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075943285 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093475016 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070949269 seconds)
    (187/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131806401 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070185827 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054537005 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054791512 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099243999 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095571213 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09546395 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069152974 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118063214 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07020593 seconds)
    (197/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076114417 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079525206 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.141638427 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055165751 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078114309 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139697811 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10789611 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07598838 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079905996 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106863095 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078100478 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196025226 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099419808 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.0784189 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077869526 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078525531 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069557284 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064068833 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055500234 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.088468046 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068373838 seconds)
    (218/309) benchmarking ("sort", Float64, false)...
    done (took 0.153262995 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.065289558 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069086691 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087613716 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055137165 seconds)
    (223/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066120424 seconds)
    (224/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055529965 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078506791 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076260063 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078824496 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10692086 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068842388 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054823793 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101297338 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077166094 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091852479 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12085375 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064969492 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116194968 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091682823 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096926731 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083847665 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098117594 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056289905 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077260394 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054779036 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113008684 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068593604 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098833171 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054976011 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198347575 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145332841 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107116363 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055354122 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056712579 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098989971 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069935441 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124331357 seconds)
    (256/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072160845 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084826665 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095545496 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117000778 seconds)
    (260/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10515373 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069730185 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055613051 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092415042 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.141980016 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055712752 seconds)
    (266/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.095578291 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.057162215 seconds)
    (268/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056469759 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100088522 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0785805 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069314246 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.123546712 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070980335 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.10217951 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056685048 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055946832 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05467951 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081577162 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182761438 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079384142 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066841817 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071293726 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.07950223 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077709844 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068851534 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.092342365 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129490566 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092669878 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066689552 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078065491 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119905164 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070655353 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056187368 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098704292 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06602388 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069033765 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091662956 seconds)
    (298/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071519152 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116994546 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074963839 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070938919 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.118368572 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05626862 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 0.154989433 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172310008 seconds)
    (306/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.079769827 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069415376 seconds)
    (308/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076318293 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118228967 seconds)
  done (took 34.119866032 seconds)
done (took 34.987804621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082716942 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093595889 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102188388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093857513 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105755841 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078947113 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100902689 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080625299 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104481458 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08375479 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.0801681 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.081953358 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078910229 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101752094 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079789227 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093964937 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106225812 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076933569 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101499247 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068621222 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077353826 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093078173 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070778137 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058352488 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103992245 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076405061 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098699761 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079036675 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069098458 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092628377 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073119915 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076599294 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092606375 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08282912 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075698649 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.100906095 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079060149 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102431858 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070910341 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069706017 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.100728315 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069356932 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076901946 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100929045 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076016611 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098970904 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077891752 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081770216 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117852691 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071674874 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102167309 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07999777 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078406709 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099738175 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07432249 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101677721 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074921046 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094874809 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.104125448 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072189241 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.103218395 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077081814 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075293074 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.103706789 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07860664 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103533909 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080887568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075857487 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103233585 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075083192 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070035628 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100978479 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073738255 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093447205 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0797459 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080876333 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092341811 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075400208 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076701771 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098998095 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069565388 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072273255 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094719143 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076561518 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071376768 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.082018677 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074091121 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07616944 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092909841 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07855911 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099070853 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076646038 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071750569 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10576987 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069509406 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075414918 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093323106 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069710545 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072048713 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09754724 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069070415 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072379027 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102413791 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071236883 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075658003 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105535862 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069528662 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099282871 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068783071 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06934837 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107115489 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.08017202 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093623814 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072081271 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069790278 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100909172 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069543947 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069678495 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093987259 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070259463 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076732737 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.094281083 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071588085 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076815359 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107043385 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069507122 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074078826 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095389005 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069412189 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075249768 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093827515 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069653134 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094699938 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065991905 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071539764 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093758484 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077382477 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074241904 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101481934 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071424349 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07847295 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098229289 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076284074 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075110495 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092543878 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062829877 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072193432 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095516073 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072857373 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070052934 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095590614 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070347268 seconds)
done (took 13.669529678 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070691911 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.166378387 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.108356148 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124440615 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114282442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070119975 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080864257 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125110262 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072425566 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125373064 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092429756 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113791478 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105460872 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093009803 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070558081 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098029798 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071813674 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085749448 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128425896 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091533337 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144096761 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092838175 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.103731204 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117781105 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.07926095 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.120428193 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070733998 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073899337 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097845579 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086079156 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115506294 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074138018 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070319935 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115338751 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087753133 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102457543 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070522607 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.100481903 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070958259 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070885082 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.121457661 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091990157 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098894426 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075821978 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098267805 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073274473 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072391049 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.103510652 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08072984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074563999 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108343159 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137210036 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073978074 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104055676 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069378717 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081315225 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103693078 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073035998 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.094080396 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072976777 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0702223 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09704461 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084911047 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.122931295 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074022832 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104184491 seconds)
  done (took 7.159590678 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086417097 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097167123 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111143573 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08863368 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.094063147 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071773903 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094223041 seconds)
  done (took 1.57674376 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071404788 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092146401 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117885508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093496438 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113340682 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091932391 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105257652 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070517348 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087994894 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096846095 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090678458 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134017401 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072528756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102596174 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094900376 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071258618 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119038219 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071080089 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098162239 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094066224 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07389131 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115974074 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07296643 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09580714 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084801613 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070931888 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14421842 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076144798 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097633874 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074191337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093609523 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122526282 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109386281 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081490802 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095259266 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086067218 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086126306 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094167439 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086650493 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100757636 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085009183 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072919836 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096744805 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069407896 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07569426 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105763907 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072387082 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.096063196 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074343617 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09083595 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096113941 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084895324 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071493459 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100093109 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073048855 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101446836 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080923067 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072357755 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115039148 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073491108 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112535181 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087540318 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085653522 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11177506 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073668443 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109371026 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085514773 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074558643 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098049441 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074805649 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112413451 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069687396 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073943821 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106255158 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072601149 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094778746 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.118525066 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072983059 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106530005 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071302306 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072185511 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095904447 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094087403 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099424744 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071753103 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076273265 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098951715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069100641 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070344344 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.099680558 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069731454 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072670803 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098992367 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071761112 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074234341 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112990824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07248196 seconds)
  done (took 9.629908279 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072620249 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072631881 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097558795 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072252823 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072911986 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097273745 seconds)
  done (took 1.434524581 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095490192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098633179 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085970928 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077984442 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137683578 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086230087 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111415393 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079527698 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114517572 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084188486 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110742018 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087317912 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.11659271 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078571421 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111046199 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077439289 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110811412 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081446368 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084328739 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103544528 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092888212 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102757491 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079075631 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111790257 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075606187 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102429704 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081746484 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109620801 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084040003 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079884434 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102551313 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07545857 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.101442042 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080393678 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111212273 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077127131 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102832229 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075835228 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081878196 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099564272 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086934059 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103323419 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08343742 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101078454 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079940979 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101194942 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075944027 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107386488 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086011707 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076936085 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100826596 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077767879 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099893172 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076246162 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077136343 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104710881 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07670078 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110820673 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07908486 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101328031 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074284982 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099815826 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079523699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074999227 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110769598 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076441569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101373496 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07870031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103736014 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078150265 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.100776565 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075578504 seconds)
  done (took 7.56910196 seconds)
done (took 28.295819341 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.66449493 seconds)
  done (took 1.607400376 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.701744728 seconds)
  done (took 1.648227123 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.112646798 seconds)
  done (took 18.057740506 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.47176233 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.544487371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.782547784 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158767363 seconds)
  done (took 2.900330126 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.900024305 seconds)
  done (took 1.859562234 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225211746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.212159518 seconds)
  done (took 1.387163174 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.744660002 seconds)
  done (took 1.700370594 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.303088594 seconds)
  done (took 2.252479257 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.311214669 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.140893092 seconds)
  done (took 1.410318054 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535315826 seconds)
  done (took 1.495973175 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.700276169 seconds)
  done (took 7.660158197 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21645799 seconds)
  done (took 1.184730074 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268300195 seconds)
  done (took 1.231709207 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.508319373 seconds)
  done (took 4.469377764 seconds)
done (took 49.813972613 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081167842 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084478192 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108873338 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081036845 seconds)
  done (took 1.312011305 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082879961 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077902118 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108031239 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076956767 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107764731 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07742197 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079848816 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107611158 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077264623 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104430831 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077740759 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077381223 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105509492 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0791957 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100471067 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08064031 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107007971 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078046972 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081465213 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103392265 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075789679 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105791092 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081041804 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076689591 seconds)
  done (took 3.100010281 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080856894 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075819221 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102835114 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075757609 seconds)
  done (took 1.306175658 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082232256 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097410422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119759575 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.08167684 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.123936523 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117457268 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074186808 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074202891 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100987962 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08172061 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072976001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.130164301 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119332202 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082220015 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083846965 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095861858 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073886534 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.118010106 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082220957 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083034052 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100143634 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081304956 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072600824 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120435813 seconds)
  done (took 3.240845137 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082233579 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107701302 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.109539514 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094688988 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122477086 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06987903 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107319466 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096209589 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157251175 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069934747 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100266137 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07015139 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076861733 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.095280784 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080999906 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140446121 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117828245 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.098417782 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100228022 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07101821 seconds)
  done (took 2.942541774 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079400515 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074272895 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095149463 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073887482 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080542683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102349712 seconds)
  done (took 1.483193354 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073136408 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071787228 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096842205 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07132933 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076279247 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097551464 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070754014 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071664251 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097433582 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071955901 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071510892 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095891483 seconds)
  done (took 1.938567625 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466882794 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073159423 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098544812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070714836 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075574594 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096553278 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085750273 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072904869 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122094161 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070678373 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097634823 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073664595 seconds)
  done (took 2.377028281 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214800325 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106801232 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242201234 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170939809 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139185623 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150537194 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133543123 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119029178 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203122575 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137868292 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185483272 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1750489 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133469876 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170920039 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093660195 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.130696603 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177301651 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223537615 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136759667 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185008017 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178409865 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146210643 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160021211 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133255548 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094149092 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149899231 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102702185 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086546977 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213593672 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158523293 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168574428 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145049863 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126778297 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19170263 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22978433 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17581285 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167644802 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117293686 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.130651495 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.147064954 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242604554 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093774403 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187628926 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138152534 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112303004 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173187937 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14776124 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.154012368 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130486554 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094267822 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200493672 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193051691 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171824773 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11948751 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115089952 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14000044 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146226792 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132710336 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229851844 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17858388 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159194888 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076106974 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127040546 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169929883 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161366658 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145989068 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.158353153 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126345468 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17085357 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167153907 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144901268 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1700311 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.162920108 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117868061 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148618574 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153438587 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150192969 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205939129 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159151165 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101970339 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146647581 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102994622 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111966855 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17414025 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080242778 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192268101 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130504991 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119728593 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117172844 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140283212 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141391633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176438794 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169746182 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128481064 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069850172 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136234788 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.135929286 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166153132 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09333423 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138385691 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141314871 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.111403613 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157646598 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078716798 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156251907 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077632954 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155227989 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187836489 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081385293 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139820277 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10581467 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129866886 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156800088 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18037406 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122358689 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088247471 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210818437 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155189766 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103610556 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159116088 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17831375 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128178924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130248739 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178872005 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223858749 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094094839 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183394176 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135036323 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115877263 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094175267 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158053112 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136877759 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142637478 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087189111 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160036573 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216442034 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080252507 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119238264 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168025987 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086832412 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113318911 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1417807 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101275359 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120461901 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12740455 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104829163 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159793732 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157348841 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132418892 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145590103 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131765512 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230143939 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094636897 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130179077 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101711886 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101244642 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172188064 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177583663 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112753687 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182850546 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151607174 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135627633 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123781865 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115923645 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15629691 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084682468 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102012252 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172465878 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146504652 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142334656 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174518698 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108457833 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187160091 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160610288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152253624 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153748542 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.117834737 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139912741 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.119586171 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112777868 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144604349 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104929931 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096452089 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11446026 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13707176 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096248844 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114951242 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177567413 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148213187 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128971628 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11212093 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129839706 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160663827 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108721979 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155285857 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157166547 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101089253 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176021013 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198350375 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165832965 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097395477 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213673679 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075387657 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105389612 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095822817 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149742862 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114618674 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089355443 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148065947 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160334772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162550223 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155438767 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142760215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155272833 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170011519 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076954158 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148815819 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164391259 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15505077 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.140177885 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119389619 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.132208646 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129147582 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136949327 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233093171 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146535218 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156919979 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187674679 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129035005 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085960725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131416573 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163766893 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13350192 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156141513 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127729526 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094468798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140167958 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086654123 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139131628 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189403477 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115411189 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195633835 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.104569898 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161147893 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108823577 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145341565 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138082072 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117167656 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095604316 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154234785 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181385745 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128115254 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148982446 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172033198 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084819079 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15630108 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217150281 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174209374 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091526488 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138631783 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140708379 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143827919 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15188719 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129413083 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139085765 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167660874 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137316286 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116561282 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093428928 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129790674 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103748156 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.118600141 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128792892 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.154176608 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092914452 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192938337 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113179441 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138042495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149458213 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129874482 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097933491 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130767098 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194932095 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154418808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217732803 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103407976 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157476364 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181964075 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1071641 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084713853 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113128561 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156928595 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089998711 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166882185 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127652891 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137645351 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159837385 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17046178 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093013627 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101095262 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108706832 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151839078 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143732767 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131818704 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138454009 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184360944 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126470656 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086425844 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150475829 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13620596 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101002351 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174013317 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.094176232 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101411001 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108742029 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087428235 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144459774 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183821807 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.116298493 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.138360147 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146900989 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147137315 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145116677 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129350731 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101475935 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144966334 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178757507 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189930023 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086769328 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137249417 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155352603 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173781809 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140899618 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093007932 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209045665 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172728987 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177461329 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.121482748 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118747107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145972653 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136101905 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162874674 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115646076 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184223531 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114358852 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175497332 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133089348 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094853189 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153062812 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.128944055 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138683243 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166281548 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151953625 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089369366 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113507987 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146987976 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157404303 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134277359 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.08121998 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159304196 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078046088 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196378769 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207077574 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11293053 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105824075 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127686075 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115233578 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10799688 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137266182 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11951005 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.11815895 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206414913 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087852379 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167981573 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207960635 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147864853 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152473091 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096908342 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671814891 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111778081 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172866657 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106127682 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211299031 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102230917 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150718199 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136901259 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146796981 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172867996 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137582633 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211699149 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169970055 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155648122 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112662097 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110183209 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140579791 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.124161828 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132034525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145834196 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112008423 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13274057 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155687505 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148147878 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.114122007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093253378 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175967871 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134531894 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164743799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158304979 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090624363 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15085951 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18853476 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08685211 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158064336 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211525009 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094840489 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131202346 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087002869 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134786495 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236421558 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078538013 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176261859 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153325697 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137380739 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145861418 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126991123 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167129865 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136920175 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155938638 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124826552 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110705326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135036712 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117275259 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083130977 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134063529 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144487772 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100516701 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138051357 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141898013 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171832212 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078037199 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124326039 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108606859 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166308847 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219737871 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094038602 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116442823 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142612767 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10299157 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152560997 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155031676 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115373274 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08798465 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.116392522 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117401107 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121341803 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133231921 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109042893 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143939466 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182081404 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117990357 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258381722 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093492044 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133704058 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075333563 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112389081 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102661446 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126338383 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137174028 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102474709 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236728466 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126316896 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087429547 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128289919 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079430445 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116719985 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117353111 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143074688 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156797764 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125506601 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067009426 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138392486 seconds)
  done (took 68.724127518 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141911175 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110478409 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125635695 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.184519902 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154959743 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246935669 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188632267 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231490729 seconds)
  done (took 2.426819697 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074240703 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.12477426 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106097987 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115409992 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072216177 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.098556731 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308400728 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112067847 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072497222 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094667244 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.152698132 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074558679 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.488902507 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070718559 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101863119 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091388399 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072745582 seconds)
  done (took 3.269527884 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.435011632 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.672130509 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475024816 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079704991 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.020870307 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114972637 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.674781103 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.171985321 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097168608 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.449639445 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.740773117 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137802481 seconds)
  done (took 18.11723707 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079555909 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073767966 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115561182 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088095417 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076559303 seconds)
  done (took 1.485695965 seconds)
done (took 112.676027253 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085167693 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.370449906 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058849247 seconds)
  done (took 1.508607411 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088532497 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088907973 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117595034 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086810093 seconds)
  done (took 1.437503958 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079239085 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079184212 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116018666 seconds)
  done (took 1.328182311 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.300469224 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.14125781 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.121385622 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086833471 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082177459 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110209811 seconds)
  done (took 1.330858202 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07829959 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079954077 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105745733 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081326316 seconds)
  done (took 1.393326496 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080031901 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057495692 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059117907 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087817996 seconds)
  done (took 1.33909254 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093845063 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083559091 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.11197619 seconds)
  done (took 1.337917373 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109840942 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117506678 seconds)
  done (took 1.281287115 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085989311 seconds)
  done (took 1.136253885 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098502576 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148854382 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168524528 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143233255 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.178996228 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143582055 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093064655 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.121495971 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109953392 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094760227 seconds)
  done (took 2.357340821 seconds)
done (took 16.142686173 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08408218 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.396592887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366949551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123610831 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672634885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360632707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053327613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097456467 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14194904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072641096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117541228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653491747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.005353858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328749642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991186536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330264943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654551081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101268479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072733354 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073096959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038067025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072664121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100758115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073197714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654534897 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404537268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072777088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.352129598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072864711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074842427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387667481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073849722 seconds)
  done (took 16.121446966 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075847147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150745122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0791803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089092257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10399138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074747808 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104330052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074556407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153961117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07349832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089447348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101053683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076436629 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101045116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093289452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073230919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101973286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074082261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100188767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074311902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091730751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100624858 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073817441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073370417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101228154 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085603752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101222721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074112864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07370797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102807574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076976081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07420158 seconds)
  done (took 3.955397316 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121498828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.160524857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079517874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135611204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119705096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103742153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.177326893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09917501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158541511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073024003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118761403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07371337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.134573371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075205224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093318044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101628499 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074167284 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101265659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073722056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074016958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120170184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073629214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101001562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075256121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073254807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114716047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073821095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073944866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100859508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075258368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104416059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074541195 seconds)
  done (took 4.273518473 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077680352 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079866349 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116115666 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089081366 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074457694 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.105331068 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078092434 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103522203 seconds)
  done (took 1.788942115 seconds)
done (took 27.189510112 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083717782 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074564763 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106395279 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086659949 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077893439 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110964397 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071917369 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107277263 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080823214 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078510672 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10986771 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073227726 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07555976 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101077098 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079889948 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073345117 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111712094 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077084516 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.111541304 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084466659 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074889424 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108548845 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07931194 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.111609437 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083969597 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083456273 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.116394479 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078386736 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102195264 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076060974 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080381833 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11729372 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07362304 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11187259 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073485484 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072756704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100678796 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073423824 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084124293 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108527128 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07551849 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107850519 seconds)
  done (took 4.824446469 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092505896 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096217348 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118084258 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067494842 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071681102 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.095734995 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093260106 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.093636285 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067896633 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092568646 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0891571 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063431539 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064235115 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058789096 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.091548116 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061764171 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065794423 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060996122 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.090948776 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063185034 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06522946 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.086911943 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065779655 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06474062 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061230089 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.095471055 seconds)
  done (took 3.10332323 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089758073 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087317815 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121439724 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134157939 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140564354 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080311848 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112086362 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091323774 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1184966 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072623081 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076457999 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.129544881 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091526482 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108469123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073742498 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087458739 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.116612233 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07424303 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107350504 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09466108 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088637758 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11200795 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094270926 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.113325112 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072964419 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074654745 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.105035975 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086526925 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077790526 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.11041143 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077297864 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104789026 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075442261 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084291405 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.105373744 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074409079 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121386187 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083489781 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080905428 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.101835033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076313312 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.101661893 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094399519 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.117171543 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100841202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080163348 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108788518 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083216446 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072554198 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119829954 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081611271 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100746132 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076452264 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072180616 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.101244442 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087693829 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074498867 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104067645 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082628215 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075627835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.114676494 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07651496 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117506155 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073364335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079729573 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101291825 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074377264 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07168657 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.12429914 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074165037 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142851346 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073784113 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.103124336 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082503545 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080452216 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107468954 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073016532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.117185395 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083043862 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075468122 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.110375011 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076658012 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075917194 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119597004 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075415161 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.102715215 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074796323 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078934529 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.104622216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074774453 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087032109 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101579425 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076898511 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.119227641 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072580237 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074311419 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108626467 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07784021 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071918439 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114453841 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078267699 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.102198296 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08265297 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072759065 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104991542 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082226899 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.106235785 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072604622 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076800841 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.108134175 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07391126 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074156149 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105065717 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074806557 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110715479 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080365025 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076921476 seconds)
  done (took 11.861451836 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20500886 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195005356 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075568486 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186593672 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084009947 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114143795 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.189311296 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104371438 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.103067936 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07417296 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073758901 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.142490386 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105811822 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.145558525 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111566599 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073525206 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092033681 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143523032 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.193195657 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.185815791 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093338677 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.112309557 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07655982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07346922 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105314347 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083469035 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.120062268 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085269675 seconds)
  done (took 4.432087435 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088139049 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.135167928 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078667125 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094411157 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126279409 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074010732 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.107544386 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074453351 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085641748 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.114634133 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07361989 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.108837652 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08020188 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.112122342 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074457237 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082000152 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.112606649 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074893982 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104970137 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07774215 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079063428 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.11619442 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076817257 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102072905 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0811571 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07235901 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100615815 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091674625 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.102077331 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094971528 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.101064041 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.08034105 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082577739 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103798412 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072571827 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075036218 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105520747 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07568359 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075102404 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101697368 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071906442 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063388309 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101569053 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085889437 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109022728 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065225239 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079839366 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108953992 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078452908 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071740888 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106117283 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076850208 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105826988 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081358596 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077903312 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.108258637 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077583535 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071030514 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109930819 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076223665 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069548181 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102265952 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078590419 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073851198 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111345995 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078303722 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101861681 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076382981 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078061583 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.110422246 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076370276 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075759416 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100971385 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076585283 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078397777 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107205578 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076798751 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07235197 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102459667 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074079028 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061394096 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102709877 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059467702 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076164193 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.101447159 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072021498 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07581517 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108219169 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088320249 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.103847709 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079713742 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103182355 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07275972 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077327822 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097908207 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076300173 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087429904 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.120091043 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072854458 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101287569 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086603185 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078305133 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101635074 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062094262 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080935175 seconds)
  done (took 10.357333089 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095780537 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098780734 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104880709 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087026112 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12984844 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095796297 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110246957 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079869104 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074826293 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120711655 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074501 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081637085 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.107529136 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081936856 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125796851 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081615353 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075039812 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.112751868 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.081289662 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137698338 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087151358 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091129562 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.114382071 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073960041 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078509516 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.115624942 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099105244 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113632314 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.082874662 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.116789643 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08432032 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099628655 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.118845907 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.077914041 seconds)
  done (took 4.405212934 seconds)
done (took 40.036388463 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.166584518 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.365881726 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.135732028 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09487846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.149936531 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.168594049 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.149181923 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.136744938 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.759114472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.137896356 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.360049645 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.794366029 seconds)
done (took 59.500006479 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.21526018 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.277953177 seconds)
    (2/2) benchmarking "String"...
    done (took 1.407729214 seconds)
  done (took 3.765575412 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.552803152 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.149701268 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.422992459 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.135417517 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.135147701 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.582501886 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.796264082 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.523914679 seconds)
  done (took 27.82508627 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.144488771 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.536478273 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.822256243 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.820065201 seconds)
  done (took 18.404335513 seconds)
done (took 59.842677738 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.142689482 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.186646256 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.154572292 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.121519478 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.270995372 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.176280376 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.531533206 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.386690189 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.137328882 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.124580564 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.156548565 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.136752161 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.139923984 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.509567715 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.150819093 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.139912323 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.197678517 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.662765167 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.544059367 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.148450024 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.150778597 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.182067856 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.167379573 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.142029781 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.158475113 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.137580967 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.137279564 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.149705468 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.704576334 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.140490306 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.143602347 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.699140537 seconds)
  done (took 190.014149295 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.137396785 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.129965265 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.224404125 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.176744517 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.580365506 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.337464031 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.276431717 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.648716604 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.156472566 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.148099091 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.355001338 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.1422677 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.435138295 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.160061535 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.147232425 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.242916273 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.426944607 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.438514267 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.159016821 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.407845456 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.158184847 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.455087161 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.507616709 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.309672333 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.194335039 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.194742222 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.159748257 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.174607745 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.33289491 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.385464025 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.15475275 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.1818382 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.767394017 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.996870521 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.156869891 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.173652963 seconds)
  done (took 148.11656508 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.422050623 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.139028284 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.138189782 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.137839798 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.138860347 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.171127109 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.138671469 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.719030841 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.705475801 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.138640324 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.643630584 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.493770475 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202730967 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.426189479 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.14332941 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233106928 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.151215258 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.139928135 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.153555004 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.167480469 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.140729394 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.140111307 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.71751884 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.156055575 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.226606771 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.14542537 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.139921488 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.171570424 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.535586478 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.138941605 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.139240639 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.171657286 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.462968673 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.186734707 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140103306 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.498015978 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.928899636 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254280173 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141451279 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.172145424 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.139861073 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.411451895 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.14141501 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.140832294 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.142840395 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.787394221 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.143496241 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.721392976 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.143836229 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.067644402 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.140136187 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.140319801 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.665088001 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.747598073 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.144122798 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.14171265 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.142159856 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.141539371 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140655333 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.173680495 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.718119996 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.243057591 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.141491153 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.141925471 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.144339298 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.174427061 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.140950017 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.189620917 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.142400883 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.852688442 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.196991461 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.355616563 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720476594 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.146414791 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236266884 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262884324 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.14196281 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.142118737 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.141516254 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.141385059 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.250186879 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.141577006 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.563292717 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.148633458 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.143296839 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202213621 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.237508841 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.142132421 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490580627 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.146203538 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.142277011 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.864211422 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236953688 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.142384504 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.142096241 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.142782291 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.566065953 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.709045061 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378660072 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.146256634 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.779616902 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.147528243 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.579060803 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700572126 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.799585578 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.146808623 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251169496 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.146766385 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.144294243 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.141851462 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.171656796 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.144106496 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.202579946 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.143589797 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.542395213 seconds)
  done (took 340.649817749 seconds)
done (took 681.282254887 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.845297774 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.79510673 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.936842818 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.81406584 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.792776803 seconds)
  done (took 10.272588773 seconds)
done (took 11.358645332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.330362201 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.331075804 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.205807466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.333363327 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.172723973 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.349656672 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.311369144 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.164534849 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.245708736 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.223125121 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.246818794 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.193190427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17215634 seconds)
  done (took 17.368575568 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.467200151 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.453492504 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.20973099 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.468545073 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184936906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.462341242 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351418125 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.363496786 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33829327 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.159947509 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.159324554 seconds)
  done (took 15.708159382 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.467695022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48671765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.212690168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.460899706 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.186539009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.461808319 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.348059443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.364973164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.346429676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.160339372 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.15902074 seconds)
  done (took 15.743687804 seconds)
done (took 49.907542672 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.154210492 seconds)
  done (took 2.243003543 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.189833006 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.35527652 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.172769211 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.160765686 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.155808715 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.157313479 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.160592773 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.154920116 seconds)
  done (took 10.598648264 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.151914133 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.152018672 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.154475708 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.152145799 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.154935953 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.151569007 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.154103863 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.151722046 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.152360023 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.153246645 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.154928091 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.154492751 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.154636286 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.154536216 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.152397747 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.155829001 seconds)
  done (took 19.54605124 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.154647015 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.152269732 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.152879731 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.152992372 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.15252312 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.154014787 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.153913126 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.152217563 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.153608559 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.152490168 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.153639389 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.152132137 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.153709079 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.152829981 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.153636642 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.154574005 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.153782906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.153092339 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.157957416 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.153588272 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.153901324 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.153440221 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.15466228 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.153981874 seconds)
  done (took 28.779077767 seconds)
done (took 62.254017551 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.346423311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.896114103 seconds)
  done (took 9.333085082 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.156252185 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.156561969 seconds)
  done (took 3.406686371 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.155534214 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.156426507 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.155736994 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.156433532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.156181242 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.156769565 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.156768794 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.156720241 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.156189658 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.158049335 seconds)
  done (took 12.656148586 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.157126876 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.157713619 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.154311256 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.157570725 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.156582764 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.15378414 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.157633012 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.157860275 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.15629603 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.154817474 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.157759393 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.153728846 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.156719869 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.154268939 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.156679114 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.154413779 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.154728379 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.155737322 seconds)
  done (took 21.900958463 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.157616421 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.156863392 seconds)
  done (took 3.40721631 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.155845213 seconds)
    (2/7) benchmarking "second"...
    done (took 1.155094665 seconds)
    (3/7) benchmarking "month"...
    done (took 1.155254003 seconds)
    (4/7) benchmarking "year"...
    done (took 1.155578162 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.154977652 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.155459331 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.155671815 seconds)
  done (took 9.180831629 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.159466672 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.337395513 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.424398919 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.755833986 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.159161133 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.161617792 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.0084795 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.16096178 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.163802648 seconds)
  done (took 13.424465018 seconds)
done (took 74.399459605 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.18579646 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.157059795 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.104869093 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.160290535 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.172838158 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.4975591 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.183590697 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.277500197 seconds)
done (took 36.831927833 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.162829297 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.964457345 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.97580872 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.155426738 seconds)
  done (took 11.191466213 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.149687871 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.117307747 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.144511511 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.183969748 seconds)
  done (took 17.691940614 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.21044918 seconds)
    (2/2) benchmarking "read"...
    done (took 1.490271832 seconds)
  done (took 4.796689773 seconds)
done (took 40.935676042 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161552774 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.159757356 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.158374248 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.157807741 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.161267839 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.158195561 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.157613479 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.161262061 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.160348439 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.159837324 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.161163312 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161021635 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.160852338 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157923433 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159256384 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.158882354 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161188879 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.159344856 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158704339 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158829745 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161731497 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.158688923 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.15917404 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.161759512 seconds)
  done (took 28.930275618 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.163081038 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.160969643 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.161288746 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.16161864 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.159881538 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.16164888 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.162818844 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.159349777 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.162894202 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.162469041 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159854474 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.159909642 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.163022265 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.160567354 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162594855 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.160443778 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.162764227 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159368106 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162205218 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.159976078 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.163025194 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159241418 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.160974181 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162174747 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.162070094 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.160702912 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.162628524 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.162663546 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163211475 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.16046021 seconds)
  done (took 35.941357231 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.167601232 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.17018555 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.162750877 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.162583597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.163170579 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.163274534 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.16297365 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.162633078 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.163099397 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.162872507 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.163348401 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.162832669 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.163524489 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.162924013 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.162739144 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.163264958 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.162240791 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.163050771 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.164462394 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.164059432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.163645112 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.163597875 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.164143983 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.163957402 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.162498366 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.163753283 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.164029305 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.16338919 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.163735041 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.163324542 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.164358944 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.163156489 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.164138176 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.164362075 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.163079215 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.164131225 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.1692454 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.171051156 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.163843833 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.164490583 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.164952611 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.164826206 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.165245186 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.165091951 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.165485468 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.164528548 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.164485392 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.164672039 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.165677349 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.164715222 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.165293665 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.164556888 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.164635433 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.16456382 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.164490274 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.164911095 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.165257628 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.165286712 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.164987296 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.164718614 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.165212403 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.164765415 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.165548643 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.167114392 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.166160052 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.165548855 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.165106165 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.165552044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.165629042 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.166342397 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.166797169 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.166549804 seconds)
  done (took 84.951122065 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.166445002 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.164324738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.1633733 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.163428981 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.164215511 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.165999341 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.163334669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166338433 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162849332 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.165339653 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165470535 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.164666237 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163137566 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.167248085 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16638455 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.164773859 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.166266863 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164400733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.166354895 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.16646589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.166109208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.1639225 seconds)
  done (took 26.7339084 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.167820637 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.167428476 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.165074596 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.167394051 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.163756476 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.167621316 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.167759905 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.168034658 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167897723 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170413768 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164819748 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167933901 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.16535106 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.164897162 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164147089 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.16473756 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167324932 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.164910635 seconds)
  done (took 22.099633307 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.165561568 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.165739041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.168126041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.165282521 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.166117668 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168046376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16570373 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168510837 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.168515269 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.166200548 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.168355453 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168449417 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.16903177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166493773 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16929189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.166723502 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.169032505 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166961153 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169075137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166632909 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.166604457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169580117 seconds)
  done (took 26.787745624 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.168463466 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.169219497 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.166650668 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.166483751 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.167080962 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.169581835 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.169869536 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.166437718 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.168919333 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.169071355 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167801458 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.169206609 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.166447267 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.167252419 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.167974089 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168516917 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.169978945 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.167683812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170118047 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.167262081 seconds)
  done (took 24.469057612 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171598116 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171776921 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.170440064 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.171011296 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.171175621 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.172204058 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172085978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.170974458 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.171086893 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.17120278 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.172016231 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.171226524 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.171527246 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.17121434 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.171868306 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17036096 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.171039568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.172267922 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.171265504 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170938763 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17183133 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172048218 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.171149311 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.170697292 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.172360301 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.171605057 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.170399564 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.171158343 seconds)
  done (took 33.904375831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171556684 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.171168106 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.168603573 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.168842734 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.16921621 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.168854129 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.169520202 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.170853969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.172458854 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.169481642 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.172534454 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.171636059 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.172651637 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.172083073 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.172915105 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.173155077 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172920593 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.169646892 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170406665 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170719956 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.171893672 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17245448 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.172901595 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.170617172 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169905344 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.172198664 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.170412724 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.170020724 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172537835 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.171511117 seconds)
  done (took 36.241497497 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.191951541 seconds)
    (2/2) benchmarking "in"...
    done (took 1.191664824 seconds)
  done (took 3.491679492 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.170671677 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.173536077 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.173493364 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.170644526 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.171727635 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.17380405 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.174144504 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171407235 seconds)
  done (took 10.487601891 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.172953655 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.17373498 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.174069415 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.174064262 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.173982545 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.173499013 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180465142 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.191329182 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.174219349 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.174572532 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.179688681 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.180559779 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.176564122 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173314681 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.174888885 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175908492 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.17453733 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.174409673 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.174066212 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.17489364 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174669733 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176881845 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176635653 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.172137111 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.175855239 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.185860244 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.178549326 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.175034498 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173715846 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.179791966 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.174120246 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.173485804 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.175600643 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.17669033 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.175328419 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.174379663 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183957616 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19259499 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.182626487 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175710313 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176054534 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.172868605 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.17569907 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.176553559 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177230805 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.176023056 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.175885026 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.173593572 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.174086359 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.178953246 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.180999407 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174462914 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.174271712 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.179115617 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.176995424 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182673331 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.193603148 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.177387983 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.184756303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.186733281 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.190126754 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.184970251 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177664416 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.17631917 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185888922 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.199089422 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18280977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.191547817 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.173652444 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.176657486 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.183679784 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190504121 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.185724137 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.177277257 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177537823 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.1778016 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177569603 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.178549039 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184408792 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.197163621 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.177811635 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177363432 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187941377 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198968264 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.176205942 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.178928933 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.178000062 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.177958247 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.179260209 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188861082 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.19695018 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.178196988 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.177680505 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.177168135 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.18023524 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.178857815 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.176254421 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178097606 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.177333247 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.178925307 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180008831 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181795047 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.187745061 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179649133 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179460691 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.185685732 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.179754661 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178054761 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.184952171 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.179326465 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180322139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.179900305 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.184386538 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.17755718 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18227504 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.187374649 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.179572758 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.181029239 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.179617904 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.17966741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188970838 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.20541476 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.180514151 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.180775775 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.184602461 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.190501218 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180324281 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.18301015 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.180562171 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.178059364 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.178017112 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.181603238 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.180668582 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.180415082 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181296242 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181238525 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.178639198 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.179964622 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.180525085 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.181368389 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.180660179 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.18042164 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.181881436 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.182819954 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.181190682 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.181033652 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.186578957 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.180724295 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.182051698 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.181797515 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.179889909 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182468943 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.182069396 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.181964792 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.181217258 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181711835 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.181399427 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.182478523 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18223385 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.183417159 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184908346 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.182515864 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185675241 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.18284424 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.186622853 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.180969829 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.180573761 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.181744031 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.18388795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.182003778 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.183405733 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.180741593 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.185127593 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.18903582 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.182577637 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.183755932 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.185549458 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182408214 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183485898 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.182259926 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184742806 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.189426864 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.183053816 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.188935268 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.183934278 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182860572 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.18272055 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.182443814 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.181585842 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18266919 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.185528323 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.191300842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.19609316 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191917559 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.184955231 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.189387296 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.184808278 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.187653695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.193106995 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.184293444 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.18437642 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183689047 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182650064 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183101365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.184414165 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.183894303 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.182500007 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.184789647 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.183635326 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.183080222 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184182955 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.183642148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184731004 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.18213708 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184810214 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184409769 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.184163633 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.182945045 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.18278314 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.183516672 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.18597298 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.184787958 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.190896973 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.183060517 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186023016 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185861859 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.184767594 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.183740982 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.185090056 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.187677706 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.184608234 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192050183 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.202116951 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.185291174 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191894542 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.202642067 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.184818004 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.188492255 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.1856181 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.183763721 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.18913948 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.194228145 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.186728914 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.186742546 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.187260781 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185556069 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186182404 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.192372705 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.183813921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.185500676 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.186647083 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.187354427 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.18491703 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.187136673 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.185426439 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.186579524 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189296154 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187480049 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.187016025 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186783258 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.187441336 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.187609929 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.1882883 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189213219 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.194952474 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.191033835 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.18664861 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.188647461 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.187669853 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.191065633 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.187605886 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.187884471 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.187313035 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.199798923 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.196419954 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193331267 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.188351979 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.188360138 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191908278 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.188942714 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.190926843 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.187500607 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.187294721 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.188349095 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.188799107 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.186312689 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188045059 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.188499228 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.189047929 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.189417865 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.192585558 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.188674209 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.187648914 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.188673825 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.188865992 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.189048974 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.186498938 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.189558104 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.190220873 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189992082 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.187654314 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.188294663 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.194849221 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.206023837 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.189905671 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.187807663 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.189987416 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.188081173 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.190010207 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.189770853 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.191762867 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.197220445 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.19202659 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.197730616 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.189592073 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.198489411 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.189384075 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.192600691 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.197975581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.186961821 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.188120543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.189331185 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.191001101 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196901275 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.208117055 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.19012406 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.194375448 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190883333 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.191553003 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.190676827 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.189988908 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.191836059 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.19096467 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.198264656 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.209690228 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.193102614 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192666118 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.189013448 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.19089674 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.190322745 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.189044228 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19454471 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.191581762 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.192036324 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.190503527 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.191162821 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.190807146 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.191916908 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.191799736 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.188445775 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.191480043 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197913272 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.209187259 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.196516072 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.192371939 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.199935946 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192425058 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198440216 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.210045125 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.191240914 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.191944415 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.191835373 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.193918415 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.191632983 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.193149728 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.192813083 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.193388474 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.196101298 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.193686655 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.194377784 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.192377916 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.193154518 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.19187652 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.202331581 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.216131567 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.192642774 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196830216 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.189934673 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.192685738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.19883452 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.192400473 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.191706821 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.194182859 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.202923574 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.200889895 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.19195746 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.193783498 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.193677676 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.194125629 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.193250717 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.194207716 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.194241681 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.193879646 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.194717823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.193777349 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19557511 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.193996936 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.19445114 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194918953 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.195069765 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.204587696 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.195051225 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.195585269 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195481121 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.194352021 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.193685321 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.194293897 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.194600251 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.194126555 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.196687475 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.197091626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200756619 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.199890901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.197001603 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.193261154 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.195022252 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.194858446 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.195011758 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.196379994 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.196543855 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.196208219 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.195757955 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.1949975 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.197017339 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.192426477 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.196086023 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.195560652 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.195564003 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197828343 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.201213067 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.195832783 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.193597717 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.195144537 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.196194258 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.192793096 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.19473244 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.202589555 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197852595 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.206266187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.203305782 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.199786973 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.194631832 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199136664 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.203927562 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.193562802 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.194893484 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.19570295 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.197819848 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.197080204 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.199278488 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196900764 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.201824109 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.196423794 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.195462389 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.204065598 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.214786919 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.196925505 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.196793228 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.200146654 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.195960717 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.194432166 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.197714658 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.194723535 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204172917 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215496729 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197370901 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19976095 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.195828691 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.197407088 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.201817862 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197853649 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.19819705 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.195074696 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.198149739 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198394485 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.198097188 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.196043477 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.19602124 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.19794915 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.200473946 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.204760808 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.195746977 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.199406459 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.198263074 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.199371219 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199201964 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.198537157 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.196314193 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.196622036 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.198009602 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19899168 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.198019221 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.201021293 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.197863168 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.199212889 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.201263198 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200109378 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202320656 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.208622481 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.207477253 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.196769383 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.199064921 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.200711125 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.202368249 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.198839189 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.200134862 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199585244 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.201998028 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.199756476 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199613045 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198656889 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.20202791 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214774408 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.217660188 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.199430822 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.20028909 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203430025 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.199873324 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.198336912 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.200642022 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.202912473 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.202769009 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.208156433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.201178004 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207899787 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21803735 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.201671816 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.20362263 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.202670825 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.207920617 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.202862131 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.201314247 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.201461302 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.205752129 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.216800763 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.201351464 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21062711 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229673024 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.218951213 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.201592824 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.202417589 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199308882 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.20153866 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.203068795 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.201933237 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.201763275 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201921544 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.201259253 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.201512785 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.206301585 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.202841432 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.202010394 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.201807543 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.201161715 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.20220324 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.199512994 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.202253083 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.201494978 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.202961004 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.202923559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.202708503 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.20142628 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.214820348 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.212152037 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.202368866 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.202837625 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.2003293 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.204416405 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.204365265 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213013263 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.209699976 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.202763654 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.203261173 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.204178458 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204315065 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20090441 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.202313196 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.202358779 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.201971316 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.201270145 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.216779646 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212987888 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.207316189 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.202539834 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203649208 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.203634988 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203247346 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.204238284 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2041314 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.204789301 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.20431962 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20835206 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.204036938 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.203732864 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.20692853 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.211344969 seconds)
  done (took 710.976429603 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202673303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20147389 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.20196955 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.201993288 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203700502 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202394905 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202190279 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20187001 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.201835041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.201518316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.202516491 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202967717 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202657892 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202975556 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202816919 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202097547 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201972624 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202809189 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.202431932 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202869301 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202098443 seconds)
  done (took 26.387165643 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.205759811 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.203748706 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204111242 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206986623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204092467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.204416517 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.203399141 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205596605 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205839824 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203536869 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.206824857 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206895065 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.203340834 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.203035866 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2038003 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205693105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.205718318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203440455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.20618789 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204087978 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206605256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204813933 seconds)
  done (took 27.646053743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.206065266 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.206327329 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.205731568 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.203495018 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.206923129 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.204193944 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.20700532 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.206299435 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.207253054 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.206870637 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.204425239 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.207133265 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.212844751 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.211708915 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.207859249 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.206723101 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.351339219 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.20697212 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.20735802 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.208170178 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.204321947 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.211618745 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.205831857 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.205249772 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.204851451 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208252989 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.208354778 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.208690122 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2074785 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.208076659 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.211863334 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.208015727 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.20626518 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.207911034 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.206728403 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.207990418 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.21282946 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.208545181 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.206251561 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.209196498 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.217711764 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.229885849 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.208620338 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.214743964 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.208983331 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.208346162 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.21234121 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.216310308 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.206213686 seconds)
  done (took 60.50677838 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.207802772 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.208868678 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.206178825 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20860786 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.209501438 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.208063275 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.208168364 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.208568926 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.206503467 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.206019322 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.210029534 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.207554935 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205733819 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.209166115 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.210047131 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207485425 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.206517438 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.206884894 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.206132263 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207566906 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.20725048 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.209390799 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.210456802 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.206913798 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.209357545 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20700451 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.207746176 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.209441 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.208445794 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.208168506 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.209966843 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.209928266 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.210448288 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.207736294 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.207512178 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.210305235 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.211452304 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.206917715 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.21037956 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.207828983 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.211315263 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.210217396 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.210333493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.210400614 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.207982975 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.208998259 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207720631 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.20859055 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.208879426 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.211231665 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.210649173 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.209123399 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.211566533 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.20826232 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.210773536 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.212743064 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.208910862 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.207966191 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.211108934 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.209019903 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.209275616 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21156012 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.210272298 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.213150024 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.211944278 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.210056859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.209754832 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.212582916 seconds)
  done (took 83.360301648 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212214814 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.211827751 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212562267 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212598212 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211722822 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.212175855 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212137145 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.211974255 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213430331 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.212358068 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212448334 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.212682617 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.212496318 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.212706663 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.213144783 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212467143 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.212928003 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213011136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.212852142 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213007476 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.213638187 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21320877 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.21360292 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.213379763 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213556247 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.213802789 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213599179 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.213683552 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21359617 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.21359062 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.213058016 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.213338709 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213522223 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.212833833 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.21493152 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.214346873 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.213537546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212813655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.214339006 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.212827719 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.214208548 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214141535 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.214341071 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.214673956 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214148048 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.214071171 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.214445008 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.214631284 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.214590583 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.213999435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.214020049 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214492043 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214380548 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215131855 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.214882577 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.21516213 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214489249 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214651734 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215455535 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.216937427 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215717832 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.215053334 seconds)
  done (took 76.392640252 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214978235 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216501232 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.212241961 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.212848439 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21567809 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213020336 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215381303 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.21547252 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214365006 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.216124231 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215011404 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21333742 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213790127 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215682019 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212470619 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213807972 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213942693 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213377716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214750962 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213106675 seconds)
  done (took 25.433692878 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.213457066 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.216448946 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.213820927 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213588818 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.215853734 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.213417436 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.21714365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216527331 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21316731 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215551988 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216521393 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216191778 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213892928 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213460873 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216717108 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.213837896 seconds)
  done (took 20.588200184 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.214516425 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.216796438 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.217160303 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.2173633 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.214253716 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.214512257 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.217683262 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.214460641 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.214062283 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.217297642 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.216923211 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.216973458 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.218273899 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.216932893 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.214509699 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.217372756 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.215064036 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.214412884 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.216905249 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.217462716 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.216911245 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.215353473 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.218627657 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.217106666 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.216127632 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.216468223 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.216242268 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.215531826 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.216488144 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.218168493 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.217563509 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.217853996 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.216571372 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.214836729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.218945494 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.216380994 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.218475034 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.218938628 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.219060441 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.218317593 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.21899285 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.214939369 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.21945871 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.218983686 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.216482612 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.218882178 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.216631425 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.217663353 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.216009678 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.215510768 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.219598178 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.21958613 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.219862465 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.22009669 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.218855311 seconds)
  done (took 68.089012185 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219534423 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220492633 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217487508 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220350251 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.220402809 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.217188258 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220615898 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21802589 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217620033 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220654968 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218466019 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221327446 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218244899 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22091682 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218377689 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22074247 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218556128 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.218257589 seconds)
  done (took 23.099264378 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218529245 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.219001911 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.221674532 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218586816 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.218515539 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220679277 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217922372 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.220763365 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221406204 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2190965 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218012872 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.22219492 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220690707 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.221466032 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217988844 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219012566 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.221474914 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220136622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219037517 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21907465 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221267527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221405463 seconds)
  done (took 27.992385291 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.220204008 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.220314655 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.23703845 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.261542255 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.250189304 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.219955614 seconds)
  done (took 8.561769914 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220395744 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220886564 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.219830879 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222421899 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223394142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219839656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219675375 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219774861 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221762453 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220445704 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22071454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22213166 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223005302 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220486427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221697597 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222524093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219818876 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221046518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220749113 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223635764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219993827 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222530129 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220448778 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222704531 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21980047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220781657 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224352066 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222035036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22230507 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223732009 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223413167 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221539418 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224659124 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220886518 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225758527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224605908 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221807692 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224139499 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224616086 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222443763 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224983386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224760017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225534154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22331068 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225021787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221201713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222696429 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222410547 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223482877 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225960972 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225215405 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224253535 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224611656 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225747738 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225696217 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225994036 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223057266 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222894107 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2250244 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223722595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22267637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225003633 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222777953 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222650566 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225690503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222942751 seconds)
  done (took 81.860641682 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223451313 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222961938 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222757081 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224484658 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22307642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223462423 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222825394 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223135124 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224169717 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223733568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225910508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225138554 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223067474 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223872363 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225011066 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223358556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223230453 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223254434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223789819 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226001275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222614938 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223543502 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223366896 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224413943 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223287214 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225048603 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222721663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22326577 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222257094 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222053009 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223119383 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223319598 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221604049 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.22110832 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22255412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222291673 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221201851 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221606257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220783143 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225802113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221583581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224568205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221387591 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221362206 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222539074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221111195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221654983 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222164988 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221062025 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219427706 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221086472 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221762004 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222002857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221348767 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222453799 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221737041 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220873759 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221869406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220586932 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22415024 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22181366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22199578 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224200621 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222475619 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220649751 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220953497 seconds)
  done (took 81.859160974 seconds)
done (took 1657.886583407 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.220281121 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.229109186 seconds)
  done (took 13.604482819 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.387694759 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.338618981 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.220964238 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.253860759 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.219916877 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.222353684 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.214422243 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.220977803 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.220742732 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.21938669 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.220953902 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.413524494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.216089011 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.220643657 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.220164711 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.314619743 seconds)
  done (took 41.282152944 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.251185524 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.227755811 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.343390958 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.24432267 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.251068535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.416913941 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.282716162 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.226547304 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.406473796 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.270062233 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.851909059 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.252040514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226641207 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.37954947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.244406038 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.418519417 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.482135796 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.855104069 seconds)
  done (took 28.786476969 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.698746257 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.228858939 seconds)
  done (took 9.082636621 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.253386395 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.269054776 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.238976861 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.241053615 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.240070142 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.230539356 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.289490019 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.280583935 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.225183351 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.220680417 seconds)
  done (took 63.645879446 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.245535804 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.226228251 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226702748 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.224345529 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.217733858 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.216137141 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.224796603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.221801722 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.058878643 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.356146093 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.24324139 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.23341328 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.225441104 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.225739677 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.222023953 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.261525917 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.353883193 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.223266543 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.221201556 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.230754571 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.225723195 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.314274208 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.266541175 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.223013691 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.356141954 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.039534157 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.226864095 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.231940287 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.335814067 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.223349474 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.222661816 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.223451766 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.226080885 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.801011962 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.675412415 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.231683287 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.249223178 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.232869177 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.2223316 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.36584637 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.225541635 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.230539535 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.216662041 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.650907405 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.373613965 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.336892921 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.524513786 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.224588454 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.225067359 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.286051033 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.225046462 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.226067601 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.253737664 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.980611788 seconds)
  done (took 105.689116453 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.228761973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.704885352 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.386885028 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.238465004 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.053589758 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.913223238 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.218585006 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.510749589 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.261700156 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.217938054 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.499557477 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737702708 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.22130599 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.280503555 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.486470371 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.254586705 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.230516339 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.025309886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.221105699 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.218751352 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639926508 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.243126179 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.215774408 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.365985261 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.254611987 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.690841441 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.695303208 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.742913652 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.219193226 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.21640121 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.688145961 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.219242804 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.223069409 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.216619722 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.486596701 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579176234 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565112485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.223888708 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.244787364 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.216686399 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.215651821 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.684149311 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.571893588 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.218586205 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.215019185 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689860536 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.21837707 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.217697986 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.215229638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412763406 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.239622398 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.21635355 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.639186719 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.214611691 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.555350961 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.214474788 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.251103258 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.709834842 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23128873 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.353454391 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.268155125 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.213007578 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.212519666 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.215564341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.217817709 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.562439257 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.762034377 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.218822183 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.563712018 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.673491145 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.217701135 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.737608466 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.121450623 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.228481359 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.288478094 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.212631728 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.841468433 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.69924283 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.217678482 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.212854465 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.537329752 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.218413962 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.487237541 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.225089685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.213079293 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642245769 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.232728898 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.244992419 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.214492044 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.248516676 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.877339637 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.214240921 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.476384121 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.252517979 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.214306718 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.212931469 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.238389338 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21472129 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.213924588 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.2146303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.732647239 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.22016045 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.346728759 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.231467152 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.213266937 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.218475013 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.217195748 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.215048556 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.429701081 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.637680022 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.221160359 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.217286495 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.214615035 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.227955959 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35764004 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.216277318 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.518908557 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.219524741 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21524277 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.222722093 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.932770414 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.258267536 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227415606 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.215831768 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.067799785 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.424216394 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.230576435 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.215582619 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.216379906 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.230737333 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.527585337 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.214885396 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.234047082 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.216186432 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.912421096 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.219696017 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.22892254 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.882664032 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.219975307 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.140417997 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.238864247 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.214916416 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.52579679 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.490717788 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.692111749 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.219399899 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.215839591 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89826048 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.25204841 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.363964209 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.235544523 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.23964653 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412891764 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.305273126 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.216527501 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.792495888 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.218998056 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429311097 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.216003185 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.539617412 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.700269549 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.217582875 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.223044104 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912153209 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868487747 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.86789519 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.218129761 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.489117176 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.184141856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.661925258 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.21647346 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.217209171 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.706724649 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.219583835 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.224002642 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.21709883 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.218030581 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.382588287 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.391404276 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.401772153 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.221231084 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.678450906 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.237886306 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218591773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.222445547 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.218105222 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.570848267 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.273593637 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.221161885 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.251629143 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.218301871 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.21809166 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.690805094 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.172866594 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.222983522 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373267878 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.839087926 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.223228435 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.218632365 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.80921082 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.642844078 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.725191074 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.263451717 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.526265756 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.22237525 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.257906152 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.973946406 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.271390877 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.73444455 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.223093207 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.223497503 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815736758 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.222469597 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.574181334 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.2203482 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.220896439 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765048532 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.2240105 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.226095105 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.585221483 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.22427459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465483381 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.220812614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.25387295 seconds)
  done (took 1085.735307926 seconds)
done (took 1348.980074281 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.219720205 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.219847553 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.211997079 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.22384759 seconds)
  done (took 26.03362642 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.232902259 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.22654853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.228160109 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.226637348 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.229907721 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.226339849 seconds)
  done (took 8.529538898 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.282420637 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.220616762 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.22464474 seconds)
  done (took 18.886938042 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.439474355 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.488370983 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.589156821 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.40499719 seconds)
  done (took 10.082021757 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.228479084 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.229567759 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.229670617 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.230459443 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.234799977 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.2359068 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.232072851 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.231550387 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.235317924 seconds)
  done (took 12.245005937 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.091196838 seconds)
done (took 82.025606704 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.272143954 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.238271528 seconds)
    (3/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.032509573 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.559941703 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.222255084 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.510064857 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.883900773 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.992784238 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.478254955 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.276087283 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.267720049 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.68688232 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.253628941 seconds)
    (14/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.238814526 seconds)
    (15/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.28918576 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.00295 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.698397573 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.53869968 seconds)
    (19/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.21204271 seconds)
    (20/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.590970316 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.221865098 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.077543478 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.308016793 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.842061524 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.296552677 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.332899597 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.591572409 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.145207995 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.249239403 seconds)
    (30/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.262438566 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.377547712 seconds)
    (32/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.770182513 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.351588237 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.189754146 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.630146049 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.863047019 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.21309356 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.523976505 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.359005375 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.118814565 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.789472736 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.28198994 seconds)
    (43/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.800226161 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.065941403 seconds)
    (45/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.351247027 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.860542369 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.57213939 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.447828896 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.667689888 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.233843611 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.213521989 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.574850305 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.349839352 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.713099313 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.408615661 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.489186129 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.345935566 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.985433452 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.080903533 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.249977091 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.219403137 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.672437705 seconds)
    (63/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.301612195 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.071091837 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.423868918 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.30033368 seconds)
    (67/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.47490128 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.086086237 seconds)
    (69/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.324057679 seconds)
    (70/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.224471677 seconds)
    (71/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.321384106 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.225039789 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.503849738 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.45362067 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.225728388 seconds)
    (76/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.244440583 seconds)
    (77/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.226520057 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.66947176 seconds)
    (79/309) benchmarking ("sort", BigInt, false)...
    done (took 6.240655169 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.572026853 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.572746563 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.228528201 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.336823985 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.548286737 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.351287748 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.411334765 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.226542826 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.10168428 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.235683158 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.225036417 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.239148341 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.576828247 seconds)
    (93/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.517501636 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.874113416 seconds)
    (95/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.98348468 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.337677245 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.59626834 seconds)
    (98/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.84023516 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 4.241855109 seconds)
    (100/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.309507313 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.552491934 seconds)
    (102/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.351794245 seconds)
    (103/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.598055308 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.438375485 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.155742333 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.243227715 seconds)
    (107/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.227609595 seconds)
    (108/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.279248079 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.215519278 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.365015121 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.233019829 seconds)
    (112/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.016193653 seconds)
    (113/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.313342213 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.716400612 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.212888385 seconds)
    (116/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.604201755 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.426777379 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.458214037 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.136994533 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.235070364 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.228162305 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.314049947 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.674919216 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.707251617 seconds)
    (125/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.653931157 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.100016395 seconds)
    (127/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.833739084 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.087622238 seconds)
    (129/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.522710598 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.251124271 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.254780029 seconds)
    (132/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.745407155 seconds)
    (133/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.235657631 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.74575451 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.253127509 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.303386263 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.229636089 seconds)
    (138/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.314197081 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.507804553 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.314482652 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.907849798 seconds)
    (142/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.800067309 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.9762137 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.228715901 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.535017543 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.832297552 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.259999525 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.251435593 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.331214501 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.227979676 seconds)
    (151/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.792931426 seconds)
    (152/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.489538528 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.880104719 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.022793243 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.649255273 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.464951856 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.600687971 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.255719907 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.749578331 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.340723439 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.714402889 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.983743676 seconds)
    (163/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.556396327 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.261379145 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.278042722 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.281681789 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.242836435 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.326990542 seconds)
    (169/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.230778457 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321753377 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.231575139 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.258655797 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.606515093 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.541066799 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.002872732 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.992624578 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.832264643 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.237269232 seconds)
    (179/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.841423162 seconds)
    (180/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.421932962 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.852406607 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.068756343 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.264438196 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.25960461 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.256404781 seconds)
    (186/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.321658018 seconds)
    (187/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.228610749 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.232910259 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.118612643 seconds)
    (190/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.10700437 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.363064175 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.316398258 seconds)
    (193/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.297995834 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.811612087 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.250604482 seconds)
    (196/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.233106176 seconds)
    (197/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.652921572 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.887824748 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.80867907 seconds)
    (200/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.604182366 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.078613776 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.349270272 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.948154066 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.27624161 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.235201021 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.308965743 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.260375395 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.342816771 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.274999208 seconds)
    (210/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.276946413 seconds)
    (211/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.259913668 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.513613149 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.001618096 seconds)
    (214/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.594714781 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.224029968 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.633822489 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.292946118 seconds)
    (218/309) benchmarking ("sort", Float64, false)...
    done (took 5.564764721 seconds)
    (219/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.030501924 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.166471763 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.693792587 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.113325828 seconds)
    (223/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.537562988 seconds)
    (224/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.52735711 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.650447043 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.265326472 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.234135145 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.250325564 seconds)
    (229/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.320937856 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.462853327 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.895399098 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.442641857 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.235798365 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.337051619 seconds)
    (235/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.372360929 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.854242803 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.213462978 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.300363854 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.939438999 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.275679802 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.221134481 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.264785958 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.504010111 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.716569525 seconds)
    (245/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.281194606 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.263491881 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.727557658 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.239727456 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.236220575 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.496381091 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.638434377 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.821941133 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.321470046 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.24342157 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.223323438 seconds)
    (256/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.407206752 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.633747737 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.305472819 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.294868308 seconds)
    (260/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.267453232 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.970978573 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.231013305 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.449153345 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.417156247 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.66384754 seconds)
    (266/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.348824301 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.236314684 seconds)
    (268/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.847610412 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.269058753 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.247908492 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.646672284 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.304528024 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.23794489 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.629122485 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.243436716 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.390324197 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.649356427 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.227357872 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.239672931 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.824352866 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.558114858 seconds)
    (282/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.327038949 seconds)
    (283/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.450459995 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.321854199 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.320503104 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.35130098 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.26314714 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.656145817 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.245966392 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.041121736 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.599538044 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.243197456 seconds)
    (293/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.426345351 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.281524797 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.042740692 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.679390247 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.366837484 seconds)
    (298/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.298280218 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.252767386 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.263265159 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.248852041 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.081890795 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.689092341 seconds)
    (304/309) benchmarking ("sort", Float32, false)...
    done (took 5.279608312 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.238561051 seconds)
    (306/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.615111414 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.839483809 seconds)
    (308/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.266849149 seconds)
    (309/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.268429271 seconds)
  done (took 891.188030601 seconds)
done (took 892.348753724 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.2744331 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266512744 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.253112428 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.273967125 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.363275021 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.279670796 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.262270176 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.255292767 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.300009016 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.301193597 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.249578499 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.278347236 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.252552996 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.250965704 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.253321092 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265995931 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.271923669 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.251928544 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.269519056 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.263220342 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.268142509 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.250707982 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.302264289 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.279213269 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.256805432 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.256760259 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.254830972 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.27167569 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.363842493 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.256323842 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.256775791 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.263559627 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.27345309 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.252893756 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.249029845 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.27206918 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.263903457 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.263655209 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.257702558 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.284283953 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.690002803 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.254883146 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.254064361 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.256206619 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.256025813 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.260310344 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.254100075 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.262229912 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266776722 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26714271 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.701982372 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.270494328 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.256905913 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.256095936 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.26654904 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.25531189 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.258611556 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.269814255 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.273915378 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270425124 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.262723693 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.261093507 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.257792215 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.270761686 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.26103355 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.747876212 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.256545279 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.262028716 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.702357391 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.264526015 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.747747859 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.266876662 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.257924363 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.269110263 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.286332271 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.277957354 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.251310193 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.255733065 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.262442249 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.253866274 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.266262227 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268223122 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.261648451 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.257589953 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.269066769 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.284659449 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.266937672 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.257664771 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.266801527 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.274726854 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.263320354 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.265931335 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.261389438 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.252713326 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.267116217 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.261091149 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.258832077 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.259251257 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.262922737 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.268147244 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.701405784 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.277188031 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.253529401 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.254197818 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.257652109 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.271131202 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.700733747 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.262457879 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.279465769 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.305111805 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.259482855 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.267544938 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.260032646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.273495068 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.267947688 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.261432124 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.254154324 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.268658515 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.714075622 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.276626237 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.260841134 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.25590833 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273721474 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.261729319 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.256262532 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.28207151 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.260088246 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.271488979 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.378899101 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.269621006 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.289130678 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.25602789 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.263323399 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.285516288 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274519166 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.289475038 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.261603386 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274985577 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.27499513 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.255907178 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.269426111 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.270199749 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.261535706 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.265366889 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.253811885 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.290956748 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271897898 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.272210134 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.282813479 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.380030833 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.258048379 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.270394284 seconds)
done (took 213.598177495 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.315065739 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.25245534 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.337511456 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.255109957 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.354507335 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.357052799 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.253712772 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.252415696 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.253119794 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.631379965 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.253169779 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.253145345 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.253971368 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.253580487 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.337304234 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.255611068 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.252865872 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.602785425 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.255977378 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.325111584 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.251977823 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.254087362 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.256437912 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.649555341 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.249154891 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.257870608 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.328922862 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.256555322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.603571003 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.248035044 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.252253504 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.612311069 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.350495583 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.273969801 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.265956639 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.26357668 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.358223381 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.272699596 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.340203044 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.33655426 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.341476071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.295089941 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.249985474 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.254509719 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.258381048 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.257900345 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.254158107 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.284824654 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.250490898 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.255055074 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.597734262 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.266519275 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.255578158 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.255480632 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.254996566 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.2867804 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.255301164 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.258536174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.347532976 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.258496255 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.320187883 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.641354492 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.642818747 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.258372162 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.255567396 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.256036538 seconds)
  done (took 143.287593292 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.32390353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.330084019 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.367986719 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.258409717 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.306559846 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.37039386 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.257614414 seconds)
  done (took 10.4017703 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.264138022 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.258360953 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306254522 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.307940682 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.259669086 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.405809834 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.257961229 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.269405037 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.256412753 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.315214691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.260853453 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.259201199 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.266444822 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.258468454 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.306065356 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.26854316 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.372635175 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.259076399 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.259297422 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.409824744 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257509937 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.26516629 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.311515013 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.270366886 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.260974522 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.264124537 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855632369 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.259672628 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.257345565 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.260568652 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.256350165 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.297869846 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.260546402 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.256620405 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.258312188 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386876057 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.26016473 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.257735718 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.261377269 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.252999895 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.260093402 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.261395476 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.260480043 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.258363053 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.261651949 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.282629649 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.260439054 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.261515978 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.260604024 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.261614681 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.311306206 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.26146117 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.25896328 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.258866325 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.319499053 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.267391531 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.262082218 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.258958672 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.261911217 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.259650032 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411503532 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.30820729 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.262294351 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.310039821 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.263099348 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.26109255 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.262563757 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.26200383 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.316002597 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.262210548 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.310372698 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.260062638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.434956659 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.284236506 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.263768269 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.263642006 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.264040585 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.262087726 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.257570321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.267675195 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.260190306 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.263045379 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.26769623 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.260125354 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.259209903 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36451887 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380994698 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.260577973 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.274812932 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.26859573 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.260986321 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.314269991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.261795662 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.260345286 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313816914 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37724998 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.319931953 seconds)
  done (took 146.128861522 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.266938215 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.269525064 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.264920636 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.278963611 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.263462377 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.26241511 seconds)
  done (took 8.798031935 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.265595012 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.264314513 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.264070594 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.264367951 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.263100497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.264790663 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.264356568 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.264730602 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.268845129 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.263968243 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.264922774 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.266844507 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.26623658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.264182297 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.264986812 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.264412788 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.264166961 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.262603253 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.264734452 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263995217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.368438515 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.264208885 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.263780888 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.266082226 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.270494862 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.264919199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.272377255 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.264217207 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.264624893 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.273183125 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.268102464 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.266432566 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.265950532 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.271223988 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.270301798 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.266471506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270078205 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.268288138 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.264195469 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.267841592 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.269119472 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.266677662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.266203017 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.268496254 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.267032788 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.270465582 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.272941179 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273879201 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.26629893 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.269054546 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.269178777 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.266205821 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.267906174 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.268697306 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.268063074 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270004449 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.273393223 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.266838841 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.266255732 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.267147694 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.268551886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.268103825 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.267873883 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.270223528 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.264744687 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.269567447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.268672327 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.270736001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.267508695 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.268162133 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.270583056 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.265836996 seconds)
  done (took 93.535685523 seconds)
done (took 403.334869971 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.641678906 seconds)
  done (took 7.83815021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.331315168 seconds)
  done (took 7.529260023 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.723414949 seconds)
  done (took 21.929597597 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.265349686 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.306814037 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.281555178 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.270310061 seconds)
  done (took 26.321312678 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.701345429 seconds)
  done (took 7.899728546 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.264780426 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.262195807 seconds)
  done (took 13.725997791 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.775514578 seconds)
  done (took 7.972457887 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.896181212 seconds)
  done (took 8.10089584 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.28048191 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.259506287 seconds)
  done (took 13.987852757 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.245595687 seconds)
  done (took 7.441375431 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.185632394 seconds)
  done (took 8.383006467 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.275323641 seconds)
  done (took 7.473393651 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.306317501 seconds)
  done (took 7.503299397 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.269158258 seconds)
  done (took 9.46628929 seconds)
done (took 156.767588797 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.260154465 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.267982106 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.262808889 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.260991096 seconds)
  done (took 26.249064146 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.302887522 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.302408846 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.303522074 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.313617263 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.30534806 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.741098252 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.294689468 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.293876588 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.312908692 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.305069778 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.303575094 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.305493083 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.303935782 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.29472251 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.304509913 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.30447641 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.313833143 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.304065463 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.295278126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.30649624 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.269560192 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.313579588 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.306611569 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.270334075 seconds)
  done (took 32.869339557 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.466228206 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.338926951 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.422173876 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.320614673 seconds)
  done (took 6.746171909 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.321725157 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.323530922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.334423354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.372692652 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.399646773 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.332121551 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.296459456 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.291133328 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.277439282 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.32330271 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.397505855 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.338570244 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.407364986 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.270076369 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.457451739 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.269863057 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.270283758 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.322127525 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.373241771 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.401957081 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.271429745 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.323178265 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.325458118 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.340153658 seconds)
  done (took 33.240706572 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.269650713 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.277775653 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.275868687 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.269818444 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.27024632 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.269732559 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.275808541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.271038967 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.291206696 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.272040229 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.268154565 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.269572963 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.268598117 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.271009351 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.269807387 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.282919608 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.284528131 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.27055479 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.273098076 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.276946545 seconds)
  done (took 26.677547325 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.263607309 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.116527497 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.615609821 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.519551199 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.265905523 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.267656323 seconds)
  done (took 27.249331026 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.340075167 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.470899347 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.270532488 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.626866866 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.702618447 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.272208204 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.270528588 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.509984892 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.812170845 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.823383035 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.325547671 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.337442616 seconds)
  done (took 18.963914534 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.270439046 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.268086492 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.283093423 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.282814237 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.325233251 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.275175315 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.27857703 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.26468675 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.329797254 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.32995706 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.276506735 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.325963399 seconds)
  done (took 36.712051043 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353737756 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310163246 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.293842933 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990737681 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99031084 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480021666 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.024105203 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694930154 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.276928544 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541102245 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274000482 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360265454 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.523474879 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276351559 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272070285 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277593607 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493530941 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765740333 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270662809 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.255256217 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297874975 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276376983 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.359409476 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.300995215 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479534717 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.245303254 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.528108145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.042398292 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556658107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284835208 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278437875 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269512508 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543199799 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937717782 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3649784 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278753229 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.956280588 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.902519876 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.262479318 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.266677597 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261928877 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276208187 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279461953 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26865025 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.203558945 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282220534 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708822712 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.279422726 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.980976097 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269593853 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279993344 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364315848 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.274547096 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.260241826 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315646822 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275659675 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.267159754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27517808 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838209273 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764024146 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276667188 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.209933556 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.638931075 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.34743624 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905027488 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.373341859 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.27446852 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274608349 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205163924 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.321262666 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291671211 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418136169 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.294838724 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919540444 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977695111 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287767765 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205812387 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830776526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281900972 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.208944087 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498732181 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.049323179 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206797036 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.219303716 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205284183 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004417872 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281452488 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.684596197 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.27819704 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.695135252 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.288331163 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290556485 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296039713 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.496020792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.156138619 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27161446 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.271930374 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403357205 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294223328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.707933325 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212021626 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.275769098 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528412619 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.483692679 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277895765 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.287956904 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474095541 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277972899 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.291339813 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27395769 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.286385973 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.848809856 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.289453028 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772748445 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293504181 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.04991348 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042097416 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282025436 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.378170721 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.273004753 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523655466 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.058626438 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434151777 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342589497 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278040707 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274703825 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.383176636 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129088767 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.169761191 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.275236048 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2724131 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.303963337 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.2748993 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219199721 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.279706225 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282531183 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.057566534 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.496582714 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278349522 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55369461 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208855185 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421241384 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283313168 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.497139601 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.504824666 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.278100046 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534165834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288377851 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280096807 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289158382 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294018011 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373956794 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29654904 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.287140542 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535037207 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.278552887 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.279102224 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.384891962 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.058104648 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283823068 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.281844093 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.106326029 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858307457 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257531445 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279189136 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164431476 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.289593768 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342771381 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282360547 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.285138554 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.124162637 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072902002 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.285935408 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.273086278 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503600976 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286971424 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.380874872 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361283509 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.470094535 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866724685 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290691973 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.210763436 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.987139939 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.970083901 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276570851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.464216589 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276995029 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287063653 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287243204 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.781817203 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.859973833 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278375445 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.310240611 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.282809363 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287525981 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.281069122 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27830863 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.097484031 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80287192 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294872774 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.293498922 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421579662 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.291418351 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.212390123 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.795094376 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283219718 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276869403 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.052208743 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313296433 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.307065896 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747378335 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540577752 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.961504007 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294723606 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.410481509 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.309597517 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.280030222 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290189526 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29275925 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.298449699 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287111317 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.288761975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.355889207 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.721402573 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844288878 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990515407 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823320087 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212568141 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.287184344 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16458861 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.71546886 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217354778 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93459304 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470566798 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.713213257 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229478299 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473596322 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.51376692 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055267857 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288256531 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507514253 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206028844 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.295617258 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296244459 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.492266969 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313753644 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.292340886 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.212343581 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.56520365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509681611 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290005625 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360400725 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708225839 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289909422 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.059661052 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.278731388 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.661420631 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452566263 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.829681814 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668223703 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288040928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.284359616 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748966626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28443896 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806698654 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901804572 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286531713 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.480650618 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222201925 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.292257433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.292283991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.282286827 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.598895736 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.286764431 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.536537169 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291450972 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215676826 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283950894 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819160798 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.140113493 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.28730177 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281014313 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0669294 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282749983 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590584013 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.287556366 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.109415078 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285277732 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215931523 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216174976 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.975010723 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291207474 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258911963 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798012947 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.635029898 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.284235473 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316913337 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132035361 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.538145943 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.29699031 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870166606 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512311369 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.066364528 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310941556 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.383989989 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281830212 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.27399575 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.16498523 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519780426 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.115037805 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.508585687 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.355172079 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.190664675 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.281955169 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499543741 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.180599059 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288665318 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532819449 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.9951655 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.302041998 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998077253 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309882227 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.29493731 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300464978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.655563879 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295197939 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355354673 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294701785 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.294371583 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.295315971 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456453883 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297924392 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.290565641 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.298922645 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378218556 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.82389786 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.104362239 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.058297334 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877738238 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034927717 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876128031 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303117551 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284995658 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28609346 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218147515 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434669787 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.811275464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558473391 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415297083 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.72144379 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312255939 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284841531 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305523903 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501858606 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56040547 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.155892603 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284604526 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.949348675 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.443931825 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296270381 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.498072675 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805067367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869634119 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404696844 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.296493896 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.727704758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565480303 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377420622 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28666003 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.874128093 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.286942515 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.683291469 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.293280009 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30028756 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439491853 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296498165 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956246699 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.296545033 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.447352953 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.060552021 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.416354508 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.547226006 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.780199506 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.299689 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877552655 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995417773 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555918258 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358015911 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29813432 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.390665418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434597431 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.29352318 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.184401401 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288069922 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13497218 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.997228802 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.297163469 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87647226 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551864804 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.285092904 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.295831258 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309440913 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.298231822 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.512701414 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028039225 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512166124 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298526468 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296480889 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.858974829 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876583326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301331294 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223177906 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.292509171 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53185124 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52503901 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312830327 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.74148317 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.998959696 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855107852 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.262269114 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310055417 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288835117 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001540098 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883179431 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.108369583 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796606127 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947951245 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302264635 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567874026 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.294693879 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292355624 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569208507 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.293093896 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.288675605 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322547167 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.878782123 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069088809 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.310737216 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.366970356 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.231424663 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.516248373 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92072235 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231788375 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289694009 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.476856161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.296432265 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421456753 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302272086 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.301234778 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297497558 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.046144881 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575462126 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.296539208 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.294852184 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.28900109 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297152366 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30258316 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523383754 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295724237 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.965463613 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.639677432 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.547764924 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.302238355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.27986055 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.29517851 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291051649 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010174167 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260930427 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.81201036 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880402143 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.306154066 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.307787492 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296197641 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.508386735 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50264145 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291900314 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309225851 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291523244 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327315421 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.197826217 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.05951379 seconds)
  done (took 1561.21113387 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.305668097 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.318276585 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.326188299 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.364036812 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.338404183 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386116978 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.397128611 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426133995 seconds)
  done (took 52.087198183 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.305347598 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.445398351 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.322253923 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.303736409 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.301968443 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.294598503 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.76668 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.299007432 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.301211849 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.300900941 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.291813479 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.29480711 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.968422875 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.305977478 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.295578513 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.277736241 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.30023427 seconds)
  done (took 64.608767929 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.291993607 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.357618864 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.403026271 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296340108 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.295964883 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.298990726 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.248091215 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.303958148 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.321245108 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.63418764 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.950077662 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.329634168 seconds)
  done (took 83.959068813 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.300831768 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.300944541 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.301119144 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.300043794 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.30138578 seconds)
  done (took 7.732558161 seconds)
done (took 1979.504051952 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.709510413 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.000654945 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.958500372 seconds)
  done (took 5.186178212 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.438803549 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.487059647 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.606928597 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.624920755 seconds)
  done (took 7.381866981 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.579788737 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.675827894 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.479648509 seconds)
  done (took 5.960484986 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.721725575 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.305652228 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.419451148 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.29007428 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.295402635 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.298181625 seconds)
  done (took 20.110323342 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.2956952 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.299987525 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.297796882 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.298844224 seconds)
  done (took 6.416743718 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.276594048 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.98022292 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.279029202 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.294709962 seconds)
  done (took 18.055701881 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.04134477 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.056748476 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.040403584 seconds)
  done (took 7.364098799 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.301141166 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.134463533 seconds)
  done (took 9.661480714 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.597460738 seconds)
  done (took 2.822775579 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.42806035 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.621127655 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.381974634 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.289460406 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.365292351 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.202341324 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.969051837 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.540901203 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.27681784 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.511252034 seconds)
  done (took 27.81272914 seconds)
done (took 124.154963092 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.152428617 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.293763147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.491941154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.12556367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.520141928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.494061759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.710822078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.091628844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.745777923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.626058342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.122478111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.519941817 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.447000617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.295337897 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.448867073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.295583109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.521488323 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.204066196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.845929709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.012146684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.712934135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.763609105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.958435889 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.893782207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.526140325 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.439322948 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.357897249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.297300043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.018861835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.3762793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440228777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.182139045 seconds)
  done (took 189.158628719 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.293886273 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.293577161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.295256351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.293577998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.293331643 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293819503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.296325779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.305080234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.293953138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.308520512 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.294580373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293661965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.296223402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.310086599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.296575606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.29441512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.293896538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.294596976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.294889134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.295027649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.297194863 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.295610002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.312773056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.295134213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.294412997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.295039453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.295646301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.294926667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.308428402 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.309928387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.295909249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.298539527 seconds)
  done (took 202.752740916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.294900295 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.2953708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.29650692 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.295115196 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.313485052 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.296722112 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.298179762 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.308955646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.294653932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.320415578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.294339561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.30929792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.299202964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.295238763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.296178326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.29633617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.302083631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.295231766 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.304404596 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.294224493 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.312475141 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296645907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.310448033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.306538652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.304825656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.297632291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.305799268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.296402792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.309743543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.296876037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.296019456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.299030639 seconds)
  done (took 202.864436172 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.491861566 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.304534133 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.3063776 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.240849839 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.305192796 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.303919755 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.304858855 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.502671932 seconds)
  done (took 13.98970832 seconds)
done (took 609.990716574 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.637483779 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.354772943 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.505551678 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.332135651 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.175395548 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.325495195 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.326354019 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.497541482 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.229064624 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.501495549 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.558870376 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.323520884 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.698279416 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.3239896 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.579663315 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.427921702 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.192237928 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.302190022 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.644879884 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.94692775 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.586582021 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.804849123 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.496607631 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.248563292 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.707676077 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.83281406 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.06890804 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.18839228 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.326780662 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.649153842 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.028085887 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327440999 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.386598672 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.37103336 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.426943828 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.406396587 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.297564629 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.367834063 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.511988947 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.568677384 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.940038941 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.054327024 seconds)
  done (took 90.714390542 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.294407028 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.294539303 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.293771532 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.293940896 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.296563376 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.295039664 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.294883224 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.295626453 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.29540764 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.295127195 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.29433342 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.29684866 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.295451787 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.297022813 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.294404444 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.294868944 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.296331666 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.297514183 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.294309251 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.293941985 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.294700778 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.294474393 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.296064164 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.294065626 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.294770642 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.295755739 seconds)
  done (took 34.909201523 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.317586182 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.560807406 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.728518754 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.317290425 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.308330389 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.312914911 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.387316797 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.310938668 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.312268606 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.312102594 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.464499402 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.313475474 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.345346121 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.75489251 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.315196591 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.310341163 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.309931448 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.309161079 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.569726535 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.319286254 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.389962049 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.312641186 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.389119641 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.32421105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.313061193 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.311179407 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.31444958 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.82730731 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.311598499 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.463617458 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.116625944 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.390460575 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.780009534 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.737807775 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113109242 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.317168745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.310632056 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.470025931 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.311927653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.309731049 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.388960383 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.31501918 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.737668696 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.935021887 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.331285612 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.311997907 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.850250133 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.471904115 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.561955636 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.323388039 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.761152224 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.314935657 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.314667848 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.312659116 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.563089965 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.323331448 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.311400176 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.8463094 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.337593388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.390026405 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.317854356 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.312781445 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.580398357 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.318649066 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.571172683 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.319262626 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.324351129 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.31608499 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.74231509 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.321804657 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.958407996 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.335176869 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.315066546 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.46864085 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.575439867 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.89384453 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.322298729 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.584245292 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.801864633 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.394724652 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.316003677 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.817874057 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.399317251 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.320838763 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.315521255 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.314298479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.313713101 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.359125458 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.389132105 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.893495157 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.950522464 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.865793118 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.414500986 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.331315366 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.313812085 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.846718941 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.335739146 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.314806423 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.73650342 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.957500508 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.334095357 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.323922505 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.939960373 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.337325185 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.394024508 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.323481228 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.746959902 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.319770699 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.362631567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.315621411 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.321805478 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.317822564 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.394763532 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.322677335 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.316473738 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.925777345 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.495920884 seconds)
  done (took 173.411083596 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.308744434 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.308658591 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.308552882 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.3085193 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.307914518 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.314415202 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.308324784 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.307962393 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.313464759 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.307147107 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.308663413 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.307700452 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.31105308 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.307975848 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.319386154 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.315718167 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.921533442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.31095275 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.309260165 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.308116308 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.108974981 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.3160956 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.309128654 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.309642277 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.310556902 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.310709018 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.322197331 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.312122163 seconds)
  done (took 151.355458894 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.316658167 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.893260441 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.318138034 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.45045625 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.338259725 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.31461964 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.448401353 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.372908177 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.322747409 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.31660927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.315270367 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.623993756 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.319458319 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.836091199 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.507131261 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.454195546 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.835119396 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.318996318 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.316715209 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.315290542 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.451236207 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.325901854 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.622725541 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.888882651 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.319142637 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.888572748 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.307338308 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.31814701 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.316245611 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.890896206 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.316054944 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.624873346 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.394815464 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.377279103 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896232992 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.850110527 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.842235088 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.467559459 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.322502919 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.317083982 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.317507539 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.307154941 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.907334212 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.325331231 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.319115236 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.901219247 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.341173217 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.320133459 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.328144521 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.317156425 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.378435538 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.379630393 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.636122991 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.917417044 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.401144247 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.34049985 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.452606027 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.699724606 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.321956951 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.839096842 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.30695552 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.907797632 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.327967432 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.307084618 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.319015091 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.324466373 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.471902821 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.457395887 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.85380192 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.324019201 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.849951253 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.477491036 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.322511914 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.31893651 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.321019529 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.911991073 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.856209424 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.477841286 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.460086576 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.519090212 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.314525955 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.318466833 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.309455764 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.398057094 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.323410309 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.915110605 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.861152425 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.327059112 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.321118532 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.322048287 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.32161616 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.498747671 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.919958641 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.40444263 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.853870845 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.658283062 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.643954278 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.328163908 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.380893898 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.325769658 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.64145348 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.327953384 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.378849408 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.764892847 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.646213935 seconds)
  done (took 158.291859586 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.573005427 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.519864487 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.415151237 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.438274568 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.930992766 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.901529447 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.585743363 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.444930948 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.434926437 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.566906101 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.509035948 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.416696793 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.496621508 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.400005803 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.058414094 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.388847475 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.415361032 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.443699735 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.417113394 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.352300888 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.974504597 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.608070852 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.497823921 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.302377625 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.418767357 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.119078375 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.87624758 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.866634266 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.494061703 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.653031182 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.889746548 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.445432438 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.305694631 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.003253705 seconds)
  done (took 64.41298276 seconds)
done (took 674.325233454 seconds)
SAVING RESULT...
DONE!
