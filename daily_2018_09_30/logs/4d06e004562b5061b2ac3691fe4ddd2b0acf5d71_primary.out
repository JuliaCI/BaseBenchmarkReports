cset: moving following pidspec: 8586
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334514224 seconds)
loading group "string"... done (took 0.483293134 seconds)
loading group "linalg"... done (took 7.828388981 seconds)
loading group "parallel"... done (took 0.174546381 seconds)
loading group "find"... done (took 1.197258803 seconds)
loading group "tuple"... done (took 2.153683032 seconds)
loading group "dates"... done (took 1.358679021 seconds)
loading group "micro"... done (took 0.250619426 seconds)
loading group "io"... done (took 0.685265252 seconds)
loading group "scalar"... done (took 42.537414881 seconds)
loading group "sparse"... done (took 13.364654959 seconds)
loading group "broadcast"... done (took 1.188308726 seconds)
loading group "union"... done (took 14.733755612 seconds)
loading group "simd"... done (took 5.194947737 seconds)
loading group "random"... done (took 10.394604688 seconds)
loading group "problem"... done (took 2.073748522 seconds)
loading group "array"... done (took 24.761336452 seconds)
loading group "misc"... done (took 1.550126922 seconds)
loading group "sort"... done (took 4.018314067 seconds)
loading group "collection"... done (took 21.245786316 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533169826 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14853897 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139169904 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.165824071 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237779063 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160595777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162957021 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.102444495 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.026160106 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.194643032 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158247566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534140671 seconds)
done (took 5.315510157 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.231719117 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.098015722 seconds)
    (2/2) benchmarking "String"...
    done (took 0.110314032 seconds)
  done (took 0.885788885 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079459027 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150527674 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097468323 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080736032 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09847226 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09903153 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082239719 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095504613 seconds)
  done (took 1.383480219 seconds)
done (took 3.268615289 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.759828872 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.294276765 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.210074171 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517546347 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.18322427 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220835199 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.690599677 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36377239 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.270692365 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103920927 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.151310957 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396009154 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140085657 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688607914 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09321315 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.130358644 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181962135 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.467625729 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086204585 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.1128399 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119555477 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144464199 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13214262 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094743606 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18957608 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086085594 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.206535461 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111839435 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083852001 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.293138099 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203864355 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693093829 seconds)
  done (took 11.134902713 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117967082 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140221268 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100454552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141192368 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138604153 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102648122 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087181622 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100278933 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126086845 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181329803 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134715654 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.128230164 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098157246 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101780771 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106115673 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248555291 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124156706 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123553905 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087669416 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10785747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124689601 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116364837 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113668449 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111116626 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169694199 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210909191 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114849585 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12891657 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09952347 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116538973 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146601234 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146589348 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097919388 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082501307 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178292249 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127852821 seconds)
  done (took 5.275749575 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198271817 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125339046 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.177864843 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.169973323 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154926141 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16614182 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121531014 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257420207 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.137753025 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180490166 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.161380732 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148159004 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103593433 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102825283 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087355265 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100558193 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658183324 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169337024 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140041556 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121661185 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108353557 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090559015 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369268297 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108173388 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082330091 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102617309 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071659526 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168166408 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102911239 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.208433377 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126257585 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103240058 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12093047 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216260564 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130687957 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125020293 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100331785 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098147107 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.184858279 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081190883 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108062581 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081699182 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128201407 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137830697 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.141825192 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099229837 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087080441 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213420394 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099850931 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117686587 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.98283479 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183314003 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095449043 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099398332 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.339954638 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102183939 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101708735 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079814114 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289002357 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139008169 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083791699 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097115729 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082840744 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100030032 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083699756 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394880064 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100664733 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.74991797 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085072586 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109966378 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084740573 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09966465 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107741822 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091117443 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118606489 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082707934 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102667356 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081835796 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099784663 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102771116 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095222289 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106493957 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080994032 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169586977 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082215514 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118369073 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1304311 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087234107 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099172479 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133861921 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103723984 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085882868 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.141067812 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082275873 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098610186 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110875272 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086351746 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145187054 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100774108 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192720501 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081591223 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129168743 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102493582 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118099297 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113426928 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103409133 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087259196 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098912865 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079854532 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168192075 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083567851 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100538409 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101355297 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097059825 seconds)
  done (took 23.229868429 seconds)
done (took 40.316074989 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.356632198 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106105321 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106846335 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10726369 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105059456 seconds)
  done (took 1.536486837 seconds)
done (took 2.267116111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295089152 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.18128699 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099297267 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.174850269 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096681858 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.182851717 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167440681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115587471 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.191357782 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0976675 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.171142637 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079495925 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098275406 seconds)
  done (took 2.705226547 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097897458 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119082507 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085812738 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115958944 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078699432 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11508702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112032944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104529309 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113973724 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087648639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096360201 seconds)
  done (took 1.854854187 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096301383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117357122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084672206 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114348152 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078981457 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114212867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095835097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120148677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114031993 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08887984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097121167 seconds)
  done (took 1.848559922 seconds)
done (took 7.1280663 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096744687 seconds)
  done (took 0.814437369 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.038481795 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.060026775 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119628635 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.160044566 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319737717 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205530341 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.560827959 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132566512 seconds)
  done (took 15.538311416 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.120167433 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104341579 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104638871 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101584304 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.105322792 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106470659 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085761126 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105542545 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088660935 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106270927 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103258185 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08513433 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105124803 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086257296 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105164087 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105642284 seconds)
  done (took 2.406607656 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123858381 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122419476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110437049 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112836471 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108148023 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090160147 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110382407 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.108469329 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087874576 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106587385 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111100922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092843475 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106932762 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098600351 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092478071 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111826163 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105858243 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092078134 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110698872 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110129596 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094421543 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098491407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107102215 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092911954 seconds)
  done (took 3.341904206 seconds)
done (took 22.824447728 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.1658501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11270455 seconds)
  done (took 1.010812962 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104879019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122577713 seconds)
  done (took 0.96452781 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11086448 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099254262 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139608519 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119832147 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083266438 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099667441 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133962492 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100490046 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082415248 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100766314 seconds)
  done (took 1.809628001 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089456013 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.118731871 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.110338556 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.104800587 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112755626 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105350896 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098150156 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.106341695 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.121710414 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083491226 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109395681 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119335671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.109249994 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103249707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.114693419 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10880902 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094844852 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107036997 seconds)
  done (took 2.656039824 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081978611 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.104736623 seconds)
  done (took 0.928052407 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087658624 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100570183 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087316089 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104092639 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100476115 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083271011 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.1012176 seconds)
  done (took 1.403805488 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492916402 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140971007 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263277286 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088008043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127097379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.315375965 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101913578 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106623247 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087529158 seconds)
  done (took 2.521500845 seconds)
done (took 12.03392287 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095011628 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.122025019 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.119593023 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.504920858 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.124795701 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082517196 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.165270127 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.260846968 seconds)
done (took 2.220951763 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.15366868 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333535709 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119842591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068519566 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098370817 seconds)
  done (took 1.367648464 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08163803 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103312293 seconds)
  done (took 0.928483835 seconds)
done (took 3.197093893 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11536779 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102105137 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082587849 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102757373 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083543739 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.100258526 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 0.097266454 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082505343 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.097462835 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079877783 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100489776 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082609138 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.100241424 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.082548813 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100775221 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081231556 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098575416 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083153379 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098166325 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080721615 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098406098 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083300939 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098410779 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080483077 seconds)
  done (took 2.989034422 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112030646 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10136766 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106772253 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09026537 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105164419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105790569 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088705628 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101391971 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090265486 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103479129 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105212341 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087562842 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102888866 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104367725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086210398 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105040583 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089014744 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101044884 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103795686 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086679445 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.107230632 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083540297 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10337405 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106869687 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087225055 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104092725 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103072252 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08237867 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106034952 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088126169 seconds)
  done (took 3.697850986 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087342921 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098988328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080365002 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105597103 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080191082 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.10359727 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080460171 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099343474 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081538747 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098317778 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082314954 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098626272 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098741027 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082077041 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.10121909 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083857476 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111757428 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080804305 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098438914 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081922377 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102303371 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080457113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.101621342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080719808 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097806734 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080606045 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099439403 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.098677824 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081472862 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.098747199 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083321371 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.102272431 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080475653 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105728071 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084396732 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097941689 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084326366 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.097593326 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081727866 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098037519 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080539984 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098173828 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080996831 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105336105 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10149569 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083179134 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.100180992 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083015289 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100328558 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084628794 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098270954 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081110447 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101056631 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082711368 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102265214 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.097918584 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081451347 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.098677042 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082612545 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099071297 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080594297 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098619338 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08288077 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099373257 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096090183 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105733082 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080821251 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.09990183 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103422343 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082897332 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101283116 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095096366 seconds)
  done (took 7.396184117 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085773785 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110379623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082865929 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101354781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079744352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09888033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10265381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081174538 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10095652 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089190887 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09918503 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101027829 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08275109 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111745461 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081523896 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101628459 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087980437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097596721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09944764 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085120209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10022061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085697642 seconds)
  done (took 2.824751568 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225177134 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10927538 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146071566 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125506317 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100893679 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114211426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106880109 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090259377 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107015599 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105212586 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086965929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107073457 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091098775 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104575793 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104980904 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088704737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106417779 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106289207 seconds)
  done (took 2.787021198 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097206659 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10365737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125164174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084760114 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103468388 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087628671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109485851 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123796888 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087377591 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103163862 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112379005 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087192764 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105426941 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085823908 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106101349 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084947051 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105463636 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102042022 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095422473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10892979 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109144294 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094274024 seconds)
  done (took 2.979363016 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099810756 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104490654 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124130828 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088026506 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098767068 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083360777 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109660265 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084847093 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111379549 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104508168 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084261117 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101646704 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091102505 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102481121 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108115951 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08459539 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104994811 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08400949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104451436 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09827771 seconds)
  done (took 2.735069767 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109473934 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102979543 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104082702 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09632029 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105102803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104288732 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095238769 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104402482 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103647342 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11282579 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104388243 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105099937 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096159659 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110632288 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104615955 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.2083829 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114053436 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114409376 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104808043 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086490307 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129940309 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104564359 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096246044 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104729097 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104414393 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086848292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103935042 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110729345 seconds)
  done (took 3.790937786 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08440445 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103385207 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081721789 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101252745 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081530385 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100972555 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081740045 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099923379 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084918238 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100001691 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085358847 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103002151 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084067226 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102226749 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084937117 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102226566 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087105735 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099823604 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081457916 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099896332 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084870332 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102423585 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103554603 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081602261 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100513971 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083919681 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100474095 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081769818 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102770759 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081560783 seconds)
  done (took 3.538967488 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094757787 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110954638 seconds)
  done (took 0.97347581 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081894348 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119797828 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082023434 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10736226 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10807441 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0862986 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112671923 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090912365 seconds)
  done (took 1.556615912 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101620724 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117965585 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08677234 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118001114 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11851251 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.101529061 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166038818 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105475187 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091323265 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101549076 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120180003 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083994175 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109700217 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085678906 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10919688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09167105 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100976416 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109813373 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087603661 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10249064 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086721423 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115234464 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106680303 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081761516 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105087643 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096574018 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113158107 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105746923 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088416117 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114514279 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090937617 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097656699 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084996251 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104838389 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102039144 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099313996 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116067776 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088202549 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112121543 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10641777 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115272196 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098719858 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10939495 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093710194 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114927528 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086975158 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104941111 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080874499 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100577098 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106829472 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081229703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105249526 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080451366 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111331152 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090107265 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11769492 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10337459 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086894412 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107543144 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088863591 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110281411 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087986191 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107705707 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103948898 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092797499 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108973309 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09388088 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099010457 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079211087 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.10153566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113094628 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109291379 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11338561 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105777562 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08677807 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.101885735 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089290723 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105960393 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093662401 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113087538 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104634523 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111004318 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111502061 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104673771 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088190296 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113494596 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084428056 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105986935 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102142059 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101715245 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103564484 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083438342 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101649135 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094558089 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108466196 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104639987 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.084457135 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112474855 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079639086 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105956339 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087958929 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105867701 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113741516 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093044559 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111319684 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113523245 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.097022851 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105138516 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088766035 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101618308 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087153127 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107573694 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112132266 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079547425 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10806311 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087854584 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105207807 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093482159 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102762756 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105491258 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09400967 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112669898 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084394792 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101186382 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089107504 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104645078 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108828461 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093387787 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103342535 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080987835 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099546753 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090051365 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103468873 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109386534 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092559309 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107462179 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08052648 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102275693 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109738425 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093623602 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10520877 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087071605 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109976817 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086523705 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104156471 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110815592 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088670209 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103817771 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09114773 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10678208 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08189511 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109816555 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108007427 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085560868 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108397746 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091020281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107513821 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106064539 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084956978 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111488448 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087313626 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104611 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08643258 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103319129 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114366732 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088919897 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100569522 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082817134 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113228884 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083669845 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105037428 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103968385 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089484555 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106113405 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084788982 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104806991 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087186532 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134967529 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111379592 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087803409 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110678542 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114981067 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086550637 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10716568 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086938886 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10678082 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086818272 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11188633 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110963998 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092728922 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107899181 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082590194 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111264268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11307571 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084972045 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102994005 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085064284 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109062967 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093626266 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109643215 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106176128 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085138132 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105622151 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091052842 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108644004 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086756644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104848191 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110832454 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086042792 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112933698 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10606373 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095394912 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10921637 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082104898 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109069131 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084627441 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11140831 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101489081 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084255679 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104326313 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087772093 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103850559 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089178762 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099404156 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093988875 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113525518 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105732018 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085238516 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106199957 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095598182 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107386006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090315718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108914711 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111045535 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100329094 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105042171 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0891915 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115501484 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105945201 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08045298 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111674786 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084950273 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105102245 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085309678 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103290286 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109290697 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09601046 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11081768 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080102244 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10851647 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085108985 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104169929 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100713929 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094411449 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109326747 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088489346 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115194278 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107044831 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087952898 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109769667 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086527501 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107368403 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08839735 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109538493 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107330649 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089798424 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105447675 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089136406 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104539118 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085029421 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107633671 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105829732 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086432442 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111707332 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089219056 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106479103 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090445657 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107141986 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106237595 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088314084 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105497408 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08967254 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107731113 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087287688 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109005174 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081515539 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113349372 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106104006 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095299672 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105749456 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082977394 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.11170963 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08872703 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112070231 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107361471 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088697844 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107874031 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087665031 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10823676 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114919807 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08515974 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116071186 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092502278 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106945771 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109597494 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087578984 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107643077 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086631813 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108648303 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088182809 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10647854 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086384145 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110939617 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108782923 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087471412 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108695358 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088969988 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10678869 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088464252 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099755551 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085990542 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105882063 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106488999 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094765581 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107695775 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089752312 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105535422 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107571663 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086036614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10277703 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096971055 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11634809 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108400346 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096278098 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106120021 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08929665 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116744541 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081119648 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104623645 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104861349 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084742826 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114653797 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089175909 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114604392 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087406579 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106402096 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103348722 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088854119 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105366875 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0812181 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105186414 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09118916 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108711247 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085703027 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106496464 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11796713 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089232781 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11444032 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08719586 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109559574 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088948168 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102869676 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085601029 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10624352 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109605173 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088222216 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104181966 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084569036 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107490066 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088591295 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107677672 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086607993 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108864208 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113689835 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087515047 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110712461 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092154395 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101862685 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108994542 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087286276 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106715624 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086661644 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110996793 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091476441 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108048587 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114213776 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088037922 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107002901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087512434 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105213177 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087839196 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107771506 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107914524 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086620421 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108158263 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09599587 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.105001379 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089600289 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106360373 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087629884 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112456855 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108351037 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090205395 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115917333 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089891248 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108115333 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113531504 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091061395 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110461352 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08906607 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108817629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113240008 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086896181 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115825973 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087537117 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109224692 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08892937 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104249308 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10659403 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087419752 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106314034 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092536743 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10793649 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086343306 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105712271 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085267582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108420726 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111421296 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096090508 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109559392 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090097826 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101791781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084910815 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10927677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104559723 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089541771 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110006757 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094429049 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10997298 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087415223 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107306313 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114935113 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094854537 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112502506 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085182447 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112375465 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108997552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090090845 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108266835 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088479412 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109193467 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092938451 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110185574 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086710154 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116427084 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112338743 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089717737 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109235835 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088967175 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107840321 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103066121 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089432093 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10974993 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095718977 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110044864 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088529868 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116829175 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107504339 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088564108 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112340351 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087742578 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114499413 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083416913 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109121639 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108913167 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089838933 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102609481 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087093555 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104895495 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090270615 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.106252442 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083177323 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118670349 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116264596 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090571028 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107353529 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087171068 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.103531017 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083118962 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107430866 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10924116 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089943012 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117106544 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086783009 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10723732 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082908092 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107841497 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110731029 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091554605 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105083755 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083690834 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106617046 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090856267 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115948906 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08678029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108356624 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111314246 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09070868 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.105203805 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092254829 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104220573 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111563607 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099423296 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109263369 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088533182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112850498 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116288409 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089791834 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10384953 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089043932 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110632575 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08833927 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11031549 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10965721 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103920721 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111234341 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087647258 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107717119 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090144894 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108097958 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115736637 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090478866 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10931941 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092757672 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110242393 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118252385 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090962531 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114197105 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090381283 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110743739 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106469529 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088505198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106240616 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086295952 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10941026 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089642022 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11387822 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116807895 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087520267 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117456658 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09613452 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113430836 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104161638 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087558689 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107427627 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08370238 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10978473 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086490072 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106806414 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086013326 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10720503 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089419627 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113861985 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110608353 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089147703 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107942601 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082229226 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109431216 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091570607 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109194484 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085297525 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108715736 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109379299 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094476161 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115013033 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089450185 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110169663 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089585389 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109653184 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103383268 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095434322 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107778388 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090759287 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107753971 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088819555 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109201339 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112559797 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096250703 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110352101 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090840854 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121981965 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111427227 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086272869 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105105216 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094335575 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106634364 seconds)
  done (took 60.632036665 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153878044 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096304796 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103461848 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083978061 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121582135 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105999129 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084013982 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104819943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085136323 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111196824 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083518606 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10349975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117881254 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13203242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102823725 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113199531 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104000777 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085184187 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10397819 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085715502 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118035766 seconds)
  done (took 3.016304501 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109389806 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122494046 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120877407 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126227521 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094650852 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12117194 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12035987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12245848 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104696126 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116173978 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125228934 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121281016 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09668535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115381623 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116934948 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097896048 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.125840507 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115036137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122886919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100346025 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119425966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121127647 seconds)
  done (took 3.354116978 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099445803 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108124599 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09227543 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103928213 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089057561 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.104006669 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092828774 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.106822896 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112796905 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.087271775 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.107185553 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.088108076 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113346145 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083413484 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107921599 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086349611 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160119386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114250983 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.109731725 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089692719 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.104035393 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091087417 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104042012 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084490158 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107756869 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.125638324 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089746037 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.106829711 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088197782 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.107553323 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088250079 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.106407262 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090086764 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109144406 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086757032 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107868321 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088006575 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10905978 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.104175963 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086650452 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109020016 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084225222 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10880335 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089245453 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.107038466 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086422089 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109999668 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088409646 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.104493135 seconds)
  done (took 5.749936111 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10928173 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168638653 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090617678 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149936848 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126587501 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.12009771 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092575288 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127328934 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108504871 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087824666 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129860836 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12708306 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109300029 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094125458 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.116952429 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109847587 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091535141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109247067 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114923514 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088798436 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115389175 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.116572149 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105985231 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126045975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11408893 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109244694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088610778 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114802326 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124039276 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094704067 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114509031 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116462631 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126085839 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094381606 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109268415 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092161907 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128328905 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11006371 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112065037 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088677722 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.112108561 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094642961 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116023163 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.128083125 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110625288 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094664793 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109678498 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085604542 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123730118 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112248856 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119281331 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104546674 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114156834 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109304533 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094793745 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127825764 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109550816 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087989839 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113270625 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122828681 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087844098 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115992836 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125219249 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091124419 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119878133 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125432095 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114789325 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094679012 seconds)
  done (took 8.529883191 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09772744 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117190769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126841937 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126472917 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097193001 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117328358 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116889695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116320757 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097291509 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123806241 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118311143 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.144527543 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090259155 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121368735 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118153176 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097399763 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1183651 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117321716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117983198 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096996462 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117808051 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127544561 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117116384 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106423438 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149490062 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112235963 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117384785 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096548134 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128282017 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11711053 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131388059 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116604022 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097280335 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128528838 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130900112 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.116817431 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089197642 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117378869 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117191571 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097942704 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112928703 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128359711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117873757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091306002 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117747559 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117073712 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106889127 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130613544 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120819916 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123973455 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117884564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106720937 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117451879 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117804486 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127959629 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153846397 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128944559 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107462564 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116974727 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128246117 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126447351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137197203 seconds)
  done (took 8.095342853 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118617874 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.125206963 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.132232409 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105936212 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087758064 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119029759 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087038357 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107891591 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123786665 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103376898 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126588299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117398003 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121551661 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105995826 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118762556 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121704799 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119025344 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098468212 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124872433 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119031578 seconds)
  done (took 3.116164494 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097938224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131124949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090700996 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120308581 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113690277 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096488186 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11352213 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113592088 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090489377 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113076006 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122712152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102751864 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111686104 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117896469 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102282853 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118023896 seconds)
  done (took 2.585493733 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102297125 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124120854 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.130491462 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088914652 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109822063 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107882389 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089851841 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106368483 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085884362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12690402 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111959021 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092855091 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111332026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087240304 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107211002 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09228041 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108525934 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10786105 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089984738 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.131153434 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121671791 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089082887 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111312277 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091867168 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111378206 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116652863 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090539789 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.109284528 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088164955 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11143216 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109968603 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097514338 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108749987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088142293 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109304292 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109185289 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090393206 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.111584347 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093849772 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111319327 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088200559 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111627247 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.111278877 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091286287 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107119349 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.090247449 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.107138857 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117481062 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08797513 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111505558 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090045196 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113392051 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111411812 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.101011685 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115068162 seconds)
  done (took 6.574481126 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103640898 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114981759 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085649792 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108956694 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093674493 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113383088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11459959 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093537301 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112476819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087839524 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113124253 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114590732 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091992563 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114961257 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092092307 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115241018 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084523003 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112767396 seconds)
  done (took 2.705907992 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094473304 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111600114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097909293 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111516575 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089578939 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114135449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106307963 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089169871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10981104 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090805506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111184831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092455183 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110253462 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091561343 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112328976 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111740574 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093017517 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109349957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091552753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107286776 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09281248 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109622812 seconds)
  done (took 3.086238156 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.125999317 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.131601068 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097609887 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.24580015 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.109681262 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.138561793 seconds)
  done (took 1.689097586 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114028505 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128731928 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112438678 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112488863 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121788807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11417817 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093235293 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114457921 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125248316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128868795 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093183704 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12559905 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125151011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124621836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101051296 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121318989 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114521404 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093490606 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113268611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136046783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114239166 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104333583 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11546794 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11447006 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09362018 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125902637 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125118636 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128963382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092386779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126235532 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120785104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114136891 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104315451 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130733043 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11552274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125162669 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093307867 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136394596 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121855094 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124775383 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094302508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121737589 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124998977 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121565397 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104526235 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115271573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120624991 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09298625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114726931 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143422201 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122459724 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125524771 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099852477 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125293091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126458421 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144742564 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13084875 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124917846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100207446 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130502604 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125304721 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121640122 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125702954 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129101754 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101268489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125883962 seconds)
  done (took 8.600195461 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10701978 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132395471 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115465306 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129631594 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103570843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114853206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116138424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093126388 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115347373 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113342066 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159767142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093361257 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124623702 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125079132 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115298529 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093410588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115135873 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125329491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092444245 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143100275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115727737 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126106867 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125030331 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126156045 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107584471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121872309 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115255982 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094137615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115833135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114936297 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121864757 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094802735 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125189491 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113779392 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103744678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115768034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114391215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121128433 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093597489 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122101625 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125498675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136480802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093879812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114815523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130783048 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115297803 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094793373 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114258392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093230375 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113782708 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130895111 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130664085 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130100967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103686395 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116886967 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116111127 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093698652 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116744095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115840915 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121660337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103645147 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115370919 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144832917 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116218125 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094343662 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125305424 seconds)
  done (took 8.473661243 seconds)
done (took 162.222057521 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107801669 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.146051359 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104666365 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175859252 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108251399 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.124778485 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141682586 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.10204665 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.113660281 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09157769 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114557599 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114663466 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15745025 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107835565 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092182396 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114417449 seconds)
  done (took 2.756555302 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.210629967 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281575532 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108253523 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113314509 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.118486218 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091565938 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.111624496 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099446789 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.114948054 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.090229023 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114031988 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091736959 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113502778 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092292527 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115551582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.112938848 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.090793413 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.112715064 seconds)
  done (took 3.03201983 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118721531 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154942282 seconds)
  done (took 1.125054226 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125395886 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191288211 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309309908 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.162940576 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126430863 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13531819 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.163633417 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139732695 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.220924698 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131489168 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131724593 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.125325981 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.127263854 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124362814 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.122943119 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103876376 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.151892868 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120499921 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099983378 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.125107291 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146205113 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091547497 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123245558 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120818224 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.204976249 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.106005778 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114045888 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089884459 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124880441 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.122665276 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097759389 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134132572 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128271712 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182209471 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.132726279 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168976439 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126962158 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119013119 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.099969522 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119049248 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126838252 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105316229 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133817521 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.125417651 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093856359 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126258226 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090431828 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113994664 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121029186 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105076988 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121876711 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.119752121 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167630554 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126813013 seconds)
  done (took 8.021037853 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.841337593 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162517026 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119443 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.921615257 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147217202 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132833407 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.806537634 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143084491 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.242202006 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.806208741 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139341123 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105129716 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244228078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269056882 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.912469698 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31672869 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.720469096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108875285 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149862653 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163864442 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125333137 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144033319 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114915564 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442148668 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11783658 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117702688 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100770611 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127548751 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170127681 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119278408 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098607391 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.209814696 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.259990989 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210440197 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096539457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118438592 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117558469 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181891468 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280915722 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.205923872 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.209174041 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093370557 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117312987 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10450087 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13802106 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114490608 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175197823 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184602482 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.201106076 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097376399 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126978802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125682647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10432098 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.197427212 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106547539 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323657312 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331600503 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11864006 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124919976 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111272895 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278305884 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131093551 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237895207 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122065799 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.227532814 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117617448 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816105269 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181431111 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095255089 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124851804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123648111 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099737377 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127234524 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174917222 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401263788 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130744806 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097564575 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11825518 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248859599 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097294873 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1177006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173104989 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122058245 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104645409 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131579763 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127484551 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.179562656 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23909286 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129412214 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125878788 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098837144 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130249835 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122047321 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.221308649 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230434216 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174399217 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.218764855 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12294429 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194382306 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178436992 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125876749 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183522703 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123366862 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10931275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128789017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229790398 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154174121 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.131393056 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099878805 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124977062 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157493374 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099113943 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125846478 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.179674181 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494725009 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17941653 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115347329 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09904071 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127406774 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170189258 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125447485 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273312411 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104200332 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.203160465 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102655864 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.115497684 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124658573 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1753402 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128196491 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102628445 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129313502 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125403562 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249213894 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230423919 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129827342 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229129615 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190333999 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125916192 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182832261 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126686602 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178091241 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128045792 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126998721 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100501166 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808128566 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126929667 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101621377 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123368641 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196713524 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118761578 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109708537 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.119858192 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091758867 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78478463 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121362691 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107096311 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.133581517 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12634063 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102179927 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123610754 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127487359 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173855736 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244574377 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128254282 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10228905 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120136648 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.170877479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123301726 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.095957947 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.119717107 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.096935128 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128626305 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12201195 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109359782 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205709361 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174633677 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234103353 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573230963 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09618715 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119013251 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241633925 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096214487 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30567891 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125473069 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237905976 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176493949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12872753 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326133353 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.17807101 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197313031 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09815572 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.206939227 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093196839 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124991479 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175556412 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119545294 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124079679 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174640887 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131300606 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107432038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.972438877 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112990543 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236081233 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.115234824 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.183531107 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099339087 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127427123 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305157383 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118471231 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112210403 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.197210477 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098634988 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120431071 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.719897058 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.119829036 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128448037 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102500715 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23677425 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.196454638 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10312808 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125744488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127454505 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.174850717 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.218634782 seconds)
  done (took 45.72684482 seconds)
done (took 61.510208092 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310029199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226925238 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280240781 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180898425 seconds)
  done (took 1.956612696 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.188237437 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158679591 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131297092 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116102424 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16135276 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090164948 seconds)
  done (took 1.727862997 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.406511187 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287696117 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.250203897 seconds)
  done (took 1.826234113 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260411618 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.282771919 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.339595297 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.439403544 seconds)
  done (took 2.310849659 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.290151035 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.155267135 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.145200133 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.176601795 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.213529372 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.306939489 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.176008943 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.256795648 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.166992343 seconds)
  done (took 2.813579369 seconds)
done (took 11.519248438 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.246218871 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.330392716 seconds)
    (3/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.234712384 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.216167349 seconds)
    (5/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.241601758 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.241214672 seconds)
    (7/286) benchmarking ("sort", Int8, false)...
    done (took 0.250609613 seconds)
    (8/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.237916796 seconds)
    (9/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.192397363 seconds)
    (10/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.138795173 seconds)
    (11/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.198580118 seconds)
    (12/286) benchmarking ("sort", Float32, true)...
    done (took 0.245153278 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.098661689 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.2287518 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072012544 seconds)
    (16/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.144048336 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.106917015 seconds)
    (18/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.233906197 seconds)
    (19/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.163695532 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101650266 seconds)
    (21/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.162311324 seconds)
    (22/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.175273319 seconds)
    (23/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.169075654 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204785662 seconds)
    (25/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.201224443 seconds)
    (26/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.146575352 seconds)
    (27/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.227445551 seconds)
    (28/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.103941979 seconds)
    (29/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123421933 seconds)
    (30/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.137938852 seconds)
    (31/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189738827 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.166398632 seconds)
    (33/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071344768 seconds)
    (34/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.192964095 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.147707689 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.240832951 seconds)
    (37/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100221728 seconds)
    (38/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.190997703 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12658006 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167481679 seconds)
    (41/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.127319349 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107579951 seconds)
    (43/286) benchmarking ("sort", BigInt, true)...
    done (took 0.272496399 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.169284431 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.133601703 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123163386 seconds)
    (47/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093124637 seconds)
    (48/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.216725904 seconds)
    (49/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192874161 seconds)
    (50/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.115641068 seconds)
    (51/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.125681366 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100373737 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.133134356 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141567739 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092994866 seconds)
    (56/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.192861064 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.144190474 seconds)
    (58/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179238352 seconds)
    (59/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.199948272 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119869953 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.202899891 seconds)
    (62/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139834758 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.144210838 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.144912915 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093340283 seconds)
    (66/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.071588676 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117266247 seconds)
    (68/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.165996489 seconds)
    (69/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100614654 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194985181 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.129929376 seconds)
    (72/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13346836 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.148164137 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.072165901 seconds)
    (75/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.203726666 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.09711547 seconds)
    (77/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.158616717 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.125731098 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.092988349 seconds)
    (80/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.097287519 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10598443 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.106898326 seconds)
    (83/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.156606565 seconds)
    (84/286) benchmarking ("sort", Float32, false)...
    done (took 0.189415772 seconds)
    (85/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.147114552 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092209132 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.147575818 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.097069833 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097756528 seconds)
    (90/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.117097574 seconds)
    (91/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.179602252 seconds)
    (92/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.195157364 seconds)
    (93/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.204403523 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098904689 seconds)
    (95/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.12624166 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.182087495 seconds)
    (97/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.104250495 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09698256 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098362121 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.147643848 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201371205 seconds)
    (102/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.103869818 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126341675 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098502144 seconds)
    (105/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.194579685 seconds)
    (106/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.127152418 seconds)
    (107/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07342307 seconds)
    (108/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131944477 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083659383 seconds)
    (110/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.129801487 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074579422 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.155255788 seconds)
    (113/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.180844264 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.119784541 seconds)
    (115/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124170159 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102643948 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.221189601 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.103130962 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.12363839 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.160692278 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.142658955 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128280708 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.17810475 seconds)
    (124/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073239081 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.125788114 seconds)
    (126/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.170379027 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.124714626 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.10115572 seconds)
    (129/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.097386652 seconds)
    (130/286) benchmarking ("sort", Float64, false)...
    done (took 0.185152011 seconds)
    (131/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.121538511 seconds)
    (132/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097911046 seconds)
    (133/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.172204966 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.098326707 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.1019023 seconds)
    (136/286) benchmarking ("sort", BigInt, false)...
    done (took 0.25817388 seconds)
    (137/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073381953 seconds)
    (138/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.164730867 seconds)
    (139/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100857787 seconds)
    (140/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.182782459 seconds)
    (141/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.105726211 seconds)
    (142/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.098243149 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.103083199 seconds)
    (144/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096892782 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093118633 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125587992 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122066518 seconds)
    (148/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.167359124 seconds)
    (149/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126505723 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093994163 seconds)
    (151/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.098246327 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.119029526 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128440652 seconds)
    (154/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.148268789 seconds)
    (155/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.098018055 seconds)
    (156/286) benchmarking ("sort", Int8, true)...
    done (took 0.237057261 seconds)
    (157/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.1058027 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.198291164 seconds)
    (159/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117946463 seconds)
    (160/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.10669237 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.097102761 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104354846 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.128740667 seconds)
    (164/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.074818732 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117304723 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072757469 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.073052213 seconds)
    (168/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.137119199 seconds)
    (169/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.147320007 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100643554 seconds)
    (171/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119041099 seconds)
    (172/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094297295 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.119971825 seconds)
    (174/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.132803028 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.074050032 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.128041619 seconds)
    (177/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095676241 seconds)
    (178/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.128537036 seconds)
    (179/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100465009 seconds)
    (180/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.160372253 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094562497 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125812886 seconds)
    (183/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074221347 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133815528 seconds)
    (185/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073657229 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.132998163 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096041436 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.237996309 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116908529 seconds)
    (190/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.109161195 seconds)
    (191/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.099192499 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074424982 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.118397971 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.098632339 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117329184 seconds)
    (196/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094385032 seconds)
    (197/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.097588054 seconds)
    (198/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091338466 seconds)
    (199/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074648578 seconds)
    (200/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.125942276 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.103194906 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126678996 seconds)
    (203/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116246463 seconds)
    (204/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095465743 seconds)
    (205/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.082722179 seconds)
    (206/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120573844 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.125808336 seconds)
    (208/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073263508 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.101001622 seconds)
    (210/286) benchmarking ("sort", Float64, true)...
    done (took 0.247232897 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117997608 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.102263608 seconds)
    (213/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.319436184 seconds)
    (214/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090733695 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.184198341 seconds)
    (216/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074990166 seconds)
    (217/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.100166508 seconds)
    (218/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10317684 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097751946 seconds)
    (220/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.130604646 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119537912 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.074402517 seconds)
    (223/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.098049362 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.073501189 seconds)
    (225/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.131590531 seconds)
    (226/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096496702 seconds)
    (227/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124614815 seconds)
    (228/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.17124073 seconds)
    (229/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.097537612 seconds)
    (230/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096762097 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.144579163 seconds)
    (232/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084273658 seconds)
    (233/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.096808421 seconds)
    (234/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076627429 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136497549 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093851353 seconds)
    (237/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246692114 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.118331423 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097390174 seconds)
    (240/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104785475 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100734728 seconds)
    (242/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.107260524 seconds)
    (243/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.073926227 seconds)
    (244/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.072812825 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12552705 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.08511566 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123968727 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074212309 seconds)
    (249/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072306762 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117737185 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096101996 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.097950951 seconds)
    (253/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07366485 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.119542861 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.168481084 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.119498969 seconds)
    (257/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.08279285 seconds)
    (258/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.124762447 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.102923081 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118138327 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092027468 seconds)
    (262/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.166776138 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.117196411 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074443446 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.128458463 seconds)
    (266/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096923386 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118090626 seconds)
    (268/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094532645 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127309834 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094706992 seconds)
    (271/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116709719 seconds)
    (272/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094881303 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.124093165 seconds)
    (274/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11963452 seconds)
    (275/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.097818856 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094591459 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118728241 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075037834 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.122302528 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093079331 seconds)
    (281/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132357308 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098973018 seconds)
    (283/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.146014365 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074076638 seconds)
    (285/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.098807077 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073813227 seconds)
  done (took 38.643140924 seconds)
done (took 39.535906517 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.108314918 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162418643 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.128018143 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.123667171 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132184906 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099033363 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12815372 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.130786773 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.107891866 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.133452604 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105387696 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101536947 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104510737 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130066892 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.129094855 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127696949 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132311189 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.100530597 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.127773144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.117877554 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.103468204 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117045723 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.094881094 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.100158277 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106489474 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12534285 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.101141139 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.129091915 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093100603 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118413783 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09901837 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.126518142 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117990785 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.108501763 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.124453102 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.102695267 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129586595 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103617507 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.121077531 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093192992 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.128079018 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.118040844 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.101946393 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.126076383 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.100968466 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.123673684 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103853735 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132814003 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.152561359 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100229897 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.127003398 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10598314 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.129301301 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101096152 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123291252 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127994068 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09977626 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152815871 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102661716 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125345648 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101908479 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.126907773 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.099761519 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.129258276 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127264331 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10486052 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.130459769 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099062502 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128915847 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.124057443 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093962411 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127991588 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.097464982 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.117832816 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.10365478 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.129560062 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.09344281 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.124442825 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.101009365 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.124204784 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093554368 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122739141 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095811583 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124681118 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121475731 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07612181 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.098181535 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.125440335 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09305537 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128964487 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.125322363 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.101292313 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120868955 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107331514 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.118805434 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.099585968 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.119181822 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094673362 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.121145376 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098200687 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.118703193 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097695312 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.128666607 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095491734 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.126027968 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132602414 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095544942 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.124739932 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093903644 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118983481 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10972851 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.131040285 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094349115 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125663161 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.118257975 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.102582057 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.118475714 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094423084 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.119372645 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094791191 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124730437 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095198642 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122614272 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.102217586 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134070415 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.094499973 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.123035315 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098214317 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11934689 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.099831307 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.119910818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094389431 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.12274492 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084681852 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123054162 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094343416 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.127675235 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123686976 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.103709792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121066478 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105277175 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.123795989 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.100665052 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.124563876 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094635191 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.106090286 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101555701 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122128405 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.096460541 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119539093 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096409766 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.118748743 seconds)
done (took 18.232372597 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09459865 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.195641271 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.165275728 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154869182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11570269 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.12110181 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130863577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152222544 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096984978 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.15271832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144307143 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116740787 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.160106453 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093724987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.12023267 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098887753 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121993023 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137383756 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.134227357 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143096244 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176253668 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119508694 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156338185 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120149364 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.130595461 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.147772413 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.096229532 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.123378028 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099816745 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13590782 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116226546 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122899442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095801983 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.143885454 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137587546 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.103575706 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119607454 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.10169882 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120917628 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094308621 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.150938185 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142952104 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125295767 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.101929624 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123291936 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.097383177 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121485367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105632875 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131741732 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125662155 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110269607 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.165639484 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124328113 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130404977 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.094435138 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.131717227 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106037361 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122378779 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.094929773 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122918082 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094526319 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.123944029 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136179517 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150464089 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100426481 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130879753 seconds)
  done (took 9.220522499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.11207963 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.151823953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139437008 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115166734 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120512077 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.096946178 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121518968 seconds)
  done (took 1.810166491 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096074628 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146853779 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123870201 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147457706 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.146611421 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.123398699 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132253322 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.096787677 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142433726 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.122837185 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12149932 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165146335 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.122892021 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104916032 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151769774 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09597485 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.149459453 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.122199985 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099688813 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150637964 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100199334 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.144388517 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.124185629 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096980881 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14107622 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096911264 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175427374 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127524674 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097338061 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143721565 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094594358 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.162315553 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140628849 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.108107598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121893749 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115523766 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140054992 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093270339 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13919543 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.129596794 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.114475544 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.124915603 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.097386691 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122815906 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.101714798 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136545503 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126236892 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.097619695 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.124876287 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.121277113 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122130322 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114868812 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122499188 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101172745 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12479995 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128708685 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10641543 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.123132276 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122026572 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123035043 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117919407 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142700239 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140002684 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117799726 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126035588 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.113821598 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.140985972 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124747912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098635196 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125886066 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.117466153 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11982727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.099089648 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.137423547 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097711436 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.152022367 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149379669 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09877262 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133715497 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096507695 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123696144 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096106283 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.15014423 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126679953 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097465967 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126325427 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100181313 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121229906 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095463954 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126207377 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095063986 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.124404503 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09973148 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123121063 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124895179 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118368739 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123667211 seconds)
  done (took 12.793077615 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098359447 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.123358242 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101331717 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12393287 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.099023589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123903359 seconds)
  done (took 1.638185274 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124893066 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126776489 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.139047367 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.104608265 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16916069 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.14292172 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.117910728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132390924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142695564 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.110822587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.14239917 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.116619178 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150119675 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130151233 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.115513875 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129369832 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142973573 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108369915 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137093291 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132293045 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120248194 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130301431 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104665202 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146016087 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127474623 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.104147494 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136103065 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.137554358 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.111697333 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132550005 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130161476 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.10203854 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.130734221 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.106949117 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.143833543 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130568645 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104440908 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129328415 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13477043 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.101852342 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.144288824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104098263 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.136374672 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.128893315 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106983618 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.131816363 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129355793 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109389458 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143027082 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1284332 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.102913098 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.131024897 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101236888 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12916824 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.130572463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1074319 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129295526 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.116842696 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.1313252 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.13169681 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.101565419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.128869812 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133226363 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.101917861 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.140335574 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.102170249 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132395368 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131092508 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105718487 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.131186389 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.102341219 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12883351 seconds)
  done (took 9.961855951 seconds)
done (took 36.376297993 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69717742 seconds)
  done (took 1.654643778 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.860440254 seconds)
  done (took 1.822377471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.195458543 seconds)
  done (took 18.198903668 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.51491601 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600393331 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.00836064 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179327541 seconds)
  done (took 3.274972822 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961820455 seconds)
  done (took 1.954882541 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297925064 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.248039048 seconds)
  done (took 1.52164061 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.787003055 seconds)
  done (took 1.773252485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.466620893 seconds)
  done (took 2.447090282 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.347339973 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.194132328 seconds)
  done (took 1.535669845 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.579533438 seconds)
  done (took 1.563378916 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.183819074 seconds)
  done (took 11.172884787 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.281824631 seconds)
  done (took 1.277341065 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311262187 seconds)
  done (took 1.299573855 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.54644548 seconds)
  done (took 4.533545783 seconds)
done (took 55.003777896 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106772741 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.137893679 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111636376 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133725336 seconds)
  done (took 1.469535054 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112780556 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130739295 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.112228311 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12959953 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.140304903 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.10425136 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132719192 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108628304 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.13070518 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131456797 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.104104344 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.130255087 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.107662176 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131203299 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100768873 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.134905731 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.134766072 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.104850332 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.13397354 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105087769 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129156202 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13247769 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108120897 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129017355 seconds)
  done (took 3.910696731 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108901182 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.129340079 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104944293 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.127370269 seconds)
  done (took 1.460882293 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108620278 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142016224 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.11453456 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136096525 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141118248 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114563522 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12769141 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101657541 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127905616 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108113662 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126265654 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149942866 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115723332 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.134151554 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110111138 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.123472029 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.12597574 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115571775 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.135220152 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110453082 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.127646855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108896037 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.125895287 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.143961146 seconds)
  done (took 3.967830501 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179215281 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.138933849 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149624022 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.104695259 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168947305 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149594131 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.096004641 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.151930305 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.096187547 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.139153003 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.126705375 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.142020562 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.138980046 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095589287 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12359131 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122721497 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110918013 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.137280862 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.099465042 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.13600475 seconds)
  done (took 3.59987683 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105798662 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126541118 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095641908 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125605189 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10820421 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.130268931 seconds)
  done (took 1.689535581 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105809389 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.124969832 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102629825 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125431354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.102747031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.122755949 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.097143745 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.123762082 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097829459 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121862671 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.100041762 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121680134 seconds)
  done (took 2.343024982 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.529021244 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.131226106 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.130620204 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097620671 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.136099926 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.097348407 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141159893 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.100686828 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.155117788 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097469322 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.125819596 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.128296213 seconds)
  done (took 2.865631643 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257716049 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135181618 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300305378 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389697681 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188228695 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180029373 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.317311046 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16718573 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.244662424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176789731 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239841555 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188442778 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165693841 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228616087 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151647212 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.128714862 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228742219 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324075886 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162025738 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233692782 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180768299 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180143545 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193944094 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165787595 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150211122 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207925967 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.130806667 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112307531 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224913198 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191535513 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199123723 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17259652 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173142756 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246992219 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306501682 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204147299 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295121978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146282792 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.153553011 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.177858215 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286684132 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154279656 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250494001 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145775398 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142563376 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247864532 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171627256 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213258696 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.157272959 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126093625 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24399854 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207141054 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.256219186 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148840091 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322095325 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15507841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1812258 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205772235 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266107351 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21709225 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232587767 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.10308411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230209931 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209546859 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200542906 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.181478922 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206190345 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155750269 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192134848 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238284682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202485088 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185049273 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219482646 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119469502 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181971209 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185000671 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209146414 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244809491 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225376218 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105358348 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181325405 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161778017 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142937272 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.206637399 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107630977 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262930837 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155289864 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.175083847 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225225758 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169989078 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172638358 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199307004 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189305225 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159795769 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.120454422 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13602815 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.166282025 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184053527 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15097782 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170307486 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162684187 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.141608789 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18123872 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106506223 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224101846 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09993953 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180499593 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22512553 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110683371 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179041991 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164374077 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162430688 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207298268 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210142992 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152781956 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146081359 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22371411 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22125951 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125352951 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19038343 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.248842731 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.156779075 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132408472 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24171158 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257236142 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125932561 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243632473 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160099948 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117843313 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144976679 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196088052 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170410988 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.173823436 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144280985 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195075436 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242379923 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107957077 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150405485 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213575071 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145001078 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143881279 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157789203 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158812784 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121146428 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15516462 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157723081 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189420095 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191930252 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166668267 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178782333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159114225 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25542219 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151152379 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1348018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162144176 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131407394 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.229804675 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208796678 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141814189 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241684739 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.180776476 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213061365 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180508178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147362311 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18987646 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141527858 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102292951 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233540099 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176057862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173305739 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209146907 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238715425 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.205534053 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.195900334 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179156328 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187605286 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178508232 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165918518 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.150509216 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174484485 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170360261 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.105710257 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.151949209 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.146353365 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162492874 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153727408 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116930786 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237172986 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18511342 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205856196 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171607458 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161761991 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195961131 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.139895669 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185255568 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.189123071 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15791046 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.236637058 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206785829 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202944389 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156851983 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241152506 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.103109195 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136597699 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.153909493 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179500294 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116744225 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148102716 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176382526 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196191334 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188089847 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210708179 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222302686 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199551059 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234623297 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104939076 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.180045622 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191148192 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190627978 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193737183 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151392372 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162391104 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190799981 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160385267 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22416146 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17909327 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187499794 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241504956 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163068837 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114698832 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160712645 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184169877 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166523478 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186267856 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157719116 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149753247 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166621264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112406366 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200049899 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193688898 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174313933 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191228781 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.161957972 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201425755 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139660267 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1759757 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173117456 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175107249 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.089551461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210377267 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206899821 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15621956 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173575777 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194564084 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143446944 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.326815261 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209338591 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226126091 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119999952 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168268088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175474266 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17456695 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178436938 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190525854 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171476086 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227086936 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141262193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.147487628 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149807803 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160738993 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135284138 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.144511272 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.159402225 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.188378047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149579848 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194562913 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159004212 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170589864 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184273272 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.162624927 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.155472151 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133497045 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260227535 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194434364 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233715071 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132054127 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216445794 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217109422 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137236552 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114547807 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.145354586 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191214486 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147429966 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205686987 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202630482 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243126796 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192987978 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183287794 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152174993 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.130776272 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168693894 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181282133 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218854455 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15901277 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162084635 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209748283 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.149960751 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14307776 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179585788 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303910562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155907949 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202313651 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087957245 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298657685 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133910173 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145959529 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173987645 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196904082 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.147240021 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165245029 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176820994 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16290707 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176909136 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163027446 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235447824 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227640433 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2409152 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196403613 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.114908948 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170074298 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181544372 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224224162 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165356705 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121174318 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199196598 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235791633 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205838995 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154418956 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182178691 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180014744 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171881474 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228944166 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118645602 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246717724 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117132041 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235926787 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165868071 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150802222 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185575024 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.203694091 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153648405 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19431542 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195310869 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14727579 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14467956 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172120139 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19225623 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161338757 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.108419353 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221112514 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106647122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239926362 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280158124 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116406574 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168100363 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15871136 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14766834 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16782384 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16998317 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120779746 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180127897 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204329329 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147955506 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197228329 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24855398 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183143525 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17893567 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1585611 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.762615642 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.143145955 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209158551 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15894014 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196192616 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160189312 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185088944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171996349 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179792158 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208752022 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171260721 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.244665281 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234082026 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.190800189 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14394066 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17187206 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130396657 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.155905418 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166583197 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181123877 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17191951 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.159428199 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192514318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167978576 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146418724 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151182273 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213878411 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159885671 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196855198 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193845576 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151478631 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184787056 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204383591 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146312114 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.204351341 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226344401 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124495433 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162117712 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.147701652 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163475408 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28212924 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106766648 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22446127 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200524745 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172966962 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180395521 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159681418 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206953736 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170597177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228431968 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125090707 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.166748196 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169685216 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150745233 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.142646735 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168179314 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179144926 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161314312 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171926824 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150516044 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203567521 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133024476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156901803 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303512257 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180715925 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251260369 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117851605 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149240075 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171799768 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16032494 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189928895 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192981179 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.148115592 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146867986 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.117215444 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.169061225 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.123360687 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170625958 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206248227 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170357209 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24866395 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117723982 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.293009788 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152928281 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168335276 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.098144079 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.143330356 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164310738 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158873735 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163836298 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209019451 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28287953 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159261633 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116727231 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162503573 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.138034926 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148156901 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147368838 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173211868 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221345994 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151478353 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09125781 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168957366 seconds)
  done (took 88.173352661 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180055388 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136673474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150604734 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203793785 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179158534 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294277053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212697153 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256474432 seconds)
  done (took 2.694102592 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.103950855 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.156076465 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.167259285 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.145488084 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095724328 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.128302636 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.38390058 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.146139805 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.126719648 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.128367471 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.186631595 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097073116 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.601839509 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.098836966 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.131297393 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.117816975 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.120078317 seconds)
  done (took 4.005083941 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.209878289 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.483021855 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.024718089 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198472704 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179456783 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121601658 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.69121751 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119528773 seconds)
  done (took 12.109242761 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134295203 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.156735587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146725278 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.176475458 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.161668856 seconds)
  done (took 1.872146488 seconds)
done (took 131.14138024 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106822811 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13945857 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106859098 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.140087877 seconds)
  done (took 1.575685059 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107207109 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078776244 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.110817096 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083505149 seconds)
  done (took 1.46745474 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.205808969 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.181210752 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413737366 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.079772599 seconds)
  done (took 1.61868342 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.124540495 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14428211 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.114458446 seconds)
  done (took 1.479483944 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.11513086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139520617 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.112592008 seconds)
  done (took 1.460582654 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11555903 seconds)
  done (took 1.210298085 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.121292773 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.152617366 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.121346521 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.150444877 seconds)
  done (took 1.64116454 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10730598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.137105484 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.121617162 seconds)
  done (took 1.458135771 seconds)
done (took 13.391466475 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115619906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439058828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.427323241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120455529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.736909372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388860386 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053529611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.158489884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182269056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101923626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.151733402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681137033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044173718 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.385200423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002769265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.382545725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.712768617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102879008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130963544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103998483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.040364743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100904211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133755482 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101597543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.712836437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.43755831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104228874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.385771984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101725344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14104851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388602706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.133598408 seconds)
  done (took 17.286666186 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10765634 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192386911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14321736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105333609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13994021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.10379696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135586297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102878183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.196677387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133667726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121361675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.132189796 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135773685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.105251365 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.155161375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101389832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13639402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101405259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132833997 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.133364614 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.12151365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132299992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103115811 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132217689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103285776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.146527252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.134305776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102426633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.132372245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111372937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135242319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.104170085 seconds)
  done (took 5.170136205 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154157112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202595016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144176413 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137155773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185466213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134872144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.211603776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159686928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20031103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10387455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15132591 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101808616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169585699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134425123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.124913683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.133946859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103986296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.133024967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131618173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.104758671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.151538397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101566605 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135099174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102524042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.134644083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.148410101 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106046581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133577941 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101922608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141464516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105796694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.134563764 seconds)
  done (took 5.52065548 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107095847 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137163002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118652989 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150175733 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104427561 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136420538 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106858819 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.135576566 seconds)
  done (took 2.094021494 seconds)
done (took 31.171912115 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120427206 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137735213 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.117438307 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.145374861 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.112237037 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.145558329 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099645316 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.14550619 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.144657843 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.111407176 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.148938702 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.100643204 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.133125765 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100637343 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.144020118 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106939351 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146653544 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.140966653 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.117062041 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.147049894 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.103278882 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.14294268 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111911913 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147896793 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147200791 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.118138911 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.150020015 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108551044 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.133918445 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103585533 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.139619612 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115510675 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13214768 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.147595672 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.107894113 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.136453185 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.103550384 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.13668412 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.116636814 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.142390731 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10781686 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.145453081 seconds)
  done (took 6.445569856 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.120478656 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.155103687 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117404637 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.089942905 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.127376147 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.089434956 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.148827351 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088229225 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.118767094 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120649196 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.11162554 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.086825868 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.087532454 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.11020095 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.086238437 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.084272816 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.117302059 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084511413 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.085238118 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.114293758 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088230655 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.110354273 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088639843 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.087100198 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.112100206 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.090413533 seconds)
  done (took 3.831133331 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110584708 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.153119026 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123244882 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186631803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.167057393 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.109718944 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14755143 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.149749325 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.118139918 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.129636658 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1023733 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.159229344 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113620329 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138184549 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.133580831 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114296624 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.144638106 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.104401781 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.143745921 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122459084 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.148688579 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.140613813 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119368066 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.144370571 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101152056 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133241026 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108376162 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.152588236 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138217449 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112223302 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.136499149 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.104673883 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.129583975 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108739846 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.138096137 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.13403857 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124362484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.147791083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.112488736 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.135250075 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.110810228 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136776534 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152940649 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.143357165 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.13272536 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.109972646 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.134855483 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.142232616 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.104382489 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149112768 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111959878 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131925449 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.105696596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.13393047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.103515105 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149411501 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10335402 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141490562 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140854735 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.108194254 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.144893378 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.106529642 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149779329 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.102279917 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.140389296 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.103381513 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.13151673 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.130285212 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.124277468 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139169644 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.176015187 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.105525419 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.134043504 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.1123405 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139242891 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10925745 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.133630747 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119065253 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143007229 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.134667595 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.114687192 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.135712838 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.106172588 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.151666215 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.104472219 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135733214 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103303309 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.140886559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10475931 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.135180059 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.147896007 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.10345977 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.135701608 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11655935 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.133399498 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.103653438 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.138044212 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136865843 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.102675529 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144899043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107917819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.133374557 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.113491159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133049906 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106319505 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.143100524 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.136461561 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096798726 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.131316036 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104820927 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.132659841 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100811181 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.134841215 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098730455 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140840117 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.137693386 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101203521 seconds)
  done (took 16.037035381 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.241935385 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.229550757 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.201730628 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301922824 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.145347709 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.131823365 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.225479101 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.168023236 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134483291 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17503199 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.184045081 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.194278808 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.154229328 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.231059957 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188925227 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101899114 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.152641794 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.179315802 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233583283 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.279613198 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.156933996 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.141672212 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176086143 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.142683007 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.146855528 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.143311275 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.117840591 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.139113687 seconds)
  done (took 6.140749716 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119258304 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165293183 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.1037138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.149946748 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151973054 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099887521 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.134321093 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.127841535 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.114627594 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146847002 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.102399457 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.142000561 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.139001723 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10739459 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.127009199 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.109066747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.140706269 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097442671 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132751551 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098976067 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135448484 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136478877 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107097701 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.132150788 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.111898055 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131460262 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093883642 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151323223 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.131755424 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.122215856 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.130731557 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110362204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.141305686 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125506048 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097673043 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.128184953 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.103726092 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.135509624 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.105124318 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.132202458 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.102509328 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.118035327 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102550516 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149198421 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109797324 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.120213462 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.109395373 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.138154904 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104362521 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.134009094 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.135516336 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.104809782 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.13405582 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.107918423 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129129462 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102608503 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.13634316 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094876069 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.139605593 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.105647164 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.125405586 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102559507 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139729491 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097641536 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.141521953 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105464535 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12904132 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.096743633 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129760126 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101190736 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.128424178 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101964849 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123581815 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126834556 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100338453 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.133749965 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099735519 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125598434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101051884 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.134157929 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084636651 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.133586149 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.083816654 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.136160228 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.099071536 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.132121668 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.103479587 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.135087445 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.120336642 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.135142977 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.141193209 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100386943 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132434362 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.106895473 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.123122753 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103264667 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148246502 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149440069 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098791015 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127261499 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112885635 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127354985 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094615789 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107316624 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107013441 seconds)
  done (took 13.769797927 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139525693 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.166725332 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.136026076 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121743328 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.168018703 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.170432807 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.111889081 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.140043908 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.106346232 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.153993681 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.103614416 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.144762787 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.104122009 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147866378 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168122815 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114095172 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.137108144 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115101638 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.139489526 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.179518867 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.122295695 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.154096098 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.150990051 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.104417712 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.140997748 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.121494201 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.171388449 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.149673518 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.117463963 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.152872121 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.118604186 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.172236542 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.153252321 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.107950389 seconds)
  done (took 5.846326253 seconds)
done (took 53.169267041 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.222960923 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.433603156 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.20581771 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.073080911 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227765002 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.231045724 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213030968 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.204398533 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.333744555 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.207206649 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.433020844 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.764583137 seconds)
done (took 58.666510198 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.282949423 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.366200655 seconds)
    (2/2) benchmarking "String"...
    done (took 1.512847285 seconds)
  done (took 4.006512704 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.818791495 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.140244498 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.466753283 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.203111138 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.224136097 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495862606 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.91094195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.59813514 seconds)
  done (took 28.16619094 seconds)
done (took 42.388546486 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.216712039 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.230874467 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240152004 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18288928 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.334888411 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223865145 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.534785953 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.245830674 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.236204827 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.193750269 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229247999 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.205372777 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210972037 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.601893221 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214530763 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207772233 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.25395956 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.738152291 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.625449291 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.221548983 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.242368384 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.252589419 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.227825345 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210524537 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.266716316 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.206058751 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.215588878 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216598066 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.778672017 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.210897974 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213993176 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.753188795 seconds)
  done (took 191.063984655 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.205171335 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.195442591 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.329144893 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.258166891 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.838115845 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397945112 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.354284709 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.903113865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.223378484 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.207914681 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.530414083 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208953546 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.539711954 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.189691909 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.241040555 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.274950743 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.515170294 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.550366859 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241523538 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.369285871 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224375729 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.566740606 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.365360908 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.459893544 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.227555466 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.245859758 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230148332 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.218716308 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399850319 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.439177478 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.257668732 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.250764362 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833220005 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064775273 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.237913976 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.22495785 seconds)
  done (took 150.950442333 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209619617 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208009008 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209048612 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240185452 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.2083711 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789246971 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788275517 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.720154112 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.476416476 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.594661785 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.212635828 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.510598175 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213760715 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303377012 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223765685 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208051867 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.224321634 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.25198559 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212668076 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20926463 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789506131 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222847441 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.393495037 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387514884 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224367167 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241852991 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603600786 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20829369 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242518024 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541903124 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257964847 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209587471 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.600385393 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.857652853 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32666438 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205717841 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245152911 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.213338944 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.497258573 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214315362 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213397366 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.215504426 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216495184 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908374432 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214521043 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795949011 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210406221 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170836935 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209360375 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214106961 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.635891965 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.905828174 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.228417184 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213560041 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213803001 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214841077 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214850277 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.248650194 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.501876913 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309322065 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.229373456 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212476045 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.213645629 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246006413 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216729311 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.271993542 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215762338 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.257891892 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266332406 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.322376448 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79473438 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213236977 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311188138 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334288449 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20867789 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211868064 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210721915 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215114733 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328101215 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209891417 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.623049075 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385116706 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225665834 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.602252034 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.312118409 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211826747 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624624468 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216132047 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.212280801 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.966581402 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309821001 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208499153 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.21658166 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209069822 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216923393 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.626597818 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792207279 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.47130965 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215417676 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.546419494 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215346785 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.63982273 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770641091 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901213511 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217715744 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324160547 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392495126 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.231089696 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214074472 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.609117775 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21688807 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275893737 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207396765 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612442238 seconds)
  done (took 367.200935214 seconds)
done (took 710.344161776 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.837541335 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.826932085 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.943893421 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.823133771 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.778077963 seconds)
  done (took 10.340963004 seconds)
done (took 11.475654096 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407643621 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409167023 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273804986 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410831414 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248922375 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429919714 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384129185 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236016191 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.318441518 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.296841857 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318835273 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264572453 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252088611 seconds)
  done (took 18.386054626 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544002119 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.54410033 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281716633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546401415 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258907399 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.562784302 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425927718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430428471 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429053068 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251594387 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228861522 seconds)
  done (took 16.636482082 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547229327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544540203 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286351706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.557025887 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257541397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545069869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432759871 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437560707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444094953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251579429 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231886905 seconds)
  done (took 16.669277863 seconds)
done (took 52.827807428 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.225424691 seconds)
  done (took 2.359574841 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266599756 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423359427 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242316481 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230470761 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227705445 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.229429399 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.235959971 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.226771099 seconds)
  done (took 11.217427723 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.226119901 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.228614296 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.224087738 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228807793 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.223242312 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.230823478 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.224556963 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.227683677 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.224693736 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228842884 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.226529891 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.224328122 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226698869 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221524858 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230684315 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.225591706 seconds)
  done (took 20.762696648 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229666997 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.224917662 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.228017578 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225749254 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226337465 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229059036 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.226861481 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.222883023 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.223819823 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224938041 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.225877138 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.228577252 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.225786613 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229007751 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.223775008 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220549135 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225953175 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.224713005 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231102307 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.223452149 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230174968 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.224881903 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.225296118 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.229315349 seconds)
  done (took 30.567496002 seconds)
done (took 66.043102998 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.866416849 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.941415804 seconds)
  done (took 6.944376671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288301154 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.287942452 seconds)
  done (took 3.711861932 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228491711 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.227330518 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231868567 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230857177 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227003604 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230612429 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233704041 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.234378843 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.234419456 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.238186727 seconds)
  done (took 13.458782056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22753536 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224365418 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.222674055 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.226640471 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231913115 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.225769062 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.225458551 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.233145353 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23327121 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.22849073 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.230079278 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228027855 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230978743 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224407935 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232032045 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.230198764 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228519124 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229223681 seconds)
  done (took 23.244418116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22990755 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.252479356 seconds)
  done (took 3.620044187 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.355333469 seconds)
    (2/7) benchmarking "second"...
    done (took 1.268535169 seconds)
    (3/7) benchmarking "month"...
    done (took 1.336771581 seconds)
    (4/7) benchmarking "year"...
    done (took 1.330525485 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.270725553 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247982902 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.270375148 seconds)
  done (took 10.215799581 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229682124 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.415517306 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.5206735 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.812584413 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233141535 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.235056278 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098373746 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235480777 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230475811 seconds)
  done (took 14.151605183 seconds)
done (took 76.480360223 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.266336016 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.232836911 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.548667971 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.24158282 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.237969114 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.523137644 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.270832059 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.3511989 seconds)
done (took 37.809591977 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.24344811 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205010202 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.008449447 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222862447 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.306593869 seconds)
  done (took 18.882226303 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.270640414 seconds)
    (2/2) benchmarking "read"...
    done (took 1.573353309 seconds)
  done (took 4.979684148 seconds)
done (took 31.246098571 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.225742431 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230099756 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229262695 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.228862829 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227859888 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.222663576 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 1.222145625 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230712622 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.226010098 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227344519 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226443935 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226368502 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.231177483 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.225103296 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229820699 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22149951 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226715325 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229566163 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223927973 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226854803 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22689484 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226061746 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225249757 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22740934 seconds)
  done (took 30.583247029 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230663334 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226884363 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229341411 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228303745 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223214392 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229680943 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22726658 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22680333 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229241966 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.225397114 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226966123 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.229047277 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229430092 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228177379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22984389 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229603567 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228579389 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229563509 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232144482 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229076177 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231308361 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228709052 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229669405 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225901033 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229869146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228613216 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.227447276 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.228056176 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233721287 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.230573027 seconds)
  done (took 38.002793309 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232842633 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.241612154 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232218733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227573361 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230184048 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.23199688 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232872359 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.226882862 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23318975 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.232141705 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231561547 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.229542914 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.23349207 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228212302 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.232335491 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230102511 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231476916 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224664967 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233399679 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.229873658 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231358365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233492291 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226493108 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232156492 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232434916 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.233489383 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.235263786 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.230548984 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233951073 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229500658 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228800304 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233325497 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233733612 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.235246068 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233982401 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.236119178 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233748133 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242739535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.235284678 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.235244149 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233678942 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231585587 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234088013 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23324624 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234193754 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.235201848 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234864482 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233850851 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234555724 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235493674 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230745691 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235306787 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.235748203 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.231717755 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235719545 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235227123 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.236298839 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233912044 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.23461747 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234572557 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236245348 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236410403 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236346584 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.236178699 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.23643491 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.232741103 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.238544412 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.238014142 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.236309543 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.23678858 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235390858 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.237633303 seconds)
  done (took 89.958755095 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235726641 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233620644 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234110147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239897969 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235558282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237593275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234324543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236406966 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235791996 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238802703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236390138 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233884735 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234990648 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238692056 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24057984 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233179613 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238361018 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235913865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236876822 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23853769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23728698 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.236947499 seconds)
  done (took 28.349381746 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23916189 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241274951 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.236533892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240565784 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237383729 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240040159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.239451115 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240646136 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240631384 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236424469 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236181957 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240266234 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238190069 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235204845 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236416009 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236756486 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23982056 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23890739 seconds)
  done (took 23.442305708 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.236946847 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.237876896 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.242443949 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235765524 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234900961 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238839907 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237176148 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239849932 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238210665 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238084289 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239790302 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240467614 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.2405577 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237691053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239738298 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.238155667 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241432361 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239106342 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241899797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237800426 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238546772 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243064583 seconds)
  done (took 28.406957641 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239639286 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240829509 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.238102149 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237895764 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237942891 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.239993239 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.241055497 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.239320017 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.242608723 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.240709684 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238633578 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.241217351 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.241983843 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.241565371 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240278508 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239782807 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24253363 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23974709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241972387 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238571376 seconds)
  done (took 25.953918273 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244045959 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243379068 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242919862 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244446417 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243183109 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.243531879 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243676487 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244214588 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243684457 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243908485 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243650238 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245180167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244197841 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243251824 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24437757 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245245226 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243155904 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24469788 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24482986 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245376517 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244799921 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244022719 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244633988 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244659387 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24457328 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243636345 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244927266 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244525214 seconds)
  done (took 35.987750392 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244696198 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243585576 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.241851438 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.243394426 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241390213 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.24213091 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.243295985 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.24316649 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244254584 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242474289 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.24575678 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24519342 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245471304 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.244989612 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245292025 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.246483337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244891097 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.243193692 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244537682 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241711889 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.245722886 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245237833 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.245624579 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243161169 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24303858 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.245208875 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242843584 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243867554 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246263695 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243047068 seconds)
  done (took 38.475084545 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.265959731 seconds)
    (2/2) benchmarking "in"...
    done (took 1.264024035 seconds)
  done (took 3.681751053 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244566664 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245734312 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243064337 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243393746 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244258472 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24655698 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245137325 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243573793 seconds)
  done (took 11.110687362 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.246229273 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245350395 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.248250859 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.245936509 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.24825056 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.247222153 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254055365 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.267825676 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.247632457 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247410647 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253482452 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.254825438 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.249955969 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246894874 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247180775 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250035106 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.247220771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.249005427 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.249069758 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.248265681 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249422254 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250155909 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249268316 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.24131307 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.248968612 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260849178 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.267181418 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.24699121 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248208528 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.251572938 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.244556285 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243807908 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.24831237 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.249981158 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.249556181 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250554376 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256713722 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271380091 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.253984444 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262636182 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250824043 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.241698223 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250469475 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251256631 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250754852 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.250141901 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248104483 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.244868538 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250361962 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253530853 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258215925 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245340373 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.246896493 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251246207 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.249850735 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256692226 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268510251 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.254272473 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.260867191 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258803247 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.276577608 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.269439634 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251459145 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.251239957 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260296587 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274063949 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253835015 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267924364 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.247560829 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251964663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255279608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277185611 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.274292002 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.25064003 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251327084 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251613841 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251762504 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252194734 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257015991 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.274490571 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251233737 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247650551 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26094566 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271053564 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.250496685 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252821628 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.251528531 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251777484 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253269191 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262650403 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.271833908 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24988795 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248137833 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251427677 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.253236228 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253677459 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.252290254 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253801975 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.250663227 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.253438682 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254059688 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255393036 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263611687 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25437034 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255546278 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.258352427 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270510491 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25277479 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260090093 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.254723063 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254041332 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.255978768 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.262208427 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.252010529 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25749467 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263604567 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.255190032 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25550864 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254536852 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.255681535 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26341539 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.284573987 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252933948 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252020504 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.259901903 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266720688 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254266816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256936824 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.253219289 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253336521 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250665113 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.256699149 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.254238145 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251723709 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255786981 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255439661 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252742266 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.255147599 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255431482 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.254798148 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.255886221 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.256253511 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256506814 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257407445 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.257034974 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257425959 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262000637 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.275336104 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256684366 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.256250031 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254800821 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257808076 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.256949873 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256336758 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25599134 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256762426 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.256063802 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256384768 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25776371 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.257075552 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257549529 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25726884 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26309422 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.25678791 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.260430268 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255175595 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.255476043 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.256225381 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25811877 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.258496046 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257974054 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256306841 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259690478 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.266996484 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258653368 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25828085 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.258776416 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259506417 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257215273 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259558729 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.260571945 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270407914 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258725878 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.265857183 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.279078998 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260978141 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.261699082 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257647934 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.258590613 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260944066 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26226405 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.269005008 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271717971 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281201532 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.260350359 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263884553 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260335142 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26400221 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263440951 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259716113 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260692715 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259384228 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259270171 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260119456 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260814728 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259199037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.257851807 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.260622115 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261290403 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.262363353 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261047832 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.260785776 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262955836 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.258026223 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261607921 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260611974 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.260119624 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.259355076 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25848659 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261545246 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261812439 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.262398073 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.267365578 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.258188291 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261268976 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261650124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258482221 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25971702 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.262918865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262572319 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259766282 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268410381 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280408871 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.262271188 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267478295 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28101512 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.260387279 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.265008871 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.263283535 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.259202219 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.263918486 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.273277088 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.263899059 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258874616 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.263026219 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264002127 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262461941 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268693835 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279096476 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.263040605 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.263565616 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.264007186 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.260905101 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26298108 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264606328 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263153573 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264964523 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264278507 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.264248913 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264747152 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263572436 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.264610202 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264575388 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268202961 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.274950918 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271301343 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.264532858 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.265727411 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.2634726 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.270807316 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26429422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266896438 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.266240975 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27344697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28461117 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270715695 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280046993 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26537006 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270302203 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.280840075 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266241579 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266999796 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267082337 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.265041372 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264727169 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.264111568 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266526843 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.266827893 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266666731 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267321961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.272760218 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.266691674 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.266474218 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.266501558 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.266141441 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.267164922 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.267128862 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.267009093 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267289456 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26847394 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26657808 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.266694709 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272659185 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288385592 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.267094699 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266214685 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26742803 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.267386918 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.267724099 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263455107 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.270628985 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277165104 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270443815 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.278224633 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.270358204 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27815676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266299875 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273253691 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.27866745 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265798822 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.266778593 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.268171812 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269052279 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27558922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28861928 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.268831765 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.273552113 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269135865 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.270077376 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.269700495 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266843037 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269175236 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.268571228 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275673102 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.291020962 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.273968815 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271288317 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266960463 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.268996402 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269258738 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.268492551 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271916751 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269725522 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.2699478 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269791388 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.268797163 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26913778 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.271250343 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271306592 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.265494563 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.269722139 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275782238 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.292247746 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2759487 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.271312674 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.276509612 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290103693 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278442088 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.291861992 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27014867 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26951107 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.27062397 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.272860676 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.269765927 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.271745603 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.268912692 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.271236231 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.276094871 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270213978 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272299584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271811284 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.271453211 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.26993973 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281046124 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297760397 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.272418111 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276581444 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270270591 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268744011 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.274944236 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272703361 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271201958 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274374898 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284862644 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282498122 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267994993 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.273766133 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270825981 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274362162 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27412394 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273583192 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.271396607 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272715587 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.273605003 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273645348 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276160718 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272921862 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.274878349 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273400494 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272998654 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28415618 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292229724 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.274566506 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273635439 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274831353 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.27351562 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.273769839 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.273693872 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274174537 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274799883 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.27444565 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282472023 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.283669752 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.278122568 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.274842978 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.276233186 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.274776539 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.274016309 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276284802 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.275811524 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274551433 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.275120899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.273924487 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272759632 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.273551343 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276234498 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27483134 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27639229 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277978323 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.282774298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27640604 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273310362 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274670731 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277899391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.27287249 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271668478 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.282812088 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297335791 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.288266522 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284730586 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.281654778 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.277404393 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278208571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286386218 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.271460564 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.274518942 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.275960658 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.277623273 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.277526878 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.281358969 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278194614 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.282779926 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.291945479 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.277474796 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285316807 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.300371721 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277473321 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.278922269 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.282311344 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273916007 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.276832393 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.278275359 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.277032451 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283593029 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298121019 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279508999 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277977684 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.274774997 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.277575815 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.283440126 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280263547 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.278210471 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.275613477 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.279441671 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274996375 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278191338 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.275853604 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278219454 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277559278 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.281386204 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.287482771 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.276468131 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277356579 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.27853745 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276810613 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279397051 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278808118 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277815927 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278205189 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.279324891 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280677256 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.277127512 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280964944 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277858042 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.280865516 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281196057 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279760534 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282374741 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.292311929 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290244434 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277321384 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.278685624 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.281434473 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.283492789 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279554231 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.279758524 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278370662 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.279274213 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.283541672 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280270474 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.280222063 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.28259931 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297668356 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304725993 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281468537 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.281889063 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28358903 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.280938382 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279389693 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.282068251 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282698323 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284447866 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.292516345 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282796473 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288196402 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301841874 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.282973575 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.285043201 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.284023746 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28994095 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.285057272 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282583991 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.282130717 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.287428846 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.300525988 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281351253 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291850628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315411702 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.303148802 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.284311544 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.284389973 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281618871 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.283953435 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284128884 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282973132 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283090819 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281526356 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.283263752 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.283174315 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.286949911 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.281643629 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283948952 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.285163552 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282332712 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.28401909 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277645446 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282894786 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.285423793 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.285607478 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.284205427 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.28617856 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.283966542 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295485078 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309065111 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.284331553 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.283383617 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.281204029 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.287966277 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.286930802 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294651924 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293097605 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.285076837 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283604056 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.285667541 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285695633 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283119771 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.286419381 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.281405995 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285889499 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283280931 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297766492 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309335396 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.290439008 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284130426 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28679853 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.287676947 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284854424 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286469249 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286505188 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.285174724 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.283959736 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292425698 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.286406328 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.286064689 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.288166835 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.295502823 seconds)
  done (took 757.674371882 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283592849 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283264226 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285179231 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285337508 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284923838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283683695 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281100279 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285414769 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282667523 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286310154 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285548063 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285848561 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284734089 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28562642 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285282403 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284471321 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284662253 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284621007 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285211689 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285307944 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285768934 seconds)
  done (took 28.169168885 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.288171216 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286061195 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287245378 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286184616 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285792133 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288572697 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285815267 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287056821 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287716343 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28693035 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.288975384 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290130525 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.287080803 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.286830143 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287231271 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289916026 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289445332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28694175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.288591381 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287095478 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288528089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286204897 seconds)
  done (took 29.516853043 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28915743 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285896699 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.286846979 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.287150528 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.289645505 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.288349725 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.289224795 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.290781592 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.289467414 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.288877295 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.287967357 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.289444977 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.298144816 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.297424 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.292731256 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.291417015 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.435173448 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290952221 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28964149 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29094699 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.287467841 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.296634656 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.309746421 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.288584538 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.290785662 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.291239027 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.293143264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.292554818 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.291433374 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.289162441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.29673567 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.292364023 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.292464933 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.292120488 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.291175806 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.293783272 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.296456419 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.292340946 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.289500859 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.292360648 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.30395144 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.312546802 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292699813 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.297058794 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.308791036 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292167459 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.294442652 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.301996186 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.289087659 seconds)
  done (took 64.696155989 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.292162711 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.291318883 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.289012105 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291230822 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.292987978 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.293843674 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.291054363 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292723975 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.290164571 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.291444539 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.294668613 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288895544 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290788933 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.294978156 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.294085105 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291623593 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291736176 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290800817 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287534263 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291093296 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286638558 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293120022 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.294216459 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.293683089 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293676349 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290600898 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292139227 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294590397 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.291964366 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.291485608 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.294871482 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294857956 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.295944725 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.293622311 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292502838 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.295232322 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.295012524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.293699468 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295526051 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291137532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.295295725 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.29563223 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.296230602 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.295251576 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292333832 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.294424626 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292384006 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.29352523 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.29425905 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.295612691 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.29389566 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.29357871 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295985821 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.294340402 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29615871 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298268916 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.293774777 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291043466 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295388896 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29296295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.29274122 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298344041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.295533146 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.296762569 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29715679 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29272393 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.294862531 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297570393 seconds)
  done (took 89.149709371 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296476898 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.296611701 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296913454 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296863751 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296449469 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.296692165 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296457985 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.296652586 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297069592 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298690156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298215925 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297031373 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296953902 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297684585 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298519805 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.298138363 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29681019 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297457603 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297542911 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295969801 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.297375 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298819165 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.298183421 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297882129 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297902499 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298038091 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298639605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298227093 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297220037 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298324556 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298916167 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.298907732 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298319652 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294164378 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.299754352 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298796084 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299929476 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298860961 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298627131 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.299331717 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297723791 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30041229 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29967099 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298443708 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298181201 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.299343643 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30003733 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.299398328 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3004703 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299454179 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.299609923 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30066149 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299825747 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298962193 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300104436 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.300490667 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300529455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301212251 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300707806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299822009 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299944573 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301797463 seconds)
  done (took 81.707072785 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301569125 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299504856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.299531691 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298857809 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300381755 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299657894 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300641949 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.300908655 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300389357 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.302121517 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303087042 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300729873 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300935987 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304007333 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299564966 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301436018 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300684184 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299823306 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303385828 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301256636 seconds)
  done (took 27.222664101 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.298944497 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302526427 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299055508 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29947889 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.30379958 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29910202 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.301719599 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30305036 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300437342 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302502996 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303217121 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302365956 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300861165 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301169563 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303184568 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301066154 seconds)
  done (took 22.026787653 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.301685123 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.304421797 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302349136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.303682323 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.301902876 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.301491769 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304206401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.303927165 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.301307406 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.304699391 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303402518 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.303712436 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304062725 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.304239196 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.301750336 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.304656895 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.30136633 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304161646 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.305554018 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304059091 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.302804731 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.302933036 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.30498129 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.306059217 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.30206334 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.303249069 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.303879774 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.302706705 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.302397757 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.306630588 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.303898463 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.303570189 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.303125746 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.304588205 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304813041 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.304970183 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.307323025 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.304884373 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.305279086 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.304796375 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.307128104 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.303650576 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305792542 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.306781929 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.303612981 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.305296886 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.303480683 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.303944607 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.305415828 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.303186662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307812929 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.307155699 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.306520386 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306872258 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307421815 seconds)
  done (took 72.941990454 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307060857 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306450402 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305179867 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.30749908 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.305429685 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304939097 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.307432479 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306727093 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303464177 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.307915551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305119583 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.308608336 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304226491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306704268 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306657186 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307737641 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.303902013 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.3048934 seconds)
  done (took 24.716440065 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305390284 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.306875545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.307946413 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.304950932 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.306790957 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307354295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306429309 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.309062106 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309044204 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.306215827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305888227 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.308689102 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308876188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.308504844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.306622007 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307206129 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308544999 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307583472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306078259 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306427201 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308024562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308727471 seconds)
  done (took 29.968946207 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.306387093 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.304351391 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.306547848 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.323081784 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.328989176 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.330230228 seconds)
  done (took 9.109680844 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31619148 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309704866 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306552841 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310017888 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310717558 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307552537 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306986435 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308716406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310477392 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30863036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307048449 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311567487 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310916898 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306860474 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308721697 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308558033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308645042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307592598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308303599 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309346098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307357257 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311071959 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308131385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307170996 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309130688 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308864981 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31111952 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309164998 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308568738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311719441 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310691012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309639216 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311545633 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309315039 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312441697 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311475119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308869697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311755655 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31089145 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309553434 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310969241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311493578 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312786515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30853302 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312529212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310201834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308807464 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310717366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310295505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312117202 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313784892 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30850855 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312255137 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311676411 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312733608 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312600214 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31148574 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31049672 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313545483 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311187867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310401015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312274707 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310074156 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311068558 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314222067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312515702 seconds)
  done (took 87.716126857 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310951507 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31051415 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311321694 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313491901 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30963649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310074747 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311688198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311668052 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310857757 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311092082 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315086055 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311959557 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312090917 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311067214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312465069 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311703426 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311852561 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313630676 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311978104 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316046928 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313304301 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312613838 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311847355 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312480171 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312971859 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316279012 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312728253 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312687731 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313634266 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313926568 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315201535 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313195486 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314228459 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312751693 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312717695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311937629 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314784971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312875214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313178857 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317251796 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314306932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315694355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313296644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312728797 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314680575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314295452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313729532 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313755984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314589788 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314838569 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314934379 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314783925 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314281182 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312903763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314968529 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313046872 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314235319 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314731022 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314310369 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31692249 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313179475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314468071 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317032835 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315703883 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316187776 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316222375 seconds)
  done (took 87.906420989 seconds)
done (took 1767.613921074 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.480546748 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.434699008 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.3151651 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.320914255 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.309217401 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.332609956 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.322632433 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.309598274 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.316240693 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.316603431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.317027548 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506757661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.315946811 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.309790476 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.315151517 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.411162229 seconds)
  done (took 42.853487667 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.346755986 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.324096357 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.439502081 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.342415156 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34677786 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.510138706 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375968242 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.321749794 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.499418851 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363520693 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.934568968 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340396766 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.322566374 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.47050437 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331669197 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.509722811 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.58064898 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.93819714 seconds)
  done (took 30.518091061 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793762649 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.3170841 seconds)
  done (took 9.331714443 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342489402 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.323130307 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.323844475 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.322364422 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.312225127 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.331999861 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318835895 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.315977697 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.164092209 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.45405318 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324476588 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.33334534 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.343620866 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.322304677 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.318656186 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.360998378 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.47041809 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.322423565 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31907849 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.327945727 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.323862855 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.446039073 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.364637852 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.321710268 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.454297015 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.15968637 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.324336835 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.332880476 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.47757751 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.323621274 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322597887 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323933717 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.32516126 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.259269807 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.790701408 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.316631189 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342534896 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.333570351 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.321552233 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.516032144 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324882631 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.330405141 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.316405692 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.766869221 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.473597701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438715899 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.657893156 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.343534932 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.325677662 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.388652455 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317704469 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.325575704 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.370284381 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.156081194 seconds)
  done (took 111.801655955 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.322038712 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.70955919 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487974175 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337874621 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.959957985 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.019973554 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.329913048 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.626626202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.364669762 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.317181815 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.609234284 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82779487 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329556053 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.321567853 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.976840979 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39605159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320149313 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.067088159 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.328035419 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.324183739 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828825317 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320216832 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313468393 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.473339287 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358710365 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785734171 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.809663257 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.78248361 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33221849 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.313377666 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.795567591 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.338079848 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.372637441 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310442079 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.588277817 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684688292 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676131065 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.333717625 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.365750446 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.317693555 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.321086056 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777657793 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68238287 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.330259744 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313284038 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790062812 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328715296 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.323621171 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.327033008 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522524103 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.16713557 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.322687097 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.751614258 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.314473752 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.687864426 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.352937047 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397282602 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81790373 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329848033 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.418769519 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371524255 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318039269 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321720337 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320548295 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.335171925 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672489758 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.718441366 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321650257 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677207703 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800102443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331922732 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877618526 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.121211443 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.337253753 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.385601426 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319826814 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.89745881 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817596558 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.348338061 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314646909 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66880603 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.334668568 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.614851272 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.340621997 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.315051249 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837302083 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.32716098 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.354865148 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.321716475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319756054 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.945952577 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325147838 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.593238185 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.370316474 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.321625095 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.324921746 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.353442587 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316196648 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.343178398 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.327313119 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862999836 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.343067399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.447686966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342590399 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31890148 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.316266463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.325422051 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324762061 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.542047937 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.825399986 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.343229294 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322472918 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.317320258 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.336881858 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.459408171 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.322573657 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637195277 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335159023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317285676 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323072954 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.990256202 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374593943 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317317527 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329538368 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.202062716 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.534702102 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340620427 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.334073036 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325947261 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.333371648 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.669563051 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346136177 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.401279295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324115291 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037229308 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3587387 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.335263058 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.833526128 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329668796 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32688891 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.345536876 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327032235 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609493543 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602714185 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.632208324 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.323028367 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.337353128 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013681753 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.356875575 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460768477 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.34521113 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.365100454 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522634513 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.456526209 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.328591711 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.957391163 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.322212387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538354717 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328244533 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628683938 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831618242 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.336274901 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329685433 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.036460745 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052229189 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.009666387 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.329052833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.60968856 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.301576001 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.810076835 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.327514916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324368628 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.752649075 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.331385773 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321640927 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.32600292 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.326630297 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397791207 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503051402 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.982949313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326477655 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.786933916 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.35026531 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322180678 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331836749 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320563968 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.676933996 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.404705807 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.332764363 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.353158392 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.323583569 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.333900161 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812799109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.156618219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.329802709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480451778 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972479921 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.336627689 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325840064 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.987268782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.628043465 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84490482 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.37414598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643354454 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.346531578 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.364393606 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.91026437 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.351292765 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807058966 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333498806 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.322755239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933835416 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.340804979 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.383330677 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.324131928 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.323707393 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.868859758 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340776507 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.319958671 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.681724142 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.350731863 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571110495 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.331794915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.3378233 seconds)
  done (took 1109.602832574 seconds)
done (took 1305.326534028 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.328740462 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.321534362 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312673941 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.322987723 seconds)
  done (took 26.522655535 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.342966458 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326311196 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330083517 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.328698034 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332869104 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328805377 seconds)
  done (took 9.217234672 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.632492938 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318582232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325925026 seconds)
  done (took 19.502797139 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.539064439 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.643861794 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.667546042 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.6022447 seconds)
  done (took 10.679991084 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.3307548 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.329496313 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33233817 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.33390471 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.339763068 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.341786466 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330117387 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329482876 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.338698577 seconds)
  done (took 13.232855054 seconds)
done (took 80.393306434 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.960239398 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.306804141 seconds)
    (3/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.813383014 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.299377198 seconds)
    (5/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.307199678 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.30520444 seconds)
    (7/286) benchmarking ("sort", Int8, false)...
    done (took 4.391728412 seconds)
    (8/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.992267336 seconds)
    (9/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.157278693 seconds)
    (10/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.816056967 seconds)
    (11/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.100745325 seconds)
    (12/286) benchmarking ("sort", Float32, true)...
    done (took 6.321966954 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.608569489 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.234046146 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.29939552 seconds)
    (16/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.344082823 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.36235042 seconds)
    (18/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.305165146 seconds)
    (19/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.119532607 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.347863785 seconds)
    (21/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.693634525 seconds)
    (22/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.512381141 seconds)
    (23/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.748371105 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.315764442 seconds)
    (25/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.588360636 seconds)
    (26/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.334522902 seconds)
    (27/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.72055918 seconds)
    (28/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447745242 seconds)
    (29/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.189767866 seconds)
    (30/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.507589886 seconds)
    (31/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.612822225 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.689179382 seconds)
    (33/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.307817988 seconds)
    (34/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.322968114 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.812102704 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.321841665 seconds)
    (37/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.346192893 seconds)
    (38/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.875375799 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.452140732 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.305690481 seconds)
    (41/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.302344897 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.67532301 seconds)
    (43/286) benchmarking ("sort", BigInt, true)...
    done (took 6.323649775 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.423008323 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.743990046 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.580066336 seconds)
    (47/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.808306267 seconds)
    (48/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.036149386 seconds)
    (49/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.846027327 seconds)
    (50/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.314044423 seconds)
    (51/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.326217705 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.450293349 seconds)
    (53/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.336276307 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.589432439 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.543850018 seconds)
    (56/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.262295059 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.991297024 seconds)
    (58/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.373258759 seconds)
    (59/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.306053895 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.382497259 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.306805738 seconds)
    (62/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.317987256 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.76216903 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.352917308 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.74085643 seconds)
    (66/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.52889496 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.306478779 seconds)
    (68/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.772396384 seconds)
    (69/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.356834293 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.307348504 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.34975545 seconds)
    (72/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.322950532 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.334104736 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.609457454 seconds)
    (75/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.863079511 seconds)
    (76/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.415401289 seconds)
    (77/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.323364341 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.433400955 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.566912546 seconds)
    (80/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.312542554 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.378782685 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.765603498 seconds)
    (83/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.341188243 seconds)
    (84/286) benchmarking ("sort", Float32, false)...
    done (took 5.382268002 seconds)
    (85/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.367816005 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.694145757 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.017617937 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.563765875 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404676352 seconds)
    (90/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.327565821 seconds)
    (91/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.948050533 seconds)
    (92/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.307106202 seconds)
    (93/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.975951162 seconds)
    (94/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.120929243 seconds)
    (95/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.349912202 seconds)
    (96/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.574440775 seconds)
    (97/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416052949 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.307040956 seconds)
    (99/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.452563158 seconds)
    (100/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.412235785 seconds)
    (101/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.314383616 seconds)
    (102/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.410034961 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.551817011 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343288689 seconds)
    (105/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.308925145 seconds)
    (106/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.438349411 seconds)
    (107/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.845596423 seconds)
    (108/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.420870242 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.505551188 seconds)
    (110/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.353498019 seconds)
    (111/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.329466289 seconds)
    (112/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.330183996 seconds)
    (113/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.579448677 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.93427675 seconds)
    (115/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410669758 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.7461382 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.875129749 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.364945183 seconds)
    (119/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.352789961 seconds)
    (120/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.349995274 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.612003646 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.326216285 seconds)
    (123/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.341464007 seconds)
    (124/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.309702463 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.159727021 seconds)
    (126/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.42424462 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.828815165 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.587227819 seconds)
    (129/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.724909454 seconds)
    (130/286) benchmarking ("sort", Float64, false)...
    done (took 5.681513592 seconds)
    (131/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.32752702 seconds)
    (132/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.185633404 seconds)
    (133/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.443661941 seconds)
    (134/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.609438845 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.466005927 seconds)
    (136/286) benchmarking ("sort", BigInt, false)...
    done (took 6.327905197 seconds)
    (137/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.57415442 seconds)
    (138/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.751009435 seconds)
    (139/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.365060392 seconds)
    (140/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.310554514 seconds)
    (141/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363588249 seconds)
    (142/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.864956587 seconds)
    (143/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.335587091 seconds)
    (144/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.356534688 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.14493376 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357750031 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.330908725 seconds)
    (148/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.791084392 seconds)
    (149/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.334598397 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.342712156 seconds)
    (151/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.318058155 seconds)
    (152/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.018271961 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.3597611 seconds)
    (154/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.33426661 seconds)
    (155/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.004102056 seconds)
    (156/286) benchmarking ("sort", Int8, true)...
    done (took 6.337447059 seconds)
    (157/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.354032701 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.934332104 seconds)
    (159/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.130503214 seconds)
    (160/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461686796 seconds)
    (161/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.111432209 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.298787543 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.413070043 seconds)
    (164/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.310943102 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.130195518 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.432333748 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.232741001 seconds)
    (168/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.696729057 seconds)
    (169/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.202001009 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37683134 seconds)
    (171/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.431959746 seconds)
    (172/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.341578468 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.333343127 seconds)
    (174/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.465509061 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.98373233 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.381325062 seconds)
    (177/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.388254104 seconds)
    (178/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.418606943 seconds)
    (179/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.361180622 seconds)
    (180/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.938090583 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.358536244 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.236117648 seconds)
    (183/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.313685827 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.966189402 seconds)
    (185/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.215282107 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.060015081 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.50369333 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 5.425025813 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.414397847 seconds)
    (190/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.419230387 seconds)
    (191/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.95352186 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.321085923 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.153487361 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.406291418 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.824988476 seconds)
    (196/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.356087032 seconds)
    (197/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.321139012 seconds)
    (198/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.265331249 seconds)
    (199/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.336221238 seconds)
    (200/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.380090456 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.974585039 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.548114549 seconds)
    (203/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.415714162 seconds)
    (204/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.337750352 seconds)
    (205/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.806174188 seconds)
    (206/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.347559265 seconds)
    (207/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.42964241 seconds)
    (208/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.168602136 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.383352383 seconds)
    (210/286) benchmarking ("sort", Float64, true)...
    done (took 6.338571693 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.387768653 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.342735483 seconds)
    (213/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.591261491 seconds)
    (214/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.200944278 seconds)
    (215/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.322115509 seconds)
    (216/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.321225821 seconds)
    (217/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.138580019 seconds)
    (218/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.352516537 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.328343884 seconds)
    (220/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.237089987 seconds)
    (221/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.461539591 seconds)
    (222/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.335798077 seconds)
    (223/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.742185797 seconds)
    (224/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.323229056 seconds)
    (225/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.369223634 seconds)
    (226/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435362307 seconds)
    (227/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358775926 seconds)
    (228/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.83960767 seconds)
    (229/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.197354922 seconds)
    (230/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.426049129 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.89479824 seconds)
    (232/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.313977219 seconds)
    (233/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.128669024 seconds)
    (234/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.31221273 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.961071737 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.774591375 seconds)
    (237/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.362657456 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.571580043 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.363782748 seconds)
    (240/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.415563926 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.364196284 seconds)
    (242/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.717804674 seconds)
    (243/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.220780213 seconds)
    (244/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.305663103 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.736377695 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.314442061 seconds)
    (247/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.463996604 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319799054 seconds)
    (249/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.789664245 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.249336716 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.459117372 seconds)
    (252/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.321808127 seconds)
    (253/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.324459629 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.4693621 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.361407443 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.336399525 seconds)
    (257/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.758278556 seconds)
    (258/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.370442098 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432202166 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.971024413 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.419669101 seconds)
    (262/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.431085475 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.453000872 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.317894031 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.379767478 seconds)
    (266/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.403938477 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.162661305 seconds)
    (268/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343695297 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.186066672 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.347310137 seconds)
    (271/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.424890181 seconds)
    (272/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.352032879 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.388692968 seconds)
    (274/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.225411743 seconds)
    (275/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.613320975 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.367476338 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.720444007 seconds)
    (278/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.371928507 seconds)
    (279/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.359498168 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.010817951 seconds)
    (281/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.067898105 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.389882826 seconds)
    (283/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.897414132 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.437242882 seconds)
    (285/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.05976652 seconds)
    (286/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.329428458 seconds)
  done (took 946.144602475 seconds)
done (took 947.376119574 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.373643402 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375893777 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.353317696 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.377097988 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.469888368 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.372124393 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.362595725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355651822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400841928 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403103324 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.357973694 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.376335858 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361961061 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.358105236 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.354250559 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372687511 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.460045433 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359507243 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.376132313 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.364046782 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.37479925 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.358728697 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40302884 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.373918678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35959677 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.356323733 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.364930066 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.382286365 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.474941808 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.365907218 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359686299 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.376376774 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.460932962 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34888401 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.349020846 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.37837912 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368694922 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.364918227 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.358455209 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39133723 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.935732485 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.383617581 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.366042098 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.353052514 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357212722 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.360724118 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36497187 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364277423 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377837495 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380199098 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.875822829 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.39193158 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.364718964 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.353368388 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368957198 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365714183 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.360493584 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383436782 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.383823284 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383171266 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.447138936 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.358186471 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.360190523 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.380909017 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372651374 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.912244324 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.366094299 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362993623 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.89114132 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.375284143 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.912694724 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.382492314 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.355356955 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.380451602 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.396461158 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.461257378 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351853439 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357480284 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.37158419 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.363505371 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369407237 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376109841 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364091551 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360742579 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379908411 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.379044231 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367171797 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367967401 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.365780881 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.382110472 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366332715 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378939997 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.361554209 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351988223 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36901646 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.363531351 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.370686736 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366820323 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364442802 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37153085 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.895375435 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393437904 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35461754 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.356654825 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.358553722 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.381900558 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.888944649 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.377543562 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.380917876 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409334678 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.364989867 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.455497336 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.369598572 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385420057 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.369018807 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.361095874 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357219617 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.503830544 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.889420022 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.389927389 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363857872 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361864708 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387396946 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365030483 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357021109 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.516909559 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.367326278 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383617816 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.490636376 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.368786493 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399523964 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.365301952 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.36524395 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.381025594 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380765163 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.39933306 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360538956 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389584991 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.383785155 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.35612824 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378192396 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.374293362 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364449248 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369965168 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.35699085 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384431564 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381110514 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38473786 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.382063174 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.488773524 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358448718 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.509645288 seconds)
done (took 231.150184046 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.41877604 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.354817509 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.444557107 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357272372 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.459820065 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452216193 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358516491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.356270578 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35864801 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.737800538 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355174404 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.357635398 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352464158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357757235 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.4392535 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360349772 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357396124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.697945811 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.359339045 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.430194868 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.358976152 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359240968 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.364215693 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744695223 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.35975517 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.363239408 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.428836893 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359455875 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70854057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.356482944 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.359679628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.706104985 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.449226468 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.381294279 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371130874 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.371426022 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464095114 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37488932 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43999369 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442679716 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.442355626 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40153947 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.359480929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358606972 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362082101 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364470998 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.363008671 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.385828122 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.360563682 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.363741825 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.699500596 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371202289 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368907238 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.357251945 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.358795771 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.382717999 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.358470147 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.364809961 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.455301848 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365257038 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427614623 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.742062904 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.742571139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360725753 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.35665449 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.362113191 seconds)
  done (took 150.222453853 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433089598 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.430898495 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.47594882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.375364654 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.41265562 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.485400418 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.378345187 seconds)
  done (took 11.252841518 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.369358005 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36487545 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410562183 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.412237792 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367288867 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.540163336 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365195514 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.369928586 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.363992205 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.414743889 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.363457129 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363818683 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.368739511 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.361899579 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415718727 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.376387707 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483397037 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.364975032 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364165799 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.5271311 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360686801 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.375311947 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417260102 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377022619 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370013933 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.365037834 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.171062957 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365472568 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360012104 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364309098 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366486367 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.439009227 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364828509 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.360808632 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360443286 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483288513 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.370802734 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364582716 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.362682991 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.361637943 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.36321241 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.36583773 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365839497 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.362472955 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366524427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.390384159 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.367457216 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.373861534 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368415274 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362405111 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413707174 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.365840251 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366932453 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368966071 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419267371 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368756248 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367701492 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.363489086 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.369419655 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359852445 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.531068959 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415081405 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368578682 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.419755209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.370503656 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369182048 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373108404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367478259 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420876586 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373932408 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417006774 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362700864 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553711027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.392280744 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371736761 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.370706692 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.370188733 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367630577 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.369073809 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.373297693 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366544603 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371559952 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.373308196 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370185319 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370048839 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.530230329 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479331403 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370828524 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.377732132 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377103097 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.370368734 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419675423 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.367308511 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36948705 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42387549 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.483071582 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.424583687 seconds)
  done (took 156.846298996 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.374716968 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379728739 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370668467 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392548819 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.38165518 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367031352 seconds)
  done (took 9.534876107 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37102669 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.375418113 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.375303717 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373632859 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368899095 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.370436052 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369805313 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367654246 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.373081201 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370180718 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.369864734 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.372017783 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371843976 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.366620042 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.371103359 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.370941025 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374061465 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372646154 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371315327 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371103965 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.466566559 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370864328 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367873233 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.373933358 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378982758 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.371256468 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3812931 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372583597 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371426111 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379590133 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.391152381 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374768598 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37070387 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.382014948 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379152369 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370219104 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373548207 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.379362017 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369629602 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.377984813 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381104474 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36915477 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.368593504 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.375909181 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.371564579 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38272436 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382159172 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381675105 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374158856 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.378562195 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.378326126 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.370856866 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.378297848 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.378337583 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.373085461 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390650789 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384286239 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.373827834 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.371425976 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.377596204 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379453782 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377956528 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372765573 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382034714 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380341561 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37928063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37512327 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380601564 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37908328 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.373295198 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378833513 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.371580943 seconds)
  done (took 101.377778799 seconds)
done (took 430.493121909 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.478994121 seconds)
  done (took 7.75087662 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.514538496 seconds)
  done (took 7.786961268 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.358196541 seconds)
  done (took 23.636542706 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.408256348 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.447119536 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.40200786 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.374947089 seconds)
  done (took 26.910822101 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.398498732 seconds)
  done (took 7.676512071 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.371660179 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368695081 seconds)
  done (took 14.01880986 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.50468558 seconds)
  done (took 7.776192004 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.390908606 seconds)
  done (took 7.670179411 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.385196655 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389562211 seconds)
  done (took 14.065268384 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.3633345 seconds)
  done (took 7.634662733 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.009034776 seconds)
  done (took 12.286923815 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.372344418 seconds)
  done (took 7.649393814 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.451901915 seconds)
  done (took 7.730544335 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.928813045 seconds)
  done (took 10.204500459 seconds)
done (took 164.073076901 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.371882838 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.376003465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.371580151 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376165628 seconds)
  done (took 26.77251944 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.412266408 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.414322512 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.40820972 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.416388366 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.411869062 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.415483176 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406605514 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402029636 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421003919 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.410465739 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414190246 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41520134 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.414370224 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.400923944 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415308214 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414268924 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.422218632 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.409637821 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.400088472 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.412010678 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.375152532 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.422719114 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.413805703 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3788361 seconds)
  done (took 35.1080237 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899117386 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449544041 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530453495 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.430114703 seconds)
  done (took 7.587915518 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.428527581 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.429013506 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.444176349 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485978032 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.528421369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.442147829 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.404454672 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.400454961 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389582947 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43217974 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512896169 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.455206154 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.526856057 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381615826 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.608879791 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382041483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380868109 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.436740486 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482352962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.497684457 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.381542882 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.431019909 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436569584 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44540857 seconds)
  done (took 36.02459755 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380099682 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.397882139 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.376505813 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.376982243 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.385351297 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.3778498 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.374528622 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.382131175 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.382859468 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387592383 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.376733753 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391909627 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379326281 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.378912075 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388079433 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.380291601 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.3847995 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.378515609 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.377082049 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386573902 seconds)
  done (took 28.923740965 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.37351938 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.227539377 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727398466 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629215625 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.378212694 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.37770679 seconds)
  done (took 27.992067348 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.455954086 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.622762635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.386388679 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.781884195 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.880076124 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.396936584 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378344132 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.644948504 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.005947052 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.99027953 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451341011 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.460392048 seconds)
  done (took 20.735680063 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.388090381 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.380543146 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.391017646 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396013905 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.437599378 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.402503231 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383797893 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.375956748 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.449572299 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.463726772 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.402819921 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445196845 seconds)
  done (took 38.195872805 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462260964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42940505 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.406408318 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455258093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102641497 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584239575 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446933392 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117212642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.394728292 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64729121 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3844918 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469280074 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633907003 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382280103 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383431976 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.430486215 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624072693 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895166289 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387473814 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.709429702 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411788101 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381229312 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.827547201 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641804454 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612861077 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359338363 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640469353 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.155501757 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689616179 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402937367 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392998116 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378361958 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657662509 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061855005 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488806367 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616132828 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407089879 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.926583427 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.379384262 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.707270736 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387881678 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402670089 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389210167 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37765503 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317168195 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385370577 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136760265 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400000229 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.091081747 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382636007 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662174942 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4795249 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.38493314 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.955772351 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456817087 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404882389 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.38298091 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473567524 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963237349 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.022580366 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393815265 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322043574 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394436702 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.738116212 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054888928 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.40757717 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.385374167 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384970881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320938234 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.713599343 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39878781 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520000443 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401885238 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038707286 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159276037 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401736761 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.341236186 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969918968 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392613895 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.320278988 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607286592 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158331151 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319194867 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.320190645 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315631885 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138785481 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395670146 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.046215649 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408264606 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139791433 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630792271 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422604935 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402943669 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609010707 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.262553766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383069804 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.38946298 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506402168 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399534018 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135605985 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337632306 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.38312731 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64605948 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.589603913 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382703394 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.435245112 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908859285 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412291116 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403364534 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380919756 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627600288 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031009287 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421935263 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.124133566 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407342839 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158899036 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183317027 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387828506 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39687361 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386167324 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687173963 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.200653879 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277098434 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451375366 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389745376 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386421538 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.774725164 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239426144 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.280729709 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.602850798 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409989782 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402225654 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.384811284 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360124158 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.38125069 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396444403 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.167520664 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60857386 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393155125 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665556555 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318392476 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521026743 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39859821 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606768236 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.707051851 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.414228473 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648803938 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385467871 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390848101 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4024878 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40332179 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487470446 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408744713 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.392759325 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648984984 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.389887222 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394294098 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.922427729 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17033445 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390536318 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399820178 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385966943 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040413406 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378590857 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386831877 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288516287 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397698788 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460970575 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394490253 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628401745 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.808807244 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4119511 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41477072 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.401417901 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615046002 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394883342 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.733451247 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475593155 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.893722427 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036788032 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422680756 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.32528344 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.097941137 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.085454695 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392930122 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.579611073 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39514246 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624858884 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426661132 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391168389 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015237095 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414059089 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.772264423 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.400002909 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403360438 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392312054 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390946377 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.803247299 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060138625 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413407313 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.404393388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529110269 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405905936 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322906476 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906148031 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393302249 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388090259 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166166383 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42587009 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.781079817 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237725493 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668657969 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387845838 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692924129 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.869166468 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.432303517 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.387696296 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388852836 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397900281 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.426475937 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404267055 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404084736 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.760386123 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.844148254 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953621771 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208699825 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980077859 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.862384612 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.414237139 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279511429 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150205978 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341968174 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048792365 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649147364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157397679 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377148373 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898959323 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.739860792 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254764511 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681332481 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626726977 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.837045814 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.424048794 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685382787 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613496882 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427992882 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403907239 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33086993 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.90742445 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980151743 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418516784 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477956767 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152020469 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420163509 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188293146 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.450262994 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.227628485 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833844133 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.958696065 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.801112174 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401366935 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41624694 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246775183 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413155843 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921901871 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067368187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429543183 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.907077815 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348225309 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628686241 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.429546345 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.389331657 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.166149465 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.424051851 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656829045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680680539 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337838978 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403945593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973089324 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.276121904 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40349843 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39459467 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195138599 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400393892 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715038157 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403935382 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.821906248 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420306407 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327694407 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32908909 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.084588157 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40451529 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368588454 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919549349 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.42167438 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411709783 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394729321 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265895384 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65237324 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406152901 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028513195 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645344583 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406864007 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430432814 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.396048664 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413602389 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.381096749 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.301080607 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63766412 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45940697 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6409474 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.444609553 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.298914136 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.461756013 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608277886 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.27876867 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400750552 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671772976 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.132215495 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.393537473 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222866882 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443674356 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394791423 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.435330986 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411542199 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418167898 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486868895 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636700552 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.432697969 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406485818 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844640641 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425804163 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405541258 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412691279 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48993463 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.119082026 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.830326688 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.189041495 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033555179 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243928633 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07637805 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712706583 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404122367 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403702593 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336835582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546439225 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933695674 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680096738 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515043363 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.402138902 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419943904 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399761366 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428971114 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616779942 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135680228 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276929065 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414175694 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068877207 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.282389216 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407779552 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.607444778 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926006549 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003724924 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528140413 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398488368 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155639163 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69261061 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492501179 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398571706 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998892505 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.40078573 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.231223587 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.412373378 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403054801 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553883181 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680846864 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10945486 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.423223421 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.555040287 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176300789 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.788592649 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662682827 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.957517321 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644180534 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061079338 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186991659 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675794206 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47262334 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637047746 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.528573501 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547604709 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.403706053 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287232357 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40860426 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249014564 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.110595864 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413044354 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041321052 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687884641 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403334161 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.401393339 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432768593 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411740913 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624981544 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164675098 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633968449 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411294908 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407242149 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.392479444 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045483131 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715293371 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348214722 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404674398 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670450014 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66583423 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424080005 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.854840619 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.114148353 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997658056 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.381884777 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423893779 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41473898 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184458318 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050295209 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.850916877 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95771974 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069739807 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418686469 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682796182 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.406794031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415930473 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686559629 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.406980516 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413621515 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648652528 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.061876761 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26880268 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.421391927 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.80995639 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.345398746 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.631364232 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415011537 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345864978 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405049368 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.856816267 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427749042 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524707675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414626941 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.400736041 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416397191 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.168390269 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691072487 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410621646 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.400858334 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.398535281 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412006826 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507439212 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000356197 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428987388 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.078829451 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759646181 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666917867 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422785632 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.392447994 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411357225 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404434037 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130861355 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385881516 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421614476 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008993672 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.415398806 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.441808255 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417347946 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.620653825 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616334899 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406781609 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651068304 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447338785 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428185437 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.308134414 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181943424 seconds)
  done (took 1699.577947308 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453729175 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.454519174 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.421699981 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.478891329 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433300692 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475943351 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.481506563 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457654916 seconds)
  done (took 52.971574836 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.414609732 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.574620496 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.436401332 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.418254454 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.42625598 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.418342383 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.924313676 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.435678507 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.415924041 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.417916736 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.414860303 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.421817599 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.123620104 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.442717168 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.413137749 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.40938371 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.427013539 seconds)
  done (took 66.852966135 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.856248479 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.70776261 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.803472546 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.467780131 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.453214899 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.433768387 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.801994203 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.423522323 seconds)
  done (took 55.263250458 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41625259 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420172783 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.428030135 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422193516 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.428470194 seconds)
  done (took 8.428379601 seconds)
done (took 2105.711782134 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.414171033 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.416373174 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415801661 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.420603422 seconds)
  done (took 6.979231964 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.388115664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.127633519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.39196162 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.404050646 seconds)
  done (took 18.621917699 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.429602317 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.445611954 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.189800994 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.101157679 seconds)
  done (took 5.60406167 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.164457283 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.176518455 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.157973062 seconds)
  done (took 7.812345745 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.410948057 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.416063927 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.417036575 seconds)
  done (took 20.556221841 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.714921852 seconds)
  done (took 3.029875585 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.5551696 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.608306658 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.764731834 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.742676495 seconds)
  done (took 7.987682498 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.809887052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.791656413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.607174239 seconds)
  done (took 6.518641764 seconds)
done (took 91.301930059 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.50394613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.4375571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.616427905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.47733868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.643150083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.613971449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.742103783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.447662685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.186421748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.974707157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.473545437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.641276333 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.703302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432700546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.711056658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.438951206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.642757713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.540685546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.165481075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.366726145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.758971642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.111229969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.304508579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.317304396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.651998182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.566283713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.686580146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.433378814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.341684538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.90868269 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.572372292 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412460738 seconds)
  done (took 197.13733237 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.413034135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408036941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.425798232 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.410758689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409579749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.409642657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.410827868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.431274703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417010993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411128321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407485273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426535993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.410806983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.415417181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408836602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416851738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412467883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419911327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428034685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41291445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429178933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.424523667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.422882522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.413433312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.425349355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.430141959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.411143082 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40963315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.419983158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.408920121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433105051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410836865 seconds)
  done (took 206.659766493 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.417419658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412754552 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411195482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.42345338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.415559728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.43480168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.412766658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.438335203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.425632463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438384883 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.410433245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416219926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.431814524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.428344247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.411016205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.426966578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.430839699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436890211 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.425250646 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434513681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412126104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.414613009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.4152645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.416620728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.42058814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.412986945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.431941568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.42412347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.412560252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.413570493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43088973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424261761 seconds)
  done (took 206.830888058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.684963848 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430418811 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428370637 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.385604775 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.432503018 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431156761 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.428210201 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617607365 seconds)
  done (took 15.159071925 seconds)
done (took 627.102530743 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.85802588 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.560957056 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.63026535 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.445056066 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.296083754 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.462046236 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441525788 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.635802502 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.38201031 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.638847204 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.720636193 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.456353578 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.908780162 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.448907576 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.722807043 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559642327 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.411471943 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.539208837 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.787640682 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.044293365 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.719341159 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.010041419 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.654626321 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.374292877 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.923816112 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952172005 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.229406786 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.381915777 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463643283 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.79935931 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.190618456 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.54877543 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.494095497 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503139516 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.563930306 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548863604 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.520711336 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.512662032 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.654867278 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.717547207 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.036693102 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.187293358 seconds)
  done (took 97.256429795 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.414092152 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.417829202 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.416231698 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.416204685 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.419079706 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.416813825 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.417178344 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.415093693 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.419105237 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.416010939 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.414109104 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.420536775 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.41580468 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.41480617 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.417539215 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.415947366 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.421736932 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.415534568 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.41343141 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.413920012 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417085099 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.420391602 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.417740861 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.414022986 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.413013246 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.418621278 seconds)
  done (took 38.154660689 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.433981145 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.697236079 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.878958222 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439387646 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.425582856 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436006067 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.51616654 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.43516347 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435846272 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435343243 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.593859896 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.440800116 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472798564 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.907326868 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.438886333 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.434785314 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435562008 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437158399 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.699265192 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447910803 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.546492894 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439281904 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.524334435 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444967953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.456617685 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42910905 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437246905 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.018364372 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.460244507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.600960579 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.291500854 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.519280504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.97507399 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.912967039 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.304100427 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.440148692 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441034622 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.613370324 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437934537 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435211026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.523848501 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439889734 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.886709427 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.136548636 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.458692641 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.442094474 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.04727792 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.628493219 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.716687631 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450878022 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912432683 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446229236 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436902931 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.43789965 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.712578689 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.445753961 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439886373 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.075219438 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467100253 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.522789358 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446694102 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434979127 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.709090967 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431916434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704415763 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445047126 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443089535 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.458637973 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.895284926 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447335208 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.153227299 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454701955 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443469364 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602297751 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.697002189 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.067330402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453088575 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710781068 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.98142463 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.547837805 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.445771414 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.015555887 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.549816883 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451495071 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.443083534 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448455398 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.446500149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496282703 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.529938282 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.094634465 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.170451068 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.107466307 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.549115746 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.452887747 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.44707987 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.081929964 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.467949352 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.450344958 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.877085758 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.15318594 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45315955 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.452712015 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.14702975 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459466012 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.533378739 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.45249168 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.891442458 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439384574 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.493854249 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443394868 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.452850674 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.469824662 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.529798749 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.450925799 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.448956268 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.123868639 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.627299415 seconds)
  done (took 190.205344936 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.442214403 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.430589605 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.44814537 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.430726246 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.43875772 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.449367147 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434383716 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.436265838 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.449608112 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.441578212 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.43832475 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.438480705 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.443123594 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.456637247 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442521502 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445432723 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.051590749 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.439336353 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.441634204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.44950474 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.258551125 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.444393043 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.443199944 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.447047114 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.443942788 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.440139884 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.452256934 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.435038998 seconds)
  done (took 155.152896562 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.451099036 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.091241276 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.467784551 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.588723754 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.470980602 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449421092 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.59414439 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.514556787 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.465579026 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.44642462 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447896978 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.790286233 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.455714055 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.035215448 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.659239712 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.614090992 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.040767188 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471219494 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447080021 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.444828809 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.595689335 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458710585 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.793538792 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.090187853 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.471150419 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.095039349 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437244423 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452655766 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.448994969 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.092811256 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.469336121 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.796579349 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.539302868 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.516706837 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112238712 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055567889 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.055596093 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.613103345 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.450664204 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45143394 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.450538539 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.433715073 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.094404086 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.472312067 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.448410432 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.084170811 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.474443751 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.453520459 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.457064666 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.452652557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.51775208 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.536663441 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818451705 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.10393632 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.554469312 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.466922494 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.598061544 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.836679354 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447302448 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.039331416 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435412534 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072390915 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.464545304 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.439203816 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.453713987 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.458469716 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.620843336 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.603838792 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.044889618 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466516286 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.042629406 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.637790894 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.456168227 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.453228586 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453991069 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.071001924 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052614804 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.639630096 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.603387308 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.671107776 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.441020654 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.453672932 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.436978248 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540025358 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.456682688 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.076172319 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.05344643 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.47340451 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.458013926 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.4566233 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.457982577 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.649925573 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088568343 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.548141888 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.034868721 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.805623672 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.779152614 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450300546 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.521356574 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.468846319 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.788348347 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.451111684 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.520718917 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.900650354 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.781007538 seconds)
  done (took 174.262035122 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.714437297 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.711688283 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.561649957 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613229799 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.077433112 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.033774274 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.836858352 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.591601841 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57434355 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.729582938 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.67537948 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.53617727 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.691288777 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54291572 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.232548998 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.538987098 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.568776876 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.611283828 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.619054118 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.540535368 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.158268159 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.752526307 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.662084543 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.456366383 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.542958369 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.284358525 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.050113172 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.060527526 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.638706615 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.814624689 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.998363765 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.628335632 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.476607438 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.198895528 seconds)
  done (took 70.066928665 seconds)
done (took 726.421489625 seconds)
SAVING RESULT...
DONE!
