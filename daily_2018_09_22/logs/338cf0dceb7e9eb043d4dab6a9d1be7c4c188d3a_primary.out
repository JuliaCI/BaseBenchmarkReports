cset: moving following pidspec: 17759
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.333617208 seconds)
loading group "string"... done (took 0.484294961 seconds)
loading group "linalg"... done (took 7.792592684 seconds)
loading group "parallel"... done (took 0.175687021 seconds)
loading group "find"... done (took 1.202801419 seconds)
loading group "tuple"... done (took 2.163275433 seconds)
loading group "dates"... done (took 1.354072218 seconds)
loading group "micro"... done (took 0.249537212 seconds)
loading group "io"... done (took 0.683882289 seconds)
loading group "scalar"... done (took 41.695684817 seconds)
loading group "sparse"... done (took 12.726887207 seconds)
loading group "broadcast"... done (took 1.11933949 seconds)
loading group "union"... done (took 14.053405867 seconds)
loading group "simd"... done (took 4.810963633 seconds)
loading group "random"... done (took 9.746195069 seconds)
loading group "problem"... done (took 1.994350116 seconds)
loading group "array"... done (took 22.638141919 seconds)
loading group "misc"... done (took 1.448260788 seconds)
loading group "sort"... done (took 3.634860515 seconds)
loading group "collection"... done (took 19.689214364 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549476025 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149015855 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.158291349 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142648285 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.22249201 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160583001 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147565083 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.119312882 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.989115587 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.196323219 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158317625 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.541732798 seconds)
done (took 5.270344909 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228754776 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095400837 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1105793 seconds)
  done (took 0.880975552 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079604292 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148964922 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097511987 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080670849 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09826897 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098689029 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082439542 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.096158109 seconds)
  done (took 1.382794492 seconds)
done (took 3.258736688 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.754353557 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.297233932 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.21263265 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.520465349 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.185605481 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221359543 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687668129 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353098621 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.272798902 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.105700028 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153819461 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39962537 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140727903 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694077046 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.095276286 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.13099034 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.18078225 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452193514 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084854791 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113436923 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118951553 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145612507 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130749998 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09600915 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.190962688 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085243681 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.207693524 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112225689 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084639021 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.299320997 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.205230099 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701730056 seconds)
  done (took 11.146423275 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118063878 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141687997 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101268916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142669578 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140226084 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102984852 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103521105 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084187578 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128218793 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183172165 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136677844 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.145450892 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08131427 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101952615 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106281506 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250670826 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126508441 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125152572 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088504693 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108430098 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140967732 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101777914 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113609604 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112622023 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169442866 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21031824 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115512792 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129989449 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100272037 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116867206 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147575106 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148011732 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097930016 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082978491 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179181787 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127901196 seconds)
  done (took 5.304712511 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197592157 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124873309 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.177735749 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.168864677 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148949253 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.1666087 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121500921 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257054361 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.157042012 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.163763465 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18296144 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150582318 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119369394 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08539793 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.104912997 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082505291 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.692027244 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169653084 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121755184 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.124030023 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109334002 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091770165 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376303341 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108262592 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103576417 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085242501 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084987933 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170716712 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085503869 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.225153934 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104833535 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106143497 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137294802 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.203743669 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129697346 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140948912 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082439224 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.099841535 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.186152998 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109249479 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080522452 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100103168 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110316347 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140119824 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.141247497 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10077987 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084637238 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22903023 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08449609 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098653971 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101480322 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.017284083 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184546561 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09694111 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098421945 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.34430618 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102189345 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102361064 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079962575 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288463631 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138395556 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084184871 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099929254 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08256609 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101562893 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396289912 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098569319 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.743912114 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084541111 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110516854 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085396991 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101217304 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1081243 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090235039 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119364071 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082601678 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103085532 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082551855 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100514495 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102937714 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09586035 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106421375 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082621225 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169479266 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082526453 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118252459 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130596646 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087437512 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099527677 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13483276 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104724684 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086104001 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.141470135 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083872783 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114359246 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104118556 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147344812 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.084673944 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.189213314 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095900412 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128063757 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102834022 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118733582 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11445217 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102419626 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087451735 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099093148 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080165425 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167698584 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082846158 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100207471 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10150517 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080647802 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114036633 seconds)
  done (took 23.340290429 seconds)
done (took 40.467580506 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.353247199 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106688146 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107348775 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107839831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105309065 seconds)
  done (took 1.53706707 seconds)
done (took 2.268660448 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.2960922 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182039684 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098690939 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.176812374 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096241049 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.184375766 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16798632 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116202045 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.192816664 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.097851425 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.171632293 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079710794 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098159733 seconds)
  done (took 2.716663732 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099013239 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12012991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085470667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115694912 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079130301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115612867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113826026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105113345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114528166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088333531 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097066808 seconds)
  done (took 1.861539317 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096968569 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117881899 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085242624 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114657752 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079325001 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114164916 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096335514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121774987 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115029175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08839448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097848543 seconds)
  done (took 1.853061033 seconds)
done (took 7.149655949 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096408294 seconds)
  done (took 0.813947069 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.0503801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.122451514 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120520794 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.161157619 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.338502065 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188469543 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.564610924 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133562005 seconds)
  done (took 15.630220284 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.118694365 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.106721408 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.121919292 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086126867 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.109754155 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105796738 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086065613 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108234684 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089483815 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102728986 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104735355 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086236927 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106733942 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087681123 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107095869 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106472583 seconds)
  done (took 2.422387365 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.125223191 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122799084 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111316452 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114372299 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109251238 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.09125412 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110418194 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110261983 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089998242 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.108647787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111957714 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.093284572 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107912933 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0998583 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09392785 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11389765 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106481281 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092424964 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.112131447 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112187574 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094201656 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099510279 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108330764 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093721112 seconds)
  done (took 3.370402237 seconds)
done (took 22.96913589 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164222858 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113641747 seconds)
  done (took 1.005283047 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10546056 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123964319 seconds)
  done (took 0.96716096 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109934926 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099929864 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140947284 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119924378 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084374358 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100601073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.135958616 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.100787737 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084031428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.10057856 seconds)
  done (took 1.816801155 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087765651 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.118519396 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.110365587 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.105442711 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114262495 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.105856986 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099569304 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.107010351 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.122848119 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084068629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.110074428 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1198548 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.110717708 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103867455 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.116585148 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.108762974 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094521921 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107620137 seconds)
  done (took 2.667968648 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082937117 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.10527812 seconds)
  done (took 0.929691588 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086948669 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102146606 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087894575 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104000734 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100983719 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084152797 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101427425 seconds)
  done (took 1.412911625 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.496404045 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141956463 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264854971 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08880014 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1268802 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.315709075 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101619372 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107384355 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088322722 seconds)
  done (took 2.536971752 seconds)
done (took 12.076743726 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09721052 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.123971229 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.120361369 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.502304994 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.126798099 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082478754 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.166500905 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.264944944 seconds)
done (took 2.235229001 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.154129868 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33345542 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120897201 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068882579 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099056772 seconds)
  done (took 1.37111778 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081058131 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10390178 seconds)
  done (took 0.935153254 seconds)
done (took 3.211536819 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081901216 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.135912129 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083273472 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100105896 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083210088 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.10028949 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099822127 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083687908 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100765044 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.083001053 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.101029135 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082979761 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099015276 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081412648 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099342815 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083991961 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.099064424 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083810932 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098791044 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080685201 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098592684 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084041857 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09868651 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081643818 seconds)
  done (took 2.999440409 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111787405 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101995276 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107565825 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090864995 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107595244 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107779421 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089414174 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101878965 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089700601 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103376779 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105290292 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087732836 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102915458 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104782536 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086057476 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10561713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090972428 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101700638 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103936327 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087186146 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10676001 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085200898 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103905952 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107044439 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087611345 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104533153 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103844741 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084726995 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107555103 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087718303 seconds)
  done (took 3.722091295 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086225102 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098489804 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080999696 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106701699 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081035862 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.103836911 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082107695 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099923651 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081992749 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098665576 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083218165 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099139704 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098925944 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082932449 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.100881827 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08403142 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112398752 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082169032 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099039757 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082989296 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102446124 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081787834 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.102241055 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081454722 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098948757 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081311093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.099049516 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.099132637 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081425544 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099498417 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08343579 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103702892 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080673943 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106631752 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084607864 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.099478062 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08544229 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09833996 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082979928 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098634575 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080839735 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.099303871 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081272853 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105506644 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.102777469 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083644841 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.101123606 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082526114 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100755526 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084200992 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0988868 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080966322 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101685303 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084082514 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102837658 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099346367 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082596701 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099383731 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082248503 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.098828703 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081671328 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098955764 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084011675 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099759616 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097398899 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105790756 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082054324 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100271871 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103483167 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083536649 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101793578 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096129217 seconds)
  done (took 7.443782579 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085441499 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111479105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084249471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101985579 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079980565 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100000591 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104666221 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082493164 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101784412 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100564727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100859565 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102399405 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084893218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104185686 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082770236 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102513369 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09229025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098426607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.100088123 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086052145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101645523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086146233 seconds)
  done (took 2.856868851 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218335186 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110139749 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147398874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127347181 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101301403 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115593399 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107922254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09098854 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107138949 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106378111 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087621631 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107207501 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092338214 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105505627 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105637829 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088434307 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10683658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106966135 seconds)
  done (took 2.79742891 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09670606 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103658109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125512 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084246447 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104191367 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088660331 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109134039 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118629045 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087577977 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103205759 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112829864 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086794868 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10595986 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085424413 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106608564 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085940368 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105414012 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103706123 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095671516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109039451 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109501542 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09437341 seconds)
  done (took 2.987962833 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098992554 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104728931 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124487603 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087831266 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101809132 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086435162 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109964011 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.102913114 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094055875 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105067084 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085386769 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103407991 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109833861 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084601944 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109140172 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086030402 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104276849 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085405206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106201937 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101882889 seconds)
  done (took 2.760949274 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122545267 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103993357 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105034072 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110520584 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105106952 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105321663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.221906302 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.1037601 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105022749 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11391186 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104919413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105224406 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110881594 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124813037 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105528936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128735907 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110223411 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128275994 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105703334 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086728247 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13077532 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10539444 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128141636 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087280021 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105632274 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086398654 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104224279 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125246572 seconds)
  done (took 3.947851717 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083036514 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103606238 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08222445 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100974831 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082694593 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101149082 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082659274 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100647216 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084761378 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101384108 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085639852 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103487238 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085381848 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102597658 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085654218 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103256972 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087977267 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099977763 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083075934 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099901684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085034577 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102806776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103941768 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082759346 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100522349 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085125617 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100898758 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082220007 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103590313 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082534605 seconds)
  done (took 3.559131264 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095409418 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111240727 seconds)
  done (took 0.9753777 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08257972 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120545928 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083073777 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107885054 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110000046 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085866317 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114039852 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091464353 seconds)
  done (took 1.564094495 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102086912 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.123013188 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090192123 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12329329 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.119332466 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.101498092 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166896281 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.109392098 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09216616 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102000408 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.121016048 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08396023 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110490626 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085824733 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109803235 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092021037 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.104789599 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119761632 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092926941 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102871732 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088184496 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116669381 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107130519 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083039197 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106531297 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097036826 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11386204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106472472 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089022057 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113509012 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092140211 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097754668 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086610806 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.109577613 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.105347875 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.100363983 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11720991 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089113869 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113904623 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110217401 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112857576 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.102932867 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109841662 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092243015 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116102562 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09203232 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.113163698 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084834164 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102233152 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107337681 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084327303 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104504943 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080459929 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111970331 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090385064 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118317773 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103284169 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087146145 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107595408 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090026501 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110345313 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088771021 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107081995 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10433761 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093881358 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108559691 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09473066 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.102974285 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079570804 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.106341743 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113561804 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110023284 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112677595 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.110005306 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091717961 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.105573091 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090406347 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110494838 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113344385 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094332388 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.109323987 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107273587 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113108691 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1053565 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088881026 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117861121 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084469021 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.106956002 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102507103 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101478518 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103073043 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086945323 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102004875 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095630879 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108392018 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104894938 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083836601 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113272575 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080689518 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109826158 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091545695 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105087628 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11453871 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097685861 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115322058 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112525853 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.096795137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105759309 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089525519 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101409401 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092711242 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107204046 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112246607 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080605714 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108318179 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088838588 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110443243 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094273301 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102805422 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110176102 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09613125 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113069491 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084976774 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10252358 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089661048 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.109172611 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114466189 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093969708 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103744213 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085371924 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.103415483 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090801237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10992057 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110549666 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097615855 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10932491 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080788286 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.105838189 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115906698 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095179321 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105354507 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087622786 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110267533 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105609919 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085871206 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111506764 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089190297 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104847785 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091608866 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106386811 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.085102542 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11494681 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10891318 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085623863 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109655623 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095416464 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107030589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111071763 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085906432 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112045698 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092624229 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104745495 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086332102 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104033642 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115365171 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089000663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.103752886 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083743846 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.117337328 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084530179 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10988457 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104565851 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089381635 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111846349 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.088457456 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10536414 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088269292 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136886222 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118576932 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092468501 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110586389 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115640555 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090689239 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107037742 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.091067597 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11183201 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092590489 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113894828 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111107261 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096984043 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108265107 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084190177 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111154256 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113591448 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086254032 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106822527 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085541205 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109809524 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112581629 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091382409 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110509974 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085600295 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106026956 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097134222 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109805481 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.109893537 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086365777 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.111458531 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086810883 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118310152 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111758868 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096686199 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109366114 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085689007 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114858128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104201128 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093256967 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104623311 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084539324 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104592329 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092474655 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105190405 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089864729 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099675068 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114074992 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095768141 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.1059258 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086899003 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.110157575 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096610102 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108102499 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10988639 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091413685 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111166175 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100483514 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106116584 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110044132 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096778326 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110328925 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081052034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111623377 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085887028 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.106042146 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.104919943 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085274463 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109740458 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102046166 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110731469 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099628909 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090436369 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104998007 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086297395 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.105238226 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094029024 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110103562 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089287364 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116479549 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111736919 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092903425 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110675898 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091197099 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111846429 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113282709 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091272866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111117413 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089660652 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105798328 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089003225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105269818 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.108034363 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088687087 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.111653908 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088276696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112233534 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090092149 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106059095 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10935198 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09236416 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107536506 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087872008 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105476674 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090896992 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107122622 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087436266 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109720532 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.104809437 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094973449 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111176391 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096228338 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107307126 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083830915 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112130756 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109168209 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09830305 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.11155537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.093296674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108267555 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.110528338 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090134185 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115410044 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085530377 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115992695 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112496419 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086998599 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109734921 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087696032 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108005677 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086270671 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108508715 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093034428 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106619523 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106305367 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092978399 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108955964 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088054935 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108887517 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.093953233 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107347302 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108112598 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.082138927 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105392974 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08737618 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.111822283 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095740182 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.112229838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110471257 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086329765 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112795869 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086896791 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.104052863 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102340751 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123510969 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.11157428 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096756707 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106639882 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.108775308 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097201141 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102228236 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086025599 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107723939 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085327765 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116256147 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.112318499 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.104959098 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107174063 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087691558 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104409184 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092756993 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105967002 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082019822 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.107632955 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091252521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109719979 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106193721 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.092575451 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110042897 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093217546 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114522566 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105643929 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089748138 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.112139809 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085330102 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105768679 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0874637 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110475856 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.093562206 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.1051142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.084820981 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.111755353 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109369205 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089472557 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107238694 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090751693 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115050013 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088431178 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110038691 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116768367 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083500496 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109888048 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087397048 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.111303886 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087662794 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112052595 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11206401 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09367614 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115526824 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.091703776 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107540755 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088074443 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10823243 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112006303 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091653728 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.112494872 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088620691 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11312959 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115643443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089262318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108953763 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087290375 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108399221 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092003211 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.113543733 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090274123 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121433176 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10995664 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089531418 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114320121 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092116683 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111322376 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113360502 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090096606 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114568673 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087573932 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116185549 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107458702 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.093415136 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109775085 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08544302 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108121984 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089058672 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107823524 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093615138 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.113647724 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106150271 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088402173 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.108512455 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090339993 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116276093 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116183415 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091046521 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111175809 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086965436 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104978416 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094379985 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105640312 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089785107 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110878945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114141129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090662358 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109252798 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087443344 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115186823 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114685152 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092999395 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106347335 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093593668 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112815302 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091624258 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109252911 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08898906 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110650608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11403779 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090514515 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106561213 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096733321 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113174266 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113247982 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089623237 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10836604 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088523122 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106092864 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.094621655 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11071682 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115675463 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090594327 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107775863 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097953864 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10764887 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088461297 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116377237 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106956384 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096274844 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10679508 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089539332 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113843438 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113774594 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086990143 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107582851 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08587058 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110119105 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087969027 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105909975 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099065206 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115909473 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110241231 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088500282 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10695779 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.087981633 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.107008248 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087914579 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113500496 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090626665 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118543485 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107036775 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088000414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.106547338 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08931062 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111545914 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091408002 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106645931 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.106815761 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086919313 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111266327 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09636317 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107825247 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.092852548 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112522831 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11102267 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089574919 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117808497 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085407765 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112517461 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099308832 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.1155073 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109220243 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094052225 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117386127 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.094262507 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.106213595 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113471321 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091423093 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108425851 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.094407086 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109451289 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122595477 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092058521 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107487995 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088390686 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111361137 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089002494 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11660862 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113904704 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.094283778 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113336929 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090712452 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12396498 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111290477 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095276097 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110748541 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09123397 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108173775 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088032241 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107189111 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086228342 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111833049 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114049097 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094660101 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122714515 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107847542 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099344141 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116332708 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093825055 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105210379 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088271614 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108319234 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086685275 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.114480716 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106589751 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087558179 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10715522 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088815823 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108847711 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09465236 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110900743 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.114733215 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089230127 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102993424 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090810458 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111230642 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089572237 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10455375 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.093823033 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114795651 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114616686 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099908384 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108673038 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090338266 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110273664 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089846293 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.107667174 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115776699 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088106511 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111850067 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088365034 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109191119 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.094538117 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112704324 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120051746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091081613 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111266939 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.102557226 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116183325 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106033453 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086514444 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114392637 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.090726101 seconds)
  done (took 61.618925086 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154450728 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094140236 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103915466 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085395465 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122556953 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108268688 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084666453 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109205913 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088932468 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111226298 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084044672 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105238912 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119165853 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131728884 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123627917 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093855008 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104083668 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089454635 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104799411 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089101056 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119707375 seconds)
  done (took 3.051512752 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109768845 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123293311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122442749 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126873407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096106418 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.122339932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120347959 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122913036 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105950946 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117168263 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12524985 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12233863 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097452741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11688247 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116407665 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099997697 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126210557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115535669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.123407592 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121043019 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099774238 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119967174 seconds)
  done (took 3.368508398 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095966045 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.112547502 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093361183 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.104228017 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08908735 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103405615 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.097659373 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10670187 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112804179 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.086862631 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.107580501 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.087519426 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113099517 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084502028 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108495143 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086631996 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.160707514 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114142796 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.112999353 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090074575 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.107152146 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091164849 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.107522166 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.087106934 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.108318926 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100212238 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110498695 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.109693769 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089275108 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.107412787 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.093371499 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.107651121 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090916756 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109599662 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087201876 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107807336 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088728059 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.113324485 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.107299798 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.089605895 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109337688 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.088100246 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.114089012 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090456379 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.109306741 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08671852 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.111280109 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088960313 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.104158208 seconds)
  done (took 5.810111398 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.122202556 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162124302 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091664478 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15530517 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129300766 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122818868 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092311969 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131425919 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10927462 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.112840646 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108183 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127534178 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112664183 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117910854 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096337418 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112596533 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093921195 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110265656 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117699919 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089212264 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117778752 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.116097909 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12652744 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.104945055 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117803009 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.112021489 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088539527 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.118429605 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124092725 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099284554 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.120900156 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119421751 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127961648 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094825626 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109125142 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.115631505 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109858337 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11430244 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.115349217 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0875994 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.115624614 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11801823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0969847 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129710955 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11376681 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.095197195 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114422224 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106707283 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10462339 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.117385311 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122917808 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127069021 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097538766 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113643664 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118813355 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107438346 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.113898018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.111823606 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.096902317 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123853996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107905939 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.097411794 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126465497 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116074304 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.101566085 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127298717 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115516316 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118629411 seconds)
  done (took 8.709802329 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12120627 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121527313 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13217398 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133025192 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10085767 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122278787 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121291228 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121475422 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100870149 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128623919 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121193541 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.170190218 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.095335016 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126379282 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12175679 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121746508 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102071975 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121745674 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122346185 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10115587 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121633691 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131442289 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.123132998 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132087283 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111065321 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117030179 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121567805 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121633904 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111151229 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121472887 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.132869378 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122611454 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10137766 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132471985 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132216239 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121802503 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091942266 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122647286 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122224666 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122012517 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09566199 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132994967 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121492379 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.095659016 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122520482 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121508159 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133738745 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132497118 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105272026 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128449454 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.122015323 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132773138 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101545411 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12192272 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133506129 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138664102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133612058 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132533046 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101880949 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132456299 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132620073 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.1386347 seconds)
  done (took 8.36709448 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122382596 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.126914029 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.132030149 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106941776 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088125156 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118925074 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088583456 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109451196 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.125788572 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104823085 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128001855 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.119501541 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122520722 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10712036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118679847 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122554323 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119536438 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098718634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12490975 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119179494 seconds)
  done (took 3.143386542 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099140061 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132391015 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091037362 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119649811 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115823125 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097421165 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115573565 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114425725 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092360844 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114384413 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124647088 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103899976 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11270897 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119765763 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103250151 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118102553 seconds)
  done (took 2.611881062 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102691327 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13372005 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131341244 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090184466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109808541 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108777203 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.093167042 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10724267 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087461487 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.128952553 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113060169 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096821824 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.114688789 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088348083 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109434421 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096241291 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108481419 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109176698 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.093285966 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132510548 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123487848 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090530858 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.115561862 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093311939 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.11266359 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117900861 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.091438554 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110454261 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087868243 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115278065 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.111721764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.099929646 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109261469 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089619758 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.111865865 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108989318 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.094696377 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114918918 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.096599376 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.11434827 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110025594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091662054 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.115495523 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091774941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.108307757 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.093775066 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.108828651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117400272 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088937171 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112433565 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.093066164 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.115592118 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.112372512 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.102372994 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11686009 seconds)
  done (took 6.68729335 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106946861 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116066149 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085848695 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110702104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094021877 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114508657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116220556 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093510105 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113874064 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089503996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114373321 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116142199 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093717885 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115882201 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093944256 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115934365 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086463187 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113932478 seconds)
  done (took 2.737311733 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097048352 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111674673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098542148 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112446505 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.091053211 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11564203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107100264 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090985069 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110388729 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092847284 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112696083 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094031881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111992913 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093496401 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11209528 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112482667 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093900967 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110673906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091513893 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107542262 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093465446 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111174654 seconds)
  done (took 3.122285397 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12868853 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132804196 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.098646747 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.247528997 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.110241837 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.141450378 seconds)
  done (took 1.70869599 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117018941 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151140171 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114136916 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096104436 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125931695 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11804049 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096794243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118065772 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128800482 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130756854 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097877367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129163026 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129429997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129507961 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104344087 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125837099 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118067116 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097399858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114177142 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137921963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117783578 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108285521 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119067032 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117318252 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097351316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128661102 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129331262 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13096952 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117605764 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107155086 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125654647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118045883 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12941791 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108958206 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117070479 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12807953 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097428443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137899837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126035508 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12958605 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115552871 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104107859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130412181 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12586436 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129158041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097356346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124357027 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118792944 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097568504 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144532028 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125455185 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128521794 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125791798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129071783 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108332031 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143824635 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129790979 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128610863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126500844 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13102074 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129655059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103925472 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128506485 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132077796 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125801021 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128834538 seconds)
  done (took 8.837716804 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131041481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114928215 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118336146 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13138496 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108246605 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118289813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117733583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096809082 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118939476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113487292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162267152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098783339 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130101572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129881641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119434016 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097360714 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119269587 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129580458 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093384715 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166921541 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098073157 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129397254 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129223568 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130370135 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130655875 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106112152 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118756913 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118510126 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097542465 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119494402 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125889653 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096699494 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130070417 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11455855 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129621122 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097908656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119319187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124670223 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097594981 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126427407 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129663851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138557208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118918147 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098214767 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131522933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118120501 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097221712 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115090664 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118834669 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093776023 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132081458 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131897644 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132145952 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129274465 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097648605 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119806213 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118821304 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097022958 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119551058 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126713967 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129516936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097868597 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144723915 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119883266 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118815987 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129589681 seconds)
  done (took 8.717126364 seconds)
done (took 164.854654876 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108165448 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147045041 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.105471392 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177349903 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109868449 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126977318 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141636174 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.103627662 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.114305254 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091720837 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.11446789 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.115572352 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.156928307 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109231098 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093124196 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115456285 seconds)
  done (took 2.78372168 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211420739 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.284455304 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109328291 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113686973 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.118849683 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092570133 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.112782462 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100980195 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.114584916 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.092269648 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114600582 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093056709 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113701477 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092534555 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115562563 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.113411938 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.093362897 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.114060831 seconds)
  done (took 3.06172194 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121443688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155306011 seconds)
  done (took 1.138229347 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128004031 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193940856 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313337922 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164247615 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.127503663 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136657135 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164040066 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140025732 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.215438395 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132747131 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.133213088 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.126082029 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.129226745 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124703431 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.122321095 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.104801841 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.152880252 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121196021 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101739144 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.125180171 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147255143 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092040585 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123814221 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121029274 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.199777615 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.107054219 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114833587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090700192 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126399503 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.122476903 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099722182 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134447574 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129459945 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176322683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.133792317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169574667 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127520692 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119867186 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.101734497 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120647414 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127742742 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105764727 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135841372 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12666038 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093923943 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127544739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090747006 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.114901622 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121539224 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106657658 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122610524 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120170561 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169732034 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127134933 seconds)
  done (took 8.062001146 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.852357227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164476009 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12100312 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.927534986 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148957259 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133393936 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.820346506 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144244417 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247245929 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.824750931 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140129699 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105856243 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248706257 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.272043271 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9692447 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322215413 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.705403769 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108706231 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.147518926 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164448186 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126337384 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145386566 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115488505 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461670186 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101829018 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119745207 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.102180942 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128425173 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172347193 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.120955024 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097527266 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.209827798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262987832 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215423839 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121482842 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096285301 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11751568 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183420459 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.284967165 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.229196661 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186926398 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093487119 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118174117 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105715706 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13851421 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11557495 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177597925 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.208953363 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.184875554 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11955412 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106419182 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12673203 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126398232 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178919783 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.128963842 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336071349 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336730377 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097304281 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126430931 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130902543 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257921547 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.13241678 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243318719 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145615381 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.205324701 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119572623 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816971958 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175734574 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112844849 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097198999 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120082028 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119752925 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104892893 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176048209 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.418368186 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131521231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121685471 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094958756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242862268 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095877836 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119058384 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17372879 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124103112 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125378502 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109532707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131313674 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.181176835 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.263402399 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107282772 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127285227 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122335792 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107882344 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123954014 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.226105982 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237747541 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.196938669 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226760843 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12640874 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176864742 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180134897 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127742209 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184628719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126884003 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133044591 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10630085 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233765378 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155407739 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.13240403 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121940539 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101681099 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157615164 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121089508 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120599321 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180391024 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494423252 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18201505 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09240245 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119995039 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120260174 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172553135 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124453432 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257108854 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122209121 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176776718 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120779681 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10985658 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104028346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.19689567 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108313852 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127091659 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127733836 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103024198 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26344138 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20353822 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128007496 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251544705 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191307203 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123433787 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184461328 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126553134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.180358918 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126304903 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105151582 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12472476 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811723914 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103416103 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120809252 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116107054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192507627 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091024982 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127136244 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091180625 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111182064 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822368744 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097872461 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.125519955 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.130656242 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101681721 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12363659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124584465 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100145684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.199912141 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248338724 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105078293 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1217779 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.117664703 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17429301 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099614244 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.121002186 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.116989161 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09704481 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120946281 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095534663 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127936489 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.176505182 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.193023736 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.236735426 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545574274 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120254671 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095575433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241155237 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119907062 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30465959 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124945292 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220582104 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.199030476 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105842172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328932157 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.201202692 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197853501 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100049175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203603785 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0922482 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120879213 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172371684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115252371 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099847224 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.192488204 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108794183 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127377765 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.973811059 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113325354 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239015465 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093329997 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.206720118 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097576539 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123891984 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308222845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113611214 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114399434 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.196183479 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099756793 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.120049068 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.868240591 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116127477 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127839931 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103506015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239941707 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.176200604 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127306956 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126349785 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104742542 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.19886743 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.224406347 seconds)
  done (took 46.088380615 seconds)
done (took 61.992425625 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298776603 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228146389 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268560268 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174418136 seconds)
  done (took 1.930988812 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.187846596 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158661515 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.132317896 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116069751 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.162801829 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09157668 seconds)
  done (took 1.738375267 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.39081201 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.292653268 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.257855657 seconds)
  done (took 1.836217819 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262721208 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.281658729 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.339680346 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.437253456 seconds)
  done (took 2.313809654 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.248856049 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.151210143 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.136239295 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.13103869 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.233631059 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.276428992 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.168274949 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201629365 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.148127596 seconds)
  done (took 2.628260645 seconds)
done (took 11.34288946 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.183069937 seconds)
    (2/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.250233142 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.293352234 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.108059693 seconds)
    (5/286) benchmarking ("sort", Float32, true)...
    done (took 0.250601777 seconds)
    (6/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.243582198 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.211979298 seconds)
    (8/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.259763246 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.139714833 seconds)
    (10/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100270822 seconds)
    (11/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205871846 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.13320613 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100853497 seconds)
    (14/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.225301484 seconds)
    (15/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.213810341 seconds)
    (16/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.224193529 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215841202 seconds)
    (18/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.214057661 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164009705 seconds)
    (20/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.238216255 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.18777234 seconds)
    (22/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.188443449 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.223753423 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075758415 seconds)
    (25/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128768211 seconds)
    (26/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.102336835 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.133556898 seconds)
    (28/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099077695 seconds)
    (29/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117097939 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11336242 seconds)
    (31/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.231352634 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.127202262 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.24378823 seconds)
    (34/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087496704 seconds)
    (35/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.166920578 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.10431958 seconds)
    (37/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.099535745 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.103513834 seconds)
    (39/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.19117362 seconds)
    (40/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.224352679 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.192229454 seconds)
    (42/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.128181704 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.165800642 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092816377 seconds)
    (45/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.199914341 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.127224188 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100217483 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.123814358 seconds)
    (49/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101167534 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.14151057 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.143004315 seconds)
    (52/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.1084971 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.195091323 seconds)
    (54/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125369455 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119076821 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.121243295 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.131916352 seconds)
    (58/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15674481 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10412488 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.156515252 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125533866 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.165596372 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227840257 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.212264983 seconds)
    (65/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.139362773 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.131015748 seconds)
    (67/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.073446173 seconds)
    (68/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124963792 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.076719877 seconds)
    (70/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.126119689 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124256234 seconds)
    (72/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.18401879 seconds)
    (73/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.249066852 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.140511489 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.074777802 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.073188447 seconds)
    (77/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.18509235 seconds)
    (78/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.116177167 seconds)
    (79/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.106369023 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.196672605 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.161407937 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.083082333 seconds)
    (83/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.196570858 seconds)
    (84/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090195773 seconds)
    (85/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.181322856 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.079326101 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121074121 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.118415611 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074126346 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09285689 seconds)
    (91/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.102832632 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.147901264 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.122289541 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.101719339 seconds)
    (95/286) benchmarking ("sort", Float64, false)...
    done (took 0.164339257 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131473958 seconds)
    (97/286) benchmarking ("sort", BigInt, false)...
    done (took 0.23762815 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117053935 seconds)
    (99/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.254719801 seconds)
    (100/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.100808016 seconds)
    (101/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.146804791 seconds)
    (102/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.186884588 seconds)
    (103/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143000012 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.127789349 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094587397 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.129703112 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184420252 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.12224239 seconds)
    (109/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.171153329 seconds)
    (110/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.184955906 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.203048199 seconds)
    (112/286) benchmarking ("sort", Int8, false)...
    done (took 0.206992207 seconds)
    (113/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158911864 seconds)
    (114/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.196524939 seconds)
    (115/286) benchmarking ("sort", Float64, true)...
    done (took 0.252421442 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125129568 seconds)
    (117/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.120157624 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.198308303 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.129787564 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119527893 seconds)
    (121/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.073216027 seconds)
    (122/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.194794662 seconds)
    (123/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.134003739 seconds)
    (124/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.126249982 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.143558683 seconds)
    (126/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096957044 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14604808 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.098277681 seconds)
    (129/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.097488291 seconds)
    (130/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.107360648 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.125439796 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102481858 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117717084 seconds)
    (134/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.073963658 seconds)
    (135/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.150288307 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.145802319 seconds)
    (137/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084838059 seconds)
    (138/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.154790924 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.103827401 seconds)
    (140/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121391687 seconds)
    (141/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076368919 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.126421995 seconds)
    (143/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123777471 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.117791232 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.125531066 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09458076 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.07769993 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.11284856 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104336859 seconds)
    (150/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.163884497 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104450182 seconds)
    (152/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.098618605 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075754193 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134199272 seconds)
    (155/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.074872581 seconds)
    (156/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.12830547 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075575846 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.12433898 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096105778 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.118147248 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10602483 seconds)
    (162/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.129334486 seconds)
    (163/286) benchmarking ("sort", Float32, false)...
    done (took 0.190584613 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094334733 seconds)
    (165/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13054866 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.105007106 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122276221 seconds)
    (168/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.096779481 seconds)
    (169/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.098366112 seconds)
    (170/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.161246491 seconds)
    (171/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.127497764 seconds)
    (172/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117156552 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.122074534 seconds)
    (174/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116662909 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.101483547 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.145739122 seconds)
    (177/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.126150958 seconds)
    (178/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.124775297 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.129117259 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.148984704 seconds)
    (181/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.075412263 seconds)
    (182/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.075447405 seconds)
    (183/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.346929445 seconds)
    (184/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089421006 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.2353837 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117944408 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10423102 seconds)
    (188/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.166381897 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.131102904 seconds)
    (190/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094268198 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.139550557 seconds)
    (192/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075931721 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12769943 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.103224185 seconds)
    (195/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.118913035 seconds)
    (196/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.07436403 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11824992 seconds)
    (198/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098611439 seconds)
    (199/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.10875403 seconds)
    (200/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.106955458 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.126044078 seconds)
    (202/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100727001 seconds)
    (203/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.097997241 seconds)
    (204/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109989482 seconds)
    (205/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.107113546 seconds)
    (206/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.142466891 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.100607412 seconds)
    (208/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094289938 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.116949419 seconds)
    (210/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.143414501 seconds)
    (211/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.13304752 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09843094 seconds)
    (213/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120916153 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074820866 seconds)
    (215/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.098984211 seconds)
    (216/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.090560811 seconds)
    (217/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.073327799 seconds)
    (218/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09773966 seconds)
    (219/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075217842 seconds)
    (220/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.131735382 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196757043 seconds)
    (222/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077115377 seconds)
    (223/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074659625 seconds)
    (224/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.125262314 seconds)
    (225/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078512618 seconds)
    (226/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102151842 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105527324 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116825779 seconds)
    (229/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.151175458 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12216729 seconds)
    (231/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100754026 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101088717 seconds)
    (233/286) benchmarking ("sort", Int8, true)...
    done (took 0.241884911 seconds)
    (234/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095239302 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183837127 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.127754713 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093738368 seconds)
    (238/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121381534 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.103383884 seconds)
    (240/286) benchmarking ("sort", BigInt, true)...
    done (took 0.258941079 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193843874 seconds)
    (242/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074552695 seconds)
    (243/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.100336274 seconds)
    (244/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.096934952 seconds)
    (245/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.127752315 seconds)
    (246/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.075723876 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196157395 seconds)
    (248/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076873917 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117711476 seconds)
    (250/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097637742 seconds)
    (251/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09836771 seconds)
    (252/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076839494 seconds)
    (253/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.073746356 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.101757976 seconds)
    (255/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.074780304 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117650511 seconds)
    (257/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.13961857 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.126234795 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094587355 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.11760185 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079075807 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.117392443 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093223689 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.142560972 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10314741 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118042347 seconds)
    (267/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.175415816 seconds)
    (268/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.10054533 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.102233617 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095446025 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.125201736 seconds)
    (272/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.07499118 seconds)
    (273/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.144086604 seconds)
    (274/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075005935 seconds)
    (275/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.074852565 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.118638698 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094102916 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119861546 seconds)
    (279/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.1000798 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.127500338 seconds)
    (281/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.07391126 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11947679 seconds)
    (283/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.074692163 seconds)
    (284/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12804791 seconds)
    (285/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.112651791 seconds)
    (286/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.099349289 seconds)
  done (took 38.947335468 seconds)
done (took 39.848100242 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.110180824 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163724055 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103597401 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.150409629 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132786497 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099619827 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.127205109 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.131715731 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.107618369 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.134781039 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10672773 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101250893 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104871352 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.13009503 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.128754862 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128058666 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132776642 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.102436449 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.128314838 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.118953477 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.103517529 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117716928 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.096300766 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.101328468 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106647365 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.126426051 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100874343 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.128967188 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094529846 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.119723062 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099908749 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.126560167 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093123707 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.133628829 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.125280309 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.103198941 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.130123788 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.105100182 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.121082783 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093605356 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.127771575 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094316005 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.127070119 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.127209597 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.100893748 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.124273851 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.10512421 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132581663 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.153724222 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100281601 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.127309403 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105957511 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.129346931 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101503573 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123763086 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103365674 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.125963361 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15351986 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103725714 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12516495 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102257622 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.128845051 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09994564 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.129121389 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12778723 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106391246 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132453473 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100249254 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129739622 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.10075534 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.120349669 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.128794804 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.098559712 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.119304426 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.104926263 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.130371552 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.09437764 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.125313539 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.102066218 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.125076289 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093545791 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123231011 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096135349 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.12602532 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098249816 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102072885 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09959313 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.125738303 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094306876 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128722801 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.125745552 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.102075336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121712358 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107367231 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119490975 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.100401019 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.119502172 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.094692136 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.121673036 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.099033429 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.119509337 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098552147 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.128720696 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.096030114 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.12611547 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13366546 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095068112 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.125579478 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094387144 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.118777877 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.110506286 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.131438036 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.095026637 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125787362 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.093014179 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128598949 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11919734 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095581939 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.119731189 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095206008 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124756153 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.095490591 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.1222895 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.102713056 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134419489 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095452181 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.12411409 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099155068 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.120131221 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.100337052 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120140036 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.09499158 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.12234845 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086224408 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124032731 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094688598 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128119411 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097891851 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.129280299 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121640236 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104558238 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.124389137 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.102330949 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.126103737 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094828118 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.106753031 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101586064 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122784543 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.097070025 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.119768021 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098052454 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.120104041 seconds)
done (took 18.328987465 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095491744 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.197818615 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.16762666 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.15720674 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116367433 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.121153896 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132067181 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.154523148 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.097997585 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.154854086 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145549097 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.116952193 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.162056105 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093986615 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121069627 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099092892 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122890156 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137191852 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.135897641 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143687691 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.176714214 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120874639 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157962017 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120344494 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.132252704 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138935121 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.096671102 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124128816 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099559274 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146901965 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.117028817 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.124975963 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095463477 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.144981969 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.139182622 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.104660652 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120901221 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.103263212 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.121853434 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094991732 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.152183537 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144819799 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.126395089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.102583073 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124415518 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.098876938 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122444448 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105623292 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132612009 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125693275 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112415165 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.169614338 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124985361 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.131959328 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.095187984 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.132079222 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106160699 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123783197 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.095734477 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.12349233 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095863566 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125120042 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.137573677 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15168377 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100492641 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.132548257 seconds)
  done (took 9.293698466 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.13169002 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.151539025 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141141793 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115236947 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120710674 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.097246334 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121320088 seconds)
  done (took 1.83920002 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.096268402 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148204225 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12290752 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148817154 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.146617195 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.123789578 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128235877 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.09652713 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144806802 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124054736 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122375817 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165618203 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097931883 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132042102 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151907843 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.097162111 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.150317275 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095873394 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126856143 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150683938 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100673085 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.143051969 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.098865324 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.122899021 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142188873 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096404054 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171574038 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101909455 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121348718 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.127139581 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094800741 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.163662092 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141683559 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.105816158 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123144866 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116712326 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140994032 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094575444 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140097871 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.128259832 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.11621807 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.123901596 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098755116 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.120930791 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102734873 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136456818 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.100940892 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124612039 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099284496 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149987937 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.123869855 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115783126 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.124069431 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101951456 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124862734 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101042309 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134169072 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098806581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.148621279 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121224058 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118180236 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143375513 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141236828 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.118444922 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126487725 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.11628566 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14103048 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100360369 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125026178 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.101415775 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144439667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121109388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.100562004 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.13753287 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099293626 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.154076919 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.152985071 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098933376 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.135799369 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095884014 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121912934 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092301874 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.1469787 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12266843 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091957807 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12044599 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09486257 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114243903 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092527296 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120340294 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089668727 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117639352 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095804601 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116504076 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094032784 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136325268 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119864175 seconds)
  done (took 12.739719217 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095346819 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.12227973 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095214407 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117212446 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092557763 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118163798 seconds)
  done (took 1.608648925 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126594275 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124650989 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13556616 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101120766 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164721559 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137338065 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.117408571 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.134134458 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.144129337 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.112531245 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141968282 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.117060365 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.150090496 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.132464643 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.117286574 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.131249746 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.144753531 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109321664 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.137675371 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129585059 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116487581 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129571983 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098847904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138564438 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121719406 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09836782 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128470802 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13048638 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105070402 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125907445 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123291646 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096762852 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124565124 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101525333 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135840632 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.125667854 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098238406 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121079251 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1282257 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095877325 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136165825 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099352516 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129561197 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122742962 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100485139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12397091 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12201925 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103499207 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136259729 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122038871 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097199216 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123316493 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095698595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122464522 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123026896 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101506738 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121279392 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110156785 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124037502 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124362986 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095741303 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121415143 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126482677 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096188016 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132186032 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096387334 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124375728 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124268525 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099827228 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.124172519 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096153677 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120689001 seconds)
  done (took 9.621195558 seconds)
done (took 36.055732036 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.702440388 seconds)
  done (took 1.670408626 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.838828751 seconds)
  done (took 1.809474618 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.081714692 seconds)
  done (took 18.082848233 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510724118 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602995738 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.997201992 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174490607 seconds)
  done (took 3.253579578 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.95497283 seconds)
  done (took 1.947236509 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291243533 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238502327 seconds)
  done (took 1.504203625 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.785235128 seconds)
  done (took 1.771626564 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.471519943 seconds)
  done (took 2.454710617 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33384136 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188625708 seconds)
  done (took 1.517529169 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.584736917 seconds)
  done (took 1.567388319 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.062185243 seconds)
  done (took 11.052818848 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.274867513 seconds)
  done (took 1.273650882 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306031544 seconds)
  done (took 1.293245379 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.555574557 seconds)
  done (took 4.545033271 seconds)
done (took 54.723558721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.107305415 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129527009 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104477453 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126749448 seconds)
  done (took 1.449069211 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110539687 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128793489 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106287072 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123630773 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132451112 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098180421 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12622989 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103495505 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123076415 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.125662658 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098380196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122156104 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10222248 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125265381 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095449783 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125529446 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127873169 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097860488 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.129143421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098362325 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121318387 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125504986 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102018319 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121714068 seconds)
  done (took 3.760359446 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109441976 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.127488779 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098137321 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120628534 seconds)
  done (took 1.449289997 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.108745766 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13993395 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107996898 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.1278236 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134023188 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109676549 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12013143 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094785154 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122219007 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102318639 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118208325 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.143604902 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109126904 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127121771 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104356579 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116443172 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118903707 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109685645 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127492248 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103779806 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120432196 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101793406 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118865403 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137131217 seconds)
  done (took 3.816888039 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.179893139 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129327602 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141965297 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.098179847 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163319552 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142984184 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090826168 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142867884 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.091867837 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133030671 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120360506 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136859272 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131047814 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089974191 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11635871 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114667066 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104644616 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129721398 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093090633 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129454996 seconds)
  done (took 3.476397354 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104483835 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120416987 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090138578 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11805192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100895969 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123113497 seconds)
  done (took 1.654281281 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.103436726 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11647905 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095500609 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118030084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096056467 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114960193 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090310064 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117889276 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091999739 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115551961 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092960178 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115186331 seconds)
  done (took 2.268388592 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.516668052 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123636774 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122817219 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09128584 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.128701778 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091552639 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.13360641 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094375985 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145856709 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089710047 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117804907 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.120337677 seconds)
  done (took 2.773205356 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239491793 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127618866 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290775769 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360760041 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179625666 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171766159 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.308064685 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168250492 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.213353052 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160547998 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204601352 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208104577 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132049842 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237830867 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118190917 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.149250302 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223198569 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257825028 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155278791 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248869742 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174716016 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171897598 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185443019 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156979487 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141955797 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177012329 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.097228233 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1328658 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218213357 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183909752 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195130611 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167162976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159515228 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237523922 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266239826 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200394177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287452591 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136721472 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172016766 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173757883 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240150623 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144466631 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244697492 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167309708 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106656111 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241774755 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163163728 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188145245 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149977436 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145693212 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207343216 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227593878 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204672461 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141391337 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311552727 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157538478 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168148683 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193918821 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247197666 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233938648 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200164819 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096920868 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219869237 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198331589 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192074372 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162920012 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.215265017 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149198022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182654878 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201237178 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183453164 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17576274 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21448744 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141235698 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174948267 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176988351 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174705288 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270334644 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192518391 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125043061 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171159813 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153774653 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107619523 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198585341 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129253439 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225069459 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147118088 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16724933 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215005024 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162236605 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165557996 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218260936 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181119878 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151226324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08604778 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158914668 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159210133 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177434795 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143755168 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162441972 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154808102 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107425114 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173652448 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128190758 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190583079 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.12074908 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173215618 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189658273 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130047235 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168952981 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154280134 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127506912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214959375 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203581372 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14588102 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108938326 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242588119 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186496692 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145526418 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182274714 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208775172 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147241668 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153192721 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235172268 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221860898 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14790579 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207144976 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151910204 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139021292 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136145974 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188623742 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161370648 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165729744 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135809361 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189420046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205185947 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128547818 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141256797 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207102172 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136825648 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135309671 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122468546 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152875959 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140815525 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14570329 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149275937 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181134001 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183384547 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158373318 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171189078 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151638065 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248432005 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143493683 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127438984 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151949164 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123590457 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203979199 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204081957 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134965859 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205437072 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.200978904 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202728227 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171415457 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138213152 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182414315 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132890063 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095941343 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229810445 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169542609 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166372134 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199994962 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226707774 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189085543 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188578655 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169590917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178928505 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170665029 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159627345 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142415647 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164873422 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162873805 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125750215 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11723875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137174667 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153854741 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147297437 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10893113 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230313256 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177012788 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220546144 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136797376 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154003421 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213565921 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105712457 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177896884 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207795336 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123273553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229002108 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19805386 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221212717 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120120116 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239876551 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095057076 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128406393 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146283704 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173234732 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13933014 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111182858 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168133655 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214242623 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182446773 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176855357 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239174666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185984294 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197565835 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124786449 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144830786 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181822746 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208894992 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157679756 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14231338 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154827721 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18306741 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153118757 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244943677 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17075323 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180838562 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206703848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154980185 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134835923 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152436801 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176302616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159998543 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177191888 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148233656 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115102301 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157624669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133910965 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164041515 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184314524 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165741547 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21285512 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125337228 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22325661 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130833289 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169107732 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164126343 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167075299 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083717369 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173671311 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227401672 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119083098 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163794203 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212543684 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106564488 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314227889 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232937177 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192447865 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142180621 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160779477 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166326845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166545764 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169886901 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183399715 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164786859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192621709 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163329337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139823234 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140548161 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123874268 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15693941 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136345608 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150157097 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.182075309 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140432236 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188272578 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150598401 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162491409 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178488724 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152803165 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120818478 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155557122 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249157935 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189066767 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197018707 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154279298 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179983264 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236678152 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101327615 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135583054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136201501 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183554072 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111037014 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227511431 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192369825 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230502882 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189467587 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177628575 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142795484 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122051576 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134119837 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203169532 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209899292 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149688628 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153055937 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202448041 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140774664 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134449686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142923998 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319307378 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148660177 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191698081 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080857266 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286662695 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127601544 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135831446 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165587364 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19036187 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139363346 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155956484 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170360269 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155989425 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166436707 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153663987 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222758771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218952109 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236489279 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188246662 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107678222 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161456817 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199551173 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190454383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163779925 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112990871 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217848647 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199625068 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197801818 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.147084014 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172150354 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170962613 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162675095 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224557266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109699839 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236223564 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110570002 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228258689 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157824239 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143380313 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17747806 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19362248 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144535083 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184821653 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216183279 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11112771 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136041163 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164626363 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183233241 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152275788 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131511373 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183774329 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129320428 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201168577 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271395145 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137120733 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157146994 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12046724 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138405193 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161887297 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164265588 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142327004 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143363663 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223754701 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136975605 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189554484 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238094178 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174207467 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170801132 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149043272 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.71353504 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106380148 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225038415 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123657149 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21431242 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124897886 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176098054 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162984423 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171233533 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232139369 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161439654 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235165147 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200124603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.211368729 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107490237 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163956404 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151280946 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148702739 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158162522 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172119145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163712861 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150039954 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183285112 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161437456 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136168647 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114452446 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232756749 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151407716 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187638175 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184628995 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14114416 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177558721 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197763539 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136832198 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.185937202 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21792952 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11694253 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153671221 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138282088 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155580141 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27401414 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099724748 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216965738 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191912274 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163509355 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173530772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151269321 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200099073 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16213628 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221037514 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147153279 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159869777 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132879749 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140693078 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135248652 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158606409 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170262002 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152932953 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165520182 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143416457 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221894439 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098876076 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14912521 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292515324 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177514673 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248701028 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138087521 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110125905 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163362281 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151534473 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.182584877 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183332023 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139339217 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139039063 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138160998 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135146728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139888528 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160829772 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198209763 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163463614 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207838678 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140805871 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285500156 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143238656 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158277712 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091520269 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136933651 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155056458 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121291568 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153069001 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223992426 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272492413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121508996 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.137443102 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155332685 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128113013 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111898337 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167139638 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165514789 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183590691 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145762858 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111766829 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161666175 seconds)
  done (took 84.10615839 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170903111 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136092132 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151147718 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204879571 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181268996 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294300523 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212158907 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259482189 seconds)
  done (took 2.694863942 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096270241 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154825202 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.166167568 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1356488 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093231887 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121718304 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.356444451 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134816263 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093128517 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.151420058 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17580894 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09726996 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.636969137 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.122006965 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121937276 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.157487406 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.119621265 seconds)
  done (took 4.014491646 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.221435218 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.479802347 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.028475572 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.213246077 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161317164 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121592707 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.69334564 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117487797 seconds)
  done (took 12.125989736 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126553439 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151672285 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.143319357 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.173218663 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.155835785 seconds)
  done (took 1.847867738 seconds)
done (took 126.419758188 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105968894 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131370416 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100734995 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132472776 seconds)
  done (took 1.552909252 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099492086 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.075015055 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102888199 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076567152 seconds)
  done (took 1.444337645 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.195489276 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173648009 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403641053 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073398119 seconds)
  done (took 1.601516586 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122209573 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13715447 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107215165 seconds)
  done (took 1.464031061 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10888832 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131957007 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105207807 seconds)
  done (took 1.443638704 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108178651 seconds)
  done (took 1.203299682 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112457433 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.143603998 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114316377 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.140920817 seconds)
  done (took 1.607443492 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104214989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129077503 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114039034 seconds)
  done (took 1.441098223 seconds)
done (took 13.221030477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107918602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426271943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419123791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111830918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727969699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382275258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.052571466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148446401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172870844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0990334 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141625326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673621545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.043117591 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3755229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001810912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.468976231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704252414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094172755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12147952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095851209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.036266153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094075533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123388847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093736206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704400026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428433101 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096529102 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.468920193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094186537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13215555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.420854769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096098745 seconds)
  done (took 17.235432544 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105076416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189095235 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135187159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096738912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130223714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098468101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126393311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095846752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185750459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127558492 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143562495 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095125704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127761641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096498055 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144321505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094540115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124105493 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121918091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095374063 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123339018 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113656816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122589675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095875904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12281149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095405905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136972066 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124665367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095028782 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123428635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103212253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126465703 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096736746 seconds)
  done (took 4.917000416 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146472932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191706722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135176471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12882268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176253543 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12540736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.203371198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148471894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189311906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096697495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142509097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094728479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159020804 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125410449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117132113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123806313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096851512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122894773 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123289789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09652123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141934208 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094688307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12452138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094363674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124776266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139070757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09732666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123731831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095327204 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133102182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098363602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125045042 seconds)
  done (took 5.240283027 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099204396 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129092203 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111452322 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141334273 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096689043 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127024313 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09880382 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126006065 seconds)
  done (took 2.034367911 seconds)
done (took 30.527267947 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112850691 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128437275 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109241384 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136988468 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104874518 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136752735 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093378716 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135286303 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138987757 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103002217 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145750396 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093188718 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124878697 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093790015 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137092609 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099951376 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13733685 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132532612 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108965569 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137262726 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096994221 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136120759 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105550287 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138723733 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137155943 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109291652 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142785625 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101943806 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127301592 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095828744 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.12909312 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115762487 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.13633913 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.148568104 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.108111001 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.134730245 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09920517 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.134934185 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108792297 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.139140689 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103394771 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13547196 seconds)
  done (took 6.197929546 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113694575 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.15154412 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112781257 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.090388219 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.125262743 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0829243 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142449936 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088062928 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.117876608 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112479064 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.111137477 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079243689 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080299912 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102975275 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078703949 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077051843 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.11070244 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077290363 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078189745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107725227 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081762401 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102648758 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081192408 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079193653 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105197425 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083590296 seconds)
  done (took 3.687467108 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102849396 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143606063 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115727525 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.177233395 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158951819 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.1024736 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136622181 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141592452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111454981 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123203469 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098749637 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153206417 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112167376 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130623397 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.126794705 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110217291 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137673889 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096760224 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134727411 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115437753 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140638422 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133780577 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114550339 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134873953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094096912 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125492519 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102189619 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137742668 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.129907616 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105057882 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129921174 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097883727 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125277238 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107103632 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129309998 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124675852 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115131857 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137813814 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104779219 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.125693407 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.103136764 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127586341 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145513255 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135649174 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124507452 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102530026 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128115085 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134154537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096980626 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142183959 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105346693 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123914878 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09832382 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125508833 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096428291 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140353777 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103853936 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.131198359 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132337434 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100865365 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13680157 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099709148 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140826192 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095603159 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132176539 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095982069 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124568333 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09360213 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146546169 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129685477 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134767935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125593981 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124863707 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105239257 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132502939 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102159791 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124446811 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110648693 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136979786 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097929134 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134438236 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126321374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097840821 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141642603 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096980489 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126891086 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095892816 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131910922 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097042266 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125389201 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138373879 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097084802 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126977795 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108349279 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125407803 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095889264 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132197639 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099357311 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123460618 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137494913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100887733 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125308924 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105484107 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125343282 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096656888 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134258612 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128766844 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094893609 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128696772 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101350317 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125614345 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099023109 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127510604 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09782037 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135491424 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101764737 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129871 seconds)
  done (took 15.174303099 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235253498 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224753136 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191617876 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302961511 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137427782 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.120327313 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.219895278 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16192603 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.127640064 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163724958 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173593041 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187520808 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144269099 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187780358 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.174539076 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125147224 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143578022 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139312094 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.250924967 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.269513635 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146226607 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103077692 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164635896 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16374695 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139007033 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134063843 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112058047 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135867187 seconds)
  done (took 5.905321618 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111123407 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158149938 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100424024 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147102882 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152859543 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09543676 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130370724 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.125820615 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108968983 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1392664 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094617492 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13148051 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132198342 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105071632 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125135304 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105605825 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135329283 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096783543 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129288751 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100203017 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135880558 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134937635 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099753593 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124870058 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105415513 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124778788 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087984028 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146268271 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125423045 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117253621 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124436869 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103732378 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138950474 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125930131 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095706747 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.127801421 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098012133 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126565953 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097965821 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123458082 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094390634 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109139709 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094644639 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139689548 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101506182 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111754983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101975022 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131943669 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096424209 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123764726 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12721546 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099285853 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128011357 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104395044 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127636459 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096678814 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128536755 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087723152 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131015098 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.097235492 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115835463 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094526221 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129875601 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090881614 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.1337043 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.1011985 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124862869 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098251285 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.1313424 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102120017 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12801266 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101500775 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123526802 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127562369 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098443138 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130869269 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098469019 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124085832 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095630981 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125697811 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077473631 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124986691 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076039651 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127500607 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09518142 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123339064 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097940669 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131036881 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111535495 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127211673 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135231747 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096724234 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12322432 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099518093 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114369209 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099471586 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140655733 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114304228 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126436945 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123884848 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109966741 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128032231 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094908678 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107187602 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105391648 seconds)
  done (took 13.238396766 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132359353 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156225986 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127390953 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.114423379 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159254692 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159587568 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102732185 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133353555 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097137622 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144754016 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096511665 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136363997 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095590911 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14093691 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159140263 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106837263 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128150684 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110081361 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130219911 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172234606 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113897217 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14571697 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143016761 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096807018 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132522078 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112417046 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163886581 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.140226481 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109474426 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145441896 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110673966 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163553988 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146400173 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099476533 seconds)
  done (took 5.567536325 seconds)
done (took 50.877872968 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.230890522 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432318246 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.206766024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.067482155 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.254452654 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.247983626 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.216639343 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.205437037 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.213503254 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.209437029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457614652 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.731394706 seconds)
done (took 58.600564209 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.323397645 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.360928488 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492850837 seconds)
  done (took 3.979247574 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.756825002 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.162219963 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.468504444 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.209155438 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199162403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497866285 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.911718898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.589361671 seconds)
  done (took 28.164899561 seconds)
done (took 42.349821441 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221645967 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.252569193 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.235760709 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.179297475 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309165416 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.233694955 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.551409505 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.225258255 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.222823492 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178506031 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.235811846 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.211522403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.215739888 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.542015191 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.222633356 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.213338755 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.228576403 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.701958746 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.605354123 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.204047968 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.220933239 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.268025803 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.219984485 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210474866 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.235431855 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200557671 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202564746 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230159421 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.789941038 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.214638165 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216774081 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.699432696 seconds)
  done (took 190.825318557 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.211402029 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.266640956 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.360831098 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.25940488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.708317526 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408698692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.352670078 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.790806668 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.228354139 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.22521181 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.528558199 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203231333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.57143683 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.182556769 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.240087068 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.272386554 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.394702409 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.569585589 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243022253 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366278294 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.23711773 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.447887282 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.354901483 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.455469549 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.241617855 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.251742754 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.241145177 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236363864 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.401041313 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.326747944 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220430804 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.231747247 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.830574534 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.06451286 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.23399334 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.251267544 seconds)
  done (took 150.540595833 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210251645 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213187251 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212658956 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24410431 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210658615 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798137576 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778966244 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.715541596 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.357338755 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211341238 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.595755808 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.507805002 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213446335 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308003212 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218349457 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204269846 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228850983 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.249548079 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216202161 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215017669 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798456848 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.226256976 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.31891327 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.405223763 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22135798 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245825292 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604343439 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206690398 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243302167 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546696117 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253047635 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208316306 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.614056642 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.051482291 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328328109 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208319094 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247716078 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214072201 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.494542185 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207807933 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.20476139 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216042078 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218093546 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.900376936 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.21669928 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.793079471 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.217154292 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188270288 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214440922 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209534601 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214787025 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.433996495 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.921064955 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23218152 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.211349296 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210768286 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210343225 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210427421 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.245368399 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.393580265 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306531784 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.231581618 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210692677 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249601257 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.215660499 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.294271239 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230365458 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.483781414 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292386598 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312902166 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795509838 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.217160448 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315491936 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330332288 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206859696 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215383849 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210825627 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.216445818 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.325913971 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208522802 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.621921139 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.384624998 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.226827833 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.604138175 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.313237796 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208696172 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63078941 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21835614 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21179287 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963271443 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306536181 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20973503 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209081971 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215068637 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.624687852 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777497533 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.471636788 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21772329 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.476472733 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218085935 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.641047572 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.769850119 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904838693 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218717525 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32923289 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386329882 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227179588 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.209258816 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.597242341 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216873045 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.274163324 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209907607 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209483663 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.617124038 seconds)
  done (took 367.142902254 seconds)
done (took 709.637335689 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.838235406 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.831684569 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.948269498 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.830160794 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.793508192 seconds)
  done (took 10.3765002 seconds)
done (took 11.511012784 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406744667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.396825234 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271951179 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400541077 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241460443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.417865811 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37635972 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228903549 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315761825 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291967909 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316600124 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263630678 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.25331286 seconds)
  done (took 18.319245361 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.573573807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541198727 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273662783 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538664064 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249799503 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533544068 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419855932 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426384707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435037141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248113271 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231772841 seconds)
  done (took 16.609218462 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5478961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527872142 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280115485 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.57121886 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25208793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545804048 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432890121 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.437130539 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42970566 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244802768 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224027646 seconds)
  done (took 16.625827797 seconds)
done (took 52.690024262 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.226302591 seconds)
  done (took 2.36459884 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258530686 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.425715116 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243496641 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230869037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22724371 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226709165 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230730812 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223697291 seconds)
  done (took 11.207375471 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218758003 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217895802 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219463275 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217698977 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223929399 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220673263 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21780845 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22192598 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.221454423 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220102778 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.221443823 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219622227 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225762403 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.220834291 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220714013 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221494374 seconds)
  done (took 20.667642796 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.2250957 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218478493 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21850437 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218829315 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218102184 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219350455 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217211304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.21693545 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219021946 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218763432 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219195195 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218210271 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219175385 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218118389 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218578688 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221126633 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218111996 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221050195 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224456911 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218405536 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221192263 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218001363 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219265575 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.2196699 seconds)
  done (took 30.403400744 seconds)
done (took 65.780405152 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.858465905 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.920709034 seconds)
  done (took 6.914501608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.28161742 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.281264061 seconds)
  done (took 3.704512067 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228820763 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.22929226 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223800233 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224073054 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224155948 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223947418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22492259 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223418701 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224303743 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222012515 seconds)
  done (took 13.390081094 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225446302 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224672043 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219971763 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225194999 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225587903 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223330656 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224756167 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223754041 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225581617 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222059039 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223530336 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221714096 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225749812 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.225832334 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.223739309 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.224290945 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.22352353 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222887501 seconds)
  done (took 23.173363551 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22597641 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.245237423 seconds)
  done (took 3.613784998 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.352776781 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265646491 seconds)
    (3/7) benchmarking "month"...
    done (took 1.331397421 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318971298 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.263684043 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243034281 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263663335 seconds)
  done (took 10.181596148 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226560297 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.399398112 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.511378859 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.850187696 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226090949 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.228516951 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.074491824 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231954162 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23212336 seconds)
  done (took 14.122743879 seconds)
done (took 76.240313646 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.25280432 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.235374915 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.537852573 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.229174547 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.258042971 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520226073 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.230216668 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.360917714 seconds)
done (took 37.769083889 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.240667395 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202223367 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.036780602 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.228114123 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.349450072 seconds)
  done (took 18.956990981 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.281198844 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560462433 seconds)
  done (took 4.983644909 seconds)
done (took 31.322821456 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230022171 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.227840368 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.235344012 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.224655271 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228754859 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.2250166 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227898492 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.228714418 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230907315 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.230524775 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.234751157 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231869504 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226398467 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228718918 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227594171 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231112607 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228180488 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230639311 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22558303 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220832887 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226510906 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230686699 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227325037 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226911341 seconds)
  done (took 30.625083224 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.232157587 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226395469 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.232741499 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.233666073 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227577081 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.232188991 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228319461 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227149161 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229374011 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232917393 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225661523 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227042828 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231644115 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228202299 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22847383 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22880073 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229914028 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22751412 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228492178 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.232170023 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231479675 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225158093 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.22382865 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229516088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223543341 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220952464 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225005676 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221460876 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223968211 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220968389 seconds)
  done (took 37.976382724 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231647917 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231987311 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222819145 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224960081 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225978287 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225126752 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225636016 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225527478 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226926976 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230691857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227737886 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224604601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.224419234 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223850689 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226208166 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226665983 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226133245 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224788793 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224992885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224057369 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226925894 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226485457 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231630187 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225923009 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22318274 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226092659 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226395558 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228631328 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225022317 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223969614 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233742716 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22988038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.231886301 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229658037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.227527528 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226473556 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231075132 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233785392 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22690777 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228928869 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22862662 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226093943 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227454617 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2257536 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226329414 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226555477 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225168624 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227043047 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227238375 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231350222 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231411872 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228006304 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229979581 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.231605527 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23054782 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227533986 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226796351 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226803041 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229403817 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.231377962 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236521489 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232037633 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225940778 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.226730159 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.227775318 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227552642 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.229873219 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226616172 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229002724 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22987224 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230612869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238381665 seconds)
  done (took 89.558328112 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.233438446 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234191822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225142566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225890892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226611513 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228803722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226291837 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228364174 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226522249 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22928498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229570704 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227345561 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227893434 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227603823 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228899513 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.228746608 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229811088 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227672419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.230520816 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232732181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231049605 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226427145 seconds)
  done (took 28.1770234 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234465056 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239899238 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.23286634 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234214952 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233113967 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232175135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230802652 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233376954 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230590174 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227605214 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226584807 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230289435 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228222987 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228817784 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233833589 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239103115 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237629204 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234982981 seconds)
  done (took 23.334767391 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232604017 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.23286681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.239155186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233922523 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234050127 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.239202567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23585841 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238895732 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236034778 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.239983384 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239426057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238352002 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.240838065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236458223 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24029985 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234459718 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241978744 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237267834 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241003772 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235756789 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23761457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237647307 seconds)
  done (took 28.371157673 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236942161 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243022611 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237485948 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23492769 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229709862 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232165492 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233844029 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.231723409 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.234821587 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238274387 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239409016 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242281596 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.237085331 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240607987 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236835437 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242028991 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237636742 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238645362 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237749456 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.238756778 seconds)
  done (took 25.891709375 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24406883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236144047 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235231782 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236043323 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236000534 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239177248 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233478321 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237388723 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235601026 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236545245 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23682373 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240655233 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237441585 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237072619 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238832018 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235237074 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235587104 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23533655 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236480847 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233730686 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235157512 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235827727 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235902696 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237595521 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234859338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236007849 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2365399 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237147211 seconds)
  done (took 35.777056794 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235144875 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234258883 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231465449 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.234291995 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23936604 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236505319 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.235340763 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.234325298 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236150712 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232341356 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235529134 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235999472 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237613851 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239367414 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245817027 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.243356431 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247886158 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.243106618 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237174019 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237513934 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236551575 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237244346 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.238523698 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23542536 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233629142 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237321939 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233920976 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235640915 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236206338 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234700131 seconds)
  done (took 38.26238821 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.259607133 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261671026 seconds)
  done (took 3.674473969 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.241503366 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242606254 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243370972 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24143014 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239551592 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237120518 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236643064 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232639535 seconds)
  done (took 11.069158208 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237913735 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235747424 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23711276 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237902296 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238106189 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239364716 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244618725 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256668095 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.240241352 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237265376 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244521226 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245565285 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241281958 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237749316 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237267869 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241176208 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236573308 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239103971 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239082273 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239156875 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237254286 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24201258 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241810565 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235441669 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240802861 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255985304 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261948296 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238585466 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240534858 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242589696 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239456221 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.238326261 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240715811 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240534763 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241016144 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240199574 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24840772 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260960195 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245495849 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259553522 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239367849 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236566724 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240160714 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241681694 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240850586 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238215566 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242015535 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237021097 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239681828 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242372324 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245283891 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240340472 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237161149 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24191058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239313082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246251964 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258502429 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243524351 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25051895 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25221016 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273015141 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265039165 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243234387 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240158438 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25201487 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.268175332 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248276399 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25763697 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239163393 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240869661 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247466763 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273093715 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267450829 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241556958 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241018629 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243245209 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241784269 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24096053 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248714896 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262218708 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241434182 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243376658 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251797277 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266862412 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24296146 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241820782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243070442 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242732003 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243883667 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254220586 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261501005 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241585111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240882109 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243051969 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244179084 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244718287 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.241664069 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243195328 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238981245 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243532896 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242523703 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24708301 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252513127 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243559628 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24536676 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252069311 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265131371 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243842243 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248470412 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244259886 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245464474 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244729741 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25025308 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241989811 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246641427 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251809511 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244313918 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245674136 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245631944 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245084542 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255007734 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270143884 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246663966 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243691252 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.251115325 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256786483 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246099112 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247023835 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.245720282 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242526344 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244011264 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247192203 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246557665 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245433455 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245520221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246842048 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.243019045 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246471344 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244058412 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247834277 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246179434 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245604802 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248913887 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24912189 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245659759 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247267371 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.251544936 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266884019 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248430166 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.246978268 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245110972 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246948995 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247838925 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248136835 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244300283 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249265422 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247738768 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246946563 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249860851 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247938995 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249890055 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24847028 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253612663 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249588004 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.252447419 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246984552 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245898333 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251314253 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247974651 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249091246 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24858848 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.2460042 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252829336 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.259782088 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250453575 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246754789 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250653681 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2481601 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24940502 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249261028 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253595706 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25994598 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2500053 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256646796 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.266089813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24939696 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247734984 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249100665 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249620648 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248651464 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252586293 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259325201 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264565947 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274632206 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.250049284 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254724225 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251515401 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255035882 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255325467 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250575848 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250360511 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251708558 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249300721 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251114781 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250884372 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249679955 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250935275 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249817835 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250150071 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.252347487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252062958 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251968821 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252083254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249563757 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252393258 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252484603 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251914469 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251017392 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251731526 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.249781018 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251653901 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251558391 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258239103 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250365424 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254847763 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251902645 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251700076 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251066557 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252451061 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254179869 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250986028 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256223526 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.270532164 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252026607 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257686769 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267816597 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.25123903 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253347095 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252681555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248729994 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254877192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260795067 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251732813 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252469944 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251741378 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253212339 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252605054 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257928204 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.269266293 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250550658 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25248926 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252260778 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251029796 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25262362 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254070145 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252644343 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254794674 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253308604 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254104304 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254091904 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253244021 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254794352 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253327853 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255444021 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261796165 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257510596 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252625683 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254781716 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255840025 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258335829 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253642876 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255095457 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254164009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266081438 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.278649737 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260391797 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275946642 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.255490879 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260500396 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27584866 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258129701 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254531049 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253497355 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254470133 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254277527 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251733841 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25532156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256358372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257202107 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256493619 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259075512 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254310324 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25602742 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254066391 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255950829 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256586908 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253997964 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254892665 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257083036 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257826599 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.25537305 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.256362843 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261782328 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274239691 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256114465 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.254807839 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256226422 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.255253954 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255876398 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.255201095 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259975332 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265948073 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259443666 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263828157 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257743365 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265483863 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256970455 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260437875 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.265431068 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254446389 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255702228 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256241785 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.257118208 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264335844 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276851676 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260000401 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.261201212 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256995212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257917688 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.256951439 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257715686 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257589526 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259057845 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267039701 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278479675 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263006315 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258526037 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255122143 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258219901 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257653531 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257714358 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261267228 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.258186496 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258010634 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.258450569 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257701364 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25917091 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258549383 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258961032 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256483303 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258538329 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265472405 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.279577998 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262940037 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259635328 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.265699491 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280815109 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266107452 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.27985209 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.259372624 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.260479792 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259364597 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260562991 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259391252 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260930064 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.260395666 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260606883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264133416 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260410857 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.261809693 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262103992 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260201224 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259770425 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269823515 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281871875 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261910732 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264697162 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257572719 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263323135 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.26492136 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261358817 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260812681 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.264119615 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271888148 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268750573 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261754431 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.26012538 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261317316 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262175721 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261433319 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261376411 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261597694 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.260905503 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261821749 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262780424 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264612755 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.260630778 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262031323 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263660424 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262997904 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271729467 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.281007073 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262246638 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261507172 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263630182 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262183266 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263287904 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.262476547 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261542453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26405684 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.262890969 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268563271 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268949002 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266338658 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262876772 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263995837 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263090837 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262944584 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26349466 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263474992 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262762277 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264857086 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26336091 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263254904 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.262189278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263115223 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263743923 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264349583 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267355588 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271145897 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263574636 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260292905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26352783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264893855 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26200163 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264457046 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271502812 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28737129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275179486 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273179451 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.268155408 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264649744 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268093417 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273016684 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262688796 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265541522 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.262655953 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266098957 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265082837 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268825294 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265305039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.272013484 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284126835 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264472292 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273856781 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288432053 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265747908 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266274903 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269822051 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265582169 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26262421 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.265675925 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266383822 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273412692 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.286031834 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265007281 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267125315 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264583492 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267058446 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270660271 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265348347 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268902499 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263631676 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.266283002 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265363318 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266759079 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26473074 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.264395742 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.265789264 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.269783901 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27383127 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265917479 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267739346 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.267245249 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.267815169 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267440034 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268630786 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.264809949 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.263110166 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267303383 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267592419 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.268585143 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270148221 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.265277506 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269068081 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.268529549 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267690005 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27081262 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.2783391 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275696768 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.265193533 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267437601 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267630537 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270789241 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269160341 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.268762062 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26862287 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269756184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.268703535 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269310537 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268872684 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273004971 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284236111 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29162702 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270752996 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269649028 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271574114 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270040896 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.267076627 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270232971 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271565386 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273929042 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.27760691 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269478634 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275554016 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289701338 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.271008856 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.274430166 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273036701 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278146002 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273527507 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271337527 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.270785327 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275407242 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28528773 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291549395 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281675884 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300962483 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290180587 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27133528 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27148676 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269999941 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271730621 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272569497 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271859609 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271428369 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.2713852 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.271221076 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271911201 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276930349 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272729808 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273309754 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27189166 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271052462 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271583824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270374434 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.271927324 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272084528 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.271870144 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273082619 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272220031 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273050128 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284604877 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298367488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274615872 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273064998 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269915356 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.275159401 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276168055 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283200267 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281368707 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.273057116 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271826576 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272494255 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273178323 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271662611 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274027935 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273351741 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274088713 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.270917193 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285425953 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298789947 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.277875846 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.273540558 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274945405 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274893432 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273756258 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274907247 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275448084 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.274310823 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276422449 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279665625 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274282488 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273710228 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27804276 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282220286 seconds)
  done (took 751.464867404 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272131272 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273369223 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272742916 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272658232 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273857366 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272921436 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273040157 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272719081 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272811493 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272713611 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272175183 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271954468 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271628683 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273668421 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273288356 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273125537 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272145025 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272008074 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272268332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273098996 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273628479 seconds)
  done (took 27.914081189 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.276277354 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273791936 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273594566 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278247491 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275596267 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276655574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274107141 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277567715 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275666004 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27344943 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277652013 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276566211 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.273875409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274305024 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273124766 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275696247 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278460464 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273766472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.277483208 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27520177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278478096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27492738 seconds)
  done (took 29.252222552 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.276546626 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.2777312 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.276830147 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.274974347 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.27758216 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274880846 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.279046127 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.27786731 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.277527445 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.277479997 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.276513245 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.279657247 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285185285 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.284455778 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280404738 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.27790792 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421796629 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278569942 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278597872 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.277977635 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.275778007 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.28473439 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.297360057 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.275892193 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.276964292 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.278628875 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279776574 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.279717422 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.277824399 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.280857165 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283822361 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279457021 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279291373 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281414179 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.27791692 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280857005 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284492544 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280328365 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.277352547 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279786921 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289045328 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299558827 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280689257 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285528598 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.300634436 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281053412 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.283497654 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288846697 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277852795 seconds)
  done (took 64.101267818 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280055247 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281716309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278320199 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.280842701 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281164042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280328358 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281756454 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280446779 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.278053066 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.279602544 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281505493 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280101159 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28032937 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282209701 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281959009 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278462971 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279105492 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278837101 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278921833 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278873354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280104738 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282046701 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28313999 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280550516 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282462527 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279778581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280408696 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.281843022 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280284638 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280412228 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28198104 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283123919 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282724962 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280255285 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279963939 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282841272 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282173012 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279658621 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282449259 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280202616 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282695046 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282660505 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283401439 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283924902 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280823549 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280977002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281258524 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280844377 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281853247 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283647326 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.285133894 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281845298 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282973929 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280332764 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284020694 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284216503 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.281149762 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281432306 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.28428081 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283393912 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282560899 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284606857 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284159788 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.285400476 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285219928 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282386867 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281804711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284440244 seconds)
  done (took 88.344155341 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284457188 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284425467 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284198107 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285105244 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284780505 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.285176262 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286006282 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285487727 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28478467 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285064273 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285874032 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286097951 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285446462 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285452845 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284777626 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285072005 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285223266 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285566046 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285311988 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285736756 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286407437 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286028401 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286234234 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286905501 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286725534 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285525524 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285776397 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287305445 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285804092 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286424263 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286244271 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28613256 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286794688 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286485086 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28667977 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.287251717 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286485757 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287199194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287109089 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.286652435 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287422686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286671771 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28808489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287280055 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286607643 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285783884 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287096959 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287580876 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287695252 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287497154 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287295586 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287708902 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287845611 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287984915 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288266649 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287570191 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289362534 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288479105 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288404691 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287920383 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289030293 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289354676 seconds)
  done (took 80.962804801 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289087805 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289297081 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288259424 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287132911 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289072368 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287565892 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289056905 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290103994 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289755973 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289721318 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289632102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289054123 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289511881 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290314773 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287837908 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288290915 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287962542 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288230439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288888898 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287685452 seconds)
  done (took 26.976329551 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28669216 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28924976 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287225472 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.287527324 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290301849 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287666931 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291197269 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289873973 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288731182 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291272977 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290859916 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291892537 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286884369 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288883501 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290865811 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28887419 seconds)
  done (took 21.827414071 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288632068 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291414548 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291325329 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290210177 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288480057 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288102551 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291543451 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289171804 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287819139 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291474615 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.291653345 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292406293 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291052064 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.290754087 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28765146 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292929927 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289517299 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29026826 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.29210279 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291312059 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290507532 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.289291401 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292284349 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292292093 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289644378 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.289532638 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290701972 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290449034 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289158637 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291370297 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.28940405 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290490961 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28915978 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290372548 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293235606 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290389288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294527887 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293114572 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293367227 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294095299 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293793296 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292066778 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294627855 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293795029 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290767631 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294057069 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292347626 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291839971 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291685882 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.290784054 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292659291 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294238852 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294422364 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293692347 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294366277 seconds)
  done (took 72.22965193 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294743512 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295852392 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2913167 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294582377 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294816406 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292116633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294796676 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293745668 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292230505 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294455745 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294353387 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295326594 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292275664 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295105643 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292603049 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296201999 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293040723 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292024923 seconds)
  done (took 24.493945121 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.292788536 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294256616 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295215318 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.292992019 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293405231 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296139718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293042129 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295259659 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295806732 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294406211 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293105707 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296032902 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297025517 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295963207 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2937426 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29373515 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297329617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296275906 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293676934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293718815 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296646894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296780747 seconds)
  done (took 29.692170535 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.294922084 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295570965 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.295631232 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31272283 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31495595 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321588364 seconds)
  done (took 9.041112218 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3053617 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296857318 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294620658 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298162438 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297096277 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294974119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294504237 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295484845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298010286 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295466131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294944787 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297425805 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297878665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296650699 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298235338 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297744713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296618428 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295963654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297061917 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298528309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295863153 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299132271 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296010294 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296086176 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297576801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296689885 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300284029 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297012714 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29727442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299466583 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299386988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296789588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299017143 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296387438 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300358186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299703537 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297229682 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298712762 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299686526 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297888898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299865875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299252949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301057231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295956732 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300841601 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297740208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298161824 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296736133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297970666 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300499994 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300956985 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298257928 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300153016 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30122924 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30072878 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301249988 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297374418 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297054556 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300224026 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298437272 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299070298 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301235945 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298966054 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299417856 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300538752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298639618 seconds)
  done (took 86.919116169 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29834725 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298612319 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300196048 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299970742 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299544188 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29859993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300612268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299481615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298174078 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299933483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302025264 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298712638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300184075 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299532551 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299159583 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300660363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300073125 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299820431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299717835 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30191005 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300414361 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300335063 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299802773 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29988961 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30159356 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303708139 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301442648 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300172126 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300381708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300138675 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300806992 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300229939 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301304579 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300874404 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301218793 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301021953 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301530295 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300660918 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301292229 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302672859 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299937109 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303393996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30074561 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301875065 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301995261 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301165092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301596661 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30117686 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302688859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301889269 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302552377 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301558912 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303117142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302544962 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302341618 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301183822 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302847498 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302873063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302324595 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305714456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301257777 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302720672 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306349099 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303543321 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302607626 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304289808 seconds)
  done (took 87.091914892 seconds)
done (took 1754.172590607 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464687593 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420594345 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.302909588 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.307213374 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.304094024 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.304907552 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.320120417 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304045866 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303895398 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304084844 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303305534 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492894043 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.30624095 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305262473 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304196975 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398927901 seconds)
  done (took 42.662629491 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.33480795 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310396473 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428407986 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.329457957 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335389851 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.501645779 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375013538 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313459838 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.486392382 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.355133863 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.928691396 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335540969 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309512952 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.464687986 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328338598 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500476943 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.568816553 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.933131411 seconds)
  done (took 30.35574906 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.778710522 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.329210757 seconds)
  done (took 9.32516826 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331626705 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310475973 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311232016 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309482346 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301171095 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.301070179 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309533548 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.307857451 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.149353968 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.45071661 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319613769 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321233293 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331192145 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311477401 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.307850511 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.348759364 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.460401046 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.308219393 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306570454 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317836453 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31069971 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426389037 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.354156384 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317849519 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.442719322 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.164721416 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.321795682 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.319558853 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.458076115 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.310340068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310303848 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.311805918 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311824117 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240319987 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.848596661 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.304511953 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337857256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.32058986 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310769639 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.479235322 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313468862 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318584964 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.305726083 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842949094 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457795195 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.432719692 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.620768584 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.339284077 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.31324732 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.37403511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.316824808 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314159871 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359074626 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.138345852 seconds)
  done (took 111.289914975 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.327268689 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.803347791 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475834225 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331997997 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.051413314 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015552794 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.323779954 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.607822706 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.383458463 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306268678 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606995207 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829188922 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325342393 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.319868533 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827218001 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.311620454 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305700828 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.155601711 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324175285 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.307842834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807171568 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307310354 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324924212 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468684751 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344388191 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775432772 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.830454417 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.834621512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324718462 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.306799002 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.788098811 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33182444 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.329084099 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.308071243 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.575856086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679095162 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670411679 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.328288227 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307928733 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.311707347 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.326875841 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771316407 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679396474 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326437906 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309164374 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774895274 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325322981 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.309101988 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.310167332 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519358913 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.994092217 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30911873 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.762964947 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.310015751 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.6012107 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.396880483 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.310689187 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804153391 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327609128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.417596109 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371891969 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309219858 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309071098 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315159954 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.311654941 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.668130713 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.667507279 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.311419669 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667561233 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802461846 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32919608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853701534 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.22399048 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.334476174 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.429352894 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313341514 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.879615047 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815649353 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329864615 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309828504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657529759 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328318065 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.596677439 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327800054 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310177632 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818968871 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.311837479 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.313376274 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.30921362 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.316952495 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.074223039 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314414363 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.603187296 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.348100111 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311806728 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.31144852 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.31750666 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311267389 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311256439 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.318387545 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.856245946 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.339493507 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.436536779 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331523084 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311903039 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311583246 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.313588815 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312885991 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537514316 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.780876357 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.334596337 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311624442 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.31209876 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.332365913 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.484169106 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.31795776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.631912201 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32986347 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316717895 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.335354601 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.149218523 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363269838 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318132367 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.313716982 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.212377874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.523747357 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33174507 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.330795405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31458874 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33504513 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.612559592 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334731393 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.397814054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.318493049 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039855032 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.366941676 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.337105787 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.648828954 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322738497 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.22685195 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333533794 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313906789 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.601683853 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586871395 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.585598353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.314017687 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.333110189 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.034255762 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371352053 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453157867 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335312402 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320077597 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514212579 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802214041 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.315166786 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.927733322 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.3168011 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.536512755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.314386628 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616412636 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827870027 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.340535463 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3172755 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.048178148 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.060429 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.156810398 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.318580971 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598669436 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.333143013 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.796883441 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.315641375 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316703259 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.901313776 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318459292 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31716768 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.316319283 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.315799292 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.615092991 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492117543 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.963486428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320194064 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793132306 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.384597981 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31645149 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334684821 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319896937 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663358554 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351132927 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.31763036 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.352467256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.318116632 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325367876 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816217867 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.256810108 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.325658879 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469663609 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971916375 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.343250519 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318618815 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.950295052 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.537796595 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.900605546 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.415738469 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.653617819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.349018534 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355711139 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.07008826 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.418020135 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82319403 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.34531917 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318461176 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.940071265 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.344008195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.681098765 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.318954946 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319939386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898188877 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.343969977 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.319245567 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.600796692 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.337780826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.574151012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.319438111 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.331949552 seconds)
  done (took 1109.478462789 seconds)
done (took 1304.325448185 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.319700632 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328910979 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.308459163 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327258152 seconds)
  done (took 26.518649797 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.338744884 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326892689 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328106888 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.324652926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328720293 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326711794 seconds)
  done (took 9.211442164 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.464614246 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328069845 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327871435 seconds)
  done (took 19.356108767 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.548983378 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.650852273 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.683587898 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.603393153 seconds)
  done (took 10.72541954 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328704212 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327684508 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.327891971 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330992423 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.340826913 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340749643 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331422213 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.330883546 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.340581899 seconds)
  done (took 13.235763677 seconds)
done (took 80.282587024 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.329654656 seconds)
    (2/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.300468419 seconds)
    (3/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.559915869 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.434232828 seconds)
    (5/286) benchmarking ("sort", Float32, true)...
    done (took 6.326260642 seconds)
    (6/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.300050222 seconds)
    (7/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.997641848 seconds)
    (8/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.824017135 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.61002527 seconds)
    (10/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371533702 seconds)
    (11/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.301355109 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.381863984 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348672982 seconds)
    (14/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.126629156 seconds)
    (15/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.72151282 seconds)
    (16/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.891438846 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.331113817 seconds)
    (18/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.587513863 seconds)
    (19/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.108652131 seconds)
    (20/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.94470455 seconds)
    (21/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.192725252 seconds)
    (22/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.557685787 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.302592497 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.371282086 seconds)
    (25/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.47472566 seconds)
    (26/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.350879165 seconds)
    (27/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.329810507 seconds)
    (28/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.409524717 seconds)
    (29/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.341235292 seconds)
    (30/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.803542931 seconds)
    (31/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.908296968 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.350951924 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.343623278 seconds)
    (34/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.821847485 seconds)
    (35/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.129723605 seconds)
    (36/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.243747505 seconds)
    (37/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.320449373 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.460017196 seconds)
    (39/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.668677867 seconds)
    (40/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342557356 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.997324789 seconds)
    (42/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339482254 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.323983013 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.059321717 seconds)
    (45/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.444843842 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.403608835 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.797174739 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.434253616 seconds)
    (49/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.351652502 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.605769146 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.985449227 seconds)
    (52/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.414169278 seconds)
    (53/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.425370476 seconds)
    (54/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.335153762 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.745919023 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.412622992 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.474112595 seconds)
    (58/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.109598383 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.317899439 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.582597782 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.126007979 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.681332842 seconds)
    (63/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.306034543 seconds)
    (64/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.316046273 seconds)
    (65/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.707751794 seconds)
    (66/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.418816853 seconds)
    (67/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170816619 seconds)
    (68/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.45726691 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.305575142 seconds)
    (70/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.316392286 seconds)
    (71/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.325962452 seconds)
    (72/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.345921607 seconds)
    (73/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.421733139 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.851679173 seconds)
    (75/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.18029904 seconds)
    (76/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.322069233 seconds)
    (77/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.774304164 seconds)
    (78/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.341597222 seconds)
    (79/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.346430693 seconds)
    (80/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.430681966 seconds)
    (81/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.8338978 seconds)
    (82/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.731621583 seconds)
    (83/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.31490063 seconds)
    (84/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.408354257 seconds)
    (85/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.316222748 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.378417539 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.32800807 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 5.566648191 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.254209999 seconds)
    (90/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.141785863 seconds)
    (91/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.307407346 seconds)
    (92/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.191378268 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.830483879 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.30815449 seconds)
    (95/286) benchmarking ("sort", Float64, false)...
    done (took 5.672372267 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.416828644 seconds)
    (97/286) benchmarking ("sort", BigInt, false)...
    done (took 6.3278033 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.770857477 seconds)
    (99/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.354885702 seconds)
    (100/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.434194213 seconds)
    (101/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.328622513 seconds)
    (102/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.660361327 seconds)
    (103/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.322381275 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.542714401 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.32837002 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.41473809 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.308440311 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.911301276 seconds)
    (109/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.010409617 seconds)
    (110/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.326217213 seconds)
    (111/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.437908957 seconds)
    (112/286) benchmarking ("sort", Int8, false)...
    done (took 4.392322945 seconds)
    (113/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.317718558 seconds)
    (114/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.147684547 seconds)
    (115/286) benchmarking ("sort", Float64, true)...
    done (took 6.350368341 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.571774425 seconds)
    (117/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.966666827 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.854541165 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.380228268 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.430679022 seconds)
    (121/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.516026285 seconds)
    (122/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.319253515 seconds)
    (123/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.989086374 seconds)
    (124/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.397681354 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.603472067 seconds)
    (126/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.41284557 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.205683247 seconds)
    (128/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.421595415 seconds)
    (129/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.953876901 seconds)
    (130/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.33129924 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.13055027 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.611025973 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.853009807 seconds)
    (134/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.581842412 seconds)
    (135/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.708128384 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.340596318 seconds)
    (137/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.210763334 seconds)
    (138/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.325490302 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.4710653 seconds)
    (140/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330564301 seconds)
    (141/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.859334092 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.163152915 seconds)
    (143/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.359200386 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.154701118 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357477868 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.938973552 seconds)
    (147/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.310227165 seconds)
    (148/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.873495898 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.766701638 seconds)
    (150/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.745868467 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.363364084 seconds)
    (152/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.844058992 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.320956312 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.820857152 seconds)
    (155/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.86988529 seconds)
    (156/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.450029528 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.310184419 seconds)
    (158/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.360529058 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.429502637 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.692356667 seconds)
    (161/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.353944514 seconds)
    (162/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.459370805 seconds)
    (163/286) benchmarking ("sort", Float32, false)...
    done (took 5.348193047 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.023168477 seconds)
    (165/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.341223109 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.331598594 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.447956306 seconds)
    (168/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460660965 seconds)
    (169/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.724199596 seconds)
    (170/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.323021739 seconds)
    (171/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.432612986 seconds)
    (172/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.429785579 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.303648612 seconds)
    (174/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.457909408 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358811626 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349113844 seconds)
    (177/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358690771 seconds)
    (178/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.418139884 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375408289 seconds)
    (180/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.910540002 seconds)
    (181/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.320415691 seconds)
    (182/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.328214206 seconds)
    (183/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.379560652 seconds)
    (184/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.345991846 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.400051285 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.415420161 seconds)
    (187/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.360354354 seconds)
    (188/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.700826717 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.334563832 seconds)
    (190/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.615006813 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.743572691 seconds)
    (192/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.297063021 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.982103054 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.55317114 seconds)
    (195/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333916361 seconds)
    (196/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.51983928 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.372059944 seconds)
    (198/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.399700844 seconds)
    (199/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.378598618 seconds)
    (200/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.388524114 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.357309028 seconds)
    (202/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.361402055 seconds)
    (203/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.990207897 seconds)
    (204/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.893655455 seconds)
    (205/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.732219661 seconds)
    (206/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.136218509 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.316073649 seconds)
    (208/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.821778065 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.375887454 seconds)
    (210/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.449416505 seconds)
    (211/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.068913021 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.379496748 seconds)
    (213/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.387234157 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.323312624 seconds)
    (215/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.619892561 seconds)
    (216/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.972937227 seconds)
    (217/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.99982771 seconds)
    (218/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.588590964 seconds)
    (219/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.341607695 seconds)
    (220/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.069389956 seconds)
    (221/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.3402215 seconds)
    (222/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.316307132 seconds)
    (223/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.397824863 seconds)
    (224/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.445453286 seconds)
    (225/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.337740059 seconds)
    (226/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.342255285 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.24837507 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.557697792 seconds)
    (229/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.354062277 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.400622776 seconds)
    (231/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.115296199 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.315995116 seconds)
    (233/286) benchmarking ("sort", Int8, true)...
    done (took 6.336408638 seconds)
    (234/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.355477309 seconds)
    (235/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.343587281 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.406340648 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.296032912 seconds)
    (238/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.33974923 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.847493351 seconds)
    (240/286) benchmarking ("sort", BigInt, true)...
    done (took 6.35120996 seconds)
    (241/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.356893605 seconds)
    (242/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.155145461 seconds)
    (243/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.340029613 seconds)
    (244/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.462540575 seconds)
    (245/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.36277251 seconds)
    (246/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.317242895 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.350740129 seconds)
    (248/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.845801503 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.215642189 seconds)
    (250/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.402588504 seconds)
    (251/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.209257611 seconds)
    (252/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.317551332 seconds)
    (253/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.303231476 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.575130765 seconds)
    (255/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.006829297 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.245788668 seconds)
    (257/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.726640844 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.430388154 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.701782515 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.320738412 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.3201717 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425275041 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.454955308 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.030227394 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.174487311 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.199173483 seconds)
    (267/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.318131541 seconds)
    (268/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.386799399 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.31995551 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.331272624 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.381448449 seconds)
    (272/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.31948607 seconds)
    (273/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.356400467 seconds)
    (274/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.750356913 seconds)
    (275/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.318510738 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.758723847 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.111575295 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.340804704 seconds)
    (279/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.429656412 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.362868965 seconds)
    (281/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.730574812 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.385153758 seconds)
    (283/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.540540945 seconds)
    (284/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.37616225 seconds)
    (285/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.745338242 seconds)
    (286/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.563904499 seconds)
  done (took 945.176674307 seconds)
done (took 946.413232142 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.373824298 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377608138 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.351803125 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.372076544 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.470977246 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.377650827 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.362373634 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.35334671 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399230905 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.401147981 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.357203578 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.378320972 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.359413833 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360171177 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.351402169 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374223305 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.464546364 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359805603 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.375064593 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.362402098 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.375023823 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357872771 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40294728 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.378892459 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.356503184 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35550393 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.362692121 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378931519 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.471809157 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.363255587 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.357370358 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.370931192 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.464425954 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351945056 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.347948607 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.379525785 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.372050184 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.362910853 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357896758 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.392030487 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.897477004 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.377234104 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.361609123 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.354802563 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.354911207 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.35871768 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.360998768 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360660743 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375775327 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377243896 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.886371204 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.393498708 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.364785053 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.355707147 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365193827 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362174247 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.357655618 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380700304 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.380712075 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379306789 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.494699982 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.370984592 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.358053989 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.377963476 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.368426801 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.923029596 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.369148029 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.360955605 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.898933605 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.378883418 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.92270621 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.388819525 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.359018815 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377620693 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.393764998 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.515906062 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.360416042 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355292109 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369795463 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.363172019 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.367564224 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378089654 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.361861671 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.357098316 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378292808 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.382540997 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367998231 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.364379846 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.366928258 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.383721595 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.371589611 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.375832241 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360367724 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.352874312 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.366575991 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.360643665 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.367847104 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36815817 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.363692064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.369645014 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.89854298 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401350586 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.355538532 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.355578984 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.359341874 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.378611897 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.897099361 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.38381571 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.381131097 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.406556116 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.359954339 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.511633559 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.378072402 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38356976 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.36855231 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.362567824 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354368981 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.518633422 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.899744729 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.399447077 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.361256301 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.365176059 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383758429 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.361657074 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356450669 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.525866683 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.369193185 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380515949 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.48699159 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.369931817 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396397106 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.364688379 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362349396 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.38168089 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385272528 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398621182 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.363200935 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384305805 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.382652413 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.357641212 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.377938171 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.371525749 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.361626557 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.36819673 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354496143 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.383031822 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380492054 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381915411 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.382040535 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.489121092 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357520897 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.514218378 seconds)
done (took 231.298581336 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.437311436 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.355491113 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.460098542 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.35802187 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.477983493 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.456910057 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.355961306 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.355500045 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355430304 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.770714947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355764016 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.355632761 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.359612954 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.356419913 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.461968984 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.359081061 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356366308 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.703902197 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.358956484 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437443766 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.353319848 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356680707 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.358152662 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.740508057 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.354278824 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.350601996 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.437475187 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359928382 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.730570821 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.359720297 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.354579258 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.704685179 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.456285403 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375961565 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.369184234 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367778697 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.461514399 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380043552 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441067952 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.46137891 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446029832 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397910932 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.361182927 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.352340965 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.36190812 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.359771484 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.358576586 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386946183 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353701693 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.358139859 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.731854981 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.370452125 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368922128 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358319058 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.358896792 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.380888311 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.357807099 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361238829 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463571878 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.362552005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.431552352 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.772660661 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746105501 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360997745 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.357042693 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358699325 seconds)
  done (took 150.405533677 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.42692253 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433857774 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.476447004 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.379124134 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.411291702 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.480365925 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.378901332 seconds)
  done (took 11.253098753 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.366789727 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364096304 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.417609311 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.416201947 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.361213 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.561757923 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363295611 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.373824755 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.360554713 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.413298433 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.364690607 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362889608 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.369368727 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.360785308 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415319312 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37288975 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477881119 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.364674548 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363769054 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.523011877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361963306 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.371265914 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.414104926 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375335153 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.366845967 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369335281 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.206015404 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364278625 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360830706 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364909647 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361521045 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438967528 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365469093 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.364241516 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361400422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496669636 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36474511 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361712543 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365320064 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.359468756 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.365522296 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.364021499 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365689908 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.362031965 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365039861 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.387144964 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364988306 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.364815623 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.364500293 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365868313 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415934862 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366267857 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.36407327 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.362720123 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41895612 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372981557 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.366703541 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.363359874 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365639461 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36443761 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526975444 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417711716 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.366045573 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416464589 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.367073803 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.367940389 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.365570809 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365764236 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420633482 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365777302 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419159629 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365177086 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.566891438 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.389013142 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368518126 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.369001283 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.368972616 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367525457 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.358732753 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.372156524 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.365924053 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367869433 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372876855 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365223161 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365811043 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.550095913 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47267016 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.364728602 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379547809 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.374525848 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.365465499 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.421406705 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.368038477 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.365015261 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430379032 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.483069 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42134096 seconds)
  done (took 156.829303583 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.373244083 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377829128 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.3720706 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391459131 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.388255981 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367548446 seconds)
  done (took 9.543498829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.371653308 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.371006914 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.369851878 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369505197 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368348371 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.368668424 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.368715184 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371976805 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.372621314 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369776681 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.371274668 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.373348491 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371358392 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.369697748 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.368777413 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.370597345 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.368586552 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.366695812 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.369291702 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369479545 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473888977 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370963654 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370253054 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.371346483 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375457348 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369851413 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378043925 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370200174 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.370769028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.378753657 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.391115748 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371617434 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.372013884 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.37731188 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.375848086 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371968975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376642869 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376859227 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369538345 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.373071628 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375554092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37104987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372649963 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.374329269 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.373347059 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.37684234 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.380036005 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378962659 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.372890725 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.376150116 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.375935149 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3725441 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374416558 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376538087 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.374660987 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39464904 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.380525982 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372364283 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.373305216 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.373869389 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.375606092 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.374183825 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.374493076 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.377754274 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370650528 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376857376 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375631747 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378506995 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373941234 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.37507514 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.376959442 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.371159544 seconds)
  done (took 101.284258129 seconds)
done (took 430.580332232 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.373748243 seconds)
  done (took 7.651713528 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.607281223 seconds)
  done (took 7.88609154 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.536110994 seconds)
  done (took 23.817288679 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.419695264 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.385118785 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.397066289 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.366814084 seconds)
  done (took 26.847650673 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.929121867 seconds)
  done (took 8.207535301 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.378307645 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.374506493 seconds)
  done (took 14.032981241 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.571932668 seconds)
  done (took 7.85072695 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.384988261 seconds)
  done (took 7.668362709 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.389260957 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.409930356 seconds)
  done (took 14.091309678 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.346791808 seconds)
  done (took 7.626002457 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.808051063 seconds)
  done (took 12.088492114 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.367083155 seconds)
  done (took 7.64730868 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.435308806 seconds)
  done (took 7.714702794 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.045931196 seconds)
  done (took 10.323997349 seconds)
done (took 164.732771789 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.365590023 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.370254719 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.367007078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.367609767 seconds)
  done (took 26.749461889 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.408869595 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.408552179 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.410804324 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41952137 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.411325931 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410201588 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.400732284 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.401464079 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.419503125 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.411598259 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40949562 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41234864 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.409541155 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.400825939 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.410993231 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411382991 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421354033 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412348358 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.402276215 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41165769 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.375748133 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.420409795 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.415798748 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.377443951 seconds)
  done (took 35.073899267 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899826487 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449755929 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.529547961 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.428552278 seconds)
  done (took 7.587049905 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42824851 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.430105792 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447914253 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.480471241 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.506642176 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.439250595 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.404055742 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399108411 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385057774 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43095391 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504965955 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.446242769 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.515230197 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.378371616 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.56517175 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.377456933 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.376036703 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.429891037 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48107318 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506757662 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.378550639 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.429936985 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436371842 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.446242669 seconds)
  done (took 35.905289644 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.377658189 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.397748949 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378119503 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.375812508 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.386239301 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.378010028 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.378146107 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378592482 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.377863377 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.384537173 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.37664007 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391480966 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.376914116 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.377893662 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38496657 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.378557316 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.384845549 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.376896323 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379487413 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383972172 seconds)
  done (took 28.907465847 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.371416765 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.23812404 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723996201 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.629167095 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.373061526 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.372301433 seconds)
  done (took 27.99015055 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.45589032 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.622238093 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.378646494 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.766363462 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.858593382 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.398640782 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.380023674 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.639360176 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990306224 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.983393434 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.447814024 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.452730038 seconds)
  done (took 20.659391332 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.388720642 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.373163392 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.385440877 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388207561 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.439282781 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.402237948 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.387616099 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.373578358 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.44641423 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.460916903 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.401920485 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.441992137 seconds)
  done (took 38.174463681 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464409652 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429281867 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.442064486 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410773787 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129438867 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587776786 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.45252918 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127369465 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.40113514 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65027235 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377036695 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466538826 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633187914 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391049479 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384487422 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.450106753 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629403195 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879625513 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378131256 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.89374435 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404081947 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377363164 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.735056716 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631769476 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616043399 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361077702 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.637713335 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.154419816 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68633993 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392016265 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388605504 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377042879 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651626088 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071925188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502905309 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611637346 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418254043 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.010007274 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.358297593 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.745047557 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389738066 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379971608 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389216033 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379374423 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313866596 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393721477 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131498541 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410002965 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.089949713 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378895399 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66318077 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475554679 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.383252989 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.952697907 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462365993 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393455524 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384020224 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476998188 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970719849 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.029183842 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38876013 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322451213 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400143944 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.743250207 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035478187 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403297386 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383503307 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384772062 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313528635 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.749366534 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405179226 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517571935 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406046097 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042121964 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126088702 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413318117 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312409794 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949196671 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38626707 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.322502084 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611056222 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158890962 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320642611 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.328464237 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324290578 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138206008 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396870469 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.012267458 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412505196 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152256918 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636303886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425882528 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406240935 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605354004 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.260089733 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38172591 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.391024655 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49735552 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403881499 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149204042 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344626366 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.38681696 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640409034 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594459881 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382174146 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.462782011 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938746711 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4228146 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405775926 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389861098 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62585645 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.0271513 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417395617 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033809492 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410769109 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159843252 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18128319 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401750998 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39607679 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383690355 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686866896 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.218705826 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27557491 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452226198 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389533399 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384268627 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.773606678 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242649816 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.543312003 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.602863585 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420468415 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403722577 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.385336742 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345175849 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.387800408 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384866086 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.169601527 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609035723 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387775166 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668781656 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320028808 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523551601 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400960564 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609608954 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.699322982 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.415931158 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647036965 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393503241 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401926261 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404150079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405097736 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486391389 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407223095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.392772274 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650210168 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390717441 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389107945 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.766573862 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177789667 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395619273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392777635 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393437081 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00608035 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393531535 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390825613 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281035595 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40165831 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454469236 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392880738 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622049647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.805003193 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420907252 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392952476 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.401287228 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612689934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397635504 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.73151161 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475910574 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.892928604 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029683102 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41885862 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.322330691 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.100514334 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.080578794 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388132973 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578376616 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387271259 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619103783 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422296608 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388718388 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012522123 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409055018 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.774802726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.401486795 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401723329 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.39461859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389395932 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.773850208 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.065318801 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399443617 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.408800613 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533402864 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403580402 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324760813 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.9059672 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395938577 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389545686 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.164598447 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424337026 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.781804937 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241430416 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670439907 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403743991 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674553904 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.87645015 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.43217162 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.391932634 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402222163 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400126516 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.415459685 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39817663 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.40160105 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.759244453 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846593541 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956546876 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17294669 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969957032 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.859382321 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.419795836 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302849977 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182914046 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353417659 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051335366 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644605231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150265123 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368919018 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898569944 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.735877979 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25545064 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685827019 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62225087 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.743462621 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.425352775 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687007534 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606240257 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426594967 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401816326 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328367291 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.689454557 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982192853 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412018459 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469999215 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138514321 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418473511 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.170259788 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.451248809 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.235672303 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850475649 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968352243 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.828179706 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397442248 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400285157 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236420725 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417783614 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922170662 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047095149 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422171234 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.930779758 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361504408 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629781559 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.427347657 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.389956273 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.564647519 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.422840994 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649957604 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682090836 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330227911 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394703405 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979351697 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.269809358 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399116127 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395410722 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194974925 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415481181 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711896105 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.396598982 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.792833345 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418000769 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330196972 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331255416 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.088192838 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40505601 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364708355 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920495902 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.406533792 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409839186 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419497829 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250872129 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65374017 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.409787575 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.02554205 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64992583 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396582566 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419396741 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.399349773 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414483716 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.384086514 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.299483405 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633117287 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421364123 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628120422 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.482917626 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.309367043 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469483208 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615865678 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.27867063 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398924821 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669714128 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.133794184 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.417949063 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160423438 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440152616 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409117204 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422208285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418340457 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426100686 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489002066 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633595816 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.436010874 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409288954 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844267821 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424892323 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407509388 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.410964431 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49058023 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.072907765 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.826713809 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.19659352 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024212705 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198974009 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.041829896 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703957131 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399804782 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398935837 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333047539 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54729071 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928989132 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67283238 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518026736 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.397822323 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420170018 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411474468 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407077867 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618824863 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674095843 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.274387789 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406375514 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208820211 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.282545807 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409389911 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61051923 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924711337 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007419743 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517523327 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399282309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192720495 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703504786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491282623 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399995984 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994540572 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.409416929 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.226817612 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.41278836 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400545423 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574251777 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687238977 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090165864 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.430982702 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.561298636 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.175424873 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.786817977 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666423254 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.959902342 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648464918 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062611547 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190314625 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673568991 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472283707 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639830243 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.55232085 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549389021 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.412993232 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309676842 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401705446 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250818137 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112406543 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412126068 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030898982 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685465629 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.406830428 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.415648761 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432483021 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.411369611 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626760411 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172283824 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636893598 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412914995 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410768056 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.978646676 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029708852 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710009667 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339923225 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.406887803 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663777313 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659136688 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427416638 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.855863855 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.114040236 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99303376 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.379085769 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424963877 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404369283 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172733032 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039151118 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.851795618 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939334726 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06685145 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41364973 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685322256 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410967194 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413509211 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688689373 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408982161 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405668768 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649411462 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056519123 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254244424 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.420449969 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.82290648 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.350268176 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633753118 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404315165 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351071177 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406618422 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862032618 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435313806 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526748965 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41708737 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.406626016 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427931398 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.147378233 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700334118 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411650544 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.403617651 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.394317483 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424047871 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509787314 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003667766 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433688664 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081285611 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.76145438 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665734017 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412062726 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.394887523 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.409927421 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408831463 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13084171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38484151 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410495318 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984086368 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.415521172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.42696145 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410163987 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.623065799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618741761 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.4091206 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64421351 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429091737 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450038237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.307434002 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181579778 seconds)
  done (took 1698.912903649 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408613861 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.468606051 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.430475881 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.419644808 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443329876 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428922067 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.523073603 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45438976 seconds)
  done (took 52.89366238 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.406866847 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.591851643 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.441009933 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.42022352 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.425186336 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.411576609 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.915756918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.441016385 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.418304931 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.417533549 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.409952263 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.407598639 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.093781411 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.417234394 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.408322417 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.435925235 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.4188457 seconds)
  done (took 66.807224329 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.825858284 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.727953688 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.768189054 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.479736889 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.459607115 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.409137915 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.806378451 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.428766308 seconds)
  done (took 55.223281667 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.420809967 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420177287 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.42105041 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422893926 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.421224573 seconds)
  done (took 8.424314798 seconds)
done (took 2104.590846754 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415469413 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.416208917 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.413718917 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417253301 seconds)
  done (took 6.98010083 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.388509607 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.086717782 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.398695624 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412625068 seconds)
  done (took 18.605184909 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.423167059 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.428944971 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.18943729 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.113135567 seconds)
  done (took 5.62240263 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163367301 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.172617988 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160224697 seconds)
  done (took 7.819184692 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.410505721 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.419722604 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.421119154 seconds)
  done (took 20.573132501 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726927525 seconds)
  done (took 3.052670624 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.555315953 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.60961803 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.822409181 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.752039593 seconds)
  done (took 8.060611807 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.800226155 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.795106272 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.605027568 seconds)
  done (took 6.523862081 seconds)
done (took 91.408365739 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.511360775 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.435960308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.613900796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.52438834 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640877967 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.615755235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811617334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.494577779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.993681448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.983054473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.487115322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.645826579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.755865546 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.436829117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.759006191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820439047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649892314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.547870797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.171821741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.373670487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.811916282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.12267902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.317631971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.140658694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.648459808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.574911229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.702539858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819938123 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.355113084 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.725608544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.572141155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425283618 seconds)
  done (took 197.815943362 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41324855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.415619909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415204993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.415546208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440315201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.415325846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.416257664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.431802339 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415266459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.441013049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.4165871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415818211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415184755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.415494422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432188521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.414384129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.415049492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.444269831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415461043 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414380337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414955684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.435895514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42989767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.41905286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415702306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436080579 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.420672154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.415898557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434172557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433815627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436335194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422008684 seconds)
  done (took 206.855847916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.417921085 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416700603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437094391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.416959488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.418000039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.415871657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.419715742 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434543465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.442402698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416454274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.418152383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.44103835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.419791627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416323645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417333764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.430593402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.416496299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.415907516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434849219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.416968432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.43757366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.435362642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.418929361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422207274 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415857383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419870713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.434914276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.445604018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417521117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.435109396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419575573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434406468 seconds)
  done (took 206.925461006 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.61498609 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425931149 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424424569 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.359932732 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426215982 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.425408043 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.424696196 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.624777798 seconds)
  done (took 15.05286057 seconds)
done (took 627.972423172 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.960049314 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.638629887 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641488955 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.446745199 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.309890817 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.474485065 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446799055 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.62888029 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.396461099 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.645486957 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.790860834 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.462856325 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.950666138 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445124302 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.712290348 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.551302488 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.389479517 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.52040834 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.777467382 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.09587901 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.731630218 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.973373748 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.65246003 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.400509165 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.964386752 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969760917 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.279405758 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.383995383 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.464530594 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.782870422 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.21009355 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.600082018 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.501157364 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.514866341 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570817382 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.55247199 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.539066576 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.519277138 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.656148027 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.729289384 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.022613069 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.187541201 seconds)
  done (took 97.819899986 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.410491076 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.410159461 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.408872138 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.411021196 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.411218689 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.410158477 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.409764391 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.409055578 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.410295214 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.410147773 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.410628006 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.411760595 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.409776598 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.411353847 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.410990865 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.410416463 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.411252962 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.412967709 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.41003587 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.410141321 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.410327753 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.41112001 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.410556496 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.409411649 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.412933994 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.410879323 seconds)
  done (took 38.006660739 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.430910396 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.68912196 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.864433952 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.436999142 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.430808992 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436080772 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.515407685 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.430942829 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.434323448 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434933372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.58887003 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.433144093 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468284585 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.910827079 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443280743 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.432493316 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433753481 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.430611824 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.696313543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442040672 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.539202138 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.432901574 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.517712224 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442258037 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457597398 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433065413 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437490261 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.007331525 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.454884132 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.592289609 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.31657319 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.521174907 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.960096678 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.902000941 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.316096305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.440925993 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.433783068 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.598920068 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.435888208 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433529775 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.519352985 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43449846 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.873912042 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.121790306 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.452814957 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.434442048 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.031138813 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.61562833 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.701492333 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441786899 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90471878 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437766354 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436211742 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434492048 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.701350813 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44035292 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434161448 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.056053431 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.457471964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.521084828 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.435448878 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434012093 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.705378498 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435281551 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.695783569 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.436032981 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.443154438 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.455312069 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.877316389 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437204989 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.144821669 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.453702487 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.435602937 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.592778094 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.697413399 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.064696918 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.458005467 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.710530157 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974917562 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.540746724 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.447244172 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.000076879 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.543135546 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.440117583 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437200615 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438519791 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437080968 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.486261189 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.516821586 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.077099196 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155727876 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.085699063 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.542491625 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.445598782 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437735731 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.061137737 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.457169255 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.436309446 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.87520438 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150448939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.455385327 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446542979 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.151365014 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459020967 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.524128234 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.444228671 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.886800227 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.4393461 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.489964354 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438751998 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.444916687 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.462338391 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.523337079 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.442406394 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.43926918 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.120953189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.621733273 seconds)
  done (took 189.532156192 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.448073536 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.431370836 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.430397842 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.449814517 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.431448772 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44046889 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.431129646 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.431689774 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.436936136 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.43143887 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.432140089 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.432318236 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.43410246 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.435198365 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.443878134 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440663689 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.04514464 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.434041607 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.43132052 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.451749748 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.254388528 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.442503157 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.433084692 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.452401977 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.434007349 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.435702013 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.439409947 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.437050905 seconds)
  done (took 155.010496203 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.440571853 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.051307967 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459480141 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.583654687 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.464509805 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43803214 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.581329412 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.504595254 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.462050383 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438594079 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439340231 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.767693217 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.442513126 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999477235 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.650758194 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.601976835 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.999773654 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.459384384 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439052969 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.438953283 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.584772229 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443647292 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.76870847 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.053750299 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.461652151 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.053031514 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423968655 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.441727522 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440150785 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.055561423 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.459300607 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.769805157 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.526985821 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.508044015 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075291471 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.020892768 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.019367956 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.603114803 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.441681947 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440081977 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.439689645 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.424575959 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056202848 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.462921856 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443588229 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.045596723 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.463462728 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.443272808 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.446877599 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.440837774 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.506909091 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.527848143 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.79317157 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065970963 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.544804186 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.456328713 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.585178789 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.846482515 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.444862404 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.001719793 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.42545389 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.064195291 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463801574 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.426225494 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.443333908 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448877861 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.606853042 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.585612812 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.004940335 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.463428914 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.004105939 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.625149248 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.441720535 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.442955782 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.444985915 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.062737735 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.024541533 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.625980341 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.59134479 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.658656799 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.428795913 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444561205 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.426297563 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.527936876 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.44364975 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066372116 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.023400749 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.464319513 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446594652 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446670427 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.44730288 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.64094096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.083369018 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.548783022 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.993790882 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.795698526 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.777739398 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.448164102 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511078712 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.46498702 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.780046263 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.446995777 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508735816 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.919873757 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.779903372 seconds)
  done (took 172.759857786 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.702352286 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.799019176 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.551101228 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607695784 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.079638452 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.043921218 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.742623219 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.595665194 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.562238249 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.72156927 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.695437141 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.543149681 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.672694547 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52779005 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.228568353 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.539102561 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.560997943 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.600113701 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.614272494 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.548431561 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.133407345 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.7420512 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.643299957 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.499434927 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.552823221 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.260651892 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.039071439 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.047324778 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.63715604 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.907324436 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.008897806 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.681752602 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.482195477 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.185584496 seconds)
  done (took 70.103292966 seconds)
done (took 724.558448553 seconds)
SAVING RESULT...
DONE!
