cset: moving following pidspec: 15549
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.238720396 seconds)
loading group "string"... done (took 0.594517571 seconds)
loading group "linalg"... done (took 8.158993874 seconds)
loading group "parallel"... done (took 0.174330851 seconds)
loading group "find"... done (took 1.283512805 seconds)
loading group "tuple"... done (took 2.034544857 seconds)
loading group "dates"... done (took 1.328029561 seconds)
loading group "micro"... done (took 0.202227742 seconds)
loading group "io"... done (took 0.935348547 seconds)
loading group "scalar"... done (took 40.755661532 seconds)
loading group "sparse"... done (took 12.943899054 seconds)
loading group "broadcast"... done (took 1.040243084 seconds)
loading group "union"... done (took 14.863844657 seconds)
loading group "simd"... done (took 5.197004022 seconds)
loading group "random"... done (took 9.974515565 seconds)
loading group "problem"... done (took 1.763434704 seconds)
loading group "array"... done (took 22.934909576 seconds)
loading group "misc"... done (took 1.763422684 seconds)
loading group "sort"... done (took 3.64703835 seconds)
loading group "collection"... done (took 19.496089355 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.547301763 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127416046 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140097627 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12321278 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154372176 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120454834 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128228416 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087019397 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.869099218 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14743043 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117691505 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420179973 seconds)
done (took 5.371431168 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172572982 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08797255 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080044161 seconds)
  done (took 1.220422175 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067286039 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12721379 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069035871 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069212851 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071992233 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068428515 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068743441 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068441795 seconds)
  done (took 1.596924886 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073061078 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069570892 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067777226 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069742602 seconds)
  done (took 1.335073658 seconds)
done (took 5.455080614 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.805720742 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214021359 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188945646 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415679836 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138444914 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183253629 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.65165112 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31197868 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194394211 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097008298 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116073828 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397214642 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128084012 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.655360988 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080425144 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098839048 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145630803 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456422466 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071687652 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086878447 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094529097 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13346461 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.081862502 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077202187 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15048446 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070758789 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144919884 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085591918 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069378748 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.259594094 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177170011 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660039866 seconds)
  done (took 10.533633337 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102240124 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102476081 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071137705 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128047645 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101729911 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072439834 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077957685 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069773003 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093136175 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131729497 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094712328 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111589592 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068944365 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072114363 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085916155 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201896138 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080843184 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084492476 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073669533 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081232848 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115203835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080583818 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082892855 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082373743 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132217917 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173675727 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100606055 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100523173 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069529563 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084577205 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117169035 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131219353 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068931641 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069254045 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128596369 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097754239 seconds)
  done (took 4.635467603 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.01406415 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154331937 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.0932533 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139534099 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067604832 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092713627 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113233475 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067916975 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086506833 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241685655 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.384909793 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.629894625 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12535242 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1203175 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10832001 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073354129 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074544606 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070549067 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279167542 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102017318 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111469309 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086347201 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073540468 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072218384 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067201781 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074569251 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066334212 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071042286 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090602999 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078489874 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.333365072 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129058414 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071108181 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.96336935 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168912807 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070054863 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108456481 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166569757 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097055643 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143496689 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07008269 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065766526 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.30178097 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068171371 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074261295 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066243948 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069126621 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088420764 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111572233 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122717994 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06808641 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068608837 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172517673 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06819148 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084031711 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.221616098 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152555805 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069216435 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303394892 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095538369 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074583278 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067814537 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211297838 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119634961 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069970117 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070237658 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07180721 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07155272 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368321884 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067161784 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.247686207 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068971578 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07742614 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073610075 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074646942 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081793934 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082127692 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094321887 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069875283 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076672687 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069502741 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068402149 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069265951 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095882403 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.390950494 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067610293 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072670528 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065406545 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094992332 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100717025 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06970576 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07070225 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104635404 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072623654 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068278366 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070385447 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094404432 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121091958 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073382734 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114442365 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066017575 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.172773749 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.078030403 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097975453 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070059946 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103230694 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083041295 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073417588 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.471846469 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067126253 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074765169 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068057003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070326368 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069118734 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081173099 seconds)
  done (took 22.422695302 seconds)
done (took 39.658469859 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247714124 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085881304 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08612774 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086422557 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086220965 seconds)
  done (took 1.738335325 seconds)
done (took 2.865926947 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126952188 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102159762 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066552644 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10115037 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066521913 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106971514 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106546536 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085999135 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103263125 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066940876 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100446217 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066586519 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066944388 seconds)
  done (took 2.314185348 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082536486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084478153 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071482511 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084212364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064752817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083991021 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082749341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09088695 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083462944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074066749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064440378 seconds)
  done (took 1.989921179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082507364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08535046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070860788 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082709302 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064323426 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083511381 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08294763 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087790223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083609472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075357924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06495167 seconds)
  done (took 1.980868231 seconds)
done (took 7.401173793 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076397643 seconds)
  done (took 1.184403129 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.545544756 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.584839376 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079228713 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101736801 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198519448 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111266059 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239454221 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08559466 seconds)
  done (took 8.228031289 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107817261 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071108442 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072328281 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0731934 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071055066 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071568806 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072963534 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070670183 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072164954 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07108557 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072227391 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070882379 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072195076 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072284798 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072064114 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072473049 seconds)
  done (took 2.383646538 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099495479 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098098829 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075891908 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077585309 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07506726 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074321405 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077501952 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076594502 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073755956 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074902997 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078142799 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076134422 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076139596 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066764135 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076488381 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079049734 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073830509 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076637911 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078047539 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078238912 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077715521 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066474716 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075616268 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077201978 seconds)
  done (took 3.085682897 seconds)
done (took 15.998070103 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105677957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070384646 seconds)
  done (took 1.291148813 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078923989 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081695801 seconds)
  done (took 1.28675203 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077215519 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062717756 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086533037 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076660104 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065458065 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065556575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085384667 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066097921 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066214238 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066198313 seconds)
  done (took 1.846511713 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065459649 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072834359 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069990842 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081401833 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07310792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066826081 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07235889 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068148078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076433034 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065328904 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070194524 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08564083 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070395926 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087104125 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071145232 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069988644 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072349869 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069194212 seconds)
  done (took 2.437822019 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063233337 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064164404 seconds)
  done (took 1.259729237 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066696635 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063682599 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06770457 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068252124 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065218631 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065023754 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065560085 seconds)
  done (took 1.589677174 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404445621 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12586544 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33785422 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072956567 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082549925 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259927545 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066374658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071492381 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071699282 seconds)
  done (took 2.665650437 seconds)
done (took 13.508765532 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080591109 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088193529 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099766574 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418986771 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096028711 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069919098 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115735642 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183821529 seconds)
done (took 2.290489586 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208609813 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.819183221 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.48981757 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212203814 seconds)
  done (took 2.654753168 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347463435 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.199415784 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078816485 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069828319 seconds)
  done (took 1.837381858 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067392736 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071633691 seconds)
  done (took 1.278066973 seconds)
done (took 7.118253383 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065167549 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06659181 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091499038 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066470029 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066333886 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066786183 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066626454 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066094789 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06665861 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066891978 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.066142575 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066081216 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071913235 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066597834 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067180499 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066740424 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066203769 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066307905 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066498934 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06632536 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066433008 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066466905 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067007713 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066827115 seconds)
  done (took 2.798805936 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081488511 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068989792 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070764538 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070531695 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07186849 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070442585 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070524478 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069199619 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070926578 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068847105 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071619813 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071139144 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06840888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070945229 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068463565 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070855001 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070625098 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06895606 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068513193 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071204799 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070385756 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068769919 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071068166 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070422019 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071133034 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07089677 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06852023 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06932547 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070470728 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070773633 seconds)
  done (took 3.262994215 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065791871 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062926025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063447313 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071559842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062825859 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063743502 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063109636 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063569487 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063643522 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063173479 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063754247 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062574327 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063249956 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06334725 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063651033 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066997593 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081622061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063077629 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062844255 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063046591 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066913525 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062659059 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062787452 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062540467 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066046758 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06239488 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063111685 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062806155 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06364123 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062945265 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066620778 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06753052 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063106776 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071684749 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06781595 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06318472 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067095559 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062713499 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063865295 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062838428 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062743638 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06305564 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062906246 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071932482 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063202142 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064010427 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062757829 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063928121 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063316826 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065002118 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062803932 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063016942 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064732389 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063968922 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068023361 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062799353 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063705527 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062192605 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063761822 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062879047 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062529502 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062377764 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066050388 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0630368 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080148954 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07145684 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06252635 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063954181 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063690787 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066262203 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06408116 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07888066 seconds)
  done (took 5.823564078 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085024622 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08948771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068690336 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067902355 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063487626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063899423 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072102581 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064322819 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068437831 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082913262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063491535 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069058319 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068919882 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067594376 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063567489 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068186181 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072804221 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064887793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063702119 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067652126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064040966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072352083 seconds)
  done (took 2.68902477 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146771636 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069752098 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108472223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074752111 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073024363 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075246957 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070020352 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070326434 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069866789 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07029537 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070570942 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069826623 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073126322 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070266349 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070565842 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070181134 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069797151 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070527552 seconds)
  done (took 2.541324603 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078166982 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069454629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089079066 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069175086 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069468266 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068760293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073561694 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074779991 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068992763 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069403898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074420914 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069270726 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068722053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069652855 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069044663 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069270019 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068759474 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069593757 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074096802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073172677 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073746641 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074532016 seconds)
  done (took 2.734317527 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087622529 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069071099 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084729025 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070669129 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064166993 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063811403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070021395 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068847566 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070351138 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067741513 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068983707 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063629624 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071569624 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068644029 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07122026 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068653247 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067902081 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068372509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067950301 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063736539 seconds)
  done (took 2.548829815 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083963165 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066656478 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066351189 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073220367 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06652708 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066685976 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0736897 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066893084 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0671766 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088232702 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06684315 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067693049 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073353792 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070958486 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066930487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073135687 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075865866 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073352777 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06660319 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067096115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087925511 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066664698 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073058121 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067196672 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066997134 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066789784 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067518014 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070911431 seconds)
  done (took 3.140209364 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06485624 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065657256 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066385079 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066812443 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066550191 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066581664 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066969941 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066505504 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066467806 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067075893 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066235891 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066103095 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066106904 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066292063 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066203357 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066466596 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066287386 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067047409 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066770988 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067014712 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066255122 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066122396 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066228019 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066715555 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066821943 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06595591 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066861258 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066385981 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066428863 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066497097 seconds)
  done (took 3.149290163 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075225201 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074345933 seconds)
  done (took 1.308627943 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063450926 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079591919 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062531272 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074472267 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072415918 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066669286 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073109249 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072606345 seconds)
  done (took 1.718221749 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085238258 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076951402 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066304383 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078081256 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076570197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0866185 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128565837 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065618684 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075903458 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067075912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084240908 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067885035 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076326927 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070656762 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075927842 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079463033 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06328097 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070552587 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067572575 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064254595 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066890433 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079787344 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075432619 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063714176 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070900358 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094187374 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082271056 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064934135 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072581337 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078210705 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07576823 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062700144 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065106452 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066104487 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06373403 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07688088 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08484467 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072663838 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077977729 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065686602 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073772076 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063560733 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074469116 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076374611 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08129856 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065366384 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065875308 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063344281 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066054042 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071627047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063424904 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06986608 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063138386 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077869079 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072784591 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080382079 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0642569 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071460557 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072318738 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072451728 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077040266 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071791521 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075009286 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064759388 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081865002 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074768331 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077285619 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063863583 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062616046 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063505644 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07961582 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094028575 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074963704 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065588318 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065764212 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063322349 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072207558 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065540121 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073987974 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076395333 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064919326 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069882961 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077755645 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069545849 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071761802 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071903967 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063719985 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06860812 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066411947 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085497312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064461808 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063240027 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065966191 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081033059 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074878542 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064724195 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066145046 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077463564 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062726836 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065884466 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066034613 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071287135 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079441087 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069390956 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069348126 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078167325 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073901229 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07024046 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071203873 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062396499 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065048553 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066582105 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075779127 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06111784 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070874472 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068553191 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064043998 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075980524 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062737391 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063882042 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076957074 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075286033 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062737464 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061636876 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070892218 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063696891 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066366222 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077644746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063145284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061836505 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062398695 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0727418 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064112798 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071947447 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067861462 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071317983 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061470185 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.190817369 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070605062 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079503424 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069537006 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072204167 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076248434 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072663278 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064902197 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079147368 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072629965 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067730915 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075677807 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069452853 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063194257 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067737338 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071931203 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064635536 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072670212 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067299461 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072335219 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065810962 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06432842 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071002819 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066108239 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067837117 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070740219 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064327432 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081028725 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072254585 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062915352 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062887063 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072564718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066297189 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064418134 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067989912 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071766495 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065669723 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06344624 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064485573 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071412639 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073202191 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068555473 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065657953 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074767657 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083332505 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065098858 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073121079 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065370823 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066841154 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066374719 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080477757 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076065847 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070001756 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07245896 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063115937 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07522043 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077989407 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068198753 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063740569 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068058995 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069514484 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077504142 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068982981 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066258908 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064274556 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071287769 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067963378 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072062771 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064984888 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067500506 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071056593 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063753575 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071490759 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066474056 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080536547 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073270303 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063698356 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068054159 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063635625 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07676803 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063624973 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066914479 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068010171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065805703 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064601209 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072099802 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062342317 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078252384 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078334124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070839467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067627758 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065156038 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077944263 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071508589 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07352932 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072583016 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075557836 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08066234 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067862 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072784096 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080959474 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065043954 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062558086 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074560149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06632275 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063715853 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064761612 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06417209 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072687686 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072776811 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075330928 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062067234 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07172172 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063087976 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067248951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062786906 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07307108 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071448713 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068422603 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076642116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064735763 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064744556 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071598925 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063879768 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065000458 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065000329 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071087253 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06418317 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069965805 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067264727 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069882106 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066800227 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062097615 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069924948 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064045512 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069250635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072980565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063696468 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069937115 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070943041 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064944903 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07078004 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068737422 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.200852764 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073883168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072190162 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07154909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073241337 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064733624 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078475265 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065367202 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078617071 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070757435 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062566344 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072032009 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072319369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070963022 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066295417 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066286169 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070896071 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065024204 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072342012 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077503724 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067017473 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081232274 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077356066 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072044235 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072503116 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071055797 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071036096 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067540464 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069411548 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065637286 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07086528 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065580477 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074252437 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072581839 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070406782 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071602864 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06567065 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07133397 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066574698 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063156617 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06777289 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068384777 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064879801 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078145729 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065466655 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068042328 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064522915 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065854218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064407476 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062617979 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072937616 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073637933 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066351574 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076287148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068331023 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072651926 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082073225 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062931301 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064203444 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064164679 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066884984 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078354205 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066985946 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079524632 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070852907 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067893579 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062874591 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066402303 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064005566 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062827808 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063585268 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073637025 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067426124 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065140067 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065915825 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072323411 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066191642 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078815885 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064709496 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06964096 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065340583 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06271526 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068354093 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067972219 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072606686 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066128991 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067383102 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063020876 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065164437 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069667069 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071622913 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065200264 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071607613 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077595344 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065114461 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072410497 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067959967 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063149258 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072905344 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064917429 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064834396 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067748336 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073383932 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073149562 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065904014 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079547883 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064916652 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074577762 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065382383 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063527171 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064638123 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064721573 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065197275 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067925435 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066221359 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078230177 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063141732 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071418196 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071045134 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068613511 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075146725 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065519791 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070837172 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070105833 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066219456 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070601713 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078487982 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067868816 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072002323 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065083881 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069734812 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074246249 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066665014 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075909576 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070092234 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064517826 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069805283 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065771506 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064260697 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064009272 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063794868 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074140432 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064208379 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066552681 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066904703 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.198156348 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071566361 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069232499 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07978828 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073198764 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07352707 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064309054 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063521842 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066664268 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067139457 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072403719 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072227575 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076531414 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072857537 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068814262 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064801625 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080215128 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075586955 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073411209 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067150226 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072933256 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06579098 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07298071 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069913959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070414402 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066376179 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07368219 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071480561 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068152392 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076556669 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074256127 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066462037 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071780746 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071783117 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070454824 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063801202 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06532606 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072058784 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07457089 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072541708 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065675299 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080844077 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066988147 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070665589 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067845692 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064743108 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074335969 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063705547 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072607516 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066285841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066437326 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063841367 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068433102 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066968595 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072480517 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068257205 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064011996 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081696707 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08078241 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072370827 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065354434 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064529455 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063828323 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064054726 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068488268 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066775931 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071962603 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081561952 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067580309 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068173672 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063671535 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065848586 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072830422 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073700015 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063513715 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06389852 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067870535 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071607933 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077047761 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064631022 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065300204 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073069429 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072128639 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063672092 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068423505 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062851768 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073025583 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082758699 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065645332 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071452899 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075970127 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07801623 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06588156 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064028015 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065797164 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071730087 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071265947 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066454492 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066796876 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085817185 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073010103 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068039521 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06418958 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072954037 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067766629 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079763904 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066097092 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065676121 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074193688 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075084473 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072629344 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075859289 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076940051 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071958689 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071678527 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064803468 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070077 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064051162 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068120734 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065375518 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065220921 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069249812 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071177713 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069390661 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080688026 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079004517 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067403131 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063151714 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06727251 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067270644 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063419516 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065548063 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063366846 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063072859 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062996224 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06388206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06985655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072740693 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06880768 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064380149 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063715476 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061615589 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073325397 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070810105 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070304354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06168644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.200945031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068000037 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075336786 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068922442 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068392161 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07341901 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071997688 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072050219 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063906395 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077749084 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064543803 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072335693 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068529379 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065988079 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066172011 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073331502 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069876577 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066983068 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072468867 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072947301 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068367222 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063388165 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063264308 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075098018 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063863482 seconds)
  done (took 43.340770764 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099778567 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065982735 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063950505 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065082734 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073990616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065255685 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064744088 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065414755 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065393464 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068050601 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064342813 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064146444 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07138686 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080059091 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074686303 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068814518 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063884423 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065620264 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064583146 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065458906 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072648043 seconds)
  done (took 2.703565014 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070142894 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0774172 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076703824 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081554478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073185941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068909729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076923386 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069193102 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077881857 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074384218 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077572833 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069055118 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074544913 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075534334 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075387918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069979123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078272734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073685595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069236701 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077812188 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069877089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077688051 seconds)
  done (took 2.876226056 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063890342 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063317156 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072124517 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063305323 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064817835 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06360286 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067794409 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063898023 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068245313 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068331469 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067437414 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067446403 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07244691 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063280932 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069149203 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063735693 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111454832 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068822375 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06562227 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066182094 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063767935 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073069773 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063859353 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064205579 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067498043 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067977604 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082813508 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063606521 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06429326 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067129758 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064948964 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063602987 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071539135 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070990311 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066574426 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066974729 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064126518 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064651129 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063479229 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063333798 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070706493 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063617951 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067715352 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071855557 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064039852 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063212409 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071430927 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064688971 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062574163 seconds)
  done (took 4.556944233 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074024641 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112012449 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069367012 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092527898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078539621 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071001174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06957 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093961013 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064942847 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065748681 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079402428 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079840166 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067146081 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068952118 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071998177 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067523263 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06823943 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06642707 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070176327 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066606295 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070696383 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071333714 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078522672 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078826065 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068063588 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066553576 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066461145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068608921 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078482833 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071150642 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069012614 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069533239 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079105155 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072493973 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066382955 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066840558 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079308332 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067095589 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067024082 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065026987 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066606308 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069028887 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0714213 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079716185 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067303561 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072066153 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067073558 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06527781 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078809061 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066763579 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071744132 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080065486 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068080685 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067387039 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068781211 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078473235 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067121078 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065472498 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067625869 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078424863 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064865017 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067912146 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079213361 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066257121 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070514737 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079335203 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072039639 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067966129 seconds)
  done (took 6.302960292 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072277365 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093656663 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081101462 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081406192 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074588556 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075013918 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075334922 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074979568 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075373514 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079249694 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075522064 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117665758 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071106387 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076817609 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075402354 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075123526 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074865826 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075190483 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075482953 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075410662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075318125 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081541312 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075288211 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081168545 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078398564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07071096 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074991371 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074764917 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08127268 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075264307 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078058859 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074905517 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075106762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081727055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078070482 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075105038 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06458305 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074717408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07502388 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075063453 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070677515 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081714069 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075175511 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070447719 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07508714 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075137742 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081318617 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078088017 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077145101 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078699189 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074641024 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081386751 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074778034 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075586354 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081567174 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083691629 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081042262 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081793358 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075301022 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081109834 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081380095 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083843753 seconds)
  done (took 6.102940478 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076970484 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071792328 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084249875 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063439098 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063526525 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073889883 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063915359 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063746658 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07253469 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075295039 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073902113 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074305444 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076278084 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074345147 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073873475 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076504007 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073718042 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07452556 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072226847 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07382502 seconds)
  done (took 2.738359387 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075880015 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082812022 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068815998 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073231773 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069575245 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07371153 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068209196 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06912873 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069840958 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06907414 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0756957 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075336866 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069998851 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074021393 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074987032 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074190269 seconds)
  done (took 2.437478473 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082763266 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070826195 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079748564 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065631221 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069002295 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064173348 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064736658 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06326465 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064099538 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078595802 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064719528 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075938053 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065393122 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063764547 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064582766 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071192084 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064224755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065288212 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064922655 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078200741 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072247814 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066743952 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068840629 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064896346 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070334091 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072802392 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066830832 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06873529 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064855901 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065576109 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070872853 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07196083 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064935318 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065642522 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063942528 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064692655 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064971497 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06552254 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071248341 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083516191 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063346845 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070246417 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065016922 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065751227 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063950794 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065374721 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063871311 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071256004 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065311196 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070398023 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064831442 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067746694 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065387319 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072835395 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067408953 seconds)
  done (took 5.026163504 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078063583 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068986652 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063841223 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063349994 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068307936 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069649742 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068986529 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068947163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069960232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063761 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070085926 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068699068 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070576734 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069556657 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070558149 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069637354 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063734523 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069535114 seconds)
  done (took 2.523832908 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072210828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068523028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073112996 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068124915 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068169476 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067903224 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063793336 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063598422 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064218851 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068508907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068506664 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068459927 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063974201 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06804924 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068286493 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068412776 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068152087 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063848381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068308967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06400377 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068163683 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063902239 seconds)
  done (took 2.759300596 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09537334 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085345253 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142622535 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081311262 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087895511 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073985255 seconds)
  done (took 1.847427395 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091719288 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100077567 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068339218 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068639375 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073933697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071518136 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071989144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072016313 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076676568 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077618836 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072390151 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077180395 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076881904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079089274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074502108 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075158928 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072447881 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074911284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068442937 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08179266 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07263815 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076766429 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072549766 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072574631 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072373952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078919526 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077778706 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07737558 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072225736 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076677748 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07460394 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072505053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077185479 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077884165 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069223498 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07672506 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072512144 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081571253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074916222 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078502228 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069255186 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074950752 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077132827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076458444 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07726223 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072295546 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076317525 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072649783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0724156 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083639343 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075182864 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078660111 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074624998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07692886 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076213198 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083247465 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077477115 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078609273 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074656853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077174658 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078404734 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074845764 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078523216 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076759084 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074577645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078758746 seconds)
  done (took 6.302932082 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10320597 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069024896 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072966994 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077405427 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078305925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072988381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072563939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072462331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072620541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069826668 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107840823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073507494 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079453726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079457524 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072921042 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073209771 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072970728 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079433383 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069973368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083902665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072829124 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078866581 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079140091 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079120324 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077264015 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075183138 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07243841 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072493357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072285149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07204309 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076917144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07249536 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078803084 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069510653 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078806479 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072283776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07221696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076177116 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072610597 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075043149 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078822388 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081814378 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072508196 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072330552 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077500321 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072928975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072216931 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06910008 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072148159 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069105481 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076905884 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07708303 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077125659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07824443 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07200983 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072339849 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072112983 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072488523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072128144 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074329298 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080175923 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071979408 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083646067 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072494178 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072304121 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078769341 seconds)
  done (took 6.29840793 seconds)
done (took 128.671822069 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208940509 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184484658 seconds)
  done (took 1.662919542 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073671042 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106127557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084665813 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135585477 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07109375 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106208013 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104274869 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083572797 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072388468 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073307257 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073216593 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075697495 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138637046 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071383087 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071957012 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075999539 seconds)
  done (took 2.705566963 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104147103 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169967305 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111280483 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070915962 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106696841 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078780574 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071481359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084275106 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077737076 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072657002 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079748223 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077695392 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072617968 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080131562 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078166215 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079020981 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072601909 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079359419 seconds)
  done (took 2.861806207 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102567337 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096713253 seconds)
  done (took 1.494600786 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174174866 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13291557 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20173608 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344651759 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157880378 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.427457088 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143167203 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142412656 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116281307 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135456489 seconds)
  done (took 3.265562275 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103107051 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171567042 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295605709 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12419382 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078467438 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093365713 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125225464 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083659832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086495762 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08618763 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085316411 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080513041 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105258816 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079387406 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077493943 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080747656 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10890231 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076851274 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077875894 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080568221 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10843603 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071783606 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079090128 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077114503 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082921317 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082955643 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072738955 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071592343 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080636297 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077523638 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082217976 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0892307 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082882118 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108647939 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076355837 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108819224 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080759276 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078625401 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077485077 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079115367 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082265752 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082353574 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080487861 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080252266 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072605592 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081226579 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072686244 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071612635 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082312524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072714287 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082642573 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081760016 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10875181 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07303551 seconds)
  done (took 6.209433132 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107989994 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106820194 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072439865 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114796136 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106978453 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072677778 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107822424 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101217907 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110140586 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073517532 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071290891 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072915803 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082428094 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084492375 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118119755 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108393312 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07325408 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072233271 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1102747 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110650228 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071732567 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104236754 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100336604 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109770418 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06930425 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072967331 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071227729 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073003726 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07841784 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080027436 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07147017 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081301127 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08807086 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07745969 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069487136 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071105685 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071263127 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080264039 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081535684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080711248 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078942092 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069849815 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07059132 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071607093 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071749056 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069991081 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079596438 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080847844 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079123629 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070814847 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071904625 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070722215 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071425915 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080344764 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078789592 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080749428 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080528979 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071041705 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070639227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073220393 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081288547 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080924914 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080464476 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071986965 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080702411 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070909281 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082641266 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083933753 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070998738 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074336293 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070248923 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070575931 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071409634 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077942821 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079121482 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072049017 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071082554 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070592155 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081435569 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07883671 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070587412 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07805352 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069602992 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070903757 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071884225 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071888604 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078254457 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080454076 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072559033 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070814191 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070651365 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070495066 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069565773 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078454429 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080557707 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080297 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079249045 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0715853 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078760481 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078223776 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071431841 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078743367 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070700678 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071460394 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071465703 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078699642 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077519075 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079141699 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070442709 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069312973 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077286588 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079406626 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070282022 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076590298 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07994349 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077800121 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069054927 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081095689 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070114216 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07943581 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067895242 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078925605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20405982 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081088511 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072302736 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07099207 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071571807 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080227325 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073078868 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071288755 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072307431 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072013841 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07963629 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083878721 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073012199 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080016507 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079752801 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073120783 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079986949 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071494606 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080634224 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07180889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072547586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070522673 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083415673 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071609149 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070988948 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071131318 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082332638 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071028769 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081200483 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078727961 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070677794 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086105435 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080908414 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07851084 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081750153 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073490422 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070831218 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071630426 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071503469 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078684858 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080679742 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072286558 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070926235 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078760772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082364263 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07014851 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079458792 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079457514 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080086846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071899743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07115611 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082360892 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082221369 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079423194 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079783657 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080199531 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071634202 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078298939 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079891547 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071629972 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086382268 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071752524 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083922281 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080126376 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078535392 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080232307 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081653766 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081776336 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079800547 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081193124 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068299781 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070770946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079570771 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070887639 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071205917 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079039504 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072844154 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072200451 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084794786 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069772954 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079720645 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069175803 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080420147 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070678378 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072364414 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084440481 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071550753 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072296833 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080222809 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070651761 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078490564 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081966818 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078267366 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070542173 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074920138 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080734302 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080038946 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070914304 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070440303 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072262688 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078607625 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077594391 seconds)
  done (took 18.870564369 seconds)
done (took 38.376507813 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206164249 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156213865 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183689306 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115393026 seconds)
  done (took 2.057601837 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107475912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098727388 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091684755 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068253928 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097494583 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06837732 seconds)
  done (took 1.861326706 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287229937 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196128969 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178954744 seconds)
  done (took 1.989701789 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208461795 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189967489 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463345634 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291977165 seconds)
  done (took 2.576268668 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142030008 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085315728 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066636505 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08619679 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126832313 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154189376 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096168731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.119961667 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077122469 seconds)
  done (took 2.336408539 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147671511 seconds)
done (took 12.326171415 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.200378232 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.133711699 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109539823 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087856583 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081103524 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074922412 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.212209222 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071827353 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087417187 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.233854344 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092366016 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.200122054 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079309916 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.154758906 seconds)
    (15/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.172796589 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088016247 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080334127 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.400863612 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.179455264 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07804812 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078496214 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181244668 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.180861529 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.240002172 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078422648 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07776442 seconds)
    (27/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217758118 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184843243 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133968485 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081018546 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077418039 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.181405183 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.179435992 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13690409 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087828945 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070161161 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13296013 seconds)
    (38/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121531879 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104953815 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0772965 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077059703 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168136862 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067213458 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175485891 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077750873 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095970095 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.20544845 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.160407265 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07592235 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234439758 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.231788129 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 0.197503941 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.069743121 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086459833 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09604689 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068009143 seconds)
    (57/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076895466 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.232596982 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185102143 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075598151 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068398965 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077470945 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067105914 seconds)
    (64/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1691688 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068999685 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079841753 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078295875 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067705065 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107099664 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145103859 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072378848 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071678862 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067559351 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12450243 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078696158 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.142132348 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092203642 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120862098 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094777842 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182958468 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.10253561 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.1404283 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080434665 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.181107477 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196492907 seconds)
    (86/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121214208 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.243731351 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.159146629 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.223392232 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071465322 seconds)
    (91/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073796054 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08180812 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.223852552 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.141019623 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.226495953 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068924002 seconds)
    (97/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.0721715 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093118437 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076297827 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124048657 seconds)
    (101/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.082045743 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073044016 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096585687 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089784372 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13702934 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07512214 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.237699005 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103320569 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.127350498 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06810445 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068608608 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068417634 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143976864 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176473123 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075377856 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091029838 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068785509 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068949829 seconds)
    (119/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090650557 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09059671 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091899189 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207837775 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076650542 seconds)
    (124/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080807165 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077230131 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.129309323 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0717658 seconds)
    (128/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.146351488 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06945177 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.143784687 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078241292 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068833989 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072556354 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076000926 seconds)
    (135/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.134153385 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092911858 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07905251 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.069695913 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17999967 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.0724659 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076556678 seconds)
    (142/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201533853 seconds)
    (143/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171145034 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077088405 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068768579 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075838502 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.216089903 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068170779 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079651148 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075055394 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199230877 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069683408 seconds)
    (153/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079324513 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076843432 seconds)
    (155/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070771175 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070999313 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.176640472 seconds)
    (158/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121476032 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089781144 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066709691 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076076015 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068091524 seconds)
    (163/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068396162 seconds)
    (164/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.080622472 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069390412 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068083772 seconds)
    (167/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080599309 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181586748 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068518059 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136357666 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090459188 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069270214 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068408684 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069724371 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128589861 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09144118 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07492255 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144434738 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177861525 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069450933 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176604974 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136619322 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 0.160272238 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068301231 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.090103965 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135578303 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079182882 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183771585 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179175942 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068071072 seconds)
    (191/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070252094 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068238726 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066971226 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076929095 seconds)
    (195/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09468123 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093504179 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068219437 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092110975 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068116674 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078151924 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072950684 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066560952 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070423001 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068825791 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.180445543 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132847162 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.23560386 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080784541 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080324601 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071021397 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071948706 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071002459 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07921416 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071487037 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.099080546 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072276776 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120460987 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079957395 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07941257 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078593798 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.071616459 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077134345 seconds)
    (223/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14687396 seconds)
    (224/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070736243 seconds)
    (225/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.08321881 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068623309 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069903072 seconds)
    (228/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.069307327 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078872596 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077076834 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077408104 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141426064 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077810253 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068645707 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083833905 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069596147 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077176322 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173183107 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069446405 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076768127 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095299082 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072139812 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070672823 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094027384 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068765544 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068610532 seconds)
    (247/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083157839 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.131289453 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070613293 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070242104 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075522366 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073214267 seconds)
    (253/309) benchmarking ("sort", Float64, false)...
    done (took 0.135779437 seconds)
    (254/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071029554 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073232335 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075106809 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067882056 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 0.136692734 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116430324 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07812186 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07018663 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077882162 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097668982 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068837118 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069516829 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132434425 seconds)
    (267/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070869552 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084768663 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077766297 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068618664 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068773292 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075843207 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147347038 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094991372 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067830884 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069180614 seconds)
    (277/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.081217003 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069598286 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070149023 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067900789 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080803566 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068360914 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068672745 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067735488 seconds)
    (285/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081783437 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068584471 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068766791 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.069006841 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076557613 seconds)
    (290/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069527739 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069307737 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072190856 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116295748 seconds)
    (294/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069524839 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069098531 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075434489 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068680495 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069581636 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091341945 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070190796 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068781575 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13058808 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068093443 seconds)
    (304/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081051876 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096251469 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068367486 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068197792 seconds)
    (308/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08044597 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067377012 seconds)
  done (took 33.903586168 seconds)
done (took 35.239084205 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084991919 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101984977 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075379236 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.0958848 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083283445 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099041528 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076099015 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081624085 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083698424 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082930622 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081439691 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07534506 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078076333 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077604959 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075958043 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101006668 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082963163 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076834964 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076894081 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068400647 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07753976 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069548689 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068042531 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075590355 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080719306 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075990506 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07831499 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078053928 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069226571 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069351937 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073646856 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07735923 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068387689 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081157452 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078262824 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077116971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078767935 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080960651 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06901755 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068700122 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078263087 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068785744 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077148858 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075617897 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073561787 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075113246 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077384534 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080727014 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100567522 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073969082 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078996274 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079337578 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080443839 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074172565 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07369012 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07674642 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074682663 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101113216 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076889333 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073881083 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078349554 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077588199 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074782284 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076352562 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076492297 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079011325 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080955332 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075369211 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078944941 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075457495 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068529516 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07653484 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073491804 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068487498 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079731521 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080878186 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06766997 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072967326 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0762889 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077372485 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068176135 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076688253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068236232 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073457041 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073103561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074774551 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073573936 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075801855 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068055464 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077487731 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07555834 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076678115 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067987403 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08136298 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068385798 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074354298 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068431569 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068121783 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068281021 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073257381 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068230177 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073273252 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076474885 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067279114 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072550491 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081424649 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068106509 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075100688 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067129075 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067933573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079473014 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077695737 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068014415 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07306942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067363881 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073392683 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067639889 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067956958 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06788156 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067583549 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072073447 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067695361 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073131715 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072801062 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080273417 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068133662 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072777164 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072501824 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067400131 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074039405 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067581686 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067674859 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066596979 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081135769 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072520531 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067725694 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073394951 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072969004 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075862156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067320921 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076459095 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073041851 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071670815 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073433393 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066567718 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078850008 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071809658 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071563977 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066343944 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067030601 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066072755 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066553624 seconds)
done (took 12.860706599 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070347932 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117897012 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096213739 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097101319 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086034658 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069935759 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076973188 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095347369 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070824261 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099902898 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091237949 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091643716 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113347139 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068421959 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06888168 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07000783 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07050577 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081830456 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097462863 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092442972 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108890306 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069167667 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089237354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088931737 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086677141 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091414065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070573626 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07094224 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072389916 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093697267 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095136944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072297398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070170033 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094190785 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087990128 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083384198 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069987453 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078751619 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070093579 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068740239 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070787341 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090606384 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077990803 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078739934 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070532011 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07689949 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070473468 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085490732 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090723219 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078784025 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085481494 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094402222 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073406495 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086133334 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068314395 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085809527 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079481765 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069924092 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070084356 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074483149 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069631381 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071773775 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080977003 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07907367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07390574 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084320552 seconds)
  done (took 6.79327763 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084511011 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094416555 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085782786 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086981468 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069056856 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069335207 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069598972 seconds)
  done (took 1.996795207 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067742495 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093549602 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093367563 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09360302 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08380919 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093959194 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076998565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069244611 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099022126 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068424605 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089698957 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100811867 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073870074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081634224 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095110107 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069132201 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094360752 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069218239 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070193043 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094668129 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073989079 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097021757 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081182377 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069883206 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082373727 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069846697 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102749902 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078170908 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070875343 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070860224 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070473947 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096908488 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082166512 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084172383 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07058814 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085003151 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083747205 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072830964 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080561275 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079460995 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083264388 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070652937 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068595305 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071082446 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073162544 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08176155 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068580029 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070990026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070918952 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089311681 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068306969 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082552845 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073320463 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076206111 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075652653 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074904564 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078289919 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071376159 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089357138 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070736134 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087298634 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086827364 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083013509 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086257154 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070012637 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08222205 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083665364 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070839665 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071295281 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.0710463 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086034082 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072959777 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071483535 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081211465 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069492443 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094067213 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093801384 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069344678 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083064043 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070221385 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070631121 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081445576 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094312415 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075923046 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070759204 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073962331 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071460282 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07244771 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068026412 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073313625 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070559991 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074912007 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070686793 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073194783 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071961817 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08633766 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068867275 seconds)
  done (took 9.067731085 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069664316 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06836519 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071406509 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069966775 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070327618 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07069044 seconds)
  done (took 1.884739755 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09174932 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069083132 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081745628 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070264946 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106206006 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086864227 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086997131 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080577321 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084404611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082840348 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086329813 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089538904 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091184409 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073170184 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086113744 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071503646 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086568548 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075533986 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081683188 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073274615 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084409743 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072984078 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073053856 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090186457 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074981259 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071692371 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08016398 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08195944 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081819472 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08079974 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072800401 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074747622 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076493815 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078675911 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084083696 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074952734 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068348922 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074372532 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071464623 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07319814 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087717132 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072682482 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073220595 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076042028 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079554977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.080241268 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077128918 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079044388 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086156517 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076961938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077084651 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071104845 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074160153 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077309384 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078599513 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079905631 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076434939 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086414676 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072738371 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077411698 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070181116 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07440498 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079610211 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074265583 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078325657 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077146595 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077869067 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073097424 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07286415 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070858534 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076845942 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070296754 seconds)
  done (took 7.088012367 seconds)
done (took 28.286837058 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.518907615 seconds)
  done (took 1.938287922 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616822557 seconds)
  done (took 2.065954938 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.514521081 seconds)
  done (took 7.959873827 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.38010005 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.455178277 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.744087524 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137119245 seconds)
  done (took 3.197770341 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707404858 seconds)
  done (took 2.163132222 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23550455 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228650125 seconds)
  done (took 1.92841353 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348354623 seconds)
  done (took 1.795901122 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.084373604 seconds)
  done (took 2.531678672 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233527729 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159569132 seconds)
  done (took 1.846872575 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446983493 seconds)
  done (took 1.895659961 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.216660622 seconds)
  done (took 5.67146213 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218367444 seconds)
  done (took 1.705137591 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234112565 seconds)
  done (took 1.686586045 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.735614435 seconds)
  done (took 3.186230075 seconds)
done (took 41.030371153 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082675669 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085208339 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084594263 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080961791 seconds)
  done (took 1.766855934 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074573661 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070646058 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077512446 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07326546 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076687848 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073343212 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074529432 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075592439 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072779619 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073245105 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073510279 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073101049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076382902 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075056123 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071913194 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076407597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076744067 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072956 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07599137 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073406227 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071469666 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075992394 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075806369 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072517447 seconds)
  done (took 3.235798777 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078460658 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075098552 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077490888 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074811494 seconds)
  done (took 1.769807086 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077219012 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087524547 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086502 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078194287 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090947653 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087170744 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069566319 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069544754 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070784227 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079517123 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069010759 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096023419 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088863649 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078970031 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081401807 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065985482 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068396342 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087497749 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079859253 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080131555 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070479826 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079717108 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068638333 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089743774 seconds)
  done (took 3.362943055 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081280126 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066941904 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083327083 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094311149 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095515578 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068977609 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083608051 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096671447 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139328567 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069128251 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074628803 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068692739 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107715451 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068544022 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084001378 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112365547 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11602879 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071994935 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101253667 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06906429 seconds)
  done (took 3.223525642 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083150408 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073498331 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07291245 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06872961 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078498526 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075327998 seconds)
  done (took 1.920618485 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068238257 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068249258 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069554698 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069280785 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074625695 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069288367 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06838554 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069872877 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069963807 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070365528 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069406443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068673911 seconds)
  done (took 2.300594884 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189953482 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069636227 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068679687 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066296684 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0719059 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06978411 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085011744 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07004904 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096944034 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069863749 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06912441 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071378825 seconds)
  done (took 2.463685246 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19015033 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076113515 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22426097 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146964096 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105462985 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112374449 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113937095 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110978743 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136367455 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100364108 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154589574 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161618655 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106328726 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130956005 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090492126 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.122324427 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145861202 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158121125 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102139279 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156587477 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136212433 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12542495 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145490559 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099850796 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104122615 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115735782 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07387806 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080331849 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160713436 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125342154 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137098307 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107524429 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093778466 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167754599 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162330542 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13321555 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144583357 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084582389 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121484317 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132393678 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192848231 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087358079 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149468074 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103015244 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079919776 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123638269 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109150093 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115744308 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102187157 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08946614 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279156788 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17644731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130736977 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087451605 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120034829 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108017836 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111910388 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116515245 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170457401 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152026407 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123239497 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071933547 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110464857 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145374208 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128420572 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107208305 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119873601 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091653061 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127202884 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150635919 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121030189 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137795273 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115439164 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087364146 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117686484 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132528935 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122970551 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165003644 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12068239 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073384699 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11798438 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097816806 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079479771 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143651755 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075912927 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166073773 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097682807 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123935484 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128040226 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106638491 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107395936 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152046051 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136870639 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104301539 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086589834 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101673502 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117302784 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139294342 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086960407 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106205056 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111650745 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078842609 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129069689 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074628583 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117605947 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094895438 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115155294 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120141688 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079428413 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117352342 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098829424 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098985461 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119543375 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145723661 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085458649 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079634525 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153666969 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115492808 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099362218 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131886964 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146855829 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117512411 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093929846 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134256163 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151158454 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084113708 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141613319 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095024335 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079416996 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.097540442 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11228878 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101729307 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.112419258 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076629738 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108465281 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142669432 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071914088 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09143649 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119077104 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077395101 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076852129 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094376978 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095855266 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092514474 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094211915 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.095984129 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120319579 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110774343 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097595587 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11041959 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091853465 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141880822 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08159401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099386184 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097634816 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068405276 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.117002227 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136465767 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076712391 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140425977 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.108122819 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105231035 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108793199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078255514 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123811737 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076865207 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070969844 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125897921 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10633808 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101451133 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.133885944 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.368544524 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122244348 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120795631 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131914585 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128156584 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128994348 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108772106 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092079776 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116316745 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12923656 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075625951 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093937542 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08483832 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104149955 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096448538 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086089637 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137267701 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120717497 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112404592 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114315825 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096751695 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144746998 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079423973 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121690353 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120397116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096070642 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150291004 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147155163 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129432455 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100231205 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131402795 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073075535 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075360445 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090238326 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119146344 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082350017 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082893227 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108635266 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141994026 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122413948 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131951685 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12227453 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115563409 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153028569 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073792647 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120189199 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139280092 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118981793 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104733671 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092865292 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098539861 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139063647 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10363857 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174231806 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111627525 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120041797 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149265831 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101705548 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080258961 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103447803 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125951213 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100119966 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.29227919 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097646778 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088215633 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107783918 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078933375 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098489589 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122086428 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115861389 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135699403 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111039708 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127758647 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07900753 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110951432 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121391295 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120404909 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085672128 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115556942 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159444413 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097073566 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113787628 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145378799 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080095536 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138038033 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164864385 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137603176 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085536208 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104561968 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11904411 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12220134 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116743277 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134003275 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104302573 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134404945 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11089778 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084896234 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086756324 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095739603 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102951708 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.11290688 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102935709 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113280814 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096272276 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12516401 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102446414 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109506411 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115596651 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099035792 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095591254 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096086353 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164739837 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1157093 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160026597 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09943227 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134905815 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152527467 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075898783 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079137844 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080255937 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132424524 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083899707 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125027531 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262512392 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113300011 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118922104 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133232859 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096599061 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072090705 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108562467 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128959603 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120172359 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096476275 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104191381 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152821099 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117689088 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079542603 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11173481 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115214256 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10359351 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167837183 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082872888 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109069807 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077605085 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080665371 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123957835 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144287731 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08339331 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103898173 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118330299 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108920965 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123392708 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097887593 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110524194 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128581352 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139618308 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123651428 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090158175 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109794615 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125488434 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147643052 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103173468 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100443617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167620541 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144471825 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153255172 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088252317 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115552604 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112357671 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108366257 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132624824 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084561824 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152853562 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081798105 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127861363 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10017907 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089630418 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123063186 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110510831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087752943 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137527464 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113716742 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082411972 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080099053 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260145322 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116895027 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102520636 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075707731 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133796369 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074573259 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13096372 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161570674 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081209119 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104648187 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095819056 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083111976 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102865464 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101460894 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086259124 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100134656 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163399855 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088732063 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140854605 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127801367 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110234012 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132427089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103532897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642263488 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080495297 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146512609 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114226027 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167358105 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097578906 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115942346 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109339039 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118613688 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135517238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099577831 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176987503 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126453124 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116964116 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080032446 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099771809 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098933831 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087811166 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10348465 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111801471 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111352273 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094796885 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116627254 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117825502 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081295522 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094930754 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147815516 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112957735 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136236592 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134477104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084490846 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115427126 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131325641 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079642569 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114976832 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143635036 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256828671 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10037731 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083324455 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100581488 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1653027 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073532206 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151648369 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118171386 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110096758 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11488847 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109329041 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126725229 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102341481 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11892853 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093828774 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108903611 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149302668 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084175021 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079833045 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104806843 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10965347 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098072853 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09638369 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09984572 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146251022 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072927975 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096534965 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113275065 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139443947 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161996917 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105280241 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084571102 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116620495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117200242 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113086194 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119083766 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081500944 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081664005 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082029876 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.10203096 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125271067 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112069745 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116965317 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107463343 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153215651 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084144418 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226744002 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09566327 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104562564 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090449415 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080820355 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095492021 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096242413 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10262362 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110454231 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165748938 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095194621 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088796764 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0902041 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074756393 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082523896 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120802516 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104573125 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111127053 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102426846 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080439687 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250982155 seconds)
  done (took 57.549995943 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120404849 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.09946354 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099361336 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144823062 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122437941 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200063051 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151722314 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1899619 seconds)
  done (took 2.744494308 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070955544 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094564409 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105013756 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086492467 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06752604 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070624484 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228631803 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084694867 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067642565 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091905237 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079875931 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071057892 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.450446585 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072733563 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07224858 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080511098 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068227878 seconds)
  done (took 3.451129479 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385724237 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608281964 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350761204 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080180341 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.009194635 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094041065 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.211284331 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14329501 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082788401 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538839673 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370878838 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1336648 seconds)
  done (took 18.608271427 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082552477 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078389675 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094417709 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093851192 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080363694 seconds)
  done (took 2.027244039 seconds)
done (took 105.892362177 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08184744 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432776167 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073357609 seconds)
  done (took 2.131499705 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09189858 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090466207 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092687441 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090296144 seconds)
  done (took 1.977781921 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075772202 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078710852 seconds)
  done (took 1.758912073 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234411663 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181026654 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101306272 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084047439 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081020322 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081896831 seconds)
  done (took 1.857337064 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073274779 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073291961 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076081083 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077181446 seconds)
  done (took 1.904349947 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068656948 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069440346 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071786362 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07481525 seconds)
  done (took 1.890724688 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085216236 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08648843 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08017897 seconds)
  done (took 1.858225022 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101030722 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091840811 seconds)
  done (took 1.798381581 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081460277 seconds)
  done (took 1.685890109 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089442759 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099812876 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136037287 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118591208 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144254901 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120483012 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088730626 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088664575 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082825744 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089794701 seconds)
  done (took 2.661469268 seconds)
done (took 21.720046627 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079756812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371251895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363748418 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094969932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.681427088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360669294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001492783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097405916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145923975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072243502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089707052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.660572492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990388974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327817185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977938306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326476386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654733116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072369543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071599584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07229959 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985884901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072018256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071668994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072624629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653942726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377207804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072640793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328976375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073113203 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075492276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360541156 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073122665 seconds)
  done (took 16.315811036 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071002302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121917694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076788672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089269332 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073985903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073609703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076066358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073509362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125631341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07293368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090318859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072075611 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076072695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072673961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093250891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072804069 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073848387 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073767638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073562293 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073414909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093000642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072829357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073713272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074569013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073467337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085942151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076773155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073589873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073505826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075220947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075692258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072848998 seconds)
  done (took 4.168887433 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117217366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12600201 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074174196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107938872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115877261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07495461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151398243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098588446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133452936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072479215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08985009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073294526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108311302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07352165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092805852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074136324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074449802 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074133388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073129314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07334852 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092455826 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072263335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072184183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074354118 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073979242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087987875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073193333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073720124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073787753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075670112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076776606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073954951 seconds)
  done (took 4.419900383 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071322939 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073746087 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080693856 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081793977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06919205 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072056392 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073722915 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070224516 seconds)
  done (took 2.216989468 seconds)
done (took 28.733766214 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078946374 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068732699 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072504566 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08739432 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074327401 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080146085 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067275767 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077487486 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075249917 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075479584 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077051263 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071004217 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073694489 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068666232 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07618613 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069860419 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08486776 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073994502 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083909065 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084883839 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073547415 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076379982 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07869789 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084633519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084707309 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084898268 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080018713 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076280338 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071436219 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073896091 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074145016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082237468 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084689257 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084831952 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070799533 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071454038 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07455609 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072280084 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086001541 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079924607 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072900696 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080013564 seconds)
  done (took 4.836677356 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085014151 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089504652 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082493529 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080031937 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090583689 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083035886 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087014288 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078767536 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07848684 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086721885 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075593464 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082312586 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07957371 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073548788 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077865366 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075462069 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079892459 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074808458 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07874118 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078506623 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087645135 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07368107 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088817864 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080692686 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076089074 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08174631 seconds)
  done (took 3.740362541 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074391478 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086322904 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096019777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149141675 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116471527 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084791745 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085867089 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096078452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100863633 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072113017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076164638 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096405696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096104772 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07819099 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071880192 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08846141 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087592389 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07339844 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079699871 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101155009 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093643112 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089026977 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098520699 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088628831 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071264964 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074576038 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076257567 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088526411 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074309377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083730521 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074598848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078243297 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072951754 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082047624 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073824483 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070533156 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096131253 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082857968 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08386546 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071836005 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081192074 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072259592 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097306501 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132892131 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070502901 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075395523 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075580105 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082660404 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070589665 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09982294 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084021768 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07130238 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071914777 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070599755 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070820108 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073681079 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073227633 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073872345 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081444053 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078218306 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093587748 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076574291 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089425162 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07094107 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081813792 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.0705129 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072513074 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070228322 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099390416 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073068268 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116748312 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072276345 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069901014 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082332005 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081691378 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077520855 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070861936 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089090695 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082569176 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075536471 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079610783 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075369121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075127832 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102005051 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07156815 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07113012 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070145716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075394714 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074819662 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071996722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083524609 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070933588 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075263478 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089172061 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070422074 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071909371 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075100083 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073060402 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070357206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083103778 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075392099 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072549915 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082238083 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071884793 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074735784 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084719186 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078340317 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070010197 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0741107 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074533998 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072742299 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072619566 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075342942 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072928 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077999488 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077694323 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077091263 seconds)
  done (took 11.110931745 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165006986 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161704161 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073900114 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153065564 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079995668 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084070607 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156663987 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099460002 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071886403 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073028584 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072115772 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113931465 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109848957 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122889097 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086105248 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073249412 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094790212 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119241526 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158158174 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15285626 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095060161 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080215906 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074770189 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073371514 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074048596 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082223581 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090344567 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078907248 seconds)
  done (took 4.540919674 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078171469 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105064455 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076342803 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095349665 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091330031 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072439033 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073878658 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073436119 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088355985 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080796387 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072094166 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077625411 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076645741 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075192349 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072795197 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078710273 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07968801 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071728401 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075741482 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077966246 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082523166 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097393712 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075816333 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071941071 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074671703 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070880616 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078732998 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083099697 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070556882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106901812 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069613486 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077313463 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.089024166 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072408297 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071445779 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071906605 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071888161 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071818728 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073256003 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070385024 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070594126 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075786533 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070676545 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079558373 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084897612 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073740122 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073706402 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074915006 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074933896 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069554902 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074819907 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074719128 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075140417 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078917224 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07633565 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07465001 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0734685 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099456084 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078177793 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0713801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070699075 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070581952 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074088619 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081305478 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087274702 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073227211 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070306323 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070766481 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082389823 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082250488 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069052002 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074445646 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066936065 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071739031 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074103542 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073595925 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072142197 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069663719 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070225899 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074985797 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073319656 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071417544 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071419148 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074834537 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070130724 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069691844 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069744363 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071158363 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077912081 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068296967 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073430366 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070436716 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068471765 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072311837 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074512267 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07401184 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08197999 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081927051 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071262341 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069339388 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084579885 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073738948 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070641101 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076988513 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074497869 seconds)
  done (took 9.642606777 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091816834 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070886014 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087725179 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095608355 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081405745 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078227913 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081806667 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072336312 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088767302 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077359523 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079670576 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070780729 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082451237 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081949597 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072706573 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082572575 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07498121 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090022975 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087149163 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070515679 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080464069 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084354022 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084167337 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08683042 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086095747 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087330496 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083945264 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082285718 seconds)
  done (took 3.971466555 seconds)
done (took 39.459691261 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.71478228 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.871148301 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.692666469 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.892680421 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.876641224 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.708772008 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.782829405 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.686588988 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.962059175 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.73148091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.01035627 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.933046631 seconds)
done (took 64.631504685 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.714586542 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.844810679 seconds)
    (2/2) benchmarking "String"...
    done (took 1.945256648 seconds)
  done (took 5.487785754 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.908412925 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.555395249 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.926686388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.689280927 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.694836829 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.965067265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.463299157 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.132816226 seconds)
  done (took 30.057422532 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.873684571 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.920673088 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.402460684 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.428689352 seconds)
  done (took 15.302003376 seconds)
done (took 62.188105713 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.704765006 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.727068492 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.693133305 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.688689269 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.782712652 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.6978896 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.787645466 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.925967939 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.691872702 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.700143934 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.693797041 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.172522206 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.69308294 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.832009113 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.693722492 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.692018057 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.697804699 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.219268762 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.843985377 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.698727237 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.712559562 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.729962591 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.692981345 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.694275392 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.73914691 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.691718815 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.059108762 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.695376149 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.302938689 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.692995221 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.726759893 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.005635355 seconds)
  done (took 202.011034382 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.689487653 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.512999758 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.592818694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.695093747 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.784742341 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.884659972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.794947061 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.038623182 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.696174782 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.723699662 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.830794362 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.691414592 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.870440224 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.664593429 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.727898319 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.781877774 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.855271841 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.901646065 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.73087491 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.855080379 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.703244054 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.72594101 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.663005489 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.821347193 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.711622025 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.784582996 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.700931576 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.839014178 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.883543826 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.80447415 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.722016975 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.711189703 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.911930533 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.563450779 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.700323898 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.699406506 seconds)
  done (took 165.902056359 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.906200743 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.692272874 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.691900887 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.694408237 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.703629666 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.691121401 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.692196896 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811958506 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814642073 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.35366593 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.056497603 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.749824072 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.691756475 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.45740966 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.694425871 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757668892 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.704521263 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.693028425 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.707727755 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.719118434 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696349408 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.693462593 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812113082 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.708359821 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.69507066 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.703136765 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.692919264 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.697836736 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.081386675 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.692155296 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.873313215 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.698683695 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.699611188 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.949734417 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.695204189 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.694435982 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.516183698 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.498736272 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776348263 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.694897922 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.69846803 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.69262625 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.910775464 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.694254864 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694074175 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.693613836 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.693697061 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.695278744 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.808836693 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.698076516 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.813989358 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.697711091 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170194687 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.698345196 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.696190055 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.974104245 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.274823692 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.698863098 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.696587631 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.694287366 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.696140849 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.700859253 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.95290874 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.764980625 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.695901663 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.696245716 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.700162617 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.694541094 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.824130675 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.695984076 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.084354511 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.710275679 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.81746622 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814262944 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.700405169 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760016177 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786199388 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.696182781 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.696294249 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.695545916 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.695026499 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.775562578 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.695876005 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.782284868 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.706943964 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.697679196 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.749599842 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.764975764 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.697359886 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.52341322 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.698791956 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.695518168 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951334981 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76348764 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.69660958 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.697449741 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.6959155 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.786308528 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816972085 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.408083885 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.699992503 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.696773632 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.0231887 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.781175519 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697953461 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.814706832 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.701982541 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.776335813 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703889721 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.698717783 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731318099 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.698360588 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.707497234 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.698217464 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.072805762 seconds)
  done (took 391.280251649 seconds)
done (took 762.788227529 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.3117125 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.27900002 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.371749181 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.290528 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.268990596 seconds)
  done (took 13.158652543 seconds)
done (took 14.795432007 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.773577443 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.782257236 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.715610961 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.77690643 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.712493153 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.778288604 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.762763567 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.721362649 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.747123265 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.721515614 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.746121336 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.720603568 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.704783459 seconds)
  done (took 24.301330568 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.925165688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.92343038 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.762060669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.919978235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737120662 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.923168244 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.851104989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.837680732 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.843238017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.710094467 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.704294316 seconds)
  done (took 21.776849466 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.927554864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.933351383 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.770374491 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.940505242 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.74201714 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.926969793 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856297854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.847993272 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.840972289 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.710717478 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.70680608 seconds)
  done (took 21.842279756 seconds)
done (took 69.557359002 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.702589131 seconds)
  done (took 3.342987238 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.720875357 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.877610426 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.702696906 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.704510144 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.702096205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.703794577 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.701883519 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.703572502 seconds)
  done (took 15.458607555 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.702083923 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.701120624 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.702616749 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.701804533 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.702512614 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.702574383 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.703224256 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.702394161 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.701965217 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.702355254 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.702146884 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.702609642 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.702540908 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.702665649 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.701916078 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.701544674 seconds)
  done (took 28.876784064 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.705158707 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.703141793 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.700677233 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.702932461 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.701963541 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.703518903 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.703383976 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.703055069 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.702434877 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.701762551 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.703186921 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.703867125 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.703908287 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.702001626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.703774791 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.703636304 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.702837969 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.703155369 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.707339698 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.702217441 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.704081378 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.703456699 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.701765585 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.703213489 seconds)
  done (took 42.519754964 seconds)
done (took 91.837654186 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.435639191 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.300039018 seconds)
  done (took 9.377097214 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.707925722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.703548033 seconds)
  done (took 5.119086246 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.704250797 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.703542208 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.70385044 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.704553078 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.703554059 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.704586195 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.704865306 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.704458383 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.704360866 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.704323237 seconds)
  done (took 18.68558225 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.704337777 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.704452343 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.704735937 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.703908534 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.705041656 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.703834769 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.704147349 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.704200282 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.703386424 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.704914646 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.704395341 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.704988074 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.704754749 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.704668661 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.704851376 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.704572674 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.705250182 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.705159718 seconds)
  done (took 32.324653228 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.705681279 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.704607797 seconds)
  done (took 5.05264979 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.704629597 seconds)
    (2/7) benchmarking "second"...
    done (took 1.704202364 seconds)
    (3/7) benchmarking "month"...
    done (took 1.706371787 seconds)
    (4/7) benchmarking "year"...
    done (took 1.705807447 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.707066611 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.705123731 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.704715054 seconds)
  done (took 13.580782994 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.706265141 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.851958073 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.916957055 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.342180909 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.707431259 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.707974243 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.615375157 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.709314883 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.710524378 seconds)
  done (took 18.911169268 seconds)
done (took 104.691806522 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.525482121 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.706426969 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.979404063 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.764179304 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.717023542 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.999222172 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.732070288 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.969611847 seconds)
done (took 42.036408472 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.789515783 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.403998912 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.436750473 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.735164221 seconds)
  done (took 15.220832866 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.704448827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.013151275 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.728247627 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.565853647 seconds)
  done (took 21.660150164 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.069793622 seconds)
    (2/2) benchmarking "read"...
    done (took 2.049953454 seconds)
  done (took 5.769463088 seconds)
done (took 51.084901685 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.706727223 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.706346838 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.706862295 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.70699448 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.707281106 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.707039751 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.707799215 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.706958451 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.707087338 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.706712776 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.707932406 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707241486 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.706488936 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707643398 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706912855 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708562966 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.707468859 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70881166 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707198306 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.708192936 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.707599059 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707673318 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.70806293 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.708592481 seconds)
  done (took 42.624397245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.707704826 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.708174025 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.708900548 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.707326102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.708127353 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.707754203 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.708835549 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.708095916 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.707551369 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.707766767 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708449341 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.707460751 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.707758361 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.708361227 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708282123 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.708457999 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.709828404 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709308729 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708674062 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.709293041 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.709059789 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7088798 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.709205549 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708663055 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.708659759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708499603 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.709165086 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.710103 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.708954247 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.70898955 seconds)
  done (took 52.904153168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.709155443 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.708593025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.709668407 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.708688754 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.708974977 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.708161951 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.708027006 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.711194073 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.709831701 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.709328956 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.709275434 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.70932758 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.71011322 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.710606514 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.710324884 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.710193557 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.710530479 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.709931275 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.709850372 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.710318022 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.710269709 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.710023014 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.70977636 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.71029959 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.711417889 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.710229581 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.710570349 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.711486858 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.71044632 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.712479996 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.71184949 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.709966488 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.710724297 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.711449582 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.71121057 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.710790057 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.711244207 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.711159164 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.71155223 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.711415945 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.711371434 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.711231591 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.710563356 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.712247233 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.711048757 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.712087796 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.710613887 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.711062328 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.712976808 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.711635273 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.711349407 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.711127958 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.711277462 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.711623448 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.711575568 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.712704069 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.712163358 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.712865999 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.710704795 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.711570248 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.711869969 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.711621252 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.712588487 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.711990293 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.71230365 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.71352827 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.712872406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.712985498 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.713125663 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.713296792 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.713441289 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.713061 seconds)
  done (took 124.844983135 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.712820438 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.712023767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.71306871 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.713877889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712556383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.712709035 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.71464046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711853199 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712533139 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.713344562 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71367899 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.713264956 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712948182 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.714221121 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713942564 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.713546547 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.713070707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713766726 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.713533732 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.713981113 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713612343 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.714028485 seconds)
  done (took 39.344550619 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713739082 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.713232745 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.714321843 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.713986138 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.713367575 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.715517291 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.714597187 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.714540156 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714769053 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715026626 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714578911 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714394235 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.714813428 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71468264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.715220378 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.714159543 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714701434 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.714734123 seconds)
  done (took 32.513113152 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.714741222 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.715126751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.714857927 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.715583953 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.713812156 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.715205013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714639311 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.714812214 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.71452526 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.71511306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.715504224 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715822055 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.71597529 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716232393 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714724015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.716102332 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.716193517 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71521724 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715298844 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.716536711 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.715949552 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715979512 seconds)
  done (took 39.392269498 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717357817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715501378 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.715678145 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.716378507 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716545912 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.716338111 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.715821423 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.71621073 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.716002695 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.71661577 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716523347 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.715996217 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.715864661 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.716370764 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.716330175 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716520398 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.716216899 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.716360114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71634444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.716977716 seconds)
  done (took 35.981515088 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.716014256 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717363361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.718043319 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717183308 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717580463 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.716924548 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.717423518 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.718045192 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.716479831 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.717247849 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.71848175 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.717943908 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718071792 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.717378024 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.718102215 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716996051 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.717310913 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.717664839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.718132013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718269278 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.717476443 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.718754334 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.718564318 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.718811668 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.718732377 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.717499233 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71905345 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.717498062 seconds)
  done (took 49.752444944 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717486628 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.717854646 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.719358986 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.717555915 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.718833708 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.719061887 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.719393091 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.718547271 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.717954101 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.719785732 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.720083891 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.718261184 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71921683 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.719276486 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.719227908 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.719335327 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719082284 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.719870576 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.718708627 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719662437 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.719363013 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717937107 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.718375546 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.719094989 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719493719 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.718716987 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719228945 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.719640653 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719815246 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.719588566 seconds)
  done (took 53.226304923 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.740447765 seconds)
    (2/2) benchmarking "in"...
    done (took 1.741119739 seconds)
  done (took 5.138721913 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.719344466 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720377988 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.719942952 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.720008608 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.721582178 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.719983169 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.720554746 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720455672 seconds)
  done (took 15.420488905 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.721148004 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.719404352 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.7200156 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.720146168 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.722698689 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.721497359 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728601195 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.721331017 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.722864977 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.721321664 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.729552297 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.729653797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.723887998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.723715311 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.722698436 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723366936 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.720026189 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.72141382 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.721971863 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.720717547 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722510427 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725595565 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.724783923 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.721393049 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.724833876 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.734608211 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.728158403 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.720517737 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.723251672 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.727656973 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.723509077 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.722476089 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.721420952 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.721810869 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.722829531 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.72210614 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730161351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723327553 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.728620743 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723745452 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.723408448 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.721702202 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.724294202 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.724642281 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.726368671 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.722724397 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.723116486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.722032237 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.722203941 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.726151202 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.729578274 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.723397157 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.723828282 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726672673 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.725335828 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729946579 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.723793473 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.72691442 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.733033964 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.733816583 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.736756877 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.733009589 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.726186088 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.723641288 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.733347033 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.748321545 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730691315 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.722908805 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.723272219 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.725534176 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.734475437 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736939379 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.734232518 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.724805675 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72481879 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.723003029 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726210345 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.72483791 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.731428454 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.728967459 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.723604918 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.724593142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.733846103 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.749512855 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.724948234 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.72387473 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.725874246 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.725334319 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.726414741 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737112615 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.725531637 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.724036307 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.725316651 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.726327053 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.725820544 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.725581016 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.72459753 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727344794 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.725164698 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.724865738 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725281168 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73005378 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.737132141 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727329106 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727348238 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.734310908 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.726642204 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727636218 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.732607796 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.723578926 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724917547 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.726329121 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.73153697 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.724963402 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730371593 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.734594492 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.725345135 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.7289325 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.726972458 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.725769898 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736146732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.754201309 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.7261165 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.7256022 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.731237696 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.738232932 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727731621 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.732036515 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.727322653 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.72563459 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.726639579 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.729554842 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.726331136 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.730317081 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727980483 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.729717338 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.727018124 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.72699252 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.727247366 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.729774174 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.72863452 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.729757211 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.729999457 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.73120157 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.728325341 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.731672763 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.735489262 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.727762871 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.731304644 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.729831283 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.727567958 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727519511 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.729619929 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.727439457 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.727388366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.728102587 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.729463655 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.728583439 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.73075031 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.727125612 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728811549 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.728223502 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734342896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.728444439 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.733262512 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.729611892 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.727678767 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.729244011 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.728536741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.728355465 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.7287657 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.72707568 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.73213039 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.73781685 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.727934197 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.729769275 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.733230054 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728506932 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.728641226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729953335 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.732209757 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.739555284 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.727810119 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.736104447 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.730606839 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729585934 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.728729422 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.732215872 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.731554301 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.730463256 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.734733612 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.737459899 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743016908 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741015638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.730122628 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.733096339 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.731603505 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.735666686 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.735654695 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.729910883 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.73018988 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729164689 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730469909 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731039778 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.733198361 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.731008736 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.729393076 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.730273713 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.730042385 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.730536885 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.730411145 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.732773861 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.733219811 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.730244346 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73024154 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.731641982 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.732548595 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.730005202 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.730227856 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.729683528 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.730989512 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.731256887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.737761363 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.730839033 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73349179 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733376912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.732855801 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.730716954 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.731552312 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734587933 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.732402048 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737990359 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.733399609 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.733557515 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738695395 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.733133334 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.732189468 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.735231064 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.730757152 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.73192894 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.735832788 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.739428523 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.731649739 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.73216142 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.731760328 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735187437 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.731243671 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.738931104 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.732287802 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.734096188 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.733316028 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.734742131 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.732789796 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.735538079 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.735275654 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.734187741 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736814278 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.732707584 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.733247405 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736066718 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.732098004 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.733989916 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.733048876 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737320054 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.741456239 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.738379094 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.734907236 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.735506292 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.734758218 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.738178287 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.735487608 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.732747012 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.734309357 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.74532667 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.741574035 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742598005 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.737374262 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.734703735 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.74248177 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.735009706 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.73837286 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735022279 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734792681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.735471307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.735618609 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.732637445 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735649817 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.734523543 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.737638622 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.736492334 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.737443234 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.734511478 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.735962381 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.73555993 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.734572047 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.734750868 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.736119797 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.73414538 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.737646234 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738608622 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.735016057 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.736885996 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742160829 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73657701 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.737593645 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.735306853 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.737585907 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.735274719 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.738657659 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.73516527 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.740355458 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.743446654 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.738263644 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.747398063 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.738569672 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.745746269 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.736489825 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.739573462 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.745431722 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.736145579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.735692894 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.735666304 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.734984375 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743826293 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.735529726 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.735849898 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.74067176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735617387 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.735784787 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.735146483 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.736021657 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736607245 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.736058151 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745779299 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.738166917 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.742213718 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739519428 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.735731563 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.736547527 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.735498481 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.736419058 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.741828556 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.737645467 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.737912767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.738285703 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.737226922 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.736349315 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.73763957 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.737317186 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.736155802 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.736790523 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.745063123 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.738245215 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742175192 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.736627211 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.745674034 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.737882232 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744427541 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.738698103 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.738633942 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.738401012 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.737438585 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.738760992 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.737416336 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.740272543 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.737215297 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.739649161 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.741653264 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.738421237 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.740460859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.741669936 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.738681109 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.74054948 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747717203 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.762800429 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.740163227 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741355975 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.738312216 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.740882382 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.742672157 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.738264199 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.738186048 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.742950283 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.750387226 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.747388973 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.739624422 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.738922076 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740331054 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739570276 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.738183673 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.739080598 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.740678604 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.739637491 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.739417316 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.739876591 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743769019 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.738912715 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.73979304 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740881511 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.741795426 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.750998574 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.739036225 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.740975898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739939716 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.740020753 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.742278846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.742512255 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.739827342 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.741713565 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.742015948 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.744827277 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750391511 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.749438573 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.7463332 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.742876353 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.741852741 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.74361543 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.742722905 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742876203 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.742418547 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742020881 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.744548235 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.74415752 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.745300146 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.743138341 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74386407 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.743798834 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.742951719 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746774034 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.752294623 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744833342 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.742919225 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.743490342 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742298918 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.744313876 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.744103867 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.752760358 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749031119 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.755789191 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.753162519 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.747960156 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.74595325 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747984604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.753580492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.742370507 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.744876283 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.743224941 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.746699334 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.744497315 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.749658381 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743771287 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.751787201 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.745845422 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.744140896 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.75185059 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.748151503 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744465471 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.747008464 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.749531836 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.745968692 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.744275521 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.744531708 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.74676908 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75156942 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.746924475 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744328165 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.748091782 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.745157307 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.747397982 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750339998 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744533451 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.74740751 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.745527062 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.746944648 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745471365 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744614423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.745185112 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.746217706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.745578277 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.750359701 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.753320744 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.74485656 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750132545 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.74709832 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.747074744 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745785426 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746645857 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.744697019 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.745201772 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.745954994 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745735699 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.747326768 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.750419578 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.744778984 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.746680933 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.749434656 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745885483 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750440668 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.757753078 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.75404526 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.747409929 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.747768633 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.747900911 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.75143675 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746709781 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.74688359 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749148922 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.750653046 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.747574373 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747851133 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.749077533 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.750941362 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764424915 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.749378679 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.748289332 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.748412204 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753056483 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.748333733 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.747419202 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.747726803 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.750277704 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.752037518 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.756130012 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.748738711 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756844348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.749225696 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.749775224 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.752494714 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.753021337 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.756131028 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.752505332 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748786707 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.748914403 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.753808776 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.767588831 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749326884 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7584829 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780340599 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.749206824 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.749351125 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.748451913 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747807144 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.749160889 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.750719822 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.748566767 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.749754196 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748621451 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.748354346 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.7502996 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756897247 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.751659341 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.748698121 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.748956471 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.748330905 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.750655857 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.748201977 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.748146637 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.748019501 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.748868233 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.749169083 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.751671032 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.752105484 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762024396 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.760009318 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.750097625 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.748846404 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.749519797 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.753980589 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.754860985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.762311435 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.757474543 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.75029823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.750161755 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.752582712 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749955899 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.749545559 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.751516793 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.752397946 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.753134508 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.749862324 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.761869103 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75926262 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.755638107 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.749932451 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750076902 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.750753727 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753238567 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75035282 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.750194477 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.753048026 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.752392421 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754585492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.751017769 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.75135844 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.754523975 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.759094083 seconds)
  done (took 1037.508833931 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.751279345 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751200522 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751675706 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.752294823 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75174368 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750134473 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.751510243 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.752696623 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.752830214 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752003004 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.751529301 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751778817 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.75264971 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751230165 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750817894 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.752223314 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751404314 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.752786517 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.752237959 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751705233 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752320461 seconds)
  done (took 38.475806457 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.752604429 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.751963867 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751564166 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75246837 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751768115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.750996217 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.752820981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752719609 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751139027 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752016369 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.752832988 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751958465 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.752317813 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.753457985 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752459279 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752533884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752043736 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753182019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.752814876 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.753085178 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752230713 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.753370659 seconds)
  done (took 40.241212031 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.753325029 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.752436557 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.754915061 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.75388667 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.754437272 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.753845748 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.753916525 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.752907328 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.753785034 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.756085094 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.754308118 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.755075678 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.762459581 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.761798621 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.75632384 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.755172066 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.901755683 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.755026883 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.75449472 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.755155744 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.753781108 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.760516766 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.75286579 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.755419689 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.754891073 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.754332873 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.754577498 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.753873469 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.75440968 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.756274789 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.757951705 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.754621457 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.756842282 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.758535703 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.753600698 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.757476048 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.758690811 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.755357985 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.75387399 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.755340714 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.76571633 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.779996677 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.755896987 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.762607517 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.754808684 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.75380525 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.759175177 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.763659633 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.755135643 seconds)
  done (took 87.906187746 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.753739915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.754863367 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.755792308 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755117567 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.754592024 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.755533866 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.756176615 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.75477587 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.754409118 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.75444539 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.754179044 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.756140748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.755624594 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.755551297 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.756413987 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.755071926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.754340702 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754574778 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.754255044 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.755784981 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.75340744 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.754431846 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.755781374 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.754148898 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755362084 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.755139252 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.754784057 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.755043529 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.756797264 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.757020275 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.755999156 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755879801 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.755942381 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.757466134 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.755697755 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.756160399 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.756772162 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.755025963 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755161732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.754861739 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.754376164 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.753773925 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.75460495 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.750035392 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750445244 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.751583231 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.750907589 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.751352808 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.748587347 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.744939652 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.745405042 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.746211275 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.744513179 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.746589114 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.743524352 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.743430285 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.743309612 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.7436661 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.743276867 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.744305654 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.742924494 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.743180881 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.743811203 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.743572963 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.74208818 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.743512932 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.743430053 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.743445368 seconds)
  done (took 120.807723016 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743502456 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.744242688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745407291 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743200231 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.743677894 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.744612116 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744965307 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.74469478 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.744453016 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.745112192 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.744450484 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.744501365 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.745262253 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.744423172 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.744378999 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.74456838 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.74477527 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744827846 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.745616851 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745024747 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.745682884 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.746156522 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.746196385 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.745084815 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.745164323 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.746043195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.744895455 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.745171392 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745047663 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.745516932 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746086171 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.743975105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.744574915 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.745273106 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.745113188 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.744203456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.746236087 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744931361 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.744930555 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.745652091 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.744896975 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745537164 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.746283768 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.74465753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.745421326 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.745335158 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.74656434 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.744942978 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.747308481 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.74521521 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.745906591 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746373213 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745324355 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.74670391 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.745331519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.746398705 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746742776 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746268566 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745951837 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.746595563 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.745391517 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.745451087 seconds)
  done (took 109.889368149 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74445862 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74508954 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.746301703 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.745381302 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746001174 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.74652198 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.746366667 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.74599711 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748869581 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.747542246 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746749648 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748109985 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749103694 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746911584 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744806216 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745247004 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745318565 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.744001983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743913992 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745999829 seconds)
  done (took 36.60521009 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.744624232 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.744614795 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.743977026 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744991174 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.74339138 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.74340425 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.743506437 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743572938 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743114973 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743730451 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.74307732 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.742942156 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743209117 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743468748 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.743442859 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.744394406 seconds)
  done (took 29.580583043 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.743163248 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.74526511 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.744205497 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.74425642 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.744333634 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.744098674 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.743886302 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.745314944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.744809245 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.744298761 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.744233518 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.744659212 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.743342828 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.744456113 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.74456417 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.745260369 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.744210367 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.744097206 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.745019162 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.745251944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.744927046 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.745683834 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.744158988 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.744946098 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.745398677 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.744759135 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.74506415 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.744902937 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.744324541 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.745297186 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.745364298 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.743899949 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.744647553 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.744909616 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.745780641 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.744014942 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.744046907 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.744647169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.745079895 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.744487643 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.744803079 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.745464137 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.743745586 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.745142167 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.74449005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.74502887 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.744503637 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.745687113 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.744892902 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.745502077 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.745852079 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.744598625 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.745325053 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.744726516 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.744572774 seconds)
  done (took 97.640846098 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745489637 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.744585298 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.743927262 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.744039999 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.744372868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.74514476 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.742108714 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.744167068 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.743660335 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.743455996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743936212 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.744499952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743023398 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.743050417 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.742969763 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742576688 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.74274637 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.743894351 seconds)
  done (took 33.069621588 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.742975593 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.742404611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.741693344 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.742153689 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.744676882 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.741607861 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741639252 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.743129762 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741561119 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.745553435 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744499042 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.741627982 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74135838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.741371314 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.741243012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742690571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.741468015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741021494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.740236551 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741173435 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.7414173 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739003975 seconds)
  done (took 40.004165515 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.736288409 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.73649637 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.751599446 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.758481552 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.759140466 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.771646729 seconds)
  done (took 12.186835076 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735584288 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736994184 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.736819116 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736340416 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73690955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736489166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737051532 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736913319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738152463 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735160879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736515714 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736076587 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737438102 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736861893 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736540565 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736083589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736377861 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736039356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736433056 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736469767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735641292 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736260748 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735123257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737231194 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735458405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73656819 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736924536 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737223969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736082459 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735553143 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736091971 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73791895 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736317289 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736797705 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737316562 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737261385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736825835 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736805405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736901085 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736716566 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.735727403 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736237683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735851947 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73688339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736235012 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735770984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736101503 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735972065 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736411558 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736503593 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736317147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735894118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737016017 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735038075 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737768524 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734588579 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736315052 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735722991 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735831493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736395334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736973799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733850282 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734104879 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732973196 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733715378 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7351154 seconds)
  done (took 116.265476468 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733577376 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.733836886 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733378974 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733327189 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734654929 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735684154 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733182046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733339311 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733474247 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732726329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734555084 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732542815 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733550739 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734016274 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734466495 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733709791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734814429 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733012533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733343922 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73306799 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733611201 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733929519 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734430503 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732492718 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732727124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732695785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732545955 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732604256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73374087 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732533927 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733181978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733440295 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734057736 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.73390013 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733101756 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732831841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733503369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733497546 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732217849 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733557036 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732369356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732957002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733269455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731858066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732388932 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732983893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731707692 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733404416 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732371831 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732456827 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733464535 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73359555 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733326917 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732381499 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732564017 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732740199 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733703593 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732093705 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732806159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73323286 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733283472 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.733246119 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732997114 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732623872 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732306223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73354484 seconds)
  done (took 116.065440099 seconds)
done (took 2409.03875914 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.752111623 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.821808194 seconds)
  done (took 15.243536345 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.899134442 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.853601985 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.739910789 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.751459654 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.740460692 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.739522797 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.761902361 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.739919744 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.740311925 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.739875296 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.740993085 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.92448442 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.798655882 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.740493507 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.740343712 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.832573485 seconds)
  done (took 50.163154903 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.741349757 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.742792002 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.751984341 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.745449885 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.741980489 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.753972706 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.772489884 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.745626934 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.777087606 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.756313953 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.812071684 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.752855357 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.741055668 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.791391605 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.759173922 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.755669978 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.832972696 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.816760679 seconds)
  done (took 33.465768247 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.816708855 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.756217395 seconds)
  done (took 10.2523842 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.745450355 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.788418566 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.75030322 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.747854622 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.740388951 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.770331819 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.766264957 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.764696585 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.754574389 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.930740106 seconds)
  done (took 69.435595633 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.748540189 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.752190246 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.744042137 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.741588401 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.738255125 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.742573126 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.742193206 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.74439643 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.414480097 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.796599593 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.750208273 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.748840545 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.742077813 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.744475061 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.743182729 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.766301897 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.859617479 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.739255286 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.741180264 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.750469256 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.749247954 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.800808365 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.7600057 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.748768271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.778936515 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.412668567 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.760875736 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.752220723 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.856228404 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.748277839 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.74950238 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.9346298 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.751972058 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.207813375 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.016019587 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.755509408 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.763541328 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.756444951 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.745616922 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.867034894 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.748454588 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.752611681 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.674936972 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.992716524 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.851175287 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.793145279 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.058860773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.768561205 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.748596765 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.777131985 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.7499644 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.748993852 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.762014391 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.251868553 seconds)
  done (took 126.020217235 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.745325959 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.093358807 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911156541 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.74760754 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028803751 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957488685 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.750062555 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793342492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.748911422 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976179781 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000278733 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85376596 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.749167455 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.746212864 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.749312827 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.745126941 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.90285056 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.819405339 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.749810267 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.746090002 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773525643 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987890402 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.868733456 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.750897182 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.776526958 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958055432 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.866002101 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.850571513 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.52933073 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.744281071 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807965661 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.75217845 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.753767887 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.746422022 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.900283367 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.841353404 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833412572 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.748371648 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.746370868 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.74788507 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.49000514 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.95057041 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.841013147 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.877596698 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.999502118 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.952016969 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.526332372 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.745191233 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.482015687 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.908806965 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.975164165 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.975821882 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.871640563 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.751565909 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.278442494 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.748099673 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.745872678 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.995219682 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97191906 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.843834694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.755101763 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.746780794 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.749489447 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.037278644 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.75585303 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.844150211 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.755526046 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.749119041 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.849149698 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849830119 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.983150927 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958816521 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.782200017 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.084858778 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.258895425 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991634977 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.819019892 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003174264 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.757354526 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.750113041 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826483239 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.588402029 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.996963712 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.026797464 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996360996 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782600922 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.467488499 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.744840364 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972636778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970832225 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.009532246 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.992054871 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.981955489 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.055027451 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.748437391 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.748746465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.016885358 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.872293032 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.751874135 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.092238173 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974813896 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.277458115 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.775783945 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.050814354 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.883161997 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.749759791 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.384849298 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.74930647 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977478012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.789523887 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.753332935 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749038869 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.968227037 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.742207508 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744846664 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.394642589 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.812337414 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.752754995 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980962874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.755361076 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018238483 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.753860808 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986160624 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.223454433 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.777661284 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.980256288 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.996242374 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.752764474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.990901739 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998209419 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.866624611 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.9689146 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.377778859 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.748723497 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03410593 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.757154541 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.752959646 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.921262777 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.758594118 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.889698082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.751873292 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.045149321 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774321819 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982765384 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.753532943 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000936091 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.787935245 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.801222499 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.756887541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88265187 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.756289245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.568271902 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.911621107 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.754099556 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 7.18906133 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.522395343 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.750308954 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.898670621 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.981607711 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.775151486 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821993609 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.414469125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750156993 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831190594 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.773928104 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.139975343 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.752845669 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.006727227 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.752690029 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.75288767 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.753835194 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044014451 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.93782152 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.753366546 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.752855936 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.656427381 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.750975181 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.753237647 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.930872968 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.118360646 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750339117 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952474254 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.760506939 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.87874906 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.756539605 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.818206341 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.093291323 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.754355113 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.754036697 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.753411984 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.754672735 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.754845758 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009660218 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.778069684 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.26334071 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.889400893 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02337757 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.05982486 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.994968189 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.792938862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.755533895 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.00902652 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.760301776 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.815953947 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.759398402 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.770907952 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982620585 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.764680628 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.963287905 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028948731 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.596976922 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.799961471 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.759881848 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751467213 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.754902017 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.894951802 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835091272 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.762130185 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.755605815 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.867302172 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.878025786 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960163755 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.754828031 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.862980282 seconds)
  done (took 876.897199963 seconds)
done (took 1183.147008461 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.753590326 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.758756815 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.756562971 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.758135337 seconds)
  done (took 28.716354777 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.763515828 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.760942006 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.758443023 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.756437893 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.753124 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.759986346 seconds)
  done (took 12.245844866 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.803117686 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.755315785 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.760057315 seconds)
  done (took 21.011562004 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.82639993 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.140762706 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.885428639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.174305893 seconds)
  done (took 9.716584807 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.761006662 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.759891875 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.760752573 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.760976158 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.768079795 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.76782551 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.758065883 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.761307142 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.770122173 seconds)
  done (took 17.559427494 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.080853907 seconds)
done (took 95.020851978 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.045513824 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.036038864 seconds)
    (3/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.760063685 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.05519341 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.894807395 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.142516885 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.084975508 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.860950066 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.84047803 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.086555494 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.759308275 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.85338866 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.777359949 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.755229451 seconds)
    (15/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.946505675 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.07815089 seconds)
    (17/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.759252641 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.056814145 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.219583106 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.757726034 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.460978008 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.877820118 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.6531568 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.045097882 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.922396711 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.777711975 seconds)
    (27/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.910115141 seconds)
    (28/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.760446695 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.525761309 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.755386139 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.902809726 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.859605124 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.96901756 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.831685828 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.849041366 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.9515777 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.062581759 seconds)
    (38/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.757842155 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.074209742 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.86205517 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.927302579 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.755180971 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.866847097 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.989852512 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.784717934 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.426010244 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.067400892 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 1.978367699 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.768428696 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.079166189 seconds)
    (51/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.760206103 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 6.761890703 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.441129328 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.008616777 seconds)
    (55/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.758986841 seconds)
    (56/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.01727963 seconds)
    (57/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.774488847 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.757329265 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.852687513 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.938970809 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.081215046 seconds)
    (62/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.766188705 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.843268644 seconds)
    (64/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.870573902 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.199308518 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.079351251 seconds)
    (67/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.771478386 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.092384993 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.312645367 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.768381588 seconds)
    (71/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.839424586 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.819914433 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.097261682 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.883704839 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.772558019 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.956171164 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.372056739 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.763377222 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.833630033 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.852223147 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.645895375 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.009771063 seconds)
    (83/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.764530571 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.916169628 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.123210909 seconds)
    (86/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.7640139 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.543328601 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.836834606 seconds)
    (89/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.04955695 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.953215074 seconds)
    (91/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.763471117 seconds)
    (92/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.087842267 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.761609957 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.358384894 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.106697318 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.429117857 seconds)
    (97/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.858154477 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.072637754 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.006024323 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.762435617 seconds)
    (101/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.184053255 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.819170874 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.535865717 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.653111866 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.886899177 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.768997371 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.754483017 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.249594347 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.756652485 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.42109825 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.85708961 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.014053117 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.889894698 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.893595335 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.89465684 seconds)
    (116/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.765050839 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.75480478 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.060926851 seconds)
    (119/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.197419735 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.649658483 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.871934804 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.509291076 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.964739635 seconds)
    (124/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.884984375 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.783524323 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.858311232 seconds)
    (127/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.822968566 seconds)
    (128/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.384874383 seconds)
    (129/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.851451799 seconds)
    (130/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.892528794 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.786934867 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.420868868 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.9768499 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.840232784 seconds)
    (135/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.762772892 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.850962903 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.800710627 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.622263429 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.762773617 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.977891809 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.01041852 seconds)
    (142/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.069894597 seconds)
    (143/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.879477376 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.758035822 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.639722106 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.015464207 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.072783755 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.077204865 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.766509592 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.770992074 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.124941717 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.983688607 seconds)
    (153/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.216141639 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.788603293 seconds)
    (155/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.758753917 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.171185999 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.00492365 seconds)
    (158/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.699709096 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.734608041 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.787226724 seconds)
    (161/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.781146429 seconds)
    (162/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.941224606 seconds)
    (163/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.844294028 seconds)
    (164/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.019338411 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.770586642 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.956853806 seconds)
    (167/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.897791661 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.75915023 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.947609318 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.768749919 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.772195753 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.818366193 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.018903102 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.765875007 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.994754663 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.098607994 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.146081557 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.763028665 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.930056071 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.144418674 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.767767551 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.788907287 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 4.633198807 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.914741323 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.144571269 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.770302708 seconds)
    (187/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.894928908 seconds)
    (188/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.763238921 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.209100606 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.764102777 seconds)
    (191/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.930564199 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.00430944 seconds)
    (193/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.904452801 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.780431777 seconds)
    (195/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.645843476 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.783326518 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.76058589 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.640285206 seconds)
    (199/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.953511159 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.765615586 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.876018489 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.767003781 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.082250731 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.767484845 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.274504311 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.904775431 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.069519096 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.78890568 seconds)
    (209/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.788691688 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.999553112 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.524488545 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.165109906 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.833479525 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.141895288 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.80848118 seconds)
    (216/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.539281665 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.889153582 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.786907311 seconds)
    (219/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.790079167 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.843544307 seconds)
    (221/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.762316902 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.107066739 seconds)
    (223/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.959247937 seconds)
    (224/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.082743123 seconds)
    (225/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.024849964 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.100816351 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.967201148 seconds)
    (228/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.234272179 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.478097442 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.787333298 seconds)
    (231/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.96066557 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.765599679 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.905285372 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.917625282 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.586126752 seconds)
    (236/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.144584114 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.926261818 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.029098934 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.070852412 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.793694446 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.387070498 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.835769517 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.765202249 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.015159641 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.885919362 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.881009947 seconds)
    (247/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.672657109 seconds)
    (248/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.873586153 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.770317676 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.006270679 seconds)
    (251/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.863203255 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.851055633 seconds)
    (253/309) benchmarking ("sort", Float64, false)...
    done (took 5.499371544 seconds)
    (254/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.909808972 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.843463758 seconds)
    (256/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.769703195 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.899588191 seconds)
    (258/309) benchmarking ("sort", Float32, false)...
    done (took 5.459747528 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.904819903 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.763399507 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.497674745 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.892960663 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.741243669 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.164846061 seconds)
    (265/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.960545135 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.900501809 seconds)
    (267/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.879536383 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.726547036 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.105967539 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.919300435 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.901154108 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.779840866 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.765821226 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.396268147 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.853138007 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.962651725 seconds)
    (277/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.937358211 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.158638106 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.774790115 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.503687346 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.257695695 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.775639307 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.847785436 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.337911047 seconds)
    (285/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.795359615 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.374244631 seconds)
    (287/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.017874035 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.857398945 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.569159847 seconds)
    (290/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.857034713 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.77244464 seconds)
    (292/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.412219783 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.929709627 seconds)
    (294/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.841567172 seconds)
    (295/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.848206354 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.80422746 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.107616569 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.080037275 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.660696111 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.775061831 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.279262115 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.907044684 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.082047551 seconds)
    (304/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.450251941 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.799214536 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.980938627 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.94444865 seconds)
    (308/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.259541821 seconds)
    (309/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.155386959 seconds)
  done (took 972.429327309 seconds)
done (took 974.185432823 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.795829829 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.792649523 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.772545781 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.793184846 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.886695682 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.823614698 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.784260959 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.777392835 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.823737074 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.822560844 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.771821594 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.816589059 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.775946885 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.774335564 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.773055332 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.790757537 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.075105076 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.800160096 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.790177805 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.783719651 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.794399707 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.771782245 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.826025421 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.819584158 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.776436413 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.778094248 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.77749135 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.794768456 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.886116565 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.77666274 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.779332896 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.788990681 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.076259846 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.796213562 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.772556066 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.792373764 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.78657655 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.787069794 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.778308225 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.807016744 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.162806656 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.809198641 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.774371617 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.774295516 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.776156118 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.781578633 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.776431835 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.783829537 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.791477908 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.791910879 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.156726991 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.82420498 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.779519519 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.776566628 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.790283176 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.778334361 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.780104862 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.794407122 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.795456006 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.792078664 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.063430178 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.806269939 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.780696224 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.794331314 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.784644561 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.193179413 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.809459012 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.78355262 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.161862114 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.818098552 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.193174781 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.821304426 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.779907476 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.79029621 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.809482611 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.076013488 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.799010558 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.775645718 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.785342829 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.77514684 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.790903565 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791275604 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.782093135 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.778396247 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.79448623 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.825254665 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.789239091 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.779661482 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.78971155 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.796204996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.786666 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.789243605 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.781953199 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.777048648 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.790435108 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.781482042 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.78122335 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.781317778 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.783088996 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.790158427 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.164156196 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826981766 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.774875901 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.775753088 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.778930794 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.793626377 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.163280358 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.811470447 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.802188256 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.830198547 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.780860489 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.064895686 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.804955161 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.795363267 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.791385926 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.782021073 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.777013417 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.065366891 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.182851007 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.827274751 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.779748782 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.777817544 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.796477363 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.78196061 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.777067811 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.083150514 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.805506404 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.795214682 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.902380228 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.792584691 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.812996832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.778145844 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.783010265 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.82984026 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796491256 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.811498319 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.783691451 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.796042992 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.796555058 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.776621322 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.792721628 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.793264847 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.779644475 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.786688529 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.778296588 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.830520122 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.794901114 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.795132555 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.801402421 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.903729214 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.776952561 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.065976818 seconds)
done (took 279.703956619 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.856820354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.77746622 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.870947904 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.778835795 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.870196969 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.852688749 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.778797675 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.781368542 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.778334831 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.266925186 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.780568345 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.784323542 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.779087548 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.778765363 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.850916115 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.78238035 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.779420085 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.211020886 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.779756425 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.85864877 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.778059377 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.780165778 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.77889082 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269620896 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.780527568 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.779150651 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.859324239 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.779750973 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.219004447 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.777650559 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.778847393 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.218093826 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.857593309 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.807056729 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.789288774 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.783490281 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.869334882 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.789133506 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.847268523 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.850208578 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.875636871 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.813339337 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.778475295 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.780446199 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.78396577 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.781449995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.780694958 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.813809673 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.778388704 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.786867407 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.213462494 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.788968163 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.787170496 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.781695641 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.781161251 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.809344304 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.780415415 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.781655882 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.859387691 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.781920717 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.848841876 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.26980849 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.265955797 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.780900446 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.780314893 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.780283131 seconds)
  done (took 179.170710678 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.846434826 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.858062953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.846220968 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.786981447 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.831755401 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.851156651 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.786635782 seconds)
  done (took 14.523526509 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.789460849 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.783537486 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.830996691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.830136927 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.781665429 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.936357193 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.781852596 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.792769863 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.787583172 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.809302882 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.782267463 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.782013991 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.789811625 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.780405865 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.830353586 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.795139193 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.89989229 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.785515753 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.783533992 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930583827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.788527475 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.79057954 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.808578594 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.79381106 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.783736896 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.789016563 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.344980414 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.785267168 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782349695 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.784565486 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.784278423 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.823831615 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.783953427 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.783099707 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.784183124 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.897717512 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.783773546 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.783705136 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.783580671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.783003887 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.783157941 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.784442042 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.782832342 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.783618319 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.784600441 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.807163476 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.785264829 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.783254646 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.782844979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.785937967 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.809188814 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.785398768 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.783998 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.790523938 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.826740799 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.793351557 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.784053612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.784957513 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.785262413 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.783534887 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.933514816 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.832478789 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.785143108 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.833244932 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.784086372 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.784166331 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.785489678 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.784984287 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872617676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.785539319 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.834022578 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.786548138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.943249707 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.80815553 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.784705012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.787999108 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.789571623 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.787214676 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.783447316 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.792993171 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.785670182 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.785954987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.791875692 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.789911633 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.785361537 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.899324586 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925423884 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.784717472 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.786516091 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.792306694 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.786307265 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.830996366 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.786997734 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.785621083 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.841886839 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.900704709 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.812677208 seconds)
  done (took 197.387287201 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.793324582 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.794037061 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.787281921 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.802248883 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.786520378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.786920528 seconds)
  done (took 12.469781698 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.78885294 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.790672375 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.786972896 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.786500605 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.78569874 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.788249829 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.788016261 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.788092313 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.792869572 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.787637199 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.786633084 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.788698045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.787522484 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.788597488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.787573908 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.787433297 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.786756611 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.787797829 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.786829633 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.789771136 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.036872489 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.788498727 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.787119245 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.789426047 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.792707669 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.787743859 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.801456429 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.787369659 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.785715662 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.794671745 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.792592194 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.78785225 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.791407978 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.794328955 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.790673989 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.79282967 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791304315 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.78920976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.787692132 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.787156175 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.789221394 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.788189369 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.786689847 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.788033144 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.790112216 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.794897418 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.793534166 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.800374477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.789869556 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.78957193 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.788186311 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.786010452 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.788313474 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.790564117 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.792168329 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.792070393 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.79382778 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.789153793 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.789664969 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.792777403 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.793812171 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.791043142 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.791427089 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.795174079 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.796611081 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.791174808 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.794171709 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.79377407 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.790042629 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.788537085 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.790124236 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.789789948 seconds)
  done (took 131.860367895 seconds)
done (took 537.137482403 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.051262457 seconds)
  done (took 8.774939581 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.979295673 seconds)
  done (took 8.764937406 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.021395533 seconds)
  done (took 9.747808507 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.798332779 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.808763328 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.80234119 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.796027108 seconds)
  done (took 28.952267486 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.054088724 seconds)
  done (took 8.777652093 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.812371307 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.788295564 seconds)
  done (took 15.396923556 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.943761651 seconds)
  done (took 8.676468841 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.283779025 seconds)
  done (took 9.019211505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.805560486 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.811458378 seconds)
  done (took 15.371305507 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.794184082 seconds)
  done (took 8.521658706 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.972390334 seconds)
  done (took 9.80499716 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.804116729 seconds)
  done (took 8.596436292 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.860904708 seconds)
  done (took 8.589104353 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.820612475 seconds)
  done (took 9.545642417 seconds)
done (took 160.261932934 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.808802428 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.798926006 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.79440152 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.795042872 seconds)
  done (took 28.92537357 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.825559831 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.826642105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.829043691 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.837222263 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.83020581 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.826031851 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.817854599 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.819749157 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.838317969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.829505956 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.827215922 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.828573128 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.826700522 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.819008548 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.828899734 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.828912695 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.837539699 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.829332142 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.819623417 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.829045248 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.794009293 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.837242455 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.828753104 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.796410805 seconds)
  done (took 45.539732218 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.983436689 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.866150413 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.947828281 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.847771951 seconds)
  done (took 9.373745263 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.845834549 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.846968862 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.857328 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.897677243 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.921121162 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.855819925 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.819668144 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.816447298 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.801347623 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.849075027 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.922810032 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.843754509 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.936633867 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.795528481 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.981381888 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.795570934 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.79542396 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.84693113 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.897924402 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.912263666 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.79579572 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.847103333 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.84975865 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.843802382 seconds)
  done (took 46.305190546 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.800342261 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.805714834 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.802992586 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.799323965 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.798355086 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.79863195 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.803946394 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.799729169 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.819654573 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.798516754 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.798942604 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.798091936 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.804161222 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.798512024 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.797734669 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.812179774 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.813128087 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.799446404 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.803003641 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.804660323 seconds)
  done (took 37.787876766 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.794913275 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.643096435 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.141245607 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.047327686 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.794094553 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.795676049 seconds)
  done (took 30.948152317 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.808838629 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.803360856 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.796413846 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.851940719 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.936294579 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.806301204 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.797572692 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.80900047 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.841031148 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.860349075 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.815950498 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.822506073 seconds)
  done (took 23.680980841 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.796210887 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.800058377 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.802946362 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.81166257 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.808367429 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.80720721 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.805761881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.797261129 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.811324528 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.815278043 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.804871846 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.807354741 seconds)
  done (took 43.402231742 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875006876 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.67233104 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245307281 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260967362 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319790488 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000199605 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.798055227 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.883612109 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.799094875 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07004828 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.16517602 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298021878 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04407049 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801169406 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895649571 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.280757491 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089787269 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013650745 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827112697 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429021149 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91102395 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412551841 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.478127315 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913245362 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004160149 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.921825528 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.059787216 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.751871152 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850878026 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80523083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806675368 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.801717654 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072140929 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922393628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871406828 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807057999 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.217356579 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.510128532 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.809891891 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.487156695 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.361539782 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924905649 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805868442 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802714094 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.730392081 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368751214 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890979645 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.805836096 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.503555139 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.804240294 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807593015 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877735738 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.803506385 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.610478957 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486712703 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.071155735 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.802507629 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804715526 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362279219 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801638107 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469390886 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.734767822 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.887843644 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.488021022 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256595466 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.955298186 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.804378507 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804764565 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729540875 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.480785182 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920488967 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94110441 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.818826646 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444159026 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096431279 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.217930913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8615783 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071317656 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.718798653 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.733125793 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020448278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.754816358 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731265685 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.651324759 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.730948037 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01093332 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834340225 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.407112232 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836065508 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88550275 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809836404 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818394711 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805419214 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017831327 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.700654767 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804250059 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.098006254 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066473924 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821464339 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.892150583 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732841398 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.806534811 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051943645 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.007270362 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.116213251 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.271526614 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88822126 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.685269256 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.931838186 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.789511382 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.810923081 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.069418987 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864675036 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807156935 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926656643 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.753670645 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04614395 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.697105359 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.021090603 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.162379917 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048627075 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.135269021 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048596811 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867913336 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.812771613 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.806293217 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.494574144 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419909905 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.023368774 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.819546824 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354377668 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814473699 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.80895055 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742573667 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.64805547 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.183357804 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.885150842 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022346626 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.689804577 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221988018 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733736752 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944823349 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.80780834 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.02209775 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.448347384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.886692577 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057847335 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977393617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.088343768 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928766524 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821890716 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898563724 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824710227 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.170534553 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166299426 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.810753913 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.809491852 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.498065299 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857711981 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80921142 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.81263023 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359977984 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076224889 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.830713797 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.81119266 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683597754 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.821448213 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870951794 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811079476 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.813035021 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.367799707 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319469942 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.81481335 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.517002 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028740558 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810461386 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.414474809 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978516294 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.821630081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072487318 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870275556 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.735560638 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.511298011 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.508904171 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810622341 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737845888 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.809281036 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813110734 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815223696 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.997728518 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.079248403 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85832234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.474999941 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.911767428 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814763584 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.814091215 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810848043 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.304714636 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810837403 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354883084 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93187443 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939205323 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.820933073 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.736843152 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.812087118 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813255871 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.810805513 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.757863437 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858489334 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.476651252 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007528939 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0584796 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.216921448 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820064209 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.471485419 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.922326199 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.825733998 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100943673 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364973589 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.922236783 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888993241 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.818434835 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.487832206 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.540736459 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376922843 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096978498 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124195933 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148271378 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.231269221 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141013388 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896768495 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040313135 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.332485812 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868779792 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.901615028 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748365295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826568085 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.458444936 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217595624 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825697083 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030374476 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094181344 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.15524963 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940971161 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.017256988 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843818605 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.650882197 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845789263 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.351230206 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829116516 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.267086135 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011895308 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893630192 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096734605 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.888543579 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.813343544 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154359511 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85148718 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.515364691 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165684701 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.25505785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.285769466 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031844123 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816571812 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.252786437 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158290537 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.040333335 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.941210948 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741322952 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.818489925 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819898064 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.826711722 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.790135829 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.660528791 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.0614658 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820692981 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039554321 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.983955215 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180445646 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.76485553 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.817747626 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815793394 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059906143 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.592295553 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977387523 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.173115773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.403716239 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832034752 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.741103533 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740535675 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.515230692 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.816793516 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.779577078 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019557427 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.940479776 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.493610776 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.224264331 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133225843 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058946624 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.825649764 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.080245137 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089349603 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.307152964 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835202658 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.912012321 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.106034535 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.502587647 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029151885 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042044695 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372501502 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033739285 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25723196 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.790055404 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.814465793 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020673171 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.029900339 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.164740041 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990719124 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.526527387 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.826732124 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17857001 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87611734 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.171689346 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999037986 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.902132469 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823551528 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893232231 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820913646 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.820702809 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.822180438 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826699534 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.168018156 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929641837 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.828848987 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894120532 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822734745 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391578274 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.830212765 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081524503 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157586091 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141793192 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876224685 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.81804304 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825904036 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74237571 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948456884 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.257325985 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089730174 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.940465674 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.951500904 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840412215 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.108183469 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.10647558 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134212438 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091858923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.702846406 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483194225 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945493633 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.034387759 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824321628 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.021395155 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030014192 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11207568 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376069856 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.983435168 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014908529 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092531924 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180919755 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818716585 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400870785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.829242367 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215850138 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.850523805 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.177003119 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070186996 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823560626 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940368208 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.821806102 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.017049213 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.268783494 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.435377472 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16016096 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.677092579 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823645528 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086626964 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138903158 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119178361 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895800381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825356805 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.510242072 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952138603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.700208555 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.038994578 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820850336 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023500246 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.530061507 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823087626 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085865731 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118929257 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.821879029 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.745860677 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826808721 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.823075772 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034226667 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027295234 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062594215 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822613467 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.824208969 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.628929218 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090201994 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878147376 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749177581 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.822637613 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865539937 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047205364 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837350083 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.334596707 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.522041086 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092132439 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.725085297 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837614395 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258257879 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198430843 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140411127 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.346139725 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038024545 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370953989 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.698536054 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206043641 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.823499925 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269163395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207020496 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.82430644 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369578208 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939051128 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.083395717 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147691455 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.835946247 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511570393 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.848935256 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035452061 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179902333 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753362682 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.826952066 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.871013966 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.821722811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.815633477 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829914579 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.752125525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295153265 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.67007304 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377057674 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.822632861 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.832519717 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.166601348 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385273555 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935975659 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837580638 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829875724 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.535057638 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.10846881 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065825927 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368783387 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.924309633 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.824207556 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823018284 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739990777 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005499766 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.009902284 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097650811 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.205427501 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.937469309 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82378722 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.02930678 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02616204 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.179699443 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950022201 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.99449766 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944058136 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.765281339 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.528780391 seconds)
  done (took 1635.64360866 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.841683718 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.854038266 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.88427558 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.949883995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.905535946 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.896225464 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.952799971 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904869581 seconds)
  done (took 56.9452824 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.820026286 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.996998796 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.825325285 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.82221241 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.82529571 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.836293087 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.981594027 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.833862451 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.824934131 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.824575719 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.822391513 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.821079141 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.103682202 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.842628969 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.820020291 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.832105268 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.846191203 seconds)
  done (took 73.510128492 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.822570131 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.066089375 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.856247793 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.82191977 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.835984069 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.832850292 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.916128599 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.846518272 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.824872845 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.075699202 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.117861276 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.842016434 seconds)
  done (took 89.616281059 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.835693805 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.825411794 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.825134219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.825460962 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.821580227 seconds)
  done (took 10.895882624 seconds)
done (took 2134.391809124 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.051523247 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.015417875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.060875078 seconds)
  done (took 5.831440936 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.962954176 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.014800482 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.129589848 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.147376857 seconds)
  done (took 10.012559399 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.151401402 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.18812556 seconds)
  done (took 6.093694048 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.14165864 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.858478905 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.235183068 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.823240771 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.826520155 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.829836319 seconds)
  done (took 22.239109248 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.823296142 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.82247367 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.823830679 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.823511852 seconds)
  done (took 9.050164658 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.820162448 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.518521889 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.821102103 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.830344702 seconds)
  done (took 20.7467959 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.97098744 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.938729624 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.972904345 seconds)
  done (took 7.638019036 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.965930927 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.040661081 seconds)
  done (took 6.763392399 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.980758885 seconds)
  done (took 3.737354521 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.851247783 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.093187184 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.319355952 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.349886964 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.41692927 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.711869954 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.128463845 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.047356763 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.263010642 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.267550772 seconds)
  done (took 24.206524773 seconds)
done (took 131.361263078 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.16118153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.8435723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.026695115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.173383381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.205942754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.0282824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.047664617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.161687777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.852538845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.840729229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.178156414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.195168449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.996240253 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.838171257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002702538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.838846821 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.057704791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.185984838 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.862751869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.102512653 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.058559348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.82268951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.015591438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.839929343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.058356088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.980546037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.365343714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.845715695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.004056952 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.381410325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.98396283 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.242520239 seconds)
  done (took 166.956744893 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.828284792 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826385276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.823380252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.826479761 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.287164955 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.827313565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.825547017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.824916676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.27163844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.261057389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.827554799 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.274681021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.827043133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825244246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.829252603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.82575463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.438919759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.827865291 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.826574167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.825773525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.827796414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.109994906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.827521221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.123546981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.436226398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.827741105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.826049989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.827109048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.825866184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.827070178 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.82622848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.827484174 seconds)
  done (took 207.80442694 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.720797825 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.827580564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.829298425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.827765856 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.827957682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.827502432 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.828336932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.827132598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.575684106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.565548528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.827877585 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.829103382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.833389872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.826326431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.831381213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.826961377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.82800985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.767713822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.829031921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.827675761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.828461157 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.414413877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.82893838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424452943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.828624973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.828976374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.828516446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.827831911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.827953922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.829998189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.833342073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.82999273 seconds)
  done (took 218.778316234 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.072945746 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.829328111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.829727781 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.748593836 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.830544189 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.828813655 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.810433287 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.074524973 seconds)
  done (took 18.790945325 seconds)
done (took 614.093666164 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.198414195 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.036604036 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.00044804 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.8544537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.081428815 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.896413829 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.85041635 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.912782838 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.657445054 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.923327222 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.490075189 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.872409281 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.584071752 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.876833609 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.974835207 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.909416903 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.399835485 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.50538538 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.024529687 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.918763705 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.027908664 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.757106198 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.929707613 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.687165992 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.618947716 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.811840316 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.884157274 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.408554511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.864290525 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.008470839 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.529505139 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.105072772 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.865697 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.850284822 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.905082316 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.883702737 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.065804463 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.864407275 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.974111631 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.553020481 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.905903152 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.561425953 seconds)
  done (took 100.792702487 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.841423122 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.835975897 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.8359528 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.837563522 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.847233709 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.838477083 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.838482915 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.837597111 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.837199815 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.83806411 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.838458429 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.846855388 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.838987482 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.847324155 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.83764019 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.839984891 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.842386522 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.849188443 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.837583433 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.83806762 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.836885839 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.837735662 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.833040994 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.837568594 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.837351769 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.839588419 seconds)
  done (took 49.601530602 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.836833986 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.002660005 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.077227389 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.855161911 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.83234371 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.839285494 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.851305648 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.837390323 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.836541051 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.837756406 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.937455561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.842735729 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.852965684 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.077360777 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.852137072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.834055262 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.837022366 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.836298771 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.010346483 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.851444546 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.852375646 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.839707776 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.852752567 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.851551759 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.838699949 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.83517697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.841168187 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.33419636 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.843366299 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.935936731 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.880105655 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.85904484 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.25266116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.084094359 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.890031744 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.843638052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.835682651 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941950917 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.843338585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.834046982 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.854369146 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.841690811 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.0782528 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.360581086 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.851231716 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.83848126 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.341988549 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.953410079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.880027144 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846503852 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.079901383 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.853926684 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.837527119 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.838871504 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.873422508 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.844492476 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.838470122 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.200137408 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.850992628 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.856668681 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.840966379 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.839586091 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.016749321 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.847680514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.00305996 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.847325834 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.844634159 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.838333766 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.082266623 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.855876571 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.378558877 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.853133228 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.836059943 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.941981842 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.01052729 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.366567446 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.849027013 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.014123767 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.268590063 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.863019645 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.847541628 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.322177844 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.867805722 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.845380664 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.838917675 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.839132232 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.838301704 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.882422095 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.85244175 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.29273072 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.375287659 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.216207557 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.864683241 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.853529756 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.839425944 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.199904676 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.848076817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.837118006 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.071906853 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.383376648 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.855514371 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.844831016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.355693389 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.855859509 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.855178922 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.847378447 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.085287846 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.857000659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.880626336 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.840232221 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.845989103 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.844339505 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.855863038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.845749046 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.838455431 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.344404948 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.962172906 seconds)
  done (took 228.850253844 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.841943323 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.846985076 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.838783966 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.841623588 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.838836333 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.841637735 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.837915961 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.838752651 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.839202133 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.840108464 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.83909215 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.840380503 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.843394578 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.840111771 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.846871082 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.839715556 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.44218595 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.842316559 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.841041516 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.838404539 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.497133645 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.844359941 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.839360104 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.840080481 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.841683602 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.842830614 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.845063482 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.844536097 seconds)
  done (took 166.588871514 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.840394126 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.954772105 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.859426744 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.870397052 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.849493905 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.841349772 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.940131389 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.861996844 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.845956732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.842195685 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.840347273 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.90093782 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.854491289 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.937349084 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.874133909 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.946817072 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.948043703 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.851969009 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.843879514 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.842794502 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.871434972 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.851680305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.899913642 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.967212236 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.860851418 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.955756842 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.861175613 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.842778615 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.841819274 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.95422824 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.858927005 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.902147836 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.868567506 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.859289891 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.960924602 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.956414644 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.945775801 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.947147706 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.850406234 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.842832574 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.841962261 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.842314578 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.955008269 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.858004104 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.844346431 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.959074386 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.861093263 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.843505421 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.844927532 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.842482313 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.854216591 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.860229326 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.906456476 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.972889504 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.875882475 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.86674011 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.9391088 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.972896347 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.844441211 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.940850611 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.853097746 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.959164683 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.861915978 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.843689486 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.844339587 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.84729196 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.87355078 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.947970468 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.949486011 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.853518524 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.941860696 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.88104617 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.850305426 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.84443472 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.845539593 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.956329604 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.96049751 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.884164056 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.878481212 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.877342796 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.851980875 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.842943058 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.84678396 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.860943622 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.851410874 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.958688925 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.96047497 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.854927653 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.845333318 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.847682278 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.843718266 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.870439376 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.965763694 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.877971058 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.953110118 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.913956302 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.918732734 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.858145936 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.859482832 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.851316795 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.907296671 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.857610891 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.858896937 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.132977764 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.906264042 seconds)
  done (took 200.002198903 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.243073579 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.897689061 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.901928187 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.165836587 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.191453782 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.755340662 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.890229413 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.892092541 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.915350808 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.074890386 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.965509704 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.909426827 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.879061877 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.867176188 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.893854559 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.913839777 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.900911847 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.245669948 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.097901313 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.052074762 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.880149256 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.160668061 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.20663615 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.469039695 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.939601282 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.288831015 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.462095653 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.021366002 seconds)
  done (took 60.8679564 seconds)
done (took 808.465398513 seconds)
SAVING RESULT...
DONE!
