cset: moving following pidspec: 3132
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "string"... done (took 0.771268679 seconds)
loading group "linalg"... done (took 8.096118787 seconds)
loading group "parallel"... done (took 0.221945123 seconds)
loading group "tuple"... done (took 1.97184188 seconds)
loading group "dates"... done (took 1.380582266 seconds)
loading group "micro"... done (took 0.450568959 seconds)
loading group "io"... done (took 0.432560802 seconds)
loading group "scalar"... done (took 36.820157788 seconds)
loading group "sparse"... done (took 12.591786079 seconds)
loading group "broadcast"... done (took 1.027150241 seconds)
loading group "simd"... done (took 1.93264325 seconds)
loading group "random"... done (took 7.608378552 seconds)
loading group "problem"... done (took 2.35370692 seconds)
loading group "array"... done (took 20.443547257 seconds)
loading group "misc"... done (took 0.850674237 seconds)
loading group "sort"... done (took 3.121896786 seconds)
loading group "nullable"... done (took 6.411094177 seconds)
loading group "shootout"... done (took 0.936998832 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.432567368 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.135367284 seconds)
    (2/2) benchmarking "String"...
    done (took 0.145953197 seconds)
  done (took 1.019039083 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.089110144 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080329768 seconds)
  done (took 0.904391124 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.080749934 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.220347573 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.084697433 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.471972309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140876574 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082306486 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081048226 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081002968 seconds)
  done (took 1.894230684 seconds)
done (took 5.097858604 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.365492218 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.815579342 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.469337407 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138009799 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.273339717 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.226958051 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.194161632 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.210550797 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091302113 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084398581 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.167126281 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.410695941 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.294223309 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.849820847 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094702126 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09924174 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131772832 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.759169096 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084621026 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132371861 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.352729002 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112003 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107260148 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142875641 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.189039821 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105354599 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156278951 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.086419719 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667103966 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118556627 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.205413202 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085834938 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155836856 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.13086308 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.209831013 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.101757703 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678150413 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.19557941 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.136173252 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.08405182 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681798782 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.097706279 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.170952885 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.093944348 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085448436 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.16197814 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112725158 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08313648 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10736931 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082824429 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16071499 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.586332033 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.099667981 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.194178673 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09775014 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.682005861 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104506237 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.250105058 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.133190401 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108821938 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.081859991 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08215975 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.146507877 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.087851535 seconds)
  done (took 19.177176232 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148393312 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135409119 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.08398973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13232849 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098503168 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08610662 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083021032 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084101616 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08970652 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14127013 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092851961 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152641338 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082341267 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.134005029 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.145382594 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201863239 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.091273827 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.109152427 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08566229 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086084621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110723926 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090293954 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083414169 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082573 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.139899494 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.212307235 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.118602722 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115136778 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.082138379 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094399714 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132963556 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131999048 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.086149014 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081241057 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120381161 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124445015 seconds)
  done (took 4.827845496 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.117870995 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187565332 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105773996 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167544979 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.133677055 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127513631 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.131636502 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149405033 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228669162 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.159166679 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.495020072 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081196429 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.214105858 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130607879 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098531315 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084115445 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08438161 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082412436 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.55632717 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1386999 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115276671 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133741937 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112538543 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08460182 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38648993 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085715508 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081516302 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082219813 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085265102 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.17547832 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08443462 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.563849704 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.092915307 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082390295 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14220272 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19803496 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089021307 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119269217 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095055383 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081540397 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.083085076 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153487046 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08182521 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.260054998 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085241077 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081840645 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091734012 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129783612 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.18481596 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084370226 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082273241 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155456081 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081784074 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090429376 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.795512474 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.172873799 seconds)
    (57/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146127661 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081632937 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.160135517 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101143589 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082728118 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081583 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.143989819 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.087270595 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081976765 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083010765 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08246761 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082057432 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084521502 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.237594809 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086058499 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083816175 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0831978 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.356678876 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086497662 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08689904 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102040002 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081588936 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082985623 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085031693 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083760582 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083014886 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10325943 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130815727 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086114233 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144068111 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085391935 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103685392 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121813884 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085903312 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082063857 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11434841 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083006714 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082528302 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.151296265 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096882083 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102212579 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084556214 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143415933 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083517254 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169849741 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083307241 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102554731 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084390131 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124624088 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085521699 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082684048 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103165075 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08283728 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081430397 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145987629 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084403541 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084048887 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082987788 seconds)
  done (took 20.968237163 seconds)
done (took 45.709807512 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235929094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082261369 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086264741 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082390575 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082953566 seconds)
  done (took 1.378322271 seconds)
done (took 2.157327828 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.420883061 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.662041171 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.172626142 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.181875013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.234707011 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.200544217 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.25863666 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164148598 seconds)
  done (took 4.188517129 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.122408234 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.151092468 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086063458 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084931122 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085038327 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.082941832 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08404316 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086552347 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085004665 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085820271 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083517255 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102939067 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088992043 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084816023 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083609794 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086894011 seconds)
  done (took 2.314162646 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.126349517 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.107779628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087030201 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08749709 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088630195 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089215186 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095069841 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087170093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084617534 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08548161 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089815122 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101426026 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085955763 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.084370645 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087372284 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107149729 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085258119 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08816149 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104025658 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087625459 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.086061433 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084381121 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085835426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086465814 seconds)
  done (took 3.071324503 seconds)
done (took 10.35957317 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110484301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082935058 seconds)
  done (took 0.97804197 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.159608704 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158372164 seconds)
  done (took 1.10664317 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112497965 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081550314 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085962608 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084476734 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081894213 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081480613 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085235979 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082397908 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081881432 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082417952 seconds)
  done (took 1.690094809 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086463369 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084175508 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085486988 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.147926842 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.084494194 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082046258 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082367387 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08275368 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082175115 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080797844 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08213761 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.105302078 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08219467 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.090197504 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082720854 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084670124 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083642271 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083480308 seconds)
  done (took 2.389293429 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083797947 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082332327 seconds)
  done (took 0.959071542 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083276302 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08211135 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085008366 seconds)
    (4/7) benchmarking "year"...
    done (took 0.081054582 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081690137 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.081739514 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081413705 seconds)
  done (took 1.367055476 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.437451369 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.193933112 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.284910811 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.09835294 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082902022 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.286367701 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082452664 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082017134 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087915719 seconds)
  done (took 2.464701063 seconds)
done (took 11.747663442 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094717422 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.160553098 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.489558763 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.104097316 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082748861 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146118651 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.198655779 seconds)
done (took 2.074125837 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.247407439 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14124771 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.105976535 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.153386684 seconds)
  done (took 1.443368392 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.086329135 seconds)
    (2/2) benchmarking "read"...
    done (took 0.089721605 seconds)
  done (took 0.980100961 seconds)
done (took 3.224192406 seconds)
(8/18) benchmarking "scalar"...
  (1/15) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08358074 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082559032 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082294473 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.081476492 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081937235 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083018937 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081729178 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082116727 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081781978 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081805305 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083969407 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081582371 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.080998149 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081219057 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095633949 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082261229 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081815222 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082273101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081636289 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082017063 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081850562 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083900334 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082165616 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081499121 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081531178 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08197495 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081040334 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.0817282 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081771222 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097375441 seconds)
  done (took 3.288605835 seconds)
  (2/15) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089318481 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081423343 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084853318 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085011509 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081840016 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082179305 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079894587 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082382404 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082321991 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082098079 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083153801 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.083168537 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.082470055 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084965274 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096905828 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082862563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084186614 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.083238728 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0822342 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082538429 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082977801 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082459019 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082249007 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083349217 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084508722 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079713628 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081888905 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081872352 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099344687 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082751655 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083224969 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083365 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082816048 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085131636 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082504347 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085294645 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08361168 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079883971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082847895 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079948575 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080272079 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.08230928 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08311434 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100720629 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084611249 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083623483 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085993198 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083123839 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083107635 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084427426 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082602753 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083253744 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084238087 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083629211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083489876 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081641108 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084120613 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100215677 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084099801 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082972492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.083525705 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080545927 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08397262 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083387 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087236442 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084291305 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08413067 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.084005864 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085593147 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084151134 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.084493077 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101804845 seconds)
  done (took 6.881988136 seconds)
  (3/15) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085793941 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088684462 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.085023661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086471891 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087234417 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085668296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08334754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088278894 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08351914 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083432607 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083693743 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083806467 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085222499 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083098695 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098462521 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085682893 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083856404 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085479516 seconds)
  done (took 2.35882468 seconds)
  (4/15) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088478919 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084549019 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084204214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083583813 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083027318 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083923381 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083591496 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083531642 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086575185 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.083196124 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083403972 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085146931 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08656862 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084274055 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09771047 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083437566 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083568309 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083797947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083071039 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083198918 seconds)
  done (took 2.515996343 seconds)
  (5/15) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.149243281 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085155242 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087062118 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088405167 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085791706 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085645108 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084976449 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085034836 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085226062 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085404086 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084770137 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101505715 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085642664 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088084595 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084904302 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085677375 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086016734 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085950944 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084960036 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085232417 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084719013 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084867845 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085312524 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084761616 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086999821 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084996563 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102608579 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085425039 seconds)
  done (took 3.312376036 seconds)
  (6/15) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088577465 seconds)
    (2/2) benchmarking "in"...
    done (took 0.087570913 seconds)
  done (took 0.99794946 seconds)
  (7/15) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15127175 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160588158 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085639173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.089571656 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.178800042 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.139787678 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117079414 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085466454 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088935053 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.137847627 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.160546463 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08477782 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088858087 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086807338 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087939605 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090135205 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083641083 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091432227 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085502214 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084511934 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085922938 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088838602 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089141224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104137475 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086582658 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.101373575 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089830418 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.087333941 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089858005 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088808081 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088134183 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084693311 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085516112 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084560334 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082504486 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.177548416 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091806717 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088023275 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09808447 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08751029 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08840824 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.083570264 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088164074 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088235661 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089724329 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084299407 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084658531 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083152822 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102874116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086899319 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086609268 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086381586 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083362905 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090018291 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090715237 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091248195 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085272645 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088216246 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086570437 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090746387 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087898399 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090058729 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10783578 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085619477 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090903739 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090304291 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090312463 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086374112 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087285471 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084884747 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093595002 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114452404 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095091771 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08685902 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087188462 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084323642 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105416548 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08660396 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087825204 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087572519 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085341858 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086469934 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089555243 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089375052 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087264589 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.086642023 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084335026 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084954169 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085510804 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093461536 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101285296 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085720678 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086985363 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090286831 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08966657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086788201 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086571484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090369872 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.085075693 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086765852 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086510861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088255566 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.09064351 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08623869 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102614865 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092953441 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.154076507 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087886315 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093110024 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.08568429 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08837283 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09024304 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089799687 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08443043 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090069694 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103394502 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08916483 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088601909 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086500944 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087196074 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092124564 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091073313 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086992906 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085281934 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090328176 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086951421 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087602621 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090219154 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086672055 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.084983642 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101923995 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090848285 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085629604 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08923083 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086430264 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088110087 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.084704277 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084296963 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087356709 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089661472 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087919001 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088944062 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090406817 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086737147 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102669411 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0888437 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08724664 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087047033 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087895255 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087939046 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084055032 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086025116 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087974665 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085121369 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087739719 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085417427 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087491293 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085079185 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101292839 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087330658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087339388 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086143496 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085639173 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085461007 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089278323 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085419522 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083625299 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084688912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086156627 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085734017 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085433979 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088191243 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088645351 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102342623 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084580938 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086228424 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091485796 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094313599 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091854907 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087647179 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087315084 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088743548 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087855306 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09032196 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085323909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086079801 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.08582942 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105652681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088722945 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086595719 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087323325 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087572519 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090030443 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090855269 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086106621 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084546296 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086116467 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086519522 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089166576 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086301128 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085751966 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102098878 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088811014 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086096423 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092068342 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087279186 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087563439 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087330589 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089002799 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08652469 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086818932 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090178018 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089704285 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084634855 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085628696 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101847379 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091304627 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085176893 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087008271 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088154088 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087884361 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086320544 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.094140393 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.085198125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091349256 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091245752 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088834272 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08864556 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085470157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087494646 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105248649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08958702 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087676932 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08955685 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090284665 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086423909 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087111427 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089514106 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08826702 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084311071 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087183712 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085540975 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.088203954 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085579737 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101837461 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089434837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087135871 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091900583 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.084277337 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091667872 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.086139376 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08531022 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.084674944 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087620081 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089222519 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084885375 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087441706 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086285344 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103129176 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099216946 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089463542 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086192245 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086578049 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088918989 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086549274 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090103009 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086081407 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086135814 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086972094 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085109287 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088930234 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087770589 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089121808 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105123773 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08697782 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086271725 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089255973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088216107 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087038652 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087974036 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087775478 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089071243 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091880049 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087728404 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088983802 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084111953 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089225662 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103263411 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091260627 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087720024 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084581356 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087460703 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089114055 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088656316 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086198741 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087707453 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087730499 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086094887 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089187808 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087911737 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086753979 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089773497 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105522497 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090804215 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091757059 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089214069 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08887443 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086971744 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086922925 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086787433 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089778316 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086591738 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089794799 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08922615 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088508602 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093387574 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103566801 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089876932 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088331414 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.085927408 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086950512 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087723586 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086007445 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088927719 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086418252 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089750589 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089276506 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086170804 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086200487 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084646937 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105454052 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087934576 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087107027 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08815702 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087453858 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089522697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087841827 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.08719328 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086942899 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084795 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086807827 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091308399 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086219833 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09066949 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085933064 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103844281 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085838639 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087333871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088952023 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.088444627 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085320068 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089346138 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08983384 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086904627 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086583426 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090418901 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086374113 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088404748 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087331776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104949729 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086844283 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085399477 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086277661 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087355871 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089180125 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086840512 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087028106 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089070195 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086094608 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085967287 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089947751 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0868065 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088836158 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092667022 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10423218 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087910411 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08745281 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086247071 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087828767 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087350913 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086495636 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090160906 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088762964 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090010608 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086565757 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089972894 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086398696 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089804507 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10575437 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085815661 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086498919 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086645376 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088003509 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087728614 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087105001 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092815364 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085430766 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086255452 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086288976 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086165078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090769504 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086895338 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08627382 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107994669 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089458862 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089764418 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090541123 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088280989 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089869459 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086795744 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0886809 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088323243 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08735196 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088099122 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092822488 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086871173 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088954818 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.105156738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089194164 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087569586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088451891 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092690419 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086289046 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086998702 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087138525 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085782277 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089247732 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087139852 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088092627 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089639542 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089783974 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102090357 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.085820481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087562322 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087049827 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089106094 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09102191 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090729624 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09025617 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086864957 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086941223 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089993218 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088050791 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089819732 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087397985 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090064805 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10476409 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090490348 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089268475 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089022423 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088390221 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091272081 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089773567 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089128094 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089180404 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089484983 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087814379 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088573833 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089778177 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090461783 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102782274 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087975433 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086683439 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089104627 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088016151 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087792169 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088865141 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089801923 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090008094 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088418786 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090102519 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088997002 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085763769 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090862113 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088097865 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105081798 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086601865 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088024462 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088735446 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090234799 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088389801 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089830767 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088943713 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091033364 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087185808 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088508183 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08749269 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.086586639 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086895407 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10597891 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088567548 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091211389 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.091599707 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087965446 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089232647 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085569959 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088270582 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090337396 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089262328 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086301687 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.086133788 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086962386 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087541929 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090304361 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105466973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087508823 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090987827 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087323604 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08719328 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087931503 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085674652 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089508938 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089033039 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087244125 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092351618 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09081951 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092459174 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087661287 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102991519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087642849 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087401617 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090214545 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089000284 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087841687 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091430691 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093324647 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088195434 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08786243 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089638424 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088170919 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08869403 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087478024 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105439037 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090421764 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091666057 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088089414 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09411085 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089869319 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087108284 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087243776 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087737274 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089461516 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086837928 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0876689 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088328969 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08786648 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087197681 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109144187 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088461948 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08922643 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091003891 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091946958 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086497103 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088666443 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088676849 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.087493388 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088621186 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.090693307 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090362189 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08742236 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08909031 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108567577 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091124926 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088076633 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088244462 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088422138 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.087034182 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090094907 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091054456 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093141174 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086035662 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087565046 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087306773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090898779 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087883033 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088378068 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108971819 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090491046 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091037624 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.087444918 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093358171 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088005814 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093128324 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088819395 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088667211 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088411172 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091147764 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088952024 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088111764 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090853942 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.109706129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090400183 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090045948 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087613376 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089724608 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086513585 seconds)
  done (took 54.657786931 seconds)
  (8/15) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10114282 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087565185 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08697356 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087410418 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086759636 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086927116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089149675 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08679288 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08622989 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08656394 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086562753 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08663909 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08810422 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086522456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10441663 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087253134 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08663944 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088930303 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086933332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086950093 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08656869 seconds)
  done (took 2.743352559 seconds)
  (9/15) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089524443 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088664627 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088171059 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.086719826 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088129852 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088027046 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08827156 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08923984 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089735014 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089208272 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089290475 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08916951 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088097585 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.086452335 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.105245576 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088172456 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089750729 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088812481 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08949057 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089225452 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088014265 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087012043 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.087143414 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.088710583 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08865038 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087605205 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087106049 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087728265 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.106668173 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08884824 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088877154 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088065808 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088490164 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088825611 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089102323 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088592761 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08904163 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.086799236 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.086783242 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088038988 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086794836 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090530018 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087832818 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104448408 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.086826265 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089204989 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088819535 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.086869496 seconds)
  done (took 5.174729552 seconds)
  (10/15) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087921027 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110554841 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086802589 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111116923 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.088998957 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.086925579 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086315516 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110123292 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087551427 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087184202 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087255509 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.087047871 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086869287 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105941474 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087004011 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089753941 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087127839 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087144462 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088040036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087229808 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08696036 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086950582 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087513783 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.087738532 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086686582 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087607439 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089345161 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106004751 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.087854538 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.087379128 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087491853 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087016023 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086660531 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0872685 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087496462 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087068963 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087445268 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089430716 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086720316 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087077693 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087121903 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087181756 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106263583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088090392 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087061001 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090759097 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088005465 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087434582 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089804367 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0886369 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.087796569 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086803217 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0863093 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087937859 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086614367 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086939897 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086967274 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10512496 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087168976 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.090447884 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087128329 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087216537 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.087683567 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087023985 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.087121973 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.087707522 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.087503864 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087102208 seconds)
  done (took 7.084967719 seconds)
  (11/15) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09026958 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.08939363 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.173750796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088366055 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.089097085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.090067529 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086911261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.087571401 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087051224 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09472678 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088086202 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107029044 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100202197 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09076245 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.087471738 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087784976 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087292036 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088131668 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087235395 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.17110018 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.088787059 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087960627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107580231 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091413161 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090350317 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087566652 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087616379 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08756763 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090891516 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08671829 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088041991 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087777084 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087443662 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087359573 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087899027 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089671249 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106363945 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088103103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087900633 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087348608 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087038163 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088170151 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087938627 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.087529706 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088581935 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086503528 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.089159522 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.087073433 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087214582 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087819408 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087086563 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107467368 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087696068 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.087535922 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08824977 seconds)
  done (took 6.007138129 seconds)
  (12/15) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090318888 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088170011 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091367833 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088690958 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08815709 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.088015382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087942468 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092259777 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087742024 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088110087 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087994011 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092236241 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088246488 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089770144 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105590942 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089602037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088128455 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088480805 seconds)
  done (took 2.520226211 seconds)
  (13/15) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104585856 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.158993822 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099077753 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.167352148 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.090103497 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090587358 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.099529347 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.109978091 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.103981728 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090663555 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.090577789 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090258963 seconds)
  done (took 2.192513867 seconds)
  (14/15) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091188971 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088673218 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088656945 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088345382 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088301243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090367427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088798722 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088274284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088426608 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088770506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088456919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088526271 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087714157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088530881 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105830497 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089298925 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091105021 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088689141 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088653382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088129364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088886234 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088229446 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087724074 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088148291 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087948055 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088736564 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087992056 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088488417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090890119 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107431608 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088941827 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089892436 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088436804 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089086818 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088512792 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088182583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088597649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088379744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08838624 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090637992 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088446094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088017757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088179859 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088101497 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107757837 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088978144 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089018653 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088733281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088965154 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088471516 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090601465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088926811 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088762056 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088010424 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088018386 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088307807 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088302709 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088457688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107008929 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088943923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089597707 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091039091 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08860589 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088716729 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088484157 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089312684 seconds)
  done (took 6.837813593 seconds)
  (15/15) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089839777 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088784056 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089321205 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089468221 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088668538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088903623 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091091192 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088901808 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088501478 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088886023 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088808779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088979262 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088934633 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089146812 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107996345 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089639193 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089538621 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091561644 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089203871 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089633325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088498126 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089291383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088583192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088622373 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08895363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088727694 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087935064 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089751078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091265097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107292415 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089116709 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089772659 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088493167 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08927916 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089148976 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089823014 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089720697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089416259 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088761636 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091678279 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089654627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088254729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088536957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088157998 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108342618 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089437002 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088936869 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088798164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088432056 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08904617 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090530576 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088948113 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089406342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088683275 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089139897 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089500907 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089465148 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089439028 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10709679 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089031992 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089382456 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091951428 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089187459 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089350608 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089464938 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090138417 seconds)
  done (took 6.879414973 seconds)
done (took 114.255808441 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.163674934 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.179117959 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.242164245 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.15057208 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.13644689 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120209561 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091811675 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.090384189 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.09116711 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.106483444 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09043671 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.090613338 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.138996376 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.182819128 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091090354 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.123160913 seconds)
  done (took 2.986059959 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179234454 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.266257462 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103597252 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090113275 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094235167 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.089384411 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089554126 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.138168269 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092678126 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.090959053 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089757433 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090233681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093968863 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090281941 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089849973 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089575497 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.09060831 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089840824 seconds)
  done (took 2.873404502 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107224808 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.126146628 seconds)
  done (took 1.154195027 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113156848 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.131799582 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271630143 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120565751 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10541969 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094749479 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118324823 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.118325103 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.163721099 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.090678501 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08997904 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.091366368 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.106760225 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.090051814 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100145905 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091256856 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10845611 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089490011 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089348234 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08990885 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.129780261 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09107038 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09005356 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089992938 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.154817452 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.092582653 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091726888 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.091687498 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.090074303 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089699395 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.089831605 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090306805 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.090200018 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110460765 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092453866 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.091597332 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094095835 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089661332 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090198551 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090291789 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.090450818 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.089710431 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.093581593 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091282977 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091572189 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.091433275 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091198469 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112902136 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091202031 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.092473003 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09015064 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.090577649 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.090689954 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.092291485 seconds)
  done (took 6.429528365 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.492595602 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126531314 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091683377 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.542734589 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095141708 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092754602 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.469932524 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113501445 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197329073 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.508967516 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106147716 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090135065 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10400317 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.199720579 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.152925033 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.227040115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.405418036 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093856908 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115904055 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103835481 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091127021 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093075034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09242153 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.696624131 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.090606215 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091562272 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092152012 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089976177 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.118992087 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093784272 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090623675 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.106950263 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2099158 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.100790331 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090797999 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091600684 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091861821 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.103145798 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175441793 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.100084236 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169805601 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090471909 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091288983 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110076987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093599612 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090330412 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092517352 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.106992936 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.105879177 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090877339 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091169974 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091231643 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.090848704 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093140964 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.092141815 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226093276 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.228014959 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110769672 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093209409 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095500203 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176682942 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096521422 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104421868 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107736536 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.100279512 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091795053 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.043065672 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102938579 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091471199 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090570316 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093303555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109416638 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.090661669 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168391734 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.669593948 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091588113 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091066539 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091681561 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.163252184 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092589218 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091541459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.102950452 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091188831 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09148419 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090684087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109481451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.105353062 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.189004761 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091297504 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09121118 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091289332 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101170407 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093320247 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.187316488 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.092985708 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.09250953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.177941063 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091038253 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.093986393 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121238392 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091290869 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.104250338 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091893669 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095142476 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093575098 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.093999523 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.099943017 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097973004 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091255389 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091376494 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104257113 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097741339 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091277389 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.104516783 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.71105795 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.105156739 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091323973 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097854133 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090952418 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.103134065 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091603688 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176693 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094025854 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100132984 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091446894 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091670596 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094220221 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.09336746 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114895616 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091885707 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092578952 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095013968 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.198538375 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.10200082 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091934177 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174258472 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173935597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.093194881 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.106975545 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091042653 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.105859551 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094226787 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109652841 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091788628 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.04484865 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095137168 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092564564 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090790247 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177146688 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092485225 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098098229 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091967003 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091693155 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.049061127 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095786692 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.092558907 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09767953 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110169457 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092376342 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093451967 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091289402 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093945536 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.104066586 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091765929 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091984393 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.097521339 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.100804997 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.091437536 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092796856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092186164 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114743572 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093592558 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091572329 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098595429 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106218744 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092650748 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.094385326 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.880666459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093021466 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093195789 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.104733081 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094390634 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194523479 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091874253 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.103507157 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.119564925 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093145993 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226358464 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.101822865 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174231863 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096166768 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106196186 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093599752 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090674869 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.09342871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09279497 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091231015 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.09310353 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092158996 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111179222 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.159693771 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095033733 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198461271 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093977733 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.104801665 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09157631 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091078691 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194561893 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092835549 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09566447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092705854 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091061231 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093803759 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.890384734 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.096002501 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09573501 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091414278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.093815282 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.101910096 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09158497 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092431587 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091612348 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.094004272 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.178116366 seconds)
  done (took 40.194361728 seconds)
done (took 54.552770364 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.157871472 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.13765703 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202372732 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115106676 seconds)
  done (took 1.627415399 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183322544 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110087114 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.173583247 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091431111 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.19740995 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.09086784 seconds)
  done (took 1.79648641 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.124529663 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.108693361 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.107826212 seconds)
  done (took 1.29186428 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.150517814 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.144595972 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41316951 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.333415443 seconds)
  done (took 2.085591122 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207716428 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094037586 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093623708 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.179241927 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201465494 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.103905462 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094982819 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.101392712 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098241543 seconds)
  done (took 2.167056789 seconds)
done (took 9.916094289 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.172127685 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118430703 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10029781 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099137817 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.16563035 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121664982 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.126802787 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.100066775 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.101402071 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090883066 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091538107 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.103044249 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099565175 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.177064416 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102076458 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090857643 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114680436 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.101387963 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10597004 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105612243 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.167984421 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095752959 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.10071176 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091618843 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188179516 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096238215 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.099979544 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111975343 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104444566 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091326069 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109150193 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091752031 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106752123 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.105885113 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094682291 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.090946481 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115203337 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097803429 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.095736546 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091759154 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105168192 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.091393745 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.099975562 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092086501 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090908068 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091324463 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095723276 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.104258929 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091556825 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113124931 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11705008 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.105170357 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091313776 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091684215 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090847028 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.092233796 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.100193607 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093931079 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104694319 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093492196 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093448686 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094082844 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090624304 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114466861 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.0920513 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092207954 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.090896406 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091949961 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.091652018 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096479797 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093928006 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.093607644 seconds)
done (took 8.489033557 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.0963596 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109702149 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096515206 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.169005639 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152782347 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093446939 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140037222 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092130221 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.098124838 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091807834 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094852145 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093712406 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091941161 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.092460221 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091744418 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096549219 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.090495167 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09169944 seconds)
  done (took 2.833276774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105162884 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115003451 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.102927055 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.104313265 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.092698799 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092293091 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092507644 seconds)
  done (took 1.673077491 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09496899 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181165845 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.164492775 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184292151 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.173226987 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.168717405 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.099374927 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107028135 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.09389532 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.200972204 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183034239 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094377713 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.095993143 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187741472 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093053803 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.160256622 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.153464837 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095714476 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.18477622 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095900323 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109548428 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.100743328 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092607238 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.177411178 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.092389681 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093848596 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.195866178 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094617339 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.118314766 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176276327 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.097795747 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093984996 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.195195143 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093733079 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.176439476 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093907892 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.197495296 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100896979 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099566852 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094173917 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096978743 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.158553193 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095107695 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098516578 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093328209 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.205989882 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092513231 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.176520212 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093412996 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095190736 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096407371 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09305939 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098504217 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114796022 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185623815 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094595549 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.162216578 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18302069 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180242613 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.161601975 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096445295 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.199473201 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.170707882 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.095622635 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.156972056 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116590664 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.163929156 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097736591 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095753308 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.156901866 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093370463 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.189267364 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.166159816 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.096892069 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094614126 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093427733 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100541766 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.188900209 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092013656 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093258577 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165292877 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.09585786 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.182923121 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092801745 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094957816 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.098070013 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093962717 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093197396 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.186493618 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.165366839 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.092175618 seconds)
  done (took 12.772548312 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092875498 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093256132 seconds)
  done (took 1.184501744 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100579829 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092060241 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101037849 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095254711 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.097917689 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.178678937 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.200704642 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093325695 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.096921683 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099464464 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.180150562 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.201947748 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.180740442 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.092662482 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.183899014 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098098298 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.203793374 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093072101 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.09908774 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093705282 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09808454 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.093832463 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092657034 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.18274796 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092761796 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101437131 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09305038 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.098642572 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099235524 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.093047237 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092783796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.092943802 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093243282 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092704945 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.201722999 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093397491 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094332806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.093449803 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092181485 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093168063 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.182719744 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092765777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.099667982 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.115112404 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.092830939 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093424939 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094116647 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095566622 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.180269013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093114564 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092780164 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092240501 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.092580837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.116155763 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093867593 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092803352 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09385593 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.18133535 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095185987 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093274012 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092385491 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093376888 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09252231 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.114324245 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.092665415 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.093322971 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093167434 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092812151 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093708005 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095027727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093448406 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091736875 seconds)
  done (took 8.988462989 seconds)
done (took 28.416562051 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.081530619 seconds)
  done (took 2.075672892 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.585457131 seconds)
  done (took 1.58079732 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.065828832 seconds)
  done (took 8.090904857 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.336052441 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.273883222 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.862028893 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129647632 seconds)
  done (took 2.600878087 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.066774693 seconds)
  done (took 2.079206091 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217481496 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.189202482 seconds)
  done (took 1.405691115 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.66637154 seconds)
  done (took 1.679218495 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.310664156 seconds)
  done (took 2.310356156 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.187888348 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156748494 seconds)
  done (took 1.363948726 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519033182 seconds)
  done (took 1.537581141 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.397840606 seconds)
  done (took 8.42127536 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2250004 seconds)
  done (took 1.238757666 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.260362509 seconds)
  done (took 1.280798766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.893993503 seconds)
  done (took 2.913848892 seconds)
done (took 39.589287577 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100497137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.103322846 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104346789 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.101438878 seconds)
  done (took 1.416389473 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098635239 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094905155 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095483371 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093513917 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097247074 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092763961 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.095115447 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094284685 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094356273 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.092876126 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093654647 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093268285 seconds)
  done (took 2.157830196 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137929272 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.12358485 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.138335887 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.206771615 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153778564 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2755342 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.224897803 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23634451 seconds)
  done (took 2.520893963 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.094985613 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.115592982 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.112564803 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.111252066 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.096151053 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.317658551 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.110110511 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.095861492 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.134444122 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.114453591 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.096366095 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.438868657 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.093621402 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.093992679 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.114513514 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094380368 seconds)
  done (took 3.25285911 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.167347048 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.30156237 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.996479441 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.400062676 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13381604 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.095966603 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.446493021 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.110392669 seconds)
  done (took 8.681728592 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.164155512 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.106064814 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.118569756 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.120578252 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117590582 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.119152233 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.116259617 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.0935561 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.100458864 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.094821905 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.113765655 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.093930799 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.120683084 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.102702166 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.094688997 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.094494838 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.093331352 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.100963118 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.145823152 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.092999955 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.104032712 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.105329176 seconds)
  done (took 3.438713331 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100072642 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.098236096 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09806715 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09799193 seconds)
  done (took 1.431847444 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.17424178 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.097392553 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092865022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.09332304 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104075665 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101375182 seconds)
  done (took 1.697314512 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133492325 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098295111 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174947806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.443236113 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10714917 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151152462 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.382965739 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138276383 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.124141345 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107760352 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129068298 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109852726 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139107425 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134799195 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106046027 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.369749254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144023483 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143375844 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11172985 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141512758 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122404951 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156881402 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128313174 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11242987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132067423 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111222104 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096792057 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10066741 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116191102 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121258647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117138918 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134458579 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103028814 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129263924 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110605616 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116744804 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204286173 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101364007 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.221517136 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126738602 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1438266 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107532111 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147518689 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113860568 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104248522 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137017773 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106886218 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123317987 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104354681 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111592682 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147498715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121183357 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.120253281 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104788814 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.417681187 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10202282 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.106829995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143960485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136078198 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13321722 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129836971 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09798334 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165794128 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125494799 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123728722 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106878186 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.111613634 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093238742 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151380493 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158816704 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121504767 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148395826 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.135711881 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104311589 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121713942 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116466277 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140424771 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124248691 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123829503 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097370902 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13609936 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102328166 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100509848 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.165054788 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097915524 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158778571 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102946122 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.305481444 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137813265 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115906639 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112952702 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119000538 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14562606 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114184073 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.134028706 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112309394 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11057733 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138852713 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099282737 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115217654 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132632089 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.097712914 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115449598 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120608424 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122209256 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128927847 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115772334 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126511898 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104586833 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132229594 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131551016 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122586119 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119290169 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12794958 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102013042 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103371315 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129842629 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128311079 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104818427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141804135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129729276 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.136266002 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101966109 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103158369 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173079342 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108572676 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151014595 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106853952 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103065481 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.124296113 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125398908 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112422536 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.109217241 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101627239 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116618601 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147969725 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099971721 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110707793 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129874895 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12118622 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100191093 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129574438 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103918661 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110755006 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.118953604 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105289296 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138438485 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126390234 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123418139 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106020186 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124664736 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110595698 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103060382 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.126663803 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136043417 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09709873 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.121351325 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130419867 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100378687 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165969429 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115093686 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173187806 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122575644 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102004661 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166521944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100627322 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11963721 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104153328 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117341947 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114284505 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.121581313 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144998537 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.134827271 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116968017 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111028156 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115186854 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.150115947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114190569 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.104619658 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123992863 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120632379 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097399886 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093578101 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098944845 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108349672 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099109111 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129721664 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11803596 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116413826 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144880085 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121400284 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104510567 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152132964 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.096822019 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114814111 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122653935 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109924104 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.12155156 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126681961 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128911575 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103185468 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129600629 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099957474 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098654794 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102470084 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119277807 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105937773 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101691563 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103378509 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128322603 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118348779 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132587531 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169513665 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117326303 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136774097 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101567874 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140022694 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111062587 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123810717 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164921181 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102283817 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.11313806 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126374799 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105573621 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135741982 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122867371 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145241793 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127652965 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12604906 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099754306 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10630025 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147674994 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101953677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108327742 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105274071 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101928465 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104729659 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105115043 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116307318 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122351942 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108747139 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110408035 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.129370362 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110442605 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101135207 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105234332 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127430171 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130037486 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.117288868 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117096943 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112264277 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108036155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128761835 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113689737 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09950623 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.42915632 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12408666 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120392265 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102162643 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102386344 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149822823 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108665285 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109769615 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166014337 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104042491 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123433503 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149100734 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.102716902 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102378172 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110098637 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11140439 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.124276698 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094373174 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115990867 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132052826 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122984284 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133508877 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12696 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121317523 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117020887 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117694296 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104417119 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156163503 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12200064 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119253223 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126584323 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108748536 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167263379 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120518748 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100148978 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094955441 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167717697 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10280162 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121408525 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.166526624 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151386151 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127085644 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151664607 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131662623 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099341264 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122180202 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133488344 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147250359 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10193042 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101466185 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148761445 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154031389 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102126954 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148030626 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40432027 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135824744 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113654397 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.117044004 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.423107575 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101786198 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101204979 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111515438 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115252086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.098692019 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165785747 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123555027 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105095836 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11010192 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101548318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166834903 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138228821 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105792853 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118019547 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.102703703 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113443127 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108055641 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136589087 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112128645 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112264556 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111196822 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127595835 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119259439 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.101210077 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121186989 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122279656 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144141095 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11084971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107100491 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168246744 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101139398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110089069 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103333951 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094303752 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140699805 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.165636985 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100917233 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113822574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121794608 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102972452 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094376667 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105911932 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125381377 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103759144 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.123771187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122624253 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102534757 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123720551 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125237574 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102688128 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124287454 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103824935 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096161251 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101918058 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1276024 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10281957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137480401 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116560563 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096533365 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114585381 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104803062 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14053945 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107948573 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105620274 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.111866041 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.101171106 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126908457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13829531 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136920834 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111107286 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123066488 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124032952 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134940204 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102799735 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104285678 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.201312331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10684124 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118930766 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101515702 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104591233 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132854534 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094809193 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134897113 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124784653 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109301888 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.10242755 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.140263857 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109073228 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103586147 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109701101 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128002032 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1375119 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125945136 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188033828 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103325989 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122835593 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111564885 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100802693 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113834658 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115924588 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133707297 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105437849 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10237028 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106173907 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124648184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101370851 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141182199 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122623554 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123504113 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121263255 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.0949252 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123837815 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102103626 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122532272 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095050426 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.126745447 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126915441 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101738636 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.098947289 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125664862 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107398922 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123708539 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095248844 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.158003053 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128230832 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099958381 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102325303 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404236181 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1203021 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190745974 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.127737123 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106975196 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131564565 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113454721 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118457731 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127137745 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095272591 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102113125 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.095608038 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.225182197 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120665484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128328051 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14657227 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110611831 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168810433 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.128279511 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.244694874 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109671558 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147862588 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120545637 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.099202838 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109546891 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102683169 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106541202 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167451671 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126354126 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124391936 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104480744 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095892501 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103081614 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103055633 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112788854 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130117454 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125062133 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105171405 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115090543 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104999665 seconds)
  done (took 61.784336822 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132215416 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.125794349 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.214873903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.227184127 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.13391675 seconds)
  done (took 1.964428019 seconds)
done (took 89.353772224 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102210693 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.101850242 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104925494 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.102926426 seconds)
  done (took 1.523308446 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156756177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09572181 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099282946 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.099105969 seconds)
  done (took 1.57857986 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.416699917 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.099664839 seconds)
  done (took 1.680857251 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.128170908 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.119048728 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120269554 seconds)
  done (took 1.505139655 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109425228 seconds)
  done (took 1.243619947 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102752452 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.10282411 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.176555902 seconds)
  done (took 1.515362393 seconds)
done (took 10.177191806 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.196855061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.939611315 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.407330081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150396639 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.754704771 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.409713973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.376001515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097958337 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107430352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097518546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.097843728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678988787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.349415383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873784299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.386151689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.873938299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702343503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097607524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097326483 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097407847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.351652469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09755172 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097840655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098035721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679807816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397619488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098978928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.882394612 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122683618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097722763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383848253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10057536 seconds)
  done (took 20.32137774 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12948155 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119195604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103090065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0987664 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098039632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102713271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100314991 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098571613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112681159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097391854 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.098221638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120186722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101060477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098336527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112505229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09899087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09979621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097139308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097928864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097567994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.100388744 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097585175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120807401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09712953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098072527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10670903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098001568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100324839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097828082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09785162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099203607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098497162 seconds)
  done (took 4.434822403 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139783767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13440082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103004649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128608253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125099009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100735925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1542509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098764445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137694186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098472229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.099627683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098390933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113331172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.099190337 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1135078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098393518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098304889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100319322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098074203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121020976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103195246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098127213 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09798795 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098315994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099014896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10808183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097995282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09816814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100068731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119653065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100765258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098892534 seconds)
  done (took 4.625467736 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096822298 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.106600218 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129672076 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13181788 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098096622 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.097438858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097524413 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099690331 seconds)
  done (took 2.002608153 seconds)
done (took 32.521705869 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.09759195 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.097461067 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.097524482 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.097764178 seconds)
    (5/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.096588749 seconds)
    (6/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.09759621 seconds)
    (7/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.095977917 seconds)
    (8/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.098421035 seconds)
    (9/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.09585339 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.095621587 seconds)
    (11/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.099279943 seconds)
    (12/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.098479213 seconds)
    (13/77) benchmarking ("isnull", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.096398641 seconds)
    (14/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.097118566 seconds)
    (15/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.118510392 seconds)
    (16/77) benchmarking ("get2", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.097301758 seconds)
    (17/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.097268794 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.096966031 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.097480692 seconds)
    (20/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.0963068 seconds)
    (21/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.097149993 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.098645226 seconds)
    (23/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.10357183 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.096049645 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.098227086 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.097351975 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.096545867 seconds)
    (28/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.097419651 seconds)
    (29/77) benchmarking ("get1", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.097265023 seconds)
    (30/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.119632043 seconds)
    (31/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.096325797 seconds)
    (32/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.096974762 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.099306553 seconds)
    (34/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.096336762 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.097535797 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.095578426 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.098487245 seconds)
    (38/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.095403543 seconds)
    (39/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.096694489 seconds)
    (40/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.095724952 seconds)
    (41/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.096569682 seconds)
    (42/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.094981422 seconds)
    (43/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.095453759 seconds)
    (44/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.121739364 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.097024001 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.096819715 seconds)
    (47/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.09638586 seconds)
    (48/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.096537696 seconds)
    (49/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.097272775 seconds)
    (50/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 0.098452184 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.095687587 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.096069689 seconds)
    (53/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}()")...
    done (took 0.097640349 seconds)
    (54/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.097334723 seconds)
    (55/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.098371378 seconds)
    (56/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.09595026 seconds)
    (57/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.097249169 seconds)
    (58/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.097857347 seconds)
    (59/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.121772119 seconds)
    (60/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.096343886 seconds)
    (61/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.097391365 seconds)
    (62/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.098188324 seconds)
    (63/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.097431035 seconds)
    (64/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.09669819 seconds)
    (65/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.096576946 seconds)
    (66/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.099280152 seconds)
    (67/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.097170807 seconds)
    (68/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.097524203 seconds)
    (69/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.098059816 seconds)
    (70/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.096503124 seconds)
    (71/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.097251054 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.096234096 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.097351905 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.121345878 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.096853169 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.096648953 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.100533036 seconds)
  done (took 8.735884082 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.103785265 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.104015322 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.105359906 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.104313265 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.102358687 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.101485042 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 0.10625199 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 0.103662204 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.101196877 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.101553766 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.105973182 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 0.109085799 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.1034971 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.129343542 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.105002319 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.194010635 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.106565227 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.103588592 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.105882808 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.107177526 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.103763196 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.106314707 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 0.132853766 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 0.110547298 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.104958739 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 0.104792516 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.101348992 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.104734687 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 0.108509329 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.104873602 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.103354623 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.104456789 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.107230745 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.107362675 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.103963779 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.13095981 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.100633886 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.101530928 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.106243818 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.104047519 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.102584693 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.104704306 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.105610218 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 0.107999698 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 0.111492669 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.103811316 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.101843537 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.101236826 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.132328629 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 0.107604046 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.104469081 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.101613061 seconds)
  done (took 6.798044919 seconds)
done (took 16.680239785 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.29483854 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.116250188 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13910931 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.218877903 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.213738074 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141174097 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155594647 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.136764179 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.973865951 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139527868 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141237164 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.327542001 seconds)
done (took 6.159400228 seconds)
RUNNING BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.515325727 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.349367123 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463362555 seconds)
  done (took 4.199015183 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.367099894 seconds)
    (2/2) benchmarking "String"...
    done (took 1.398137221 seconds)
  done (took 3.90912343 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.149985973 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.178863598 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.149144315 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.324944254 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.187184208 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.148720518 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.148922918 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.151194157 seconds)
  done (took 16.433556391 seconds)
done (took 30.349173244 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.223820222 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.317260177 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.413185085 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.150549312 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.158784857 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.14884281 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.149649338 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.209175692 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.154904615 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.149422703 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.545751593 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.441217979 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.151018226 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.644439492 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.151644494 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.165262007 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.157521218 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.367002675 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.158449059 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.200303125 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.149403356 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.15730953 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.163422317 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.164645169 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.248899598 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.161684178 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.166878065 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.149764995 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.332373342 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.167190535 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.200086408 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.149038785 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.167787608 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.153138817 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.148771782 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.173051685 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.344621896 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.249876399 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.155598837 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.153289884 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.34575158 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.150513134 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.148822906 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.154234837 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.151836487 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.158745187 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.236749729 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.306535768 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.150874913 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.153703624 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.162294032 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.665303179 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.164218718 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.170861043 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.15658304 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.377432633 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.16163522 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.16316621 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.166777354 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.160542902 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.149214715 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.150059515 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.161644368 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.150217077 seconds)
  done (took 140.879805529 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.14980655 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.150900334 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.151050214 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.159004438 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.150478214 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.150730899 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.149579566 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.14883848 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.150554202 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.15506483 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.150651211 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.150463058 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.150682709 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152150144 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.149174627 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.174730949 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.150723007 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.14913761 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.151024792 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.150754785 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.157047554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.150035071 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.149386594 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.149505325 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.173475761 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.201633183 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.163516744 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.174821882 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.149986531 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.149446379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.169935786 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.160317942 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.652619443 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.09192384 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.16211475 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.179813718 seconds)
  done (took 78.226953932 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.149411877 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.149784411 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.149783014 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.149529141 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.173030244 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.150385324 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.554604115 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.55685063 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.11911815 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.565097349 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.909556027 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.149733217 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.036026229 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.226468115 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.149136702 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232114573 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.162070261 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.150798646 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.181836811 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.175452968 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.15080577 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.149594861 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.554632121 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.164214877 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.227929404 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.295708553 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.149269541 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.173122294 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.578402254 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.14946342 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.173145482 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509122843 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.173153723 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.149224144 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.342315318 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.884697349 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25363805 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.152114526 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.173646453 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.149829598 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.411424246 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.149343642 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.149692709 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.224433918 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.150817712 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.150698493 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.153875712 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.626273145 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.149327998 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.55413157 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.150971014 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.944981901 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.149848804 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.149937573 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.438355744 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.465814892 seconds)
    (57/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.149858023 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.149651153 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.152383624 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.149722531 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.149583407 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.172483735 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.47881466 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.283354888 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.150585001 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.153075611 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.172896567 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.150070131 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.149847827 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.228911651 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.211072581 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.555104109 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.15104721 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.403412124 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235384472 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259956591 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.150047154 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.149597096 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.151051262 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.149456716 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.250683554 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.149604639 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.461096694 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.296207081 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.151303389 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.036804052 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.238130631 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.149176302 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.341261204 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.150345655 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.148725896 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.700583434 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234419824 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.149320315 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.148806004 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.149145922 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.462679926 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.555745322 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.270440676 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.152774595 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.551118268 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.153538798 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.458093518 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.541988405 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.655467571 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.152950246 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250890284 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.296204077 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.151526671 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.149227356 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.028328044 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.151079617 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.206473882 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.150503426 seconds)
  done (took 358.01803666 seconds)
done (took 578.269558315 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.149028798 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.163535321 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.149425566 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.15037855 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.150579973 seconds)
  done (took 11.906108521 seconds)
done (took 13.049050023 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.193435212 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.242813001 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.176121209 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.175963088 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.174185419 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.174116416 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.178204086 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.174486853 seconds)
  done (took 10.632957306 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.17060305 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.170574275 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.170796091 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.172247113 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.170557233 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.170535373 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.171526841 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.171516713 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.170352459 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.170326059 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.170608707 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.170812923 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.170998211 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.171053386 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.171199843 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.171145996 seconds)
  done (took 19.879984879 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.173504676 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.171053595 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.170635944 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.171134053 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.171072872 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.171739647 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.173700929 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.171198866 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.171047589 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.171123716 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.171820314 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.171470758 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.17099465 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.17112204 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.171289589 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.175356867 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.170985361 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.172738097 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.176478168 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.171114847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.170944852 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.170966084 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.171355869 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.17239853 seconds)
  done (took 29.270255388 seconds)
done (took 60.927665384 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.159014774 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.150749128 seconds)
  done (took 5.453552578 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.601107376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.65837611 seconds)
  done (took 4.404971819 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.171049825 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.170841348 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.171890434 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.171440726 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.17123644 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.17096371 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.172955653 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.170941919 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.170611431 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.170727088 seconds)
  done (took 12.857839325 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.170816275 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.170988923 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.171078668 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.172293069 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.170971812 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.170780097 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.171381431 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.170947996 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.170863139 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.170824796 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.172923387 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.171067913 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.171881006 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.17128896 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.171152631 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.170962802 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.170676941 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.173343203 seconds)
  done (took 22.229358287 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.192871593 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.205710377 seconds)
  done (took 3.542912056 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.364717678 seconds)
    (2/7) benchmarking "second"...
    done (took 1.259541873 seconds)
    (3/7) benchmarking "month"...
    done (took 1.348351142 seconds)
    (4/7) benchmarking "year"...
    done (took 1.331452763 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.258426508 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212107908 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.259482299 seconds)
  done (took 10.178311642 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.171988701 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.461931018 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.574938056 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.957023166 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.185456195 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.182565954 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.995909466 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.183251097 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.19061579 seconds)
  done (took 14.047989483 seconds)
done (took 73.858409092 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.150597852 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.151149389 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.161461803 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.158475529 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.603686614 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.191127377 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.151862049 seconds)
done (took 15.712495702 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.149080201 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.161194591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.152947453 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.152765935 seconds)
  done (took 9.759922614 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.084940131 seconds)
    (2/2) benchmarking "read"...
    done (took 1.483352597 seconds)
  done (took 4.712335557 seconds)
done (took 15.616581969 seconds)
(8/18) benchmarking "scalar"...
  (1/15) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.171072034 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.171204593 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.171259069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.171849157 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.171170929 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.171019443 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.170944085 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.170946948 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.170737843 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.170884649 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171557081 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.170677221 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.171032853 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.170927043 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171269266 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.171163317 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.171342669 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171015532 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171250618 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.173901933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.172512999 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17092858 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.172817926 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171474948 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.170803354 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.170999608 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.170936961 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.17152286 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171135589 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.17091978 seconds)
  done (took 36.284756603 seconds)
  (2/15) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.179061947 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.175661514 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.170885417 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.171417538 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.171916694 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.171467476 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.173752193 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.170994021 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.171036135 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.17132891 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.170878923 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.171062046 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.171344205 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.172226301 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.170911817 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.171398052 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.171932827 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.170919431 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.171418586 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.171321506 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.171858376 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.170973906 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.171251107 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.173260719 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.171233367 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.171068402 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.170812434 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.171165062 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.171264866 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.171042421 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.174226416 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.171286447 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.171035367 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.1713507 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.171345952 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.170546548 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.181721502 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.17601065 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.171334078 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.171294129 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.171187201 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.171449386 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.170604237 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.170860624 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.171419145 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.171581805 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.171084256 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.171608834 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.171658701 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.171696345 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.17121025 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.171358034 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.172508669 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.172994555 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.171273317 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.17052776 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.171633767 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.171181894 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.171294198 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.171308237 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.171032294 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.171085582 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.171454624 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.171054015 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.171781901 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.171202009 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.17167658 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.170979634 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.171334427 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.171324719 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.171140478 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.171506098 seconds)
  done (took 85.516977406 seconds)
  (3/15) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171255297 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.173136891 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.170838624 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.172708694 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.173289424 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.172693329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.170729323 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.172780421 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171604084 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171633697 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171964395 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171267729 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.175159215 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170833316 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171151723 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.179005096 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.171110726 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.179186194 seconds)
  done (took 22.255237555 seconds)
  (4/15) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171525722 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.171077411 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.171376961 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.171524954 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.171168275 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.171776662 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.171248313 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.171715761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.173757431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.171044935 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171622453 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.170976631 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.173277552 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.172260523 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.171608345 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17222672 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171611138 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.172145424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.171200332 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.171568186 seconds)
  done (took 24.580174197 seconds)
  (5/15) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173667615 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173970167 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174335577 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174059075 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.177615883 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.174226066 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174317349 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173168389 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.174350803 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.175334098 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174304149 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173596377 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174277958 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174015076 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17366545 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1743434 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.174545241 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174260428 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.173883215 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174000967 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.175602498 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173607692 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.174866231 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.173987837 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.17383286 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.173424009 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173481348 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.173675158 seconds)
  done (took 34.024824316 seconds)
  (6/15) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.293088947 seconds)
    (2/2) benchmarking "in"...
    done (took 1.293233169 seconds)
  done (took 3.731301655 seconds)
  (7/15) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.175119545 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.173129837 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.171543672 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.171831418 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.173887965 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.175401285 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188969142 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.177056244 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.174640225 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.174056632 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.179919178 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.178418918 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.17725173 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.175286117 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.173695761 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.184924564 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.173632206 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.174549571 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.174294441 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.171783646 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174590847 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176141603 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179138981 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.175125831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.173861355 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.195873162 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.186321179 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.175451291 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173062091 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.187453517 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.17495465 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.173414581 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.174559837 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.176827165 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.171649271 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.176364327 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189665459 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.179151692 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.186306443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178782093 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171619869 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.171924656 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.175739527 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.175664448 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176429559 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.177668752 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.171759063 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.172303056 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.172999723 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.180361064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.175106695 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.172520332 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.173180612 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184435953 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.177461114 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187946875 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.180762721 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.180737369 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.178096042 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.18749598 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.201328605 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.189594361 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185972323 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.177264861 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189795644 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.182132169 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.194595346 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.177158912 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.173668384 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.172035354 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.193390375 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.207192828 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.188269751 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.177448403 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.175071704 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.172459501 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173541761 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173174605 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.191685409 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.188845593 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.177169806 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.174830193 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189532272 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180220474 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.1733879 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.176078327 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.174506548 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.174132129 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.173576892 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189149263 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.180079394 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.171600941 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.173184872 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.173877628 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.17624853 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.175246517 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.17545632 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175310212 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.173069076 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.172002948 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.174710764 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181266765 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.178022289 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177062879 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.175087629 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.192767669 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.178476467 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.173013063 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.192900857 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.176287781 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.174538257 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.178465013 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.179975121 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.173121526 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.180566957 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.17766107 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.176852727 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.17491086 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.176636359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.172100936 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189309619 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.191734997 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.17432971 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.172268135 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.187433123 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.180311197 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.175052148 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.184009154 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.174643089 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.172175806 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.172417805 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.175860841 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.173742834 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.174429723 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175780174 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175001444 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.173205405 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.172126497 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.175039368 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.174856943 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.184055109 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.175175768 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.176545495 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.178439591 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.176684828 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.176100746 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.195542952 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.177438276 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.175744765 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.177104016 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.173619495 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172048555 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.183337979 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.176417337 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.17440514 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176256841 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.173336707 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.178578296 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.172948599 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.172385818 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172511183 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.177202632 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175507025 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.17624818 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.183590036 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.175069958 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.173371907 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.171895183 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.172271837 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.173750237 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.173037018 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.173642612 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.180651045 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.178213445 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.172717076 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.175150556 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.177272822 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176882339 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.175475177 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176831984 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.181181769 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.17809667 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.177024606 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.191490203 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.17950516 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.175357705 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.172177412 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.173646453 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.175272567 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176335971 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.179635134 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.176749501 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20111084 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18874991 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.174835641 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.172504898 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.173513475 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.175410574 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.183811363 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.177822613 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.172017545 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175387736 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.172816111 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.176496117 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.178616638 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.17631921 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.172694307 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.173387481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.173694783 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.174720822 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172343984 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.174601673 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176320956 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.17351138 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174185977 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.174845209 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.173085977 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.173688009 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.174376713 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.174265527 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.174199596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.174763983 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.187153548 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.175940321 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.176126377 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.178843203 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.182814309 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.174116555 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.172831336 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177760314 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.176478098 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.196326363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.179955425 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.175049495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19234052 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.179072353 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.174318885 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.183179718 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.175261882 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.172375481 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.18056521 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.176970549 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.173161266 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.175367273 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.175514079 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173082974 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.174385165 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.191294927 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.176607305 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.175309025 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.173397469 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.175023513 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.173021514 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.175610111 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.176872143 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.176271089 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17904309 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17508274 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.172812339 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175669126 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.17637152 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.175725349 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.175622543 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180716137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.182080486 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.184146183 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.177389527 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.176947641 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.17684679 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.172761773 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.174009907 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.175996333 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.174779139 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201961995 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.188824151 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200253887 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.187758793 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.173160917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189480869 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.179614461 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.174719425 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174600764 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176031533 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.17569867 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.174099234 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.173469615 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.176152778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.173585063 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176126936 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.178029762 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.172926739 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.172119443 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.173181241 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.176605838 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.175444238 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.17245531 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.173050776 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.173351164 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.17905615 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.179092467 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.176710181 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.174451095 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188566437 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186552354 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.176458403 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.176917539 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.175235273 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.174279634 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.177206683 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.177794397 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.182885617 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.178645971 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.182500372 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.17916154 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.175743298 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191576038 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.184374703 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.180587839 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.178102397 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.172642904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.175423425 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.175330746 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.176798949 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19698315 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.181442486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.178322746 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.178335737 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179878111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.175439838 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.172740822 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.175463584 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172988827 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.176097672 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.1934892 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.179709724 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.173651342 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17857634 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.175862936 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.175572815 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.172677126 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.173276504 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187593408 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.183197947 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.175227311 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.17705848 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.175346041 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.17304037 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.175359311 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.172407888 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.173719997 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.172530879 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189834615 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.184729915 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177324714 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.172479545 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.194214921 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179451032 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189636824 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.181141401 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.176524962 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.180772359 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.172400066 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.175087698 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.175078758 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.17630999 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.177047723 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.174449559 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.175027774 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.175857209 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.182983674 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.176847908 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.179618651 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.173602593 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190799822 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.183186144 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.175511146 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173247799 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.172245018 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.175356307 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.176133781 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.175532168 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.172956631 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.181298753 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185807427 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1759582 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.174358974 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.176930599 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17407039 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177050867 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.172392802 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.172529691 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.175517082 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.17253898 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.174318397 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.176380879 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185636316 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.180871325 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.174494117 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17663545 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.174808542 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.193117295 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.179089604 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.177679439 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177958943 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.173353958 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.173596796 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.174164676 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.176476701 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174562701 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172982681 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.176543888 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.181687489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.176235539 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.184707008 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.177258296 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.175187292 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.174402765 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.173803247 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.174969387 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.173895367 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.174653006 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.174466111 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.175698041 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.172724968 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.1720459 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.171641729 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.174257075 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172368917 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.178623343 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.176782187 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.172970739 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.171956154 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.172000085 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170753487 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.172589405 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.173358079 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.189631377 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.184413535 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.181623236 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.175695108 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.174239405 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.172023342 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181729185 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.17549613 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.17373599 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.173815399 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.175239113 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.175541806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.176426276 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.173922116 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173970517 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.18974885 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.176205647 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.172748504 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188954755 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.179948302 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175174021 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.172137811 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.172743475 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.173112097 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.171193138 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.169981462 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.171373887 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.189639758 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.17731312 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.173826365 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.179538194 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.174245482 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.17109557 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.172916053 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.168621023 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.173992796 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.170236592 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.17143891 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.172347685 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168093233 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.168682344 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.168808548 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.170309925 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.177010918 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.174989641 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.168663487 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.172967037 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.171440237 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.171338409 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.172868561 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.167838731 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.167602948 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.168483017 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.168979868 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.170964897 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.176810054 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.180690854 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.172853056 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.169663265 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.167972059 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170518262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.177244048 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.178224968 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.171384224 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.166867728 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.168039804 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.171372351 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.18049076 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.173351094 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.17018449 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.168161329 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.172164631 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.168370922 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.169814122 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.16730242 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.177622727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186627992 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.17358185 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.16952477 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.170462948 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181109623 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.16986776 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.166846217 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.167502097 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.172496446 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.178043241 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.172884136 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.169933132 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183832036 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173723418 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.169667665 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.167166439 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.174935514 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.171964326 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.17844853 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172810034 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.170072465 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.183023204 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.193644666 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170622186 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.184788443 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.193730432 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.174476657 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.172939939 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.171860891 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.167792986 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.171565462 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.171000935 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.171446523 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.167621106 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.16730249 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.170227094 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.168436642 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.173483793 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.176218777 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.184895649 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.171116034 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.168606706 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.172814923 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.168651964 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.170262294 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.169145881 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.169817195 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.170020992 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.17043117 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.169796872 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199017487 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.185826843 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.169545792 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.171147393 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.167507125 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.179100498 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.17839154 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.180128842 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.170692027 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.170482154 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.170432148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.178323585 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.172704992 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.168386846 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.169397939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.16996505 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168876922 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.168459621 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.193004362 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182332474 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.180153985 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.172449304 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.17152698 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.169628345 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.170906231 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.171328072 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170704948 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.173345717 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.175650479 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.172984288 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.168221182 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.167576128 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.179034429 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.170493398 seconds)
  done (took 702.444466804 seconds)
  (8/15) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.169858821 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166911239 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.16721484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.167568096 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.168789551 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.167229227 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167136547 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.166868567 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.166961455 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.170705996 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.167424154 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167894744 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.168456128 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.170240923 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168824261 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.168523525 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167616147 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.167109798 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.167515087 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.16921642 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.16871524 seconds)
  done (took 25.672412394 seconds)
  (9/15) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.170858948 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.170535444 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.168134929 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.168897735 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.167393982 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.167347048 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.170377182 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.167686757 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.167664966 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.169079811 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.168778166 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.170134973 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.177705279 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.170670307 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.17168971 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.169289684 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.170454846 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.170679456 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.171013716 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.167349424 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.181749439 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.171614002 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.167647226 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.168634363 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.171631602 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.167301932 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.167286008 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.170232192 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.16854336 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.173371838 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.167705125 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.168656223 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.174022479 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.171454136 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.170385145 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.168238433 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.170621906 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.167288382 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.167378966 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.184593655 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.178125026 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.170610592 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.196581143 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.17908674 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.167671811 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.176585374 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.173877139 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.167662662 seconds)
  done (took 57.367042696 seconds)
  (10/15) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.16789642 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.167568096 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.167264287 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.171602758 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.167113849 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.167691297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.16763242 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.167484077 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.167930503 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.167792426 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.16783063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.168605659 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.167127049 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.167144439 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.169494389 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.167555875 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.167741303 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.167292573 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.167273855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.167089544 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.167002522 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.167959767 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.167670694 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.167528357 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.168284319 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.168434478 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.167124395 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.166832458 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.166996236 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.167122789 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.166553372 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.167560414 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.167114198 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.167149957 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.167146464 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.166501411 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.166682928 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.166191385 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.166339519 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.166202909 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.166590598 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.166642211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.169283818 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.166581658 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.166102617 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.166146338 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.166036407 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.167402852 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.166491493 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.166130554 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.166456363 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.167005664 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.165852096 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.165541931 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.16609235 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.16570983 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.165843506 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.166139213 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.165846997 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.165517208 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.166433734 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.165818362 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.165478515 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.165694604 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.165626998 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.165278629 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.164919087 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.165901195 seconds)
  done (took 80.496866538 seconds)
  (11/15) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.166052331 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.175086511 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.168720407 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.168909259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.167314364 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.165633074 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.166280642 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.166777633 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.167833843 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.165821296 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.165856915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.166403632 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.165052343 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.168649309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.165917887 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.166124547 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.166719106 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.164748324 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.165278769 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.175545159 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.166248586 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.165098299 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.165633842 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.164996401 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.165427741 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.166798515 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.164991722 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.164910775 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.164420141 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.164812718 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.16523442 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.16519014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.164885213 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.165054509 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.168190522 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.165722261 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.164016248 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.164877182 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.163742889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.164347017 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.163776623 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.164584057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.164768299 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.163923289 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.16414748 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.163584769 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.163967149 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.164328648 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.163962331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.164350229 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.163533854 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.16696369 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.163912743 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.164508979 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.163578413 seconds)
  done (took 65.259272287 seconds)
  (12/15) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164242324 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.163565772 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.164972794 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.164564014 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.163515207 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.170612408 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.16367228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.165684826 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.163749734 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.163976997 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.163429442 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.166696478 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164910077 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.163581765 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.163587842 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163646438 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.163636591 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.163702661 seconds)
  done (took 22.099611969 seconds)
  (13/15) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.165025804 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.164610527 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.164909868 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.180856378 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.167374706 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.165185182 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.164964274 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.164726045 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.187775414 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.191875656 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.187055421 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.167958719 seconds)
  done (took 15.20910662 seconds)
  (14/15) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163362603 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163845695 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.163653352 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164094331 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.165065334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16385261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164083156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164115074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163387956 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.165782744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163696166 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165552058 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163567658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163926572 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164487468 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163545448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163863016 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163418198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163957721 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163971829 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163815803 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.167075436 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164374954 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164649429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163916165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163963448 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163688413 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.165184972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163961352 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163448299 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163982514 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164062972 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.16384828 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165167372 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163005016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163298349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163332781 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163356179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.162935803 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163823626 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.164039296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162761549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164929143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163145607 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163499492 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163485733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163426159 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.16373374 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163378038 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164981804 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163112432 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164767112 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163403671 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.162873854 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162915061 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.164231149 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.164445632 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162983575 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162990559 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.165024337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163094274 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16346988 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163096998 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.16435868 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163179131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163635893 seconds)
  done (took 77.957683657 seconds)
  (15/15) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163509759 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.162865334 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162977638 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.164630083 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163265105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163124445 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164916292 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.163581765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163156013 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163143512 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163270133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163454445 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.163001874 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163266642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.162540571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163193518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164785481 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162982038 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162683048 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.164290096 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163294578 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16284054 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163506128 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163139391 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.164395346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163873702 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163237448 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163099092 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163682966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.163149239 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163263987 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.162915271 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163354921 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.163842133 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163026318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163328102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163287803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.165075322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.162807645 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.16316195 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.163419943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1714695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.163937956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.168944808 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.164355048 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162808483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.162997893 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.162656299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.162850807 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163131429 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.16440268 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.166088718 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.164113677 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.162415416 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162570534 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.163006692 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.162855766 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.162582128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163497118 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163526312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.162702324 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162672851 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.163881035 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.162932381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.163032114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.16258974 seconds)
  done (took 77.93624364 seconds)
done (took 1331.980274551 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.389894762 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.146960657 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.18591645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.15082316 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.164476292 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.159423485 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.663880931 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.416449815 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.615722851 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 1.799405706 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.501982131 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.344339389 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.164010032 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.190112933 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.320103625 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.147886124 seconds)
  done (took 30.497483375 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.196543429 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.174031628 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.26414637 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.167132287 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.194733772 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.349120233 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.221103187 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.181234499 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.144722244 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.200770992 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.144355926 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.192975168 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.167746401 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.994618659 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.56671613 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.347033027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.416252513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.142787362 seconds)
  done (took 27.202934257 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.500216054 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.14894862 seconds)
  done (took 4.78541126 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.186066748 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.166909912 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.173017393 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.166577119 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.141173888 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.142542708 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.169945843 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.141360993 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.1455954 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.261902369 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.171136078 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.189207999 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.165450718 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.169711526 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.163477772 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.219256653 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.361777779 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.163641759 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.162733334 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.177620632 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.164730725 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.315270189 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.206422129 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.163808191 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.261111976 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.145659305 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.172881412 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.180191071 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.358072978 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.163856731 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.163979442 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.175912454 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.170194827 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.986893027 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.687472478 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.142804193 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.18528257 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.183229376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.163706712 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.384577955 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.167282935 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.178095623 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.142086924 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.641123777 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.352598959 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.31107643 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.141793869 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.167645481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.172310739 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.286356456 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.167507125 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.171173234 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.212880982 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.01042025 seconds)
  done (took 76.277786095 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.21516542 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.142509533 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.423050026 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.154690621 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142495216 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143494714 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.142139723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.37960337 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.205731958 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.141712364 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.479136698 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.669758913 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.151953961 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.222874501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.202847443 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.206993641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142880041 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.141611793 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.143279672 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.144740473 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.68160616 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.142651241 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.142635387 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.341907794 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.199789932 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.691637394 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.144323661 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.14193439 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.148814664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.14215872 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.651975367 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.156939231 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.210302441 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.144999235 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.452838311 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.516018622 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.486841309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.150269598 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.142219971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.146794435 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.163322864 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.678920762 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.513980863 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.142820606 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.141794497 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.683388579 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.1438618 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.144840277 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.149832042 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.488838908 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.142275216 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.142090904 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.143889108 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.141510593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.142239805 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.222809409 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.229177327 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689471824 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143125742 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.143078879 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.224100774 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.145755755 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.147952404 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.146540003 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.151639325 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.515065778 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.0394979 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.136034967 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.506940163 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.634572246 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.137024478 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.707393656 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.136437811 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.153474823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.291320077 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137003176 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.136448567 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.687265748 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.205870593 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.136468611 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.48069297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.137696281 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.472895401 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137101513 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.14416512 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691481438 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.146797508 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.203197278 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.136611506 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.137556668 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.136826477 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.14480759 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.450036279 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.186376494 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.138122941 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.1371907 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.170857901 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.136730935 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.138190128 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.145358568 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.708036197 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.14192098 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.137578319 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139818828 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.136097195 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.138663513 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.139718116 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.138891056 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499522321 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.137397779 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.144487648 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.137829748 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.141832003 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.137955672 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334708974 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.144660644 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.421316007 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.140577164 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.136672478 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.143042771 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138379747 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.146833896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.136712776 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.139792218 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.136635601 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.539917332 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.136524484 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.137317811 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139309266 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.136499551 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137090338 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139437704 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.202845558 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.139652676 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866420234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.203207824 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.207524085 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.137104655 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.145737597 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.137228764 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.139956345 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14005098 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.566714314 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.447562571 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.041380821 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.136549557 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.137316205 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938630883 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.196117258 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413576126 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.142338003 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.137543119 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525056434 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.040781652 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.138437367 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.138543246 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.136778567 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494380466 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.137486268 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565788569 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.662734137 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.138016713 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.137180782 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928149104 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.138104574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.138556656 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.138742154 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.466416155 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.137776669 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.136978243 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.137008834 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.137176662 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.137038446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.140604752 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.138750186 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.136502554 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.137273881 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.71609616 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428785253 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.137170097 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.136620726 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.688309316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.155521104 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134316452 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.142721781 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.137940726 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.135331386 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.193824997 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.134772795 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.186749097 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.129122705 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.129046996 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698359128 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.127403212 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.128422407 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.417863961 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.770103168 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.127698781 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.12659885 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.126099066 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.194372553 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.705431396 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.187003599 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.404124994 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.125941295 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.179199324 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12200937 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.149237134 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.69556373 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.120557649 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.117137032 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843815544 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.120437103 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.890724931 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.112945857 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.110783781 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.752362084 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.112118169 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.118770341 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.109187278 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.106552237 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495681329 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.105566218 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.140804148 seconds)
  done (took 460.858737845 seconds)
done (took 600.75768212 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.102590141 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.103075258 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.105079284 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.103522312 seconds)
  done (took 9.515073251 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.127366057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.124981396 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.124721796 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.124037911 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.125025535 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.125063529 seconds)
  done (took 7.848661831 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.103621069 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.102441938 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.104064421 seconds)
  done (took 7.40621248 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.311721902 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.080685749 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.436325039 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.09941348 seconds)
  done (took 8.025804818 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.123519199 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.123245351 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.123389364 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.123708957 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.125584056 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.129238013 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.123477992 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.128930572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.123277479 seconds)
  done (took 11.217654913 seconds)
done (took 45.113716836 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.155620976 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.82217194 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.127319822 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.122921846 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.125389758 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.096545238 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.146670257 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.121200259 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.13961524 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.138100243 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.096667949 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.126250552 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.146711953 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.120344493 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.148249509 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.119744976 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.122880291 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.11904349 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.137073995 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.142391291 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.125857904 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.125330254 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.148489413 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.117857865 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.140776351 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.138687469 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.135842903 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.095293962 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.117746328 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.136497874 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.095293752 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.138391202 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.133337696 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.119409807 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.123986298 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.116453356 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.125081548 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.816787526 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.138325342 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.118385306 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.121589833 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.136692242 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.13778023 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.132996102 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.123593859 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.14798048 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.139230624 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.131834712 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.088823376 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.088867027 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.152317205 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.134733893 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.121864659 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.093348254 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.100086051 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.140573113 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.116026207 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.144533743 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.111086403 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.122886646 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.144699336 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.14806813 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.131314674 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.138924859 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.114998423 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.144773368 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.122626907 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.14187279 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.115204454 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.121759827 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.120305522 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.126338692 seconds)
done (took 91.637054477 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.11380707 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.109370263 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.309424404 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.11518441 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.310625115 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.118868957 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.114828219 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.121671547 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.098691042 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.10800284 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.306696892 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.111528219 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.308963172 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.31106281 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.30856375 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.098147467 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.115433534 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.100199543 seconds)
  done (took 25.261558541 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.247702309 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.245082213 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.273996086 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.11866537 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.211197457 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.274725298 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.124908062 seconds)
  done (took 9.584195867 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.136421678 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.114690842 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.239752066 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.235575348 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.118901364 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.371476289 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.135996903 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.115615749 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.235451589 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.117231877 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.122091853 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.12486071 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.098377734 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.230484757 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.136239322 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.293792877 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.122138158 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.118370918 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.346162385 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.113923356 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.124807282 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.2258276 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.139705405 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.116057286 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.128276298 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.111736904 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.11412827 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.112951025 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.250561122 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.106327138 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.099733213 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.110197882 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.116788525 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.111955437 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.111563978 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.09356965 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.111029971 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.111133545 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.114399324 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.10947712 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.108949958 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.140923018 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.109483336 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.109520491 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.109057723 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.109234282 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.21975546 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.11193679 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.107442922 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.110993374 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.227859632 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.116971089 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.110362987 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.109492904 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.107829704 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.106618516 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.33676112 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.229146598 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.108123176 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.229605245 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.107581767 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.107414287 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.107275653 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.108025818 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.233934147 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.107997463 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.229669918 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.107536999 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.363394395 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.140438739 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.110406219 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.117977922 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.118142398 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.091130513 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.122639828 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.107641901 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.114451566 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.122595129 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.106664541 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.107217266 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369511934 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.107525126 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.134777335 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.129000762 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.107647418 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.220583428 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.107630098 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.10732943 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.250840418 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.287185961 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.228183906 seconds)
  done (took 109.8496269 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.135008718 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.11307632 seconds)
  done (took 3.32765717 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.11536921 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.107206091 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.107089107 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.106822872 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.110125736 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.108248612 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.10960912 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.109612263 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.110829038 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.107131291 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.108944999 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.11337573 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.109383812 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.110215901 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.109723939 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.107204554 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.110005888 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.107198059 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.106677742 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.110151298 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.727394454 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.111835381 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.110355793 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.108709494 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.108979361 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.106944326 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.141949126 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.107354085 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.10695592 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.128262819 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.111321349 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.109081399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.108952961 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.113201825 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.110576701 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.108811742 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.107759792 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.11215693 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.106878465 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.109603462 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.111190885 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.109435145 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.106602383 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.112114257 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.109387793 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.108156142 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.111565304 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.14172284 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.109224713 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.111079629 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.111133197 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.107629399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.108325018 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.111426879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.110160028 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.110138727 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.11150566 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.109381088 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.108878231 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.106896415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.105971018 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.108424962 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.108405405 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.108480136 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.106519691 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.110194949 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.107186885 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.108591532 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.108810415 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.105471792 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.110890429 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.105115322 seconds)
  done (took 81.645038802 seconds)
done (took 230.749924909 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.919861108 seconds)
  done (took 3.996833396 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.280123262 seconds)
  done (took 3.357977017 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.125041809 seconds)
  done (took 9.205848943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.110059038 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.084555376 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.104772541 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.083635146 seconds)
  done (took 9.461491856 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.627954784 seconds)
  done (took 3.705577434 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.083034651 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.08406921 seconds)
  done (took 5.244807248 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.124533853 seconds)
  done (took 3.201616281 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.185203509 seconds)
  done (took 3.261534445 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.110215901 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.087748518 seconds)
  done (took 5.283594653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.082984855 seconds)
  done (took 3.160623428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.244033547 seconds)
  done (took 8.321774019 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.082869617 seconds)
  done (took 3.162608807 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.138250541 seconds)
  done (took 3.216047027 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.620081925 seconds)
  done (took 3.697792716 seconds)
done (took 69.356235386 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.082924023 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.083226924 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.084419953 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.083943008 seconds)
  done (took 9.411659891 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.165222477 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.193118273 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.109119254 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.340016143 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.44892727 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.10994806 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.109711507 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.254209631 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.42791084 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.438667375 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.153637484 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.159943105 seconds)
  done (took 15.988305077 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.108106135 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.100047219 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.096418197 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.147222492 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.11457295 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.219283123 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.186234507 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.173960041 seconds)
  done (took 18.224203651 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.091526862 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.113720258 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.084808899 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.117107839 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.084051122 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.393373487 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.08497561 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.115515807 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.124527847 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.090587636 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.085288151 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.531716918 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.113170327 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.084671522 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.085957788 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.116531648 seconds)
  done (took 27.396982676 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.596109184 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.193287499 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.784940041 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.08751923 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.089073548 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.092491231 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.413247802 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.085170677 seconds)
  done (took 20.420485454 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.119956037 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.129156857 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.112884537 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.1069995 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.113498651 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.107465272 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.129373574 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.107204974 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.119767046 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.105311995 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.10560484 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.112058803 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.127047859 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.108248053 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.106569278 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.120188258 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.11496427 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.118881179 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.128925124 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.112488397 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.105531506 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.119504443 seconds)
  done (took 25.610925315 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.568491147 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.240119921 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.357015861 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.204930808 seconds)
  done (took 6.448464291 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.08501088 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.083789286 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.522442205 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.428023075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.085269572 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.083508454 seconds)
  done (took 12.366174707 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705844996 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05961659 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088695217 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170073652 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083504613 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094191936 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174392288 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533955261 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.104898605 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433980047 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086801541 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706021485 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094866882 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08482203 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086277312 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.082997146 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0881089 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782125716 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086766969 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088480106 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08471175 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087931782 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082993026 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.272320872 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096361834 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084140588 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.427776815 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083974576 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377356785 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320613327 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331455348 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083942029 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435471996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469182499 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.298298547 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297056072 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096844508 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084911147 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.089045471 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.084552861 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087319065 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088311998 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327924033 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086899529 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083683966 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083512086 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536372677 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.108647336 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.084260576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085976716 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33193376 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701874239 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.106587507 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08422761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217866113 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084432595 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.105487996 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351958723 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084143102 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08432895 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08677137 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.084395928 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093099339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085010042 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71617976 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.107535323 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.105625722 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.111726009 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084476245 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083685921 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.132505746 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095171181 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.128521791 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083505381 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756340663 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092237218 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094928482 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76766878 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084141985 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.084446423 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084007052 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084137724 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083697027 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.083736626 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083494067 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821586181 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.105005951 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.08328636 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.124338787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535314651 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281547116 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809737118 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086195179 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08532321 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.089214697 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08528808 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.091337593 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094490997 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.136537614 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.534180848 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085774595 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.105335322 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09047191 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.378672037 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083854449 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.093698997 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539536418 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084429451 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.137457564 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091494875 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.262829303 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.6110636 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332664091 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084855204 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.136839259 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084170131 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900608521 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08243674 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.107939285 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090378183 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41448965 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083344118 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083063566 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.283841052 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105437431 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087130493 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085704893 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085136874 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083887414 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.379897751 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086597395 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.324773842 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.085479445 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084097705 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.083643179 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083039191 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.086893732 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084462277 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084140798 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433579647 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083922823 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092043618 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084015362 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.085504309 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.084873502 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.105430585 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093041162 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086282411 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084370994 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327439264 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.136690357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.302628568 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.136005214 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.092114367 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094268273 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.108335005 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.106082694 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084499572 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.087438005 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106573748 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.109561348 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085986912 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615746038 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087855236 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102715297 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058382494 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.123466818 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.283228475 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.109153056 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.264530426 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.084726836 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095148691 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.10773032 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.085686036 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090060824 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324976102 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.085173541 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334100447 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.535732931 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618692224 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525452993 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.08407808 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.084264277 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.083815128 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084610201 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083989172 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085778505 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289428984 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335042606 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09073179 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619575506 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086765363 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083899566 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.10712305 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329357176 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.109243781 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084950188 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.084661325 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084812601 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093172742 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.32716388 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451689003 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.122344678 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084141566 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.685097106 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.114834156 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085691414 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084264276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.138380725 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084072074 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614844947 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08891857 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088436525 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331539856 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089131237 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.126042983 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.086618627 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088758354 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087434373 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.092965873 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.108915736 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.268803526 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087679237 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084869452 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084370785 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775015314 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576965688 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087763325 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.093180774 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08394622 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537477636 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099578934 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084558308 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364846675 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53748923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084498106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535033331 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.086618068 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702568252 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328243627 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086153414 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08479095 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.087711363 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332885907 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.383297415 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.139850815 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084333769 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086942341 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.093170577 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620378192 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084118727 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336653075 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535139559 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083790404 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086391293 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.131227023 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084387337 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436943133 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084181166 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084580938 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091066609 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090954723 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619658687 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103855037 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084811972 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708018457 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08758083 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.537443204 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084317775 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.27465888 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327464547 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.414330621 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.087165763 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.084459763 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.084045534 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333203685 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084680461 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085633166 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57731238 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.017263019 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.11317745 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084767414 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888025356 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08854904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368549171 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.087174493 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.085410232 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085809305 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084763572 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084234664 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.084418626 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.100481912 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085008366 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672585389 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.085255674 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094673771 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087446385 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101347525 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095364432 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.124184786 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619227837 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086998563 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091437955 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.136716967 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.105787964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085943122 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.091723606 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084628499 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099418019 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211782239 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087731757 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085301071 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.096290597 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182180989 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.379939307 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084402073 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08890523 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345659598 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.085078138 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.09832668 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786197743 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090768596 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084635762 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087068614 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089720418 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.126620013 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.286611097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267890071 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.330208192 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.334862346 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43644307 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091571771 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087657516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.626233545 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705395428 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085233046 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.0882321 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.083107845 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622508002 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779572668 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627446828 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336013749 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086674988 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094619714 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085276766 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485034934 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084317775 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434668682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093874647 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.091429154 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.130711524 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086967345 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086953586 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380259948 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433298117 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083857941 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08463276 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085531268 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.084698341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332063666 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.383632723 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785569799 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771323505 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085168861 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086899878 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.535897198 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434580822 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084251496 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084633528 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085940398 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.100532546 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093039485 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.11031731 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084435249 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4581811 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322386248 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477310767 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.307518854 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.084824125 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.037247194 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084759382 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092787917 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089731033 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.262576198 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611414342 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.712695378 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095997054 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.289257593 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284559999 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.085844995 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484694946 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.088039408 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084802124 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086021833 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08443881 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.084404868 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.306490511 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629435 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095481346 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.108780104 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.086063877 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090156227 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.262659518 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086160398 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831309694 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085315598 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331131703 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.103923411 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084624728 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613339029 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333084116 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087461331 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.106702256 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336194358 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.086907979 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.148611287 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.02762977 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.084661954 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894141567 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.382118983 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810511518 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085262867 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.717814605 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621725081 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.089819383 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680660718 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086059338 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084798073 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435020333 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.109190003 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086622328 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451497848 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.106412764 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087008341 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286249739 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.612620571 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70765186 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.086309998 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090886698 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.085850582 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085025827 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175723673 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090142398 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093953707 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.522064573 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086111788 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09552353 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528442409 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.089955434 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084635902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.084373229 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084897877 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.110532701 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.087016093 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.090891447 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086327249 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35427487 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616312801 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094352012 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.797009942 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.508855421 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096191213 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089642964 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.094534159 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.107599507 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08595255 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085205947 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084636881 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085747217 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888541902 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.088366684 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.313433992 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.106963603 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.38061565 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381029878 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092197688 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265340795 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088760519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.130799036 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.089612722 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085945008 seconds)
  done (took 869.466838159 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.130192813 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.130250921 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.131327245 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.131222064 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.131721779 seconds)
  done (took 6.734509745 seconds)
done (took 1013.148259801 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.107264618 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.10733865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.10721084 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.109027202 seconds)
  done (took 5.509138278 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.084628639 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.08599655 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.086404354 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.584774503 seconds)
  done (took 8.921273509 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.442000411 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.561886746 seconds)
  done (took 4.083686899 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.090950672 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.086156976 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.088822259 seconds)
  done (took 7.345732094 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.573381504 seconds)
  done (took 2.654031075 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.649938166 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.622876345 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.315153903 seconds)
  done (took 5.667944227 seconds)
done (took 35.260569519 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.084774468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.860188716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.244272474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.084665236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.247176264 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.243172264 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.315369085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.085570728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.084846753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.092372012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.091702933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.249280723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.302339705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.858792378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.302591132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.859612525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.248118912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.08803382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.085315598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.087698862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.312552315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.084847661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.084957661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.084681997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.248658018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.233277989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.084885306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.859633757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.08534095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.090528412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.233636973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.090588824 seconds)
  done (took 73.08921875 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.085103351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.085749312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.084767833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.08557017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.084632201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.093791257 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.086897572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.085391027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.084925185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.087636703 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.08672702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.085630303 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.08833323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.085747286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.085306727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.085507452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.088255636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.089814005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.084843471 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.085600271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.087283236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.084910937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.085163833 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.085035883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.089569211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.086462113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.086815789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.085379084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.08603203 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.087157243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.086589433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.084730258 seconds)
  done (took 67.845723121 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.08483963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.086668773 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.087388347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.085203153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.085110055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.086548785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.085300093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.085402062 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.087221427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.089533033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.08504636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.085647274 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.088835389 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.085173751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.085238424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.085073179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.085137921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.085413725 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.085774944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.085622061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.085699794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.085321884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.085324398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.086434245 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.086143846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.087727776 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.089432252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.08549076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.085742398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.089202265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.087135103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.08973278 seconds)
  done (took 67.844514098 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.401495121 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.106714059 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.114622537 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.085501445 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.109124351 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.106774402 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.085125071 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.405413636 seconds)
  done (took 12.493679189 seconds)
done (took 222.352737809 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 1.106041138 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 1.106418561 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 1.106720973 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 1.106869037 seconds)
    (5/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 1.106752123 seconds)
    (6/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 1.106614955 seconds)
    (7/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 1.106172998 seconds)
    (8/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.106631856 seconds)
    (9/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 1.106552517 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 1.106309189 seconds)
    (11/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 1.106263792 seconds)
    (12/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 1.105998954 seconds)
    (13/77) benchmarking ("isnull", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.106845011 seconds)
    (14/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 1.106446288 seconds)
    (15/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 1.106417653 seconds)
    (16/77) benchmarking ("get2", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.107195336 seconds)
    (17/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 1.106618865 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 1.106479672 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 1.106535615 seconds)
    (20/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 1.106602732 seconds)
    (21/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 1.106308142 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 1.106625221 seconds)
    (23/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.111110218 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 1.107911837 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 1.107024364 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 1.106710986 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 1.106157285 seconds)
    (28/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.106434275 seconds)
    (29/77) benchmarking ("get1", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.107284243 seconds)
    (30/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 1.106850529 seconds)
    (31/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 1.107796599 seconds)
    (32/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 1.106807437 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 1.106692339 seconds)
    (34/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 1.106251989 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 1.106735501 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 1.106429526 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 1.106399843 seconds)
    (38/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 1.105981144 seconds)
    (39/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 1.106326301 seconds)
    (40/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 1.109148587 seconds)
    (41/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 1.106688008 seconds)
    (42/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 1.106001817 seconds)
    (43/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 1.106615792 seconds)
    (44/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 1.106866802 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 1.1060931 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 1.106568021 seconds)
    (47/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 1.106252688 seconds)
    (48/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 1.106519901 seconds)
    (49/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 1.107467297 seconds)
    (50/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)")...
    done (took 1.113492575 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 1.106618027 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 1.106798358 seconds)
    (53/77) benchmarking ("isequal", "Nullable{BigFloat}(1.000000000000000000000000000000000000000000000000000000000000000000000000000000)", "Nullable{BigFloat}()")...
    done (took 1.106947608 seconds)
    (54/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 1.106624034 seconds)
    (55/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 1.106349417 seconds)
    (56/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 1.112998937 seconds)
    (57/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 1.106972472 seconds)
    (58/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 1.108139101 seconds)
    (59/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 1.107453399 seconds)
    (60/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 1.107010466 seconds)
    (61/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 1.108172904 seconds)
    (62/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 1.107078771 seconds)
    (63/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 1.106459906 seconds)
    (64/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 1.106830065 seconds)
    (65/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 1.106655393 seconds)
    (66/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 1.106574935 seconds)
    (67/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 1.107560815 seconds)
    (68/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 1.106726421 seconds)
    (69/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 1.107199526 seconds)
    (70/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 1.106125158 seconds)
    (71/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 1.107049018 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 1.106480301 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 1.107031767 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 1.106580663 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 1.106406827 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 1.113127933 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 1.106798707 seconds)
  done (took 86.324528911 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 1.134794306 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 1.107883761 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 1.140584638 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 1.128072012 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 1.130131423 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 1.12645819 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 2.092381441 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 1.389812001 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 1.118762449 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 1.118908067 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 1.132999035 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 2.085267617 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 1.11388627 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 1.149649338 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 1.127383028 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 1.126438844 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 1.127770019 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 1.107748338 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 1.143586067 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 1.121735592 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 1.121963275 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 1.154040538 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 1.156071034 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 1.6702837 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 1.135019265 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 1.384864584 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 1.118971902 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 1.147911826 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 2.103412243 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 1.134300878 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 1.122340627 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 1.12880353 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 1.136172834 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 1.12289412 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 1.119851903 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 1.121850341 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 1.11842316 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 1.119123179 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 1.143227571 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 1.142846517 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 1.130563111 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 1.125889961 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 1.134121246 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 1.19696995 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 1.668246779 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 1.127583333 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 1.118775859 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 1.119157122 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 1.107138415 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 2.086666398 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 1.143700885 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 1.11867382 seconds)
  done (took 65.285680604 seconds)
done (took 152.689327466 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.098848324 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.347525129 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.087518392 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.086426982 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.11648723 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.099753537 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.085912601 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.094298164 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.388636641 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.087648646 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.086827173 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.085760556 seconds)
done (took 26.745818865 seconds)
SAVING RESULT...
DONE!
